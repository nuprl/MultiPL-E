{
  "name": "mbpp_453_sumofFactors",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_453_sumofFactors.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpregvyh9h.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpregvyh9h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpto3liz7h.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpto3liz7h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcb61f8wi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpcb61f8wi.__unittest_L23_C1() [0x427a90]\n??:? void tmpcb61f8wi.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long) sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpey_yc4qm.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpey_yc4qm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long) sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpzse2ecup.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzse2ecup.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i;2..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphaasjl5_.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmphaasjl5_.__unittest_L20_C1() [0x427a78]\n??:? void tmphaasjl5_.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if(i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + (i + n/i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp3sv3eohk.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3sv3eohk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long result = 1; \n    long p = n; \n    for (long i = 2; i <= n / i; i++) { \n        long j = i; \n        while (n % i == 0) { \n            n = n / i; \n            j = j * i; \n        } \n        result = result * (j - 1) / (i - 1); \n    } \n    if (n > 1) { \n        result = result * (p * n - 1) / (n - 1); \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp46jtq95p.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp46jtq95p.__unittest_L25_C1() [0x427ae4]\n??:? void tmp46jtq95p.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long result = 1; \n    long p = 2; \n    while (p * p <= n) { \n        long count = 0; \n        if (n % p == 0) { \n            while (n % p == 0) { \n                n /= p; \n                count++; \n            } \n            result *= (pow(p, count + 1.0) - 1) / (p - 1); \n        } \n        p++; \n    } \n    if (n >= 2) \n        result *= (pow(n, 2.0) - 1) / (n - 1); \n  \n    return result; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvit5_pou.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428a15]\n??:? void tmpvit5_pou.__unittest_L28_C1() [0x427e1c]\n??:? void tmpvit5_pou.__modtest() [0x428794]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c7e3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b676]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430809]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430795]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b64d]\n??:? runModuleUnitTests [0x42c5b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428e64]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp1b5mnkpr.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1b5mnkpr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp7z8gi0q7.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7z8gi0q7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmprun8y6y8.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprun8y6y8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n  \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpjliazp4o.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjliazp4o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp6upeeke0.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6upeeke0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 2; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 1; \n\tfor (long i = 2; i <= sqrt(n); i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (i == (n / i)) \n\t\t\t\tsum = sum + i; \n\t\t\telse\n\t\t\t\tsum = sum + i + n / i; \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp123qkm7n.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp123qkm7n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpto3liz7h.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpto3liz7h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            // If divisors are equal, \n            // add only one \n            if (n / i == i) \n                sum += i; \n  \n            else // Otherwise add both \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpgwo_31g4.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgwo_31g4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 2..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqc8ycn_c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpqc8ycn_c.__unittest_L20_C1() [0x427a78]\n??:? void tmpqc8ycn_c.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp727zmcxc.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp727zmcxc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 0; \n\tfor (long i = 1; i <= sqrt(n); i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (n / i == i) \n\t\t\t\tsum += i; \n\t\t\telse\n\t\t\t\tsum += (i + n / i); \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpduhg_ljb.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduhg_ljb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp727zmcxc.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp727zmcxc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpzu31fi03.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzu31fi03.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpregvyh9h.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpregvyh9h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long result = 1; \n    long p = 2; \n    while (p * p <= n) \n    { \n        long count = 0; \n        while (n % p == 0) \n        { \n            n = n / p; \n            count++; \n        } \n        result = result * (pow(p, count + 1) - 1) / (p - 1); \n        p++; \n    } \n    if (n > 1) \n        result = result * (pow(n, 2) - 1) / (n - 1); \n    return result; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv0msc9jw.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427f75]\n??:? void tmpv0msc9jw.__unittest_L27_C1() [0x427b6c]\n??:? void tmpv0msc9jw.__modtest() [0x427cf8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab2e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcc1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430170]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab05]\n??:? runModuleUnitTests [0x42ba71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    if (sum == 0) \n        return -1; \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp2fjuxqas.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fjuxqas.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpmdz7yl8e.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdz7yl8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmprun8y6y8.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprun8y6y8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor(long i = 1; i <= n; i++) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\tif(i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach (i; 1 .. n)\n\t{\n\t\tif (n % i == 0 && i % 2 == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj8akgeww.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpj8akgeww.__unittest_L20_C1() [0x427a90]\n??:? void tmpj8akgeww.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if(i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + (i + n/i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp3sv3eohk.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3sv3eohk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long result = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                result += i; \n  \n            if (n / i != i && (n / i) % 2 == 0) \n                result += n / i; \n        } \n    } \n    return result + 1; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmppb7hpepf.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppb7hpepf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp727zmcxc.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp727zmcxc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcb61f8wi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpcb61f8wi.__unittest_L23_C1() [0x427a90]\n??:? void tmpcb61f8wi.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp727zmcxc.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp727zmcxc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmphs_nwrsx.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphs_nwrsx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (int i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp036p925s.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp036p925s.__unittest_L20_C1() [0x427a70]\n??:? void tmp036p925s.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcb61f8wi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpcb61f8wi.__unittest_L23_C1() [0x427a90]\n??:? void tmpcb61f8wi.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long result = 1; \n    long p = 2; \n    while (p * p <= n) { \n        long count = 0; \n        if (n % p == 0) { \n            while (n % p == 0) { \n                n /= p; \n                count++; \n            } \n            result *= (pow(p, count + 1) - 1) / (p - 1); \n        } \n        p++; \n    } \n    if (n >= 2) \n        result *= (pow(n, 2) - 1) / (n - 1); \n    return result; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppd_rzemg.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427f85]\n??:? void tmppd_rzemg.__unittest_L27_C1() [0x427b7c]\n??:? void tmppd_rzemg.__modtest() [0x427d08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bcab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430180]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab15]\n??:? runModuleUnitTests [0x42ba81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpmdz7yl8e.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdz7yl8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1 .. n)\n\t{\n\t\tif(n % i == 0 && i % 2 == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzm61zl4z.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpzm61zl4z.__unittest_L20_C1() [0x427a90]\n??:? void tmpzm61zl4z.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpp7ulo6lp.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp7ulo6lp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tif (i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpp7ulo6lp.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp7ulo6lp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1;\n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpyp_1lg5u.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyp_1lg5u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 0; \n\tfor (long i = 1; i <= sqrt(n); i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (n / i == i) \n\t\t\t\tsum += i; \n\t\t\telse\n\t\t\t\tsum += (i + n / i); \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpduhg_ljb.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduhg_ljb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp1b5mnkpr.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1b5mnkpr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i;2..n)\n\t{\n\t\tif(n%i==0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpekmtnr5r.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpekmtnr5r.__unittest_L20_C1() [0x427a78]\n??:? void tmpekmtnr5r.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else \n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmprya22t_p.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprya22t_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpregvyh9h.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpregvyh9h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if(i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + (i + n/i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp3sv3eohk.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3sv3eohk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdfqobpsl.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfqobpsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long result = 1; \n    long p = 2; \n    while (p * p <= n) { \n        long count = 0; \n        while (n % p == 0) { \n            n /= p; \n            count++; \n        } \n        result *= ((pow(p, count + 1) - 1) / (p - 1)); \n        p++; \n    } \n    if (n > 1) \n        result *= ((pow(n, 2) - 1) / (n - 1)); \n    return result; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5zfd2pym.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427f75]\n??:? void tmp5zfd2pym.__unittest_L25_C1() [0x427b6c]\n??:? void tmp5zfd2pym.__modtest() [0x427cf8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab2e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcc1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430170]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab05]\n??:? runModuleUnitTests [0x42ba71]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpmdz7yl8e.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdz7yl8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrtn = (long)sqrt(n); \n  \n    for (long i = 2; i <= sqrtn; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpojbtxo74.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojbtxo74.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 2 .. n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdc4nu7zf.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpdc4nu7zf.__unittest_L20_C1() [0x427a78]\n??:? void tmpdc4nu7zf.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    if (sum == 0) \n        return -1; \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp2fjuxqas.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2fjuxqas.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp727zmcxc.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp727zmcxc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1 .. n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnmftx_fr.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpnmftx_fr.__unittest_L23_C1() [0x427a90]\n??:? void tmpnmftx_fr.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 1; \n\tfor (long i = 2; i <= sqrt(n); i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (i % 2 == 0) \n\t\t\t\tsum += i; \n\t\t\tif ((n / i) % 2 == 0 && n / i != i) \n\t\t\t\tsum += n / i; \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpk36v27fx.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk36v27fx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpto3liz7h.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpto3liz7h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nlong sumofEvenFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n            { \n                if (i % 2 == 0) \n                    sum += i; \n            } \n            else \n            { \n                if (i % 2 == 0) \n                    sum += i; \n                if ((n / i) % 2 == 0) \n                    sum += (n / i); \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpobiept7r.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpobiept7r.d(26): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpobiept7r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else \n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nlong sumofEvenFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n            { \n                if (i % 2 == 0) \n                    sum = sum + i; \n            } \n            else \n            { \n                if (i % 2 == 0) \n                    sum = sum + i; \n                if ((n / i) % 2 == 0) \n                    sum = sum + (n / i); \n            } \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp0uo0711h.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp0uo0711h.d(26): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0uo0711h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0 && i % 2 == 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor(long i = 1; i <= n; i++) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\tif(i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcb61f8wi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpcb61f8wi.__unittest_L23_C1() [0x427a90]\n??:? void tmpcb61f8wi.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 1; \n\tlong sqrt = (long)Math.sqrt(n); \n\tfor (long i = 2; i <= sqrt; i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (i == (n / i)) \n\t\t\t\tsum = sum + i; \n\t\t\telse\n\t\t\t\tsum = sum + i + (n / i); \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp_ssjhln8.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ssjhln8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 1; \n\tfor (long i = 2; i <= sqrt(n); i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (i % 2 == 0) \n\t\t\t\tsum += i; \n\t\t\tif ((n / i) % 2 == 0 && n / i != i) \n\t\t\t\tsum += n / i; \n\t\t} \n\t} \n\tif (sqrt(n) % 2 == 0) \n\t\tsum += sqrt(n); \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpi58nkkit.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpi58nkkit.d(21): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpi58nkkit.d(22): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n\tlong sum = 1; \n\tlong sqrt = (long)sqrt(n); \n\tfor (long i = 2; i <= sqrt; i++) \n\t{ \n\t\tif (n % i == 0) \n\t\t{ \n\t\t\tif (i == (n / i)) \n\t\t\t\tsum += i; \n\t\t\telse\n\t\t\t\tsum += (i + n / i); \n\t\t} \n\t} \n\treturn sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqpaeybo0.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqpaeybo0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpmdz7yl8e.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdz7yl8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmprun8y6y8.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprun8y6y8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdfqobpsl.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfqobpsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpp7ulo6lp.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp7ulo6lp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcb61f8wi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpcb61f8wi.__unittest_L23_C1() [0x427a90]\n??:? void tmpcb61f8wi.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tif (i % 2 == 0) \n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if(i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + (i + n/i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp3sv3eohk.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3sv3eohk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; // Initialize result \n  \n    // Find all factors and add them \n    for (long i=2; i<=sqrt(n); i++) \n    { \n        // If i is a factor of n \n        if (n%i==0) \n        { \n            // If both divisors are same then add \n            // it only once else add both \n            if (n/i == i) \n                sum = sum + i; \n            else\n                sum = sum +  i + n/i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpnb754mr_.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnb754mr_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nlong sumofEvenFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                if(i%2==0)\n                    sum = sum + i; \n            else\n                if(i%2==0)\n                    sum = sum + i + (n / i); \n                if((n/i)%2==0)\n                    sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp0fucbp95.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\n/tmp/tmp0fucbp95.d(25): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0fucbp95.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 2..n)\n\t{\n\t\tif(n % i == 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptm4lqero.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmptm4lqero.__unittest_L18_C1() [0x427a78]\n??:? void tmptm4lqero.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcb61f8wi.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpcb61f8wi.__unittest_L23_C1() [0x427a90]\n??:? void tmpcb61f8wi.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpto3liz7h.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpto3liz7h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpxwyvhql6.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxwyvhql6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if(i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + (i + n/i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp3sv3eohk.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3sv3eohk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tforeach(i; 1 .. n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tif(i % 2 == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnmftx_fr.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpnmftx_fr.__unittest_L23_C1() [0x427a90]\n??:? void tmpnmftx_fr.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n            if (n / i != i && (n / i) % 2 == 0) \n                sum += n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpr31n6jm8.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr31n6jm8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpto3liz7h.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpto3liz7h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp6upeeke0.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6upeeke0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 1; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else \n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpvskhhzjr.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvskhhzjr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdu6u5lne.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdu6u5lne.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (n / i == i) \n                sum += i; \n            else\n                sum += (i + n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpm58wi_db.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm58wi_db.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpdfqobpsl.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdfqobpsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0 && i % 2 == 0) \n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517252,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpmdz7yl8e.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmdz7yl8e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)sqrt(n); \n    for (long i = 2; i <= sqrt; i++) { \n        if (n % i == 0) { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmp1b5mnkpr.d(11): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1b5mnkpr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + n / i; \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1665517251,
      "stdout": "",
      "stderr": "/tmp/tmpyj7yk3xj.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyj7yk3xj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 1; \n    long sqrt = (long)Math.sqrt(n); \n    for (long i = 2; i <= sqrt; i++) \n    { \n        if (n % i == 0) \n        { \n            if (i == (n / i)) \n                sum = sum + i; \n            else\n                sum = sum + i + (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124257,
      "stdout": "",
      "stderr": "/tmp/tmpqcec3c9x.d(11): Error: C style cast illegal, use `cast(long)Math.sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqcec3c9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to find the sum of even factors of a number.\n\t\n*/\nlong sumofFactors(long n) \n{ \n    long sum = 0; \n    for (long i = 2; i <= sqrt(n); i++) \n    { \n        if (n % i == 0) \n        { \n            if (i % 2 == 0) \n                sum += i; \n  \n            if (i != (n / i) && (n / i) % 2 == 0) \n                sum += (n / i); \n        } \n    } \n    return sum; \n} \nunittest\n{\n    alias candidate = sumofFactors;\n\n    assert(candidate(18L) == 26L);\n    assert(candidate(30L) == 48L);\n    assert(candidate(6L) == 8L);\n}\nvoid main(){}",
      "timestamp": 1666124258,
      "stdout": "",
      "stderr": "/tmp/tmpnvd8oym7.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnvd8oym7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
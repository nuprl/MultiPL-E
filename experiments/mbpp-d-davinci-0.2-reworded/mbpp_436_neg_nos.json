{
  "name": "mbpp_436_neg_nos",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to return the negative numbers in an array.\n\t\n*/\nlong[] neg_nos(long[] list1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = neg_nos;\n\n    assert(candidate([-1L, 4L, 5L, -6L]) == [-1L, -6L]);\n    assert(candidate([-1L, -2L, 3L, 4L]) == [-1L, -2L]);\n    assert(candidate([-7L, -6L, 8L, 9L]) == [-7L, -6L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i;list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2~=i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2 = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i;list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(l;list1)\n\t{\n\t\tif(l<0)\n\t\t{\n\t\t\tlist2~=l;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i;list1)\n\t{\n\t\tif(i<0)\n\t\t\tlist2~=i;\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t\tlist2 ~= i;\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i;list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2~=i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] neg_nos = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tneg_nos ~= i;\n\t\t}\n\t}\n\treturn neg_nos;\n}",
    "{\n\tlong[] neg_nos = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t\tneg_nos ~= i;\n\t}\n\treturn neg_nos;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] neg_nos = [];\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tneg_nos ~= i;\n\t\t}\n\t}\n\treturn neg_nos;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i;list1)\n\t{\n\t\tif(i<0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}",
    "{\n\tlong[] list2;\n\tforeach(i; list1)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tlist2 ~= i;\n\t\t}\n\t}\n\treturn list2;\n}"
  ]
}
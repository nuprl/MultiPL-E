{
  "name": "mbpp_803_is_perfect_square",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of x. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpi_qi9ijk.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_qi9ijk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif (n < 0) return false;\n\tif (n == 0 || n == 1) return true;\n\t\n\tlong t = n / 2;\n\twhile (t * t > n) {\n\t\tt = (t + n / t) / 2;\n\t}\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmpj43qq3jz.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj43qq3jz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmpj43qq3jz.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj43qq3jz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    switch ((int)(n & 0x3F)) { \n    case 0x00: case 0x01: case 0x04: case 0x09: case 0x10: case 0x11: \n    case 0x19: case 0x21: case 0x24: case 0x29: case 0x31: case 0x39: \n        long sqrt_n = (long)(sqrt(n)); \n        return (sqrt_n * sqrt_n == n); \n  \n    default: \n        return false; \n    } \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpzwocc14s.d(13): Error: C style cast illegal, use `cast(int)(n & 63)`\n/tmp/tmpzwocc14s.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzwocc14s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong double sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpaooml22j.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaooml22j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\t\n\tif (n == 0 || n == 1) \n\t\treturn true;\n\t\n\tlong t = n / 2;\n\t\n\twhile (t * t > n) \n\t\tt = (t + n / t) / 2;\n\t\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sq = sqrt(n); \n  \n    // If square root is an integer \n    return ((sq - floor(sq)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp95bg2kz9.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95bg2kz9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpqyuh49uu.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqyuh49uu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tdouble sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpui85ni7q.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpui85ni7q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong double sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpaooml22j.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaooml22j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong s = sqrt(n); \n  \n\t// If square root is an integer \n\treturn (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp0nc2najl.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nc2najl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpsc_4bh97.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc_4bh97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmpj43qq3jz.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj43qq3jz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong double sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpaooml22j.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaooml22j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpnlxelnj5.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlxelnj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of x. \n\tlong double sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpwavyc4tn.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwavyc4tn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong double sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpaooml22j.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaooml22j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sq = sqrt(n); \n  \n    // If square root is an integer \n    return ((sq - floor(sq)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp95bg2kz9.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95bg2kz9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif (n < 0) \n\t\treturn false;\n\tif (n == 0 || n == 1) \n\t\treturn true;\n\tlong t = n / 2;\n\twhile (t * t > n) \n\t{\n\t\tt = (t + n / t) / 2;\n\t}\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif (n < 0) return false;\n\tif (n == 0 || n == 1) return true;\n\t\n\tlong t = n / 2;\n\twhile (t * t > n) t = (t + n / t) / 2;\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sq = sqrt(n); \n  \n    // If square root is an integer \n    return ((sq - floor(sq)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp95bg2kz9.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95bg2kz9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpsc_4bh97.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc_4bh97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of x. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpi_qi9ijk.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_qi9ijk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif (n < 0) return false;\n\tif (n == 0 || n == 1) return true;\n\t\n\tlong t = n / 2;\n\twhile (t * t > n) \n\t{\n\t\tt = (t + n / t) / 2;\n\t}\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpsc_4bh97.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc_4bh97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\tif (n == 0 || n == 1)\n\t\treturn true;\n\tlong t = n / 2;\n\twhile (t * t > n)\n\t\tt = (t + n / t) / 2;\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmprfppqgws.d(10): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprfppqgws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sq = sqrt(n); \n  \n    // If square root is an integer \n    return ((sq - floor(sq)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp95bg2kz9.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95bg2kz9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    if (n < 0) \n        return false; \n    if (n == 0 || n == 1) \n        return true; \n    long t = n / 2; \n    while (t * t > n) { \n        t = (t + n / t) / 2; \n    } \n    return t * t == n; \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sq = sqrt(n); \n  \n    // If square root is an integer \n    return ((sq - floor(sq)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpduw6ap91.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpduw6ap91.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpqyuh49uu.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqyuh49uu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of x. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpld_9r7qa.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpld_9r7qa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpnlxelnj5.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlxelnj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpsc_4bh97.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc_4bh97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong s = sqrt(n); \n  \n\t// If square root is an integer \n\treturn (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp0nc2najl.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0nc2najl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of x. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpbuadn9wn.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbuadn9wn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmpj43qq3jz.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj43qq3jz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    if (n < 0) \n        return false; \n  \n    switch (n & 0x3F) { \n    case 0x00: case 0x01: case 0x04: case 0x09: case 0x10: case 0x11: \n    case 0x19: case 0x21: case 0x24: case 0x29: case 0x31: case 0x39: \n        long sqrt_n = (long)(sqrt(n)); \n        return (sqrt_n * sqrt_n == n); \n  \n    default: \n        return false; \n    } \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpayi_y0np.d(16): Error: C style cast illegal, use `cast(long)sqrt(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpayi_y0np.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long long x = n; \n    while (x * x > n) \n        x = (x + n / x) / 2; \n    return x * x == n; \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp13cty7r5.d(10): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp13cty7r5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long long int sr = sqrt(n); \n    return (sr*sr == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpq_5ucs_s.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpq_5ucs_s.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq_5ucs_s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sq = sqrt(n); \n  \n    // If square root is an integer \n    return ((sq - floor(sq)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp95bg2kz9.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp95bg2kz9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tlong double sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpu38q81he.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu38q81he.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tlong double sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpaooml22j.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaooml22j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmp5_lbpevp.d(10): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5_lbpevp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{\n\tif(n < 0)\n\t\treturn false;\n\t\n\tif(n == 0 || n == 1)\n\t\treturn true;\n\t\n\tlong t = n / 2;\n\twhile(t * t > n)\n\t{\n\t\tt = (t + n / t) / 2;\n\t}\n\t\n\treturn t * t == n;\n}\nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    long long s = sqrt(n); \n    return (s*s == n); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmprfppqgws.d(10): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprfppqgws.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517164,
      "stdout": "",
      "stderr": "/tmp/tmp92bsdjl2.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp92bsdjl2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of  \n\t// square root of n. \n\tfloat sr = sqrt(n); \n  \n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmp1dkk9qyq.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1dkk9qyq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpsc_4bh97.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc_4bh97.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpnlxelnj5.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlxelnj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of \n    // square root of n. \n    long double sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpnlxelnj5.d(12): Error: use `real` instead of `long double`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnlxelnj5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n\t// Find floating point value of \n\t// square root of n. \n\tfloat sr = sqrt(n); \n\t\n\t// If square root is an integer \n\treturn ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "/tmp/tmpyuhi3ous.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyuhi3ous.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n\t\n*/\nbool is_perfect_square(long n) \n{ \n    // Find floating point value of  \n    // square root of n. \n    float sr = sqrt(n); \n  \n    // If square root is an integer \n    return ((sr - floor(sr)) == 0); \n} \nunittest\n{\n    alias candidate = is_perfect_square;\n\n    assert(candidate(10L) == false);\n    assert(candidate(36L) == true);\n    assert(candidate(14L) == false);\n    assert(candidate(196L) == true);\n    assert(candidate(125L) == false);\n    assert(candidate(15625L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517163,
      "stdout": "",
      "stderr": "/tmp/tmpiy7_xsc5.d(12): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiy7_xsc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
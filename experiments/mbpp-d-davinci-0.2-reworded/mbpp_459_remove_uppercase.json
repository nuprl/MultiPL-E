{
  "name": "mbpp_459_remove_uppercase",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_459_remove_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\t++i;\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(!isUpper(c)) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}",
    "{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}"
  ]
}
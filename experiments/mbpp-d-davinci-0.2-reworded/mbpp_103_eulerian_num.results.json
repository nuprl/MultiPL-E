{
  "name": "mbpp_103_eulerian_num",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\tif (m > n) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4ia26_i_.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp4ia26_i_.__unittest_L17_C1() [0x427ad1]\n??:? void tmp4ia26_i_.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5owgjujr.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp5owgjujr.__unittest_L14_C1() [0x427acd]\n??:? void tmp5owgjujr.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t\treturn 0;\n\tif (n == 0 && m == 0) \n\t\treturn 1;\n\tif (n == 0 || m == 0) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s7wx12k.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp5s7wx12k.__unittest_L17_C1() [0x427aff]\n??:? void tmp5s7wx12k.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n < 0 || m < 0) return 0;\n\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppghkizvm.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmppghkizvm.__unittest_L14_C1() [0x427add]\n??:? void tmppghkizvm.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n == 1 ? m + 1 : n + 1;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3s3r4ju_.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp3s3r4ju_.__unittest_L17_C1() [0x427b2f]\n??:? void tmp3s3r4ju_.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "/tmp/tmpbq0v9jg_.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq0v9jg_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn factorial(n);\n\tif (n > m)\n\t\tresult = (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "/tmp/tmpo4tvxsb_.d(17): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo4tvxsb_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n <= 0 || m <= 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr1xw8_1o.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpr1xw8_1o.__unittest_L13_C1() [0x427af7]\n??:? void tmpr1xw8_1o.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\t\n\tif (n == 0)\n\t\treturn 1;\n\t\n\tif (m == 0)\n\t\treturn 0;\n\t\n\tif (m == 1)\n\t\treturn 1;\n\t\n\tif (m > n)\n\t\treturn 0;\n\t\n\tif (m == n)\n\t\treturn 1;\n\t\n\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpde6v6jbz.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpde6v6jbz.__unittest_L30_C1() [0x427aed]\n??:? void tmpde6v6jbz.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "/tmp/tmpbq0v9jg_.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq0v9jg_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt04p9z5p.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpt04p9z5p.__unittest_L19_C1() [0x427ad5]\n??:? void tmpt04p9z5p.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp52i8zxbm.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp52i8zxbm.__unittest_L15_C1() [0x427ad5]\n??:? void tmp52i8zxbm.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpujv9wm3s.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpujv9wm3s.__unittest_L17_C1() [0x427add]\n??:? void tmpujv9wm3s.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n - 1);\n\tif (m == n - 1)\n\t\treturn factorial(n) / 2;\n\tfor (long i = 0; i < m; i++)\n\t\tresult += eulerian_num(n - 1, i);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "/tmp/tmp3691thy_.d(19): Error: undefined identifier `factorial`\n/tmp/tmp3691thy_.d(21): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3691thy_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] memo;\n\tauto eulerian_num_impl = (n, m) {\n\t\tif (n < m) return 0;\n\t\tif (n == m) return 1;\n\t\tif (memo[n][m] !is null) return memo[n][m];\n\t\treturn memo[n][m] = (n - m) * eulerian_num_impl(n - 1, m) + m * eulerian_num_impl(n - 1, m - 1);\n\t};\n\treturn eulerian_num_impl(n, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpbx93dlh8.d(10): Error: variable `tmpbx93dlh8.eulerian_num.eulerian_num_impl` type `void` is inferred from initializer `(n, m)\n{\nif (n < m)\nreturn 0;\nif (n == m)\nreturn 1;\nif (memo[n][m] !is null)\nreturn memo[n][m];\nreturn memo[n][m] = (n - m) * eulerian_num_impl(n - 1, m) + m * eulerian_num_impl(n - 1, m - 1);\n}\n`, and variables cannot be of type `void`\n/tmp/tmpbx93dlh8.d(10): Error: template lambda has no value\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbx93dlh8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n    if (n < 0 || m < 0)\n        return 0;\n    if (n == 0 || m == 0)\n        return 1;\n    if (n == 1 || m == 1)\n        return n + m;\n    if (n < m)\n        return 0;\n    if (n == m)\n        return factorial(n);\n    return (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpydvv4725.d(18): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpydvv4725.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\t\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb91qdve2.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpb91qdve2.__unittest_L14_C1() [0x427add]\n??:? void tmpb91qdve2.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1 || m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppmf7bsjl.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmppmf7bsjl.__unittest_L17_C1() [0x427add]\n??:? void tmppmf7bsjl.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpx59d3q87.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx59d3q87.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpplm9jy9f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpplm9jy9f.__unittest_L17_C1() [0x427add]\n??:? void tmpplm9jy9f.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq1g_5yj2.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpq1g_5yj2.__unittest_L14_C1() [0x427aeb]\n??:? void tmpq1g_5yj2.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0) return 1;\n\tif(m == 0) return 0;\n\tif(m == 1) return 1;\n\tif(m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz6k_hmao.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpz6k_hmao.__unittest_L15_C1() [0x427ae9]\n??:? void tmpz6k_hmao.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == m) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tresult = (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp492f0zdb.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp492f0zdb.__unittest_L29_C1() [0x427af1]\n??:? void tmp492f0zdb.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1qjzrls.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpu1qjzrls.__unittest_L13_C1() [0x427af7]\n??:? void tmpu1qjzrls.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m == 0 || m == n) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1 || m == n - 1) \n\t{\n\t\treturn n;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfqwaqjcs.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpfqwaqjcs.__unittest_L23_C1() [0x427ad5]\n??:? void tmpfqwaqjcs.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkfj2kw1b.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpkfj2kw1b.__unittest_L17_C1() [0x427ad1]\n??:? void tmpkfj2kw1b.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == m) \n\t{\n\t\tresult = 1;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmcly69xx.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpmcly69xx.__unittest_L36_C1() [0x427b19]\n??:? void tmpmcly69xx.__modtest() [0x427b78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tif (m == 1) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpzzzzpwj4.d(11): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzzzzpwj4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkq0aj7vs.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpkq0aj7vs.__unittest_L15_C1() [0x427abd]\n??:? void tmpkq0aj7vs.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkfj2kw1b.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpkfj2kw1b.__unittest_L17_C1() [0x427ad1]\n??:? void tmpkfj2kw1b.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 1 && m == 0) return 1;\n\tif (n == 1 && m == 1) return 1;\n\t\n\tlong result = 0;\n\tfor (long i = 0; i <= m; i++)\n\t{\n\t\tresult += eulerian_num(n - 1, i) * (n - i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjrymtj8p.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpjrymtj8p.__unittest_L21_C1() [0x427ae1]\n??:? void tmpjrymtj8p.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph27zy_hj.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmph27zy_hj.__unittest_L15_C1() [0x427afd]\n??:? void tmph27zy_hj.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vmai_jz.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp0vmai_jz.__unittest_L23_C1() [0x427aff]\n??:? void tmp0vmai_jz.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == m) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn factorial(n);\n\t}\n\tfor (long i = 0; i <= n - m; i++) \n\t{\n\t\tresult += factorial(n) / (factorial(i) * factorial(n - i));\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpv8o9po9e.d(20): Error: undefined identifier `factorial`\n/tmp/tmpv8o9po9e.d(24): Error: undefined identifier `factorial`\n/tmp/tmpv8o9po9e.d(24): Error: undefined identifier `factorial`\n/tmp/tmpv8o9po9e.d(24): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv8o9po9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbsf2zf46.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpbsf2zf46.__unittest_L19_C1() [0x427add]\n??:? void tmpbsf2zf46.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcq3l_l6k.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpcq3l_l6k.__unittest_L15_C1() [0x427acd]\n??:? void tmpcq3l_l6k.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{ \n    long dp[n+1][m+1]; \n    for (long i = 0; i <= n; i++) \n    { \n        for (long j = 0; j <= min(i, m); j++) \n        { \n            if (j == 0) \n                dp[i][j] = 1; \n            else\n                dp[i][j] = (dp[i-1][j-1] + (i-1)*dp[i-1][j])%1000000; \n        } \n    } \n    return dp[n][m]; \n} \nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpv64q8lo_.d(9): Deprecation: instead of C-style syntax, use D-style syntax `long[m + 1][n + 1] dp`\n/tmp/tmpv64q8lo_.d(9): Error: variable `m` cannot be read at compile time\n/tmp/tmpv64q8lo_.d(12): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv64q8lo_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk8axbcju.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpk8axbcju.__unittest_L19_C1() [0x427ae1]\n??:? void tmpk8axbcju.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\tif (m > n) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4ia26_i_.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp4ia26_i_.__unittest_L17_C1() [0x427ad1]\n??:? void tmp4ia26_i_.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6ha6bj0s.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp6ha6bj0s.__unittest_L17_C1() [0x427acd]\n??:? void tmp6ha6bj0s.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1 || m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tfor (long i = 0; i <= m; i++)\n\t{\n\t\tresult += pow(-1, i) * eulerian_num(n - 1, m - i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpthglfruv.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427ed5]\n??:? void tmpthglfruv.__unittest_L24_C1() [0x427b3d]\n??:? void tmpthglfruv.__modtest() [0x427c54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa65]\n??:? runModuleUnitTests [0x42b9d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428324]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp09pazhkg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp09pazhkg.__unittest_L17_C1() [0x427b0f]\n??:? void tmp09pazhkg.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tfor (long i = 0; i <= n; i++)\n\t\tresult += pow(-1, i) * nCr(n + 1, i) * eulerian_num(n - i, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp97yh3ajl.d(15): Error: undefined identifier `nCr`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp97yh3ajl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\tif (n == m) return factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpyg1tw5n5.d(13): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyg1tw5n5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0 && m == 0) return 1;\n\tif(n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpattwmadj.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpattwmadj.__unittest_L13_C1() [0x427af7]\n??:? void tmpattwmadj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4bhiofgq.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp4bhiofgq.__unittest_L31_C1() [0x427aed]\n??:? void tmp4bhiofgq.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr_1eu28a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpr_1eu28a.__unittest_L17_C1() [0x427acd]\n??:? void tmpr_1eu28a.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0 || m == 0)\n\t\treturn 1;\n\tif(n == 1 || m == 1)\n\t\treturn n;\n\tif(n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv0x0ojfm.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpv0x0ojfm.__unittest_L17_C1() [0x427add]\n??:? void tmpv0x0ojfm.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif(n == 0 && m == 0)\n\t\treturn 1;\n\tif(n == 0 || m == 0)\n\t\treturn 0;\n\tif(n == m)\n\t\treturn 1;\n\tif(m == 1)\n\t\treturn factorial(n);\n\tif(m > n)\n\t\treturn 0;\n\t\n\tresult = eulerian_num(n-1, m-1) + (n-m+1) * eulerian_num(n-1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmpc294m4zf.d(17): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc294m4zf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp563izrwu.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp563izrwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphahvrisj.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmphahvrisj.__unittest_L21_C1() [0x427af5]\n??:? void tmphahvrisj.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoilnw4f7.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpoilnw4f7.__unittest_L14_C1() [0x427ad1]\n??:? void tmpoilnw4f7.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa0vsstin.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpa0vsstin.__unittest_L13_C1() [0x427abd]\n??:? void tmpa0vsstin.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 1 && m == 1) return 1;\n\tif (n == 1 && m == 0) return 1;\n\tif (n == m) return 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjrmx7yo4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpjrmx7yo4.__unittest_L16_C1() [0x427b05]\n??:? void tmpjrmx7yo4.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn (n + 1) * eulerian_num(n, m - 1) + (m - n) * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpxlwbmyfl.d(7): Error: function `tmpxlwbmyfl.eulerian_num` no `return exp;` or `assert(0);` at end of function\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxlwbmyfl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5owgjujr.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp5owgjujr.__unittest_L14_C1() [0x427acd]\n??:? void tmp5owgjujr.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = (m == 0) ? 1 : 0;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m > n) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiilx9piv.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpiilx9piv.__unittest_L32_C1() [0x427b15]\n??:? void tmpiilx9piv.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n + m - 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2xkjuibx.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp2xkjuibx.__unittest_L17_C1() [0x427afd]\n??:? void tmp2xkjuibx.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbdl4vzb9.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpbdl4vzb9.__unittest_L14_C1() [0x427ad9]\n??:? void tmpbdl4vzb9.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq1g_5yj2.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpq1g_5yj2.__unittest_L14_C1() [0x427aeb]\n??:? void tmpq1g_5yj2.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 1 || m == 1) \n\t{\n\t\treturn n;\n\t}\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeep8d6f3.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpeep8d6f3.__unittest_L23_C1() [0x427ad9]\n??:? void tmpeep8d6f3.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjx06vg5z.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpjx06vg5z.__unittest_L23_C1() [0x427af9]\n??:? void tmpjx06vg5z.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8249ihz_.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp8249ihz_.__unittest_L17_C1() [0x427ad1]\n??:? void tmp8249ihz_.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo5sc14i3.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpo5sc14i3.__unittest_L15_C1() [0x427ad9]\n??:? void tmpo5sc14i3.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5c6yd1ao.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5c6yd1ao.__unittest_L19_C1() [0x427ae1]\n??:? void tmp5c6yd1ao.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy61woimp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpy61woimp.__unittest_L19_C1() [0x427b13]\n??:? void tmpy61woimp.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9hib2_dl.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp9hib2_dl.__unittest_L14_C1() [0x427af1]\n??:? void tmp9hib2_dl.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw8ig6fx1.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpw8ig6fx1.__unittest_L19_C1() [0x427acd]\n??:? void tmpw8ig6fx1.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp86paxwju.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp86paxwju.__unittest_L23_C1() [0x427ad1]\n??:? void tmp86paxwju.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tresult += (n - m + 1) * eulerian_num(n - 1, m - 1);\n\tresult += m * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo3cdzmks.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpo3cdzmks.__unittest_L22_C1() [0x427af1]\n??:? void tmpo3cdzmks.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) \n\t\treturn 0;\n\tif (n == m) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe8zlwkkc.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpe8zlwkkc.__unittest_L17_C1() [0x427abd]\n??:? void tmpe8zlwkkc.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnzrfvflt.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpnzrfvflt.__unittest_L21_C1() [0x427ae1]\n??:? void tmpnzrfvflt.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp563izrwu.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp563izrwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tlong i = 0;\n\t\n\tif (n == 0)\n\t{\n\t\treturn 1;\n\t}\n\t\n\tif (m == 0)\n\t{\n\t\treturn 0;\n\t}\n\t\n\tif (n == m)\n\t{\n\t\treturn 1;\n\t}\n\t\n\tif (m == 1)\n\t{\n\t\treturn 1;\n\t}\n\t\n\tif (m > n)\n\t{\n\t\treturn 0;\n\t}\n\t\n\tfor (i = 0; i < m; i++)\n\t{\n\t\tresult += eulerian_num(n - 1, i);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptaoxbekc.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmptaoxbekc.__unittest_L44_C1() [0x427ab1]\n??:? void tmptaoxbekc.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\t\n\tfor (long i = 0; i <= m; i++)\n\t\tresult += eulerian_num(n-1, i);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpshexut2h.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpshexut2h.__unittest_L20_C1() [0x427ad9]\n??:? void tmpshexut2h.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vn1kdb2.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp0vn1kdb2.__unittest_L19_C1() [0x427af1]\n??:? void tmp0vn1kdb2.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1 || m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc_6be0lj.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpc_6be0lj.__unittest_L24_C1() [0x427b31]\n??:? void tmpc_6be0lj.__modtest() [0x427b90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 1) return factorial(n - 1);\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpnkng2unw.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkng2unw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1qjzrls.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpu1qjzrls.__unittest_L13_C1() [0x427af7]\n??:? void tmpu1qjzrls.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmppn439cpd.d(14): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppn439cpd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 1;\n\tfor (long i = 0; i < m; i++) \n\t{\n\t\tresult *= (n - i);\n\t\tresult /= (i + 1);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2apyuuey.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp2apyuuey.__unittest_L17_C1() [0x427a89]\n??:? void tmp2apyuuey.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr_1eu28a.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpr_1eu28a.__unittest_L17_C1() [0x427acd]\n??:? void tmpr_1eu28a.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n + m - 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2xkjuibx.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp2xkjuibx.__unittest_L17_C1() [0x427afd]\n??:? void tmp2xkjuibx.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu37g98uk.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpu37g98uk.__unittest_L15_C1() [0x427aed]\n??:? void tmpu37g98uk.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m == n - 1)\n\t\treturn n;\n\tif (m == n - 2)\n\t\treturn n * (n - 1) / 2;\n\tif (m == n - 3)\n\t\treturn n * (n - 1) * (n - 2) / 6;\n\tif (m == n - 4)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) / 24;\n\tif (m == n - 5)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 120;\n\tif (m == n - 6)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 720;\n\tif (m == n - 7)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) / 5040;\n\tif (m == n - 8)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) / 40320;\n\tif (m == n - 9)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) / 362880;\n\tif (m == n - 10)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmp3vdhy4z1.d(40): Error: expression expected, not `unittest`\n/tmp/tmp3vdhy4z1.d(39): Error: found `{` when expecting `)`\n/tmp/tmp3vdhy4z1.d(42): Error: found `alias` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3vdhy4z1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = m + 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps4sdxga2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmps4sdxga2.__unittest_L28_C1() [0x427af1]\n??:? void tmps4sdxga2.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n == m) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp527sk8v8.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp527sk8v8.__unittest_L17_C1() [0x427af9]\n??:? void tmp527sk8v8.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5j9idl_o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5j9idl_o.__unittest_L16_C1() [0x427ae1]\n??:? void tmp5j9idl_o.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5j9idl_o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5j9idl_o.__unittest_L16_C1() [0x427ae1]\n??:? void tmp5j9idl_o.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123774,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n > 0 && m > 0)\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnwi7c_e2.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpnwi7c_e2.__unittest_L26_C1() [0x427b39]\n??:? void tmpnwi7c_e2.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsyclh3dr.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpsyclh3dr.__unittest_L21_C1() [0x427ae1]\n??:? void tmpsyclh3dr.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] memo;\n\tauto eulerian = (long n, long m) {\n\t\tif (n < 0 || m < 0) return 0;\n\t\tif (n == 0 || m == 0) return 1;\n\t\tif (memo.count(n * 100 + m)) return memo[n * 100 + m];\n\t\tauto res = eulerian(n - 1, m - 1) + (n - 1) * eulerian(n - 1, m);\n\t\tmemo[n * 100 + m] = res;\n\t\treturn res;\n\t};\n\treturn eulerian(n, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpj1zf7nof.d(13): Error: no property `count` for type `long[long]`\n/tmp/tmpj1zf7nof.d(14): Error: undefined identifier `eulerian`\n/tmp/tmpj1zf7nof.d(14): Error: undefined identifier `eulerian`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj1zf7nof.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpdsypku48.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsypku48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsyclh3dr.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpsyclh3dr.__unittest_L21_C1() [0x427ae1]\n??:? void tmpsyclh3dr.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\tif (n < m) \n\t\treturn 0;\n\tif (n == m) \n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmp01816lkz.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp01816lkz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\tif (n == m) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp260nf9do.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp260nf9do.__unittest_L15_C1() [0x427b01]\n??:? void tmp260nf9do.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t{\n\t\tif (m == 0)\n\t\t\tresult = 1;\n\t\telse\n\t\t\tresult = 0;\n\t}\n\telse if (m == 0)\n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1)\n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1)\n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == m)\n\t{\n\t\tresult = 1;\n\t}\n\telse if (n < m)\n\t{\n\t\tresult = 0;\n\t}\n\telse\n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptskc91h2.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmptskc91h2.__unittest_L43_C1() [0x427b49]\n??:? void tmptskc91h2.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp09pazhkg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp09pazhkg.__unittest_L17_C1() [0x427b0f]\n??:? void tmp09pazhkg.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == m) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4loyxvrw.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp4loyxvrw.__unittest_L17_C1() [0x427add]\n??:? void tmp4loyxvrw.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1qjzrls.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpu1qjzrls.__unittest_L13_C1() [0x427af7]\n??:? void tmpu1qjzrls.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tfor (long i = 1; i <= m; i++)\n\t\tresult += eulerian_num(n - 1, i - 1) * eulerian_num(n - i, m - i);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5_9sz1cy.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp5_9sz1cy.__unittest_L24_C1() [0x427b09]\n??:? void tmp5_9sz1cy.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnp0lcsia.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpnp0lcsia.__unittest_L15_C1() [0x427af5]\n??:? void tmpnp0lcsia.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n) \n\t\treturn 0;\n\tif (m == n) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy82elopk.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpy82elopk.__unittest_L17_C1() [0x427ae3]\n??:? void tmpy82elopk.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgun9ajaa.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpgun9ajaa.__unittest_L16_C1() [0x427af9]\n??:? void tmpgun9ajaa.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m == 0 || m == n) \n\t\treturn 1;\n\tif (m == 1 || m == n - 1) \n\t\treturn n;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp945i0yw7.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp945i0yw7.__unittest_L15_C1() [0x427ad1]\n??:? void tmp945i0yw7.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg80x_4s3.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg80x_4s3.__unittest_L15_C1() [0x427ad5]\n??:? void tmpg80x_4s3.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpof4qljph.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpof4qljph.__unittest_L14_C1() [0x427aff]\n??:? void tmpof4qljph.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tfor (long i = 1; i <= n; i++)\n\t\tresult += eulerian_num(n - i, m - 1) * factorial(n) / (factorial(i) * factorial(n - i));\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpggjkiojt.d(17): Error: undefined identifier `factorial`\n/tmp/tmpggjkiojt.d(17): Error: undefined identifier `factorial`\n/tmp/tmpggjkiojt.d(17): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpggjkiojt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 1;\n\tfor (long i = 0; i < m; ++i) \n\t{\n\t\tresult *= (n - i);\n\t\tresult /= (i + 1);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9_hct_uf.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp9_hct_uf.__unittest_L17_C1() [0x427a89]\n??:? void tmp9_hct_uf.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn 0\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmphqufwi2k.d(82): Error: found `unittest` when expecting `;` following `return` statement\n/tmp/tmphqufwi2k.d(90): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphqufwi2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn factorial(n);\n\tif (m == n)\n\t\treturn 1;\n\tfor (long i = 0; i <= n - m; i++)\n\t\tresult += factorial(n) / (factorial(i) * factorial(n - m - i));\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpb5hg4suy.d(15): Error: undefined identifier `factorial`\n/tmp/tmpb5hg4suy.d(19): Error: undefined identifier `factorial`\n/tmp/tmpb5hg4suy.d(19): Error: undefined identifier `factorial`\n/tmp/tmpb5hg4suy.d(19): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb5hg4suy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0) return 1;\n\tif(m == 0) return 0;\n\tif(m == 1) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupzwzrat.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpupzwzrat.__unittest_L14_C1() [0x427ac5]\n??:? void tmpupzwzrat.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyl5ruufg.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpyl5ruufg.__unittest_L14_C1() [0x427ad1]\n??:? void tmpyl5ruufg.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9swwlm44.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp9swwlm44.__unittest_L15_C1() [0x427ac1]\n??:? void tmp9swwlm44.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == n - 1)\n\t\treturn n;\n\tif (m == n - 2)\n\t\treturn (n * (n - 1)) / 2;\n\tif (m == n - 3)\n\t\treturn (n * (n - 1) * (n - 2)) / 6;\n\tif (m == n - 4)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3)) / 24;\n\tif (m == n - 5)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3) * (n - 4)) / 120;\n\tif (m == n - 6)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5)) / 720;\n\tif (m == n - 7)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)) / 5040;\n\tif (m == n - 8)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)) / 40320;\n\tif (m == n - 9)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)) / 362880;\n\tif (m == n - 10)\n\t\treturn (n * (n - 1) * (n - 2) * (n - 3) * (n\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmp7wf8q8d2.d(39): Error: found `unittest` when expecting `)`\n/tmp/tmp7wf8q8d2.d(39): Error: found `{` when expecting `)`\n/tmp/tmp7wf8q8d2.d(42): Error: found `alias` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wf8q8d2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\telse if (m == 0)\n\t\treturn 0;\n\telse\n\t{\n\t\tfor (long i = 0; i <= n; i++)\n\t\t{\n\t\t\tresult += pow(-1, i) * (factorial(n) / (factorial(i) * factorial(n - i))) * eulerian_num(n - i, m - 1);\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "/tmp/tmp5ehctnsx.d(18): Error: undefined identifier `factorial`\n/tmp/tmp5ehctnsx.d(18): Error: undefined identifier `factorial`\n/tmp/tmp5ehctnsx.d(18): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ehctnsx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8rd9_whh.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp8rd9_whh.__unittest_L17_C1() [0x427ad1]\n??:? void tmp8rd9_whh.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 && m == 1) return 1;\n\tif (n == 1 || m == 1) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8hzkm6n.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpz8hzkm6n.__unittest_L15_C1() [0x427af5]\n??:? void tmpz8hzkm6n.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5c6yd1ao.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5c6yd1ao.__unittest_L19_C1() [0x427ae1]\n??:? void tmp5c6yd1ao.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp563izrwu.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp563izrwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppzo_b0m9.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmppzo_b0m9.__unittest_L15_C1() [0x427b05]\n??:? void tmppzo_b0m9.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5j9idl_o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5j9idl_o.__unittest_L16_C1() [0x427ae1]\n??:? void tmp5j9idl_o.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsmb_urov.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpsmb_urov.__unittest_L19_C1() [0x427ac9]\n??:? void tmpsmb_urov.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqs3mh44f.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpqs3mh44f.__unittest_L16_C1() [0x427aed]\n??:? void tmpqs3mh44f.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t\treturn 0;\n\tif (n == 0 && m == 0) \n\t\treturn 1;\n\tif (n == 0 || m == 0) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s7wx12k.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp5s7wx12k.__unittest_L17_C1() [0x427aff]\n??:? void tmp5s7wx12k.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\tif (n == m) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp260nf9do.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp260nf9do.__unittest_L15_C1() [0x427b01]\n??:? void tmp260nf9do.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg28i5k6o.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpg28i5k6o.__unittest_L17_C1() [0x427add]\n??:? void tmpg28i5k6o.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp86paxwju.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp86paxwju.__unittest_L23_C1() [0x427ad1]\n??:? void tmp86paxwju.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (m > n) return 0;\n\t\n\tlong result = 0;\n\tfor (long k = 0; k <= m; k++) {\n\t\tresult += pow(-1, k) * (n - k + 1) * eulerian_num(n - 1, m - k);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpju3jvdtg.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmpju3jvdtg.__unittest_L19_C1() [0x427b21]\n??:? void tmpju3jvdtg.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa45]\n??:? runModuleUnitTests [0x42b9b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428304]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1) return m + 1;\n\tif (m == 1) return n + 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5bgs833y.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5bgs833y.__unittest_L15_C1() [0x427b03]\n??:? void tmp5bgs833y.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6_b808ah.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp6_b808ah.__unittest_L15_C1() [0x427abd]\n??:? void tmp6_b808ah.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t\treturn 0;\n\tif (n == 0 && m == 0) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6vniv6nj.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp6vniv6nj.__unittest_L17_C1() [0x427ad1]\n??:? void tmp6vniv6nj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\tif (n == m) return 1;\n\tif (n > m) return eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n\treturn 0;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpljyb09u8.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpljyb09u8.__unittest_L15_C1() [0x427ae5]\n??:? void tmpljyb09u8.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3f3to5wn.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp3f3to5wn.__unittest_L14_C1() [0x427add]\n??:? void tmp3f3to5wn.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\tif (m == n) \n\t{\n\t\treturn 1;\n\t}\n\tfor (long i = 0; i < m; i++) \n\t{\n\t\tresult += eulerian_num(n - 1, i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4jujhxr6.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp4jujhxr6.__unittest_L40_C1() [0x427aed]\n??:? void tmp4jujhxr6.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0 || n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4h3_xvsl.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp4h3_xvsl.__unittest_L15_C1() [0x427ad9]\n??:? void tmp4h3_xvsl.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m == n - 1)\n\t\treturn n;\n\tif (m == 2)\n\t\treturn n * (n - 1) / 2;\n\tif (m == n - 2)\n\t\treturn n * (n - 1) * (n - 2) / 6;\n\tif (m == 3)\n\t\treturn n * (n - 1) * (n - 2) / 6;\n\tif (m == n - 3)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) / 24;\n\tif (m == 4)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) / 24;\n\tif (m == n - 4)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 120;\n\tif (m == 5)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 120;\n\tif (m == n - 5)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 720;\n\tif (m == 6)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 720;\n\tif (m == n - 6)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) / 5040;\n\tif (m == 7)\n\t\treturn n * (n - 1) * (n - 2) * (n\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "/tmp/tmpljuwhx5n.d(43): Error: found `unittest` when expecting `)`\n/tmp/tmpljuwhx5n.d(45): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpljuwhx5n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m == n - 1)\n\t\treturn n;\n\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyxxo_xzp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpyxxo_xzp.__unittest_L25_C1() [0x427afd]\n??:? void tmpyxxo_xzp.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdv42g5sn.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpdv42g5sn.__unittest_L14_C1() [0x427ac9]\n??:? void tmpdv42g5sn.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\t\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\t\n\tif (m == 1 || m == n - 1)\n\t\treturn n;\n\t\n\tif (m > n)\n\t\treturn 0;\n\t\n\tresult = eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m);\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqm7tvu6r.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpqm7tvu6r.__unittest_L24_C1() [0x427ae1]\n??:? void tmpqm7tvu6r.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tif (m == 0) \n\t\t{\n\t\t\tresult = 1;\n\t\t}\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbk4ua2jg.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpbk4ua2jg.__unittest_L27_C1() [0x427b0f]\n??:? void tmpbk4ua2jg.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpam3k4xbj.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpam3k4xbj.__unittest_L14_C1() [0x427ae1]\n??:? void tmpam3k4xbj.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vmai_jz.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp0vmai_jz.__unittest_L23_C1() [0x427aff]\n??:? void tmp0vmai_jz.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n > 0)\n\t\tresult += eulerian_num(n - 1, m);\n\tif (m > 0)\n\t\tresult += eulerian_num(n, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ddlvy6o.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmp3ddlvy6o.__unittest_L18_C1() [0x427abf]\n??:? void tmp3ddlvy6o.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpue__jcuj.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpue__jcuj.__unittest_L15_C1() [0x427af7]\n??:? void tmpue__jcuj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0) \n\t\treturn 1;\n\tif (n == 0) \n\t\treturn 0;\n\tif (n == 1) \n\t\treturn 1;\n\tif (m == 1) \n\t\treturn 1;\n\tif (m > n) \n\t\treturn 0;\n\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmposdg_t3c.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmposdg_t3c.__unittest_L23_C1() [0x427ae9]\n??:? void tmposdg_t3c.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6_b808ah.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp6_b808ah.__unittest_L15_C1() [0x427abd]\n??:? void tmp6_b808ah.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiw7ulnsu.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpiw7ulnsu.__unittest_L15_C1() [0x427acd]\n??:? void tmpiw7ulnsu.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vn1kdb2.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp0vn1kdb2.__unittest_L19_C1() [0x427af1]\n??:? void tmp0vn1kdb2.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbdl4vzb9.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpbdl4vzb9.__unittest_L14_C1() [0x427ad9]\n??:? void tmpbdl4vzb9.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6se80oto.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp6se80oto.__unittest_L31_C1() [0x427ae1]\n??:? void tmp6se80oto.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 1 && m == 0) return 1;\n\tif (n == 1 && m == 1) return 1;\n\tif (m == 0) return (n - 1) * eulerian_num(n - 1, m);\n\tif (m == 1) return (n - 1) * eulerian_num(n - 1, m - 1);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg9xud4r8.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpg9xud4r8.__unittest_L17_C1() [0x427b45]\n??:? void tmpg9xud4r8.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp81ceb3rn.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp81ceb3rn.__unittest_L23_C1() [0x427acd]\n??:? void tmp81ceb3rn.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiashm53a.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiashm53a.__unittest_L19_C1() [0x427abd]\n??:? void tmpiashm53a.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (m * eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1));\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk1ogih9f.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpk1ogih9f.__unittest_L21_C1() [0x427ac9]\n??:? void tmpk1ogih9f.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 || m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe23ly66t.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpe23ly66t.__unittest_L13_C1() [0x427ac9]\n??:? void tmpe23ly66t.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tfor (long i = 0; i <= n - m; i++)\n\t\tresult += eulerian_num(n - i, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1o58yf7j.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp1o58yf7j.__unittest_L22_C1() [0x427ab5]\n??:? void tmp1o58yf7j.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\telse if (m == 0)\n\t\treturn 0;\n\telse if (n == 1)\n\t\treturn 1;\n\telse if (m == 1)\n\t\treturn 1;\n\telse if (m == n)\n\t\treturn 1;\n\telse if (m > n)\n\t\treturn 0;\n\telse\n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t\treturn result;\n\t}\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjti0vkmh.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpjti0vkmh.__unittest_L28_C1() [0x427af9]\n??:? void tmpjti0vkmh.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == n) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\tif (m == n - 1) \n\t{\n\t\treturn n;\n\t}\n\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiekjzg_e.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpiekjzg_e.__unittest_L41_C1() [0x427b31]\n??:? void tmpiekjzg_e.__modtest() [0x427b90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyl5ruufg.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpyl5ruufg.__unittest_L14_C1() [0x427ad1]\n??:? void tmpyl5ruufg.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123773,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong res = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1 || m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n > m)\n\t\treturn (n - 1) * eulerian_num(n - 1, m) + (m - 1) * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "/tmp/tmpumztd6dp.d(7): Error: function `tmpumztd6dp.eulerian_num` no `return exp;` or `assert(0);` at end of function\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpumztd6dp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
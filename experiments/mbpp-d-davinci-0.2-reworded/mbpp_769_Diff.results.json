{
  "name": "mbpp_769_Diff",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmppu__0o_2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmppu__0o_2.Diff(long[], long[]) [0x427ea2]\n??:? void tmppu__0o_2.__unittest_L17_C1() [0x427f7d]\n??:? void tmppu__0o_2.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tif(li2.length > i)\n\t\t{\n\t\t\tli3[i] = li1[i] - li2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = li1[i];\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjqn_xzu6.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x42856d]\n??:? void tmpjqn_xzu6.__unittest_L24_C1() [0x428064]\n??:? void tmpjqn_xzu6.__modtest() [0x4282ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430745]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430bf4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4306d1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b491]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428a30]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(int x; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpnfjsgz_a.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnfjsgz_a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tfor(int i = 0; i < li2.length; i++)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tli5 = li3.difference(li4);\n\tli6 = li4.difference(li3);\n\t\n\treturn li5.concat(li6);\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpt4380chk.d(25): Error: no property `difference` for type `long[]`\n/tmp/tmpt4380chk.d(26): Error: no property `difference` for type `long[]`\n/tmp/tmpt4380chk.d(28): Error: no property `concat` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4380chk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpdc4cstce.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmpdc4cstce.Diff(long[], long[]) [0x427eb0]\n??:? void tmpdc4cstce.__unittest_L19_C1() [0x427f91]\n??:? void tmpdc4cstce.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tli3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmptzxz0s_d.d(14): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptzxz0s_d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli5[i] = li3[i];\n\t\t\t\tli6[j] = li4[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tif(li5[i] != li3[i])\n\t\t{\n\t\t\tli7[i] = li3[i];\n\t\t}\n\t}\n\t\n\treturn li7;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmphfo15g19.d(19): Range violation\n----------------\n??:? _d_arrayboundsp [0x4288f6]\n??:? long[] tmphfo15g19.Diff(long[], long[]) [0x427f40]\n??:? void tmphfo15g19.__unittest_L44_C1() [0x4282d5]\n??:? void tmphfo15g19.__modtest() [0x4285c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c8ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b792]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430a1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ecc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4309a9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b769]\n??:? runModuleUnitTests [0x42c6d5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli[i] = v - li2[i];\n\t}\n\treturn li;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpplzyqk0x.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpplzyqk0x.Diff(long[], long[]) [0x427ea2]\n??:? void tmpplzyqk0x.__unittest_L17_C1() [0x427f7d]\n??:? void tmpplzyqk0x.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpikzkus5l.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmpikzkus5l.Diff(long[], long[]) [0x427ec1]\n??:? void tmpikzkus5l.__unittest_L17_C1() [0x427f99]\n??:? void tmpikzkus5l.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tif(item !in li2)\n\t\t{\n\t\t\tli3 ~= item;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpesad_wzh.d(13): Error: incompatible types for `(item) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpesad_wzh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach (i, val; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp42wf48cc.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmp42wf48cc.Diff(long[], long[]) [0x427ec1]\n??:? void tmp42wf48cc.__unittest_L17_C1() [0x427f99]\n??:? void tmp42wf48cc.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tli3 = li1;\n\tli4 = li2;\n\tli3 = li3.difference(li4);\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp44l26hec.d(14): Error: no property `difference` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp44l26hec.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = v;\n\t}\n\t\n\tforeach(i, v; li2)\n\t{\n\t\tli4[i] = v;\n\t}\n\t\n\tforeach(i, v; li3)\n\t{\n\t\tif(li4.length > 0)\n\t\t{\n\t\t\tforeach(j, w; li4)\n\t\t\t{\n\t\t\t\tif(v == w)\n\t\t\t\t{\n\t\t\t\t\tli4[j] = -1;\n\t\t\t\t\tli3[i] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i, v; li3)\n\t{\n\t\tif(v != -1)\n\t\t{\n\t\t\tli5 ~= v;\n\t\t}\n\t}\n\t\n\tforeach(i, v; li4)\n\t{\n\t\tif(v != -1)\n\t\t{\n\t\t\tli6 ~= v;\n\t\t}\n\t}\n\t\n\tli5 ~= li6;\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd7xp4rbk.d(64): unittest failure\n----------------\n??:? _d_unittestp [0x428835]\n??:? void tmpd7xp4rbk.__unittest_L60_C1() [0x42832c]\n??:? void tmpd7xp4rbk.__modtest() [0x4285b4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d38b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c21e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430cb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431168]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c1f5]\n??:? runModuleUnitTests [0x42d161]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428cf8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp9am316e0.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9am316e0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(int a; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmp98_6wctb.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98_6wctb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpdbuk9rb9.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdbuk9rb9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.contains(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmps047szzy.d(13): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps047szzy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpfj2vphb1.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpfj2vphb1.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfj2vphb1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tli3[k] = li2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < li2.length) \n\t{\n\t\tli3[k] = li2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn li3[0 .. k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphvll0wm9.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x4286c5]\n??:? void tmphvll0wm9.__unittest_L48_C1() [0x4281c0]\n??:? void tmphvll0wm9.__modtest() [0x428448]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c77f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b612]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43089d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430d4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430829]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5e9]\n??:? runModuleUnitTests [0x42c555]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428b88]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpupa6evma.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpupa6evma.Diff(long[], long[]) [0x427e82]\n??:? void tmpupa6evma.__unittest_L22_C1() [0x427fad]\n??:? void tmpupa6evma.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpcky6h4vc.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpcky6h4vc.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcky6h4vc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg7doi9bl.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmpg7doi9bl.__unittest_L40_C1() [0x428104]\n??:? void tmpg7doi9bl.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplzcg8cqj.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmplzcg8cqj.Diff(long[], long[]) [0x427ec1]\n??:? void tmplzcg8cqj.__unittest_L17_C1() [0x427f99]\n??:? void tmplzcg8cqj.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(int i, long j; li1)\n\t{\n\t\tif(j in li2)\n\t\t{\n\t\t\tli3[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = j;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpms8w_g3p.d(13): Error: incompatible types for `(j) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpms8w_g3p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplzcg8cqj.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmplzcg8cqj.Diff(long[], long[]) [0x427ec1]\n??:? void tmplzcg8cqj.__unittest_L17_C1() [0x427f99]\n??:? void tmplzcg8cqj.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwxxzmsu_.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpwxxzmsu_.Diff(long[], long[]) [0x427ea4]\n??:? void tmpwxxzmsu_.__unittest_L17_C1() [0x427f7d]\n??:? void tmpwxxzmsu_.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpeg4r8fdr.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpeg4r8fdr.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeg4r8fdr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpcky6h4vc.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpcky6h4vc.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcky6h4vc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7um1aki4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7um1aki4.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7um1aki4.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7um1aki4.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\t\n\tforeach(i; 0..li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp4501dvzg.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmp4501dvzg.Diff(long[], long[]) [0x427ead]\n??:? void tmp4501dvzg.__unittest_L19_C1() [0x427f85]\n??:? void tmp4501dvzg.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmp9ryftycp.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp9ryftycp.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ryftycp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt07fhksx.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x42858d]\n??:? void tmpt07fhksx.__unittest_L34_C1() [0x428084]\n??:? void tmpt07fhksx.__modtest() [0x42830c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c647]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4da]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430765]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c14]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4306f1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4b1]\n??:? runModuleUnitTests [0x42c41d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428a50]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i, val; li1)\n\t{\n\t\tli3[i] = val;\n\t}\n\t\n\tforeach(i, val; li2)\n\t{\n\t\tli4[i] = val;\n\t}\n\t\n\tlong[] li5 = new long[li3.length + li4.length];\n\t\n\tforeach(i, val; li3)\n\t{\n\t\tli5[i] = val;\n\t}\n\t\n\tforeach(i, val; li4)\n\t{\n\t\tli5[i + li3.length] = val;\n\t}\n\t\n\tlong[] li6 = new long[li5.length];\n\t\n\tforeach(i, val; li5)\n\t{\n\t\tli6[i] = val;\n\t}\n\t\n\tlong[] li7 = new long[li6.length];\n\t\n\tforeach(i, val; li6)\n\t{\n\t\tli7[i] = val;\n\t}\n\t\n\tlong[] li8 = new long[li7.length];\n\t\n\tforeach(i, val; li7)\n\t{\n\t\tli8[i] = val;\n\t}\n\t\n\tlong[] li9 = new long[li8.length];\n\t\n\tforeach(i, val; li8)\n\t{\n\t\tli9[i] = val;\n\t}\n\t\n\tlong[] li10 = new long[li9.length];\n\t\n\tforeach(i, val; li9)\n\t{\n\t\tli10[i] = val;\n\t}\n\t\n\tlong[] li11 = new long[li10.length];\n\t\n\tforeach(i, val; li10)\n\t{\n\t\tli11[i] = val;\n\t}\n\t\n\tlong[] li12 = new long[li11.length];\n\t\n\tforeach(i, val; li11)\n\t{\n\t\tli12[i\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpiihcxuii.d(82): Error: found `unittest` when expecting `,`\n/tmp/tmpiihcxuii.d(90): Error: found `void` when expecting `,`\n/tmp/tmpiihcxuii.d(90): Error: found `{` when expecting `,`\n/tmp/tmpiihcxuii.d(90): Error: expression expected, not `}`\n/tmp/tmpiihcxuii.d(90): Error: found `End of File` when expecting `,`\n/tmp/tmpiihcxuii.d(90): Error: found `End of File` when expecting `]`\n/tmp/tmpiihcxuii.d(90): Error: found `End of File` when expecting `;` following statement\n/tmp/tmpiihcxuii.d(90): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpiihcxuii.d(90): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiihcxuii.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(int x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpd3pnvzw6.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd3pnvzw6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\t\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item - li2[i];\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpbdwj9bz1.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpbdwj9bz1.Diff(long[], long[]) [0x427ea2]\n??:? void tmpbdwj9bz1.__unittest_L19_C1() [0x427f7d]\n??:? void tmpbdwj9bz1.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmp9ryftycp.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp9ryftycp.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ryftycp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7um1aki4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7um1aki4.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7um1aki4.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7um1aki4.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpbk2mlxsr.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbk2mlxsr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmppu__0o_2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmppu__0o_2.Diff(long[], long[]) [0x427ea2]\n??:? void tmppu__0o_2.__unittest_L17_C1() [0x427f7d]\n??:? void tmppu__0o_2.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9c6qbh1g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp9c6qbh1g.Diff(long[], long[]) [0x427ea4]\n??:? void tmp9c6qbh1g.__unittest_L17_C1() [0x427f7d]\n??:? void tmp9c6qbh1g.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpdc4cstce.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmpdc4cstce.Diff(long[], long[]) [0x427eb0]\n??:? void tmpdc4cstce.__unittest_L19_C1() [0x427f91]\n??:? void tmpdc4cstce.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7um1aki4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7um1aki4.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7um1aki4.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7um1aki4.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach (long l1; li1) \n\t{\n\t\tforeach (long l2; li2) \n\t\t{\n\t\t\tif (l1 == l2) \n\t\t\t{\n\t\t\t\tli3[i] = l1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzjd6_mes.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42850d]\n??:? void tmpzjd6_mes.__unittest_L25_C1() [0x428008]\n??:? void tmpzjd6_mes.__modtest() [0x428290]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b45a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b431]\n??:? runModuleUnitTests [0x42c39d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tfor (int i = 0; i < li2.length; i++)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tli5 = li3.difference(li4);\n\tli6 = li4.difference(li3);\n\t\n\treturn li5.array.concat(li6.array);\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpgirqd1l3.d(25): Error: no property `difference` for type `long[]`\n/tmp/tmpgirqd1l3.d(26): Error: no property `difference` for type `long[]`\n/tmp/tmpgirqd1l3.d(28): Error: no property `array` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgirqd1l3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tli3 = li1.dup;\n\tli4 = li2.dup;\n\t\n\tli3.sort;\n\tli4.sort;\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tforeach(j; 0 .. li4.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li4.length)\n\t{\n\t\tif(li4[i] != 0)\n\t\t{\n\t\t\tli6 ~= li4[i];\n\t\t}\n\t}\n\t\n\treturn li5 ~ li6;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpqa7it7p6.d(18): Error: no property `sort` for type `long[]`\n/tmp/tmpqa7it7p6.d(19): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqa7it7p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7raydbcv.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7raydbcv.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7raydbcv.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7raydbcv.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li1.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i];\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tli3 = li3.sort();\n\tli4 = li4.sort();\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < li3.length && j < li4.length)\n\t{\n\t\tif(li3[i] < li4[j])\n\t\t{\n\t\t\tli5[k] = li3[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if(li3[i] > li4[j])\n\t\t{\n\t\t\tli5[k] = li4[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\twhile(i < li3.length)\n\t{\n\t\tli5[k] = li3[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < li4.length)\n\t{\n\t\tli5[k] = li4[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp880lt766.d(20): Error: no property `sort` for type `long[]`\n/tmp/tmp880lt766.d(21): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp880lt766.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpt3giup9l.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpt3giup9l.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3giup9l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\t\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp4prn06q3.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp4prn06q3.Diff(long[], long[]) [0x427ea4]\n??:? void tmp4prn06q3.__unittest_L19_C1() [0x427f7d]\n??:? void tmp4prn06q3.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt =\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmppi0ntpym.d(77): Error: expression expected, not `unittest`\n/tmp/tmppi0ntpym.d(78): Error: semicolon expected, not `{`\n/tmp/tmppi0ntpym.d(85): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi0ntpym.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp7lg5ldml.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7lg5ldml.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpb8skbzo8.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8skbzo8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli5[i] = li3[i] + li4[i];\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp1p0u6nc3.d(38): Range violation\n----------------\n??:? _d_arrayboundsp [0x428866]\n??:? long[] tmp1p0u6nc3.Diff(long[], long[]) [0x42815c]\n??:? void tmp1p0u6nc3.__unittest_L43_C1() [0x428245]\n??:? void tmp1p0u6nc3.__modtest() [0x428534]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c86f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b702]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43098d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e3c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430919]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b6d9]\n??:? runModuleUnitTests [0x42c645]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tli3[k] = li2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < li2.length) \n\t{\n\t\tli3[k] = li2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn li3[0 .. k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphvll0wm9.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x4286c5]\n??:? void tmphvll0wm9.__unittest_L48_C1() [0x4281c0]\n??:? void tmphvll0wm9.__modtest() [0x428448]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c77f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b612]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43089d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430d4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430829]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5e9]\n??:? runModuleUnitTests [0x42c555]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428b88]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v;\n\t}\n\t\n\tforeach(i,v; li2)\n\t{\n\t\tli4[i] = v;\n\t}\n\t\n\tforeach(i,v; li3)\n\t{\n\t\tforeach(j,w; li4)\n\t\t{\n\t\t\tif(v == w)\n\t\t\t{\n\t\t\t\tli3[i] = -1;\n\t\t\t\tli4[j] = -1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i,v; li3)\n\t{\n\t\tif(v != -1)\n\t\t{\n\t\t\tli5 ~= v;\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpozol5t7q.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x428745]\n??:? void tmpozol5t7q.__unittest_L46_C1() [0x42823c]\n??:? void tmpozol5t7q.__modtest() [0x4284c4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d1eb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c07e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430bc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430b55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c055]\n??:? runModuleUnitTests [0x42cfc1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428c08]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcdl2git5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmpcdl2git5.__unittest_L40_C1() [0x428104]\n??:? void tmpcdl2git5.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\tlong[] li27 = new long[li1.length + li2.length];\n\tlong[] li28 = new long[\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpttd08x96.d(36): Error: expression expected, not `unittest`\n/tmp/tmpttd08x96.d(37): Error: found `{` when expecting `]`\n/tmp/tmpttd08x96.d(38): Error: semicolon expected, not `alias`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpttd08x96.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v;li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpizpwjcs6.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpizpwjcs6.Diff(long[], long[]) [0x427ea2]\n??:? void tmpizpwjcs6.__unittest_L17_C1() [0x427f7d]\n??:? void tmpizpwjcs6.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmp9am316e0.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9am316e0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7raydbcv.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7raydbcv.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7raydbcv.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7raydbcv.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7raydbcv.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7raydbcv.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7raydbcv.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7raydbcv.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tlong[] li5 = new long[li3.length + li4.length];\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tforeach(i; 0 .. li4.length)\n\t{\n\t\tli5[i + li3.length] = li4[i];\n\t}\n\t\n\tlong[] li6 = new long[li5.length];\n\t\n\tforeach(i; 0 .. li5.length)\n\t{\n\t\tli6[i] = li5[i];\n\t}\n\t\n\tlong[] li7 = new long[li6.length];\n\t\n\tforeach(i; 0 .. li6.length)\n\t{\n\t\tli7[i] = li6[i];\n\t}\n\t\n\tlong[] li8 = new long[li7.length];\n\t\n\tforeach(i; 0 .. li7.length)\n\t{\n\t\tli8[i] = li7[i];\n\t}\n\t\n\tlong[] li9 = new long[li8.length];\n\t\n\tforeach(i; 0 .. li8.length)\n\t{\n\t\tli9[i] = li8[i];\n\t}\n\t\n\tlong[] li10 = new long[li9.length];\n\t\n\tforeach(i; 0 .. li9.length)\n\t{\n\t\tli10[i] = li9[i];\n\t}\n\t\n\tlong[] li11 = new long[li10.length];\n\t\n\tforeach(i; 0 .. li10.length)\n\t{\n\t\tli11[i]\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmptc1p4iq9.d(75): Error: found `unittest` when expecting `;` following statement\n/tmp/tmptc1p4iq9.d(83): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmptc1p4iq9.d(83): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptc1p4iq9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpi_9xj5da.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi_9xj5da.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length) \n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length) \n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length) \n\t{\n\t\tforeach(j; 0 .. li2.length) \n\t\t{\n\t\t\tif(li3[i] == li4[j]) \n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length) \n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length) \n\t{\n\t\tli5 ~= li4[i];\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbj3dy1ng.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x42881d]\n??:? void tmpbj3dy1ng.__unittest_L48_C1() [0x428318]\n??:? void tmpbj3dy1ng.__modtest() [0x4285a0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d2c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c156]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ca1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431150]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c12d]\n??:? runModuleUnitTests [0x42d099]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ce0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7um1aki4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7um1aki4.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7um1aki4.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7um1aki4.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tif(li1[i] != li2[i])\n\t\t{\n\t\t\tli3 ~= li1[i];\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmph61q8cj2.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph61q8cj2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9c6qbh1g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp9c6qbh1g.Diff(long[], long[]) [0x427ea4]\n??:? void tmp9c6qbh1g.__unittest_L17_C1() [0x427f7d]\n??:? void tmp9c6qbh1g.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcdl2git5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmpcdl2git5.__unittest_L40_C1() [0x428104]\n??:? void tmpcdl2git5.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpagrqer6x.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285c6]\n??:? long[] tmpagrqer6x.Diff(long[], long[]) [0x427ecc]\n??:? void tmpagrqer6x.__unittest_L19_C1() [0x427fa9]\n??:? void tmpagrqer6x.__modtest() [0x428298]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b462]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430679]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b439]\n??:? runModuleUnitTests [0x42c3a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(int a; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmp98_6wctb.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98_6wctb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpcsol_v1z.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcsol_v1z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpt3giup9l.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpt3giup9l.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3giup9l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item;\n\t}\n\t\n\tforeach(i, item; li2)\n\t{\n\t\tli4[i] = item;\n\t}\n\t\n\tforeach(i, item; li3)\n\t{\n\t\tforeach(j, item2; li4)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i, item; li3)\n\t{\n\t\tif(item != 0)\n\t\t{\n\t\t\tli5 ~= item;\n\t\t}\n\t}\n\t\n\tforeach(i, item; li4)\n\t{\n\t\tif(item != 0)\n\t\t{\n\t\t\tli6 ~= item;\n\t\t}\n\t}\n\t\n\treturn li5 ~ li6;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv2j85ed4.d(59): unittest failure\n----------------\n??:? _d_unittestp [0x428815]\n??:? void tmpv2j85ed4.__unittest_L55_C1() [0x428310]\n??:? void tmpv2j85ed4.__modtest() [0x428598]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d403]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c296]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430c99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431148]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c26d]\n??:? runModuleUnitTests [0x42d1d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428cd8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(li2.count(i) == 0)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp3m2_pzvl.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp3m2_pzvl.d(13): Error: no property `count` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3m2_pzvl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplzcg8cqj.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmplzcg8cqj.Diff(long[], long[]) [0x427ec1]\n??:? void tmplzcg8cqj.__unittest_L17_C1() [0x427f99]\n??:? void tmplzcg8cqj.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpt3giup9l.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpt3giup9l.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3giup9l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(int j; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpk12vhjm1.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk12vhjm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9c6qbh1g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp9c6qbh1g.Diff(long[], long[]) [0x427ea4]\n??:? void tmp9c6qbh1g.__unittest_L17_C1() [0x427f7d]\n??:? void tmp9c6qbh1g.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpt3giup9l.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpt3giup9l.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3giup9l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9c6qbh1g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp9c6qbh1g.Diff(long[], long[]) [0x427ea4]\n??:? void tmp9c6qbh1g.__unittest_L17_C1() [0x427f7d]\n??:? void tmp9c6qbh1g.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i; 0..li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmph4eiaywn.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmph4eiaywn.Diff(long[], long[]) [0x427ead]\n??:? void tmph4eiaywn.__unittest_L17_C1() [0x427f85]\n??:? void tmph4eiaywn.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] result = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tresult[i] = item - li2[i];\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp1haupza0.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp1haupza0.Diff(long[], long[]) [0x427ea2]\n??:? void tmp1haupza0.__unittest_L17_C1() [0x427f7d]\n??:? void tmp1haupza0.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289b0]\n??:? void rt.dmain2._d_run_main(int, char**, exte",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v;li1)\n\t{\n\t\tif(li2.length > i)\n\t\t{\n\t\t\tli3[i] = v - li2[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = v;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0alt_2sv.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428525]\n??:? void tmp0alt_2sv.__unittest_L24_C1() [0x428020]\n??:? void tmp0alt_2sv.__modtest() [0x4282a8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5df]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b472]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430bac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430689]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b449]\n??:? runModuleUnitTests [0x42c3b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpikzkus5l.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmpikzkus5l.Diff(long[], long[]) [0x427ec1]\n??:? void tmpikzkus5l.__unittest_L17_C1() [0x427f99]\n??:? void tmpikzkus5l.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7raydbcv.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7raydbcv.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7raydbcv.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7raydbcv.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li_ret = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli_ret ~= i;\n\t\t}\n\t}\n\treturn li_ret;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp5b83rgf8.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp5b83rgf8.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5b83rgf8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto diff = li1.dup;\n\tforeach(e; li2)\n\t{\n\t\tdiff = diff.remove(e);\n\t}\n\treturn diff;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp64e46xkx.d(13): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64e46xkx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\t\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.contains(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmprcbcbzun.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmprcbcbzun.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprcbcbzun.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i; 0..li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmph4eiaywn.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmph4eiaywn.Diff(long[], long[]) [0x427ead]\n??:? void tmph4eiaywn.__unittest_L17_C1() [0x427f85]\n??:? void tmph4eiaywn.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tlong[] li5 = li3.difference(li4);\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpy_ftk3th.d(23): Error: no property `difference` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy_ftk3th.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpexerg0fw.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpexerg0fw.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpexerg0fw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpip99z7xr.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpip99z7xr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\treturn li3.difference(li4);\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpd2ylc_91.d(23): Error: no property `difference` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd2ylc_91.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplzcg8cqj.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmplzcg8cqj.Diff(long[], long[]) [0x427ec1]\n??:? void tmplzcg8cqj.__unittest_L17_C1() [0x427f99]\n??:? void tmplzcg8cqj.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1) \n\t{\n\t\tif(!li2.contains(i)) \n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp6wnadlpo.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6wnadlpo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmplsaf61mz.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmplsaf61mz.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplsaf61mz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppah00ozt.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmppah00ozt.__unittest_L40_C1() [0x428108]\n??:? void tmppah00ozt.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7um1aki4.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7um1aki4.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7um1aki4.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7um1aki4.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li3.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tforeach(j; 0 .. li4.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li4.length)\n\t{\n\t\tif(li4[i] != 0)\n\t\t{\n\t\t\tli5 ~= li4[i];\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb28m2f6s.d(58): unittest failure\n----------------\n??:? _d_unittestp [0x4288b5]\n??:? void tmpb28m2f6s.__unittest_L54_C1() [0x4283ac]\n??:? void tmpb28m2f6s.__modtest() [0x428634]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d35b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c1ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430d39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4311e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430cc5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c1c5]\n??:? runModuleUnitTests [0x42d131]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428d78]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2bvvg4c7.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmp2bvvg4c7.Diff(long[], long[]) [0x427ead]\n??:? void tmp2bvvg4c7.__unittest_L17_C1() [0x427f85]\n??:? void tmp2bvvg4c7.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tforeach(i,v; li1)\n\t{\n\t\tli3[i] = v;\n\t}\n\t\n\tforeach(i,v; li2)\n\t{\n\t\tli4[i] = v;\n\t}\n\t\n\tforeach(i,v; li3)\n\t{\n\t\tif(v in li4)\n\t\t{\n\t\t\tli5 ~= v;\n\t\t}\n\t}\n\t\n\tforeach(i,v; li4)\n\t{\n\t\tif(v in li3)\n\t\t{\n\t\t\tli6 ~= v;\n\t\t}\n\t}\n\t\n\tli3 = li3 - li5;\n\tli4 = li4 - li6;\n\t\n\tli3 ~= li4;\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpot7kbz6a.d(27): Error: incompatible types for `(v) in (li4)`: `long` and `long[]`\n/tmp/tmpot7kbz6a.d(35): Error: incompatible types for `(v) in (li3)`: `long` and `long[]`\n/tmp/tmpot7kbz6a.d(41): Error: invalid array operation `li3 - li5` (possible missing [])\n/tmp/tmpot7kbz6a.d(42): Error: invalid array operation `li4 - li6` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpot7kbz6a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp9c6qbh1g.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp9c6qbh1g.Diff(long[], long[]) [0x427ea4]\n??:? void tmp9c6qbh1g.__unittest_L17_C1() [0x427f7d]\n??:? void tmp9c6qbh1g.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(int x; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpnfjsgz_a.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnfjsgz_a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmppu__0o_2.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmppu__0o_2.Diff(long[], long[]) [0x427ea2]\n??:? void tmppu__0o_2.__unittest_L17_C1() [0x427f7d]\n??:? void tmppu__0o_2.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach (i, v; li1)\n\t{\n\t\tif (v in li2)\n\t\t{\n\t\t\tli3[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = v;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp3fc3_88b.d(13): Error: incompatible types for `(v) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3fc3_88b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l != li2[i])\n\t\t{\n\t\t\tli3[i] = l;\n\t\t}\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp06he44wz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmp06he44wz.Diff(long[], long[]) [0x427e7e]\n??:? void tmp06he44wz.__unittest_L22_C1() [0x427f85]\n??:? void tmp06he44wz.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tif(v !in li2)\n\t\t\tli3 ~= v;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpwgg9gi1j.d(13): Error: incompatible types for `(v) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwgg9gi1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\tlong[] li27 = new long[li1.length + li2.length];\n\tlong[] li28 = new long[li1.length + li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpuw4rrw8k.d(36): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuw4rrw8k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpexerg0fw.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpexerg0fw.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpexerg0fw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tlong[] li4 = li2.dup;\n\tlong[] li5 = new long[];\n\t\n\tforeach(long i; li3)\n\t{\n\t\tif(li4.find(i) == -1)\n\t\t{\n\t\t\tli5 ~= i;\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpjpzpyaqx.d(12): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjpzpyaqx.d(16): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjpzpyaqx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpagrqer6x.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285c6]\n??:? long[] tmpagrqer6x.Diff(long[], long[]) [0x427ecc]\n??:? void tmpagrqer6x.__unittest_L19_C1() [0x427fa9]\n??:? void tmpagrqer6x.__modtest() [0x428298]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b462]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430679]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b439]\n??:? runModuleUnitTests [0x42c3a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpeg4r8fdr.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpeg4r8fdr.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeg4r8fdr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpagrqer6x.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285c6]\n??:? long[] tmpagrqer6x.Diff(long[], long[]) [0x427ecc]\n??:? void tmpagrqer6x.__unittest_L19_C1() [0x427fa9]\n??:? void tmpagrqer6x.__modtest() [0x428298]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b462]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430679]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b439]\n??:? runModuleUnitTests [0x42c3a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i,v;li1)\n\t{\n\t\tli3[i] = v - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpizpwjcs6.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpizpwjcs6.Diff(long[], long[]) [0x427ea2]\n??:? void tmpizpwjcs6.__unittest_L17_C1() [0x427f7d]\n??:? void tmpizpwjcs6.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.contains(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp7qvsb8yw.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp7qvsb8yw.d(13): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7qvsb8yw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item;\n\t}\n\t\n\tforeach(i, item; li2)\n\t{\n\t\tli4[i] = item;\n\t}\n\t\n\tlong[] li5 = new long[li3.length];\n\t\n\tforeach(i, item; li3)\n\t{\n\t\tli5[i] = item;\n\t}\n\t\n\tforeach(i, item; li4)\n\t{\n\t\tli5[i] = item;\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyiem14db.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x428655]\n??:? void tmpyiem14db.__unittest_L37_C1() [0x428150]\n??:? void tmpyiem14db.__modtest() [0x4283d8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c70f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b5a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43082d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cdc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4307b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b579]\n??:? runModuleUnitTests [0x42c4e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428b18]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i];\n\t}\n\tfor (int i = 0; i < li2.length; i++) \n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tli5 = li3.difference(li4);\n\tli6 = li4.difference(li3);\n\t\n\treturn li5.array.cat(li6.array);\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpgx4j8lbv.d(24): Error: no property `difference` for type `long[]`\n/tmp/tmpgx4j8lbv.d(25): Error: no property `difference` for type `long[]`\n/tmp/tmpgx4j8lbv.d(27): Error: no property `array` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgx4j8lbv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = v;\n\t}\n\tforeach(i, v; li2)\n\t{\n\t\tli4[i] = v;\n\t}\n\t\n\tforeach(i, v; li3)\n\t{\n\t\tforeach(j, w; li4)\n\t\t{\n\t\t\tif(v == w)\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i, v; li3)\n\t{\n\t\tif(v != 0)\n\t\t{\n\t\t\tli5 ~= v;\n\t\t}\n\t}\n\t\n\tforeach(i, v; li4)\n\t{\n\t\tif(v != 0)\n\t\t{\n\t\t\tli5 ~= v;\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8v7k23zw.d(57): unittest failure\n----------------\n??:? _d_unittestp [0x4287dd]\n??:? void tmp8v7k23zw.__unittest_L53_C1() [0x4282d4]\n??:? void tmp8v7k23zw.__modtest() [0x42855c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d283]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c116]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430c61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431110]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430bed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c0ed]\n??:? runModuleUnitTests [0x42d059]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ca0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(li3.find(i));\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpl_zs3ewf.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpl_zs3ewf.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl_zs3ewf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item;\n\t}\n\t\n\tforeach(i, item; li2)\n\t{\n\t\tli4[i] = item;\n\t}\n\t\n\tforeach(i, item; li3)\n\t{\n\t\tif(item in li4)\n\t\t{\n\t\t\tli5[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli5[i] = item;\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmptg70afc_.d(26): Error: incompatible types for `(item) in (li4)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptg70afc_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] result = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpq_rv09__.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq_rv09__.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpb8skbzo8.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8skbzo8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < li1.length && j < li2.length)\n\t{\n\t\tif(li1[i] < li2[j])\n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if(li2[j] < li1[i])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\twhile(i < li1.length)\n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpl57322a_.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmpl57322a_.__unittest_L43_C1() [0x428104]\n??:? void tmpl57322a_.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpwxxzmsu_.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpwxxzmsu_.Diff(long[], long[]) [0x427ea4]\n??:? void tmpwxxzmsu_.__unittest_L17_C1() [0x427f7d]\n??:? void tmpwxxzmsu_.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tfor (int i = 0; i < li2.length; i++) \n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tli5 = li3.dup;\n\tli6 = li4.dup;\n\t\n\tli3.sort;\n\tli4.sort;\n\t\n\tint j = 0;\n\t\n\tfor (int i = 0; i < li3.length; i++) \n\t{\n\t\tif (li3[i] == li4[i]) \n\t\t{\n\t\t\tli7[j] = li3[i];\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\tli7.sort;\n\t\n\tint k = 0;\n\t\n\tfor (int i = 0; i < li5.length; i++) \n\t{\n\t\tif (li5[i] == li7[k]) \n\t\t{\n\t\t\tli5[i] = 0;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\tk = 0;\n\t\n\tfor (int i = 0; i < li6.length; i++) \n\t{\n\t\tif (li6[i] == li7[k]) \n\t\t{\n\t\t\tli6[i] = 0;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\tli5.sort;\n\tli6.sort;\n\t\n\tlong[] li8 = new long[li5.length + li6.length];\n\t\n\tfor (int i = 0; i < li5.length; i++) \n\t{\n\t\t\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp51nx5qw7.d(75): Error: found `unittest` instead of statement\n/tmp/tmp51nx5qw7.d(83): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51nx5qw7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tforeach(long l2; li2)\n\t\t{\n\t\t\tif(l1 == l2)\n\t\t\t{\n\t\t\t\tli3[i] = l1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy3k9j24r.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42850d]\n??:? void tmpy3k9j24r.__unittest_L25_C1() [0x428008]\n??:? void tmpy3k9j24r.__modtest() [0x428290]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b45a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b431]\n??:? runModuleUnitTests [0x42c39d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = item - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7raydbcv.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmp7raydbcv.Diff(long[], long[]) [0x427ea2]\n??:? void tmp7raydbcv.__unittest_L17_C1() [0x427f7d]\n??:? void tmp7raydbcv.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpb8skbzo8.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8skbzo8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li3.length + li4.length];\n\tlong[] li6 = new long[li3.length + li4.length];\n\tlong[] li7 = new long[li3.length + li4.length];\n\tlong[] li8 = new long[li3.length + li4.length];\n\tlong[] li9 = new long[li3.length + li4.length];\n\tlong[] li10 = new long[li3.length + li4.length];\n\tlong[] li11 = new long[li3.length + li4.length];\n\tlong[] li12 = new long[li3.length + li4.length];\n\tlong[] li13 = new long[li3.length + li4.length];\n\tlong[] li14 = new long[li3.length + li4.length];\n\tlong[] li15 = new long[li3.length + li4.length];\n\tlong[] li16 = new long[li3.length + li4.length];\n\tlong[] li17 = new long[li3.length + li4.length];\n\tlong[] li18 = new long[li3.length + li4.length];\n\tlong[] li19 = new long[li3.length + li4.length];\n\tlong[] li20 = new long[li3.length + li4.length];\n\tlong[] li21 = new long[li3.length + li4.length];\n\tlong[] li22 = new long[li3.length + li4.length];\n\tlong[] li23 = new long[li3.length + li4.length];\n\tlong[] li24 = new long[li3.length + li4.length];\n\tlong[] li25 = new long[li3.length + li4.length];\n\tlong[] li26 = new long[li3.length + li4.length];\n\tlong[] li27 = new long[li3.length + li4.length];\n\tlong[] li28 = new long[li3.length + li4.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpuc0h7cya.d(36): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuc0h7cya.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tforeach(long y; li2)\n\t\t{\n\t\t\tif(x == y)\n\t\t\t{\n\t\t\t\tli3[i] = x;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpum1d7mdi.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42850d]\n??:? void tmpum1d7mdi.__unittest_L25_C1() [0x428008]\n??:? void tmpum1d7mdi.__modtest() [0x428290]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b45a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b431]\n??:? runModuleUnitTests [0x42c39d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpb8skbzo8.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb8skbzo8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpagrqer6x.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285c6]\n??:? long[] tmpagrqer6x.Diff(long[], long[]) [0x427ecc]\n??:? void tmpagrqer6x.__unittest_L19_C1() [0x427fa9]\n??:? void tmpagrqer6x.__modtest() [0x428298]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b462]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430679]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b439]\n??:? runModuleUnitTests [0x42c3a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(i !in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpiv_37ywi.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpiv_37ywi.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_37ywi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(li3.find(i));\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmph65hp07e.d(13): Error: no property `find` for type `long[]`\n/tmp/tmph65hp07e.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph65hp07e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp6k3e3pxv.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp6k3e3pxv.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6k3e3pxv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li1[i] == li2[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] li5 = new long[li1.length + li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli5[i + li1.length] = li4[i];\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7jg7y2bt.d(53): unittest failure\n----------------\n??:? _d_unittestp [0x4287f5]\n??:? void tmp7jg7y2bt.__unittest_L49_C1() [0x4282f0]\n??:? void tmp7jg7y2bt.__modtest() [0x428578]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c8af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b742]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430959]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b719]\n??:? runModuleUnitTests [0x42c685]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428cb8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\t//long[] li1 = [1, 2, 3, 4, 5];\n\t//long[] li2 = [1, 2, 4, 5];\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp7th0wfm_.d(15): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7th0wfm_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long a; li1)\n\t{\n\t\tforeach(long b; li2)\n\t\t{\n\t\t\tif(a == b)\n\t\t\t{\n\t\t\t\tli3[i] = a;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6u01b1gy.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42850d]\n??:? void tmp6u01b1gy.__unittest_L25_C1() [0x428008]\n??:? void tmp6u01b1gy.__modtest() [0x428290]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b45a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b431]\n??:? runModuleUnitTests [0x42c39d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\t\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpbf_p5xi7.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x42859e]\n??:? long[] tmpbf_p5xi7.Diff(long[], long[]) [0x427ea4]\n??:? void tmpbf_p5xi7.__unittest_L19_C1() [0x427f7d]\n??:? void tmpbf_p5xi7.__modtest() [0x42826c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b43a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306c5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430651]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b411]\n??:? runModuleUnitTests [0x42c37d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli5 ~= li4[i];\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpweidq3qm.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x42881d]\n??:? void tmpweidq3qm.__unittest_L48_C1() [0x428318]\n??:? void tmpweidq3qm.__modtest() [0x4285a0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d2c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c156]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430ca1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x431150]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430c2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c12d]\n??:? runModuleUnitTests [0x42d099]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ce0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmpip99z7xr.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpip99z7xr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp2rn7fj_f.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp2rn7fj_f.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2rn7fj_f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp2bvvg4c7.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmp2bvvg4c7.Diff(long[], long[]) [0x427ead]\n??:? void tmp2bvvg4c7.__unittest_L17_C1() [0x427f85]\n??:? void tmp2bvvg4c7.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, v; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpikzkus5l.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmpikzkus5l.Diff(long[], long[]) [0x427ec1]\n??:? void tmpikzkus5l.__unittest_L17_C1() [0x427f99]\n??:? void tmpikzkus5l.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.contains(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp7qvsb8yw.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp7qvsb8yw.d(13): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7qvsb8yw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tli3 = li1.dup;\n\tli4 = li2.dup;\n\t\n\tli3.sort;\n\tli4.sort;\n\t\n\tlong[] li5 = new long[li3.length];\n\tlong[] li6 = new long[li4.length];\n\t\n\tli5 = li3.dup;\n\tli6 = li4.dup;\n\t\n\tli5.remove(li4);\n\tli6.remove(li3);\n\t\n\tli5 ~= li6;\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp1pwxfmlx.d(16): Error: no property `sort` for type `long[]`\n/tmp/tmp1pwxfmlx.d(17): Error: no property `sort` for type `long[]`\n/tmp/tmp1pwxfmlx.d(25): Error: no property `remove` for type `long[]`\n/tmp/tmp1pwxfmlx.d(26): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1pwxfmlx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach (int i; li1)\n\t{\n\t\tif (i != li2[j])\n\t\t{\n\t\t\tli3[j] = i;\n\t\t}\n\t\tj++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp82ebozgd.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82ebozgd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpcky6h4vc.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpcky6h4vc.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcky6h4vc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "/tmp/tmp7lg5ldml.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7lg5ldml.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplzcg8cqj.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmplzcg8cqj.Diff(long[], long[]) [0x427ec1]\n??:? void tmplzcg8cqj.__unittest_L17_C1() [0x427f99]\n??:? void tmplzcg8cqj.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpcky6h4vc.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpcky6h4vc.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcky6h4vc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i, item; li1)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplzcg8cqj.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285b6]\n??:? long[] tmplzcg8cqj.Diff(long[], long[]) [0x427ec1]\n??:? void tmplzcg8cqj.__unittest_L17_C1() [0x427f99]\n??:? void tmplzcg8cqj.__modtest() [0x428288]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b452]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306dd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430669]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b429]\n??:? runModuleUnitTests [0x42c395]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpmom82wmd.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmom82wmd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517429,
      "stdout": "",
      "stderr": "/tmp/tmpn5w586_p.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn5w586_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmp9ryftycp.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp9ryftycp.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ryftycp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tli3[i] = l - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3gi3my6g.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp3gi3my6g.Diff(long[], long[]) [0x427eb0]\n??:? void tmp3gi3my6g.__unittest_L19_C1() [0x427f91]\n??:? void tmp3gi3my6g.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x - li2[i];\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp7djl5i90.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ae]\n??:? long[] tmp7djl5i90.Diff(long[], long[]) [0x427eb0]\n??:? void tmp7djl5i90.__unittest_L19_C1() [0x427f91]\n??:? void tmp7djl5i90.__modtest() [0x428280]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a dthon function to get the difference between two arrays.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123062,
      "stdout": "",
      "stderr": "/tmp/tmpbk2mlxsr.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbk2mlxsr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
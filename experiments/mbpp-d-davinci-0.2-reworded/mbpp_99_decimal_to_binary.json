{
  "name": "mbpp_99_decimal_to_binary",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n\t\n*/\nstring decimal_to_binary(long n) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_99_decimal_to_binary.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = decimal_to_binary;\n\n    assert(candidate(8L) == \"1000\");\n    assert(candidate(18L) == \"10010\");\n    assert(candidate(7L) == \"111\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring result;\n\twhile (n > 0) \n\t{\n\t\tresult ~= (n % 2).to!string;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring result = \"\";\n\twhile (n > 0) \n\t{\n\t\tresult = (n % 2).to!string ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile (n > 0) \n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile (n > 0) \n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\twhile(n > 0) \n\t{\n\t\tresult ~= (n % 2).to!string;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring result;\n\twhile(n != 0)\n\t{\n\t\tresult ~= (n % 2).to!string;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring binary = \"\";\n\twhile(n > 0)\n\t{\n\t\tbinary = to!string(n % 2) ~ binary;\n\t\tn /= 2;\n\t}\n\treturn binary;\n}",
    "{\n\tstring result = \"\";\n\twhile(n > 0)\n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\twhile(n > 0)\n\t{\n\t\tresult ~= (n % 2).to!string;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring result = \"\";\n\twhile(n > 0)\n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile (n > 0) \n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\twhile(n > 0)\n\t{\n\t\tresult ~= n % 2;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring binary = \"\";\n\twhile(n > 0)\n\t{\n\t\tbinary = to!string(n % 2) ~ binary;\n\t\tn = n / 2;\n\t}\n\treturn binary;\n}",
    "{\n\tstring result;\n\twhile(n > 0)\n\t{\n\t\tresult ~= (n % 2).to!string;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring result;\n\twhile(n != 0)\n\t{\n\t\tresult ~= (n % 2).to!string;\n\t\tn /= 2;\n\t}\n\treturn result.reverse;\n}",
    "{\n\tstring result = \"\";\n\twhile (n > 0) \n\t{\n\t\tresult = ((n % 2) ? \"1\" : \"0\") ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile (n > 0) \n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile(n > 0) \n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile(n > 0)\n\t{\n\t\tresult = to!string(n % 2) ~ result;\n\t\tn = n / 2;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\twhile(n > 0)\n\t{\n\t\tresult = (n % 2).to!string + result;\n\t\tn /= 2;\n\t}\n\treturn result;\n}"
  ]
}
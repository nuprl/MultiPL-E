{
  "name": "mbpp_454_text_match_wordz",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function that matches a word containing 'z'.\n\t\n*/\nbool text_match_wordz(string text) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_454_text_match_wordz.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = text_match_wordz;\n\n    assert(candidate(\"pythonz.\") == true);\n    assert(candidate(\"xyz.\") == true);\n    assert(candidate(\"  lang  .\") == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}",
    "{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}",
    "{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}",
    "{\n\treturn text.match(\"\\\\bz\\\\w*\\\\b\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"/\\w*z\\w*/\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") !is null;\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\");\n}",
    "{\n\treturn text.match(\"\\\\w*z\\\\w*\") != null;\n}"
  ]
}
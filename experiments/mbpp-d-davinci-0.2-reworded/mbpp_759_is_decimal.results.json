{
  "name": "mbpp_759_is_decimal",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn (dot_count == 1 && digit_count == 3);\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp49w4se2g.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp49w4se2g.__unittest_L30_C1() [0x427b0e]\n??:? void tmp49w4se2g.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\t\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps27_8tkz.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmps27_8tkz.__unittest_L35_C1() [0x427b22]\n??:? void tmps27_8tkz.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot_pos = num.find('.');\n\tif (dot_pos == -1) \n\t{\n\t\treturn false;\n\t}\n\t\n\tauto after_dot = num.length - dot_pos - 1;\n\tif (after_dot > 2) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp_xiyq7n7.d(9): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_xiyq7n7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint len = num.length;\n\tint i = 0;\n\tint dot = 0;\n\tint count = 0;\n\twhile(i < len)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif(dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse if(dot == 1)\n\t\t\tcount++;\n\t\ti++;\n\t}\n\tif(dot == 0)\n\t\treturn false;\n\tif(count == 2)\n\t\treturn true;\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp4c_h5r5j.d(9): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4c_h5r5j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxsv7kh90.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpxsv7kh90.__unittest_L30_C1() [0x427ace]\n??:? void tmpxsv7kh90.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint digit = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot == 1 && digit == num.length - 1)\n\t{\n\t\treturn true;\n\t}\n\telse if (dot == 0 && digit == num.length)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp52lanqvr.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmp52lanqvr.__unittest_L41_C1() [0x427b84]\n??:? void tmp52lanqvr.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcptmdl4b.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpcptmdl4b.__unittest_L36_C1() [0x427ada]\n??:? void tmpcptmdl4b.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpszq6zm7b.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpszq6zm7b.__unittest_L37_C1() [0x427b0e]\n??:? void tmpszq6zm7b.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length(); i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1) \n\t{\n\t\treturn false;\n\t}\n\tif (dot_count == 0) \n\t{\n\t\treturn false;\n\t}\n\tif (digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpl3kqpejw.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl3kqpejw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvxxskz_s.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpvxxskz_s.__unittest_L29_C1() [0x427b36]\n??:? void tmpvxxskz_s.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot_pos = num.find('.');\n\tif (dot_pos == string.npos)\n\t\treturn false;\n\t\n\tif (num.length - dot_pos - 1 > 2)\n\t\treturn false;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (i == dot_pos)\n\t\t\tcontinue;\n\t\t\n\t\tif (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp_jh_hsp3.d(9): Error: no property `find` for type `string`\n/tmp/tmp_jh_hsp3.d(10): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jh_hsp3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjokqtrly.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpjokqtrly.__unittest_L45_C1() [0x427ae2]\n??:? void tmpjokqtrly.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++) \n\t{\n\t\tif(num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmponq2bfvn.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmponq2bfvn.__unittest_L37_C1() [0x427b0e]\n??:? void tmponq2bfvn.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto pos = num.find(\".\");\n\tif (pos == string.npos)\n\t\treturn false;\n\t\n\tif (num.length - pos - 1 > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpq_f4jqlc.d(9): Error: no property `find` for type `string`\n/tmp/tmpq_f4jqlc.d(10): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq_f4jqlc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(is_decimal && dot_count == 1 && digit_count > 2)\n\t{\n\t\tis_decimal = false;\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu3s9z6ws.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpu3s9z6ws.__unittest_L42_C1() [0x427ada]\n??:? void tmpu3s9z6ws.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(c < '0' || c > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr4ng4j1e.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpr4ng4j1e.__unittest_L37_C1() [0x427ae6]\n??:? void tmpr4ng4j1e.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint len = num.length;\n\tint i = 0;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (len == 0)\n\t\treturn false;\n\t\n\twhile (i < len)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t\ti++;\n\t}\n\t\n\tif (dot_count == 1)\n\t\treturn digit_count <= 3;\n\telse\n\t\treturn digit_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmpaowi2e4i.d(9): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaowi2e4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif (digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpycfiq48_.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpycfiq48_.__unittest_L30_C1() [0x427b16]\n??:? void tmpycfiq48_.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif(num[0] == '-')\n\t\ti = 1;\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpurk5guyj.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpurk5guyj.__unittest_L36_C1() [0x427b46]\n??:? void tmpurk5guyj.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif(digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpfpir_5t8.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfpir_5t8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif(digit_count <= 2) {\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpalhxk3p4.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpalhxk3p4.__unittest_L36_C1() [0x427ae2]\n??:? void tmpalhxk3p4.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint digit = 0;\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot++;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot == 1 && digit == num.length - 1) {\n\t\treturn true;\n\t} else if (dot == 0 && digit == num.length) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph7wd__i9.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmph7wd__i9.__unittest_L28_C1() [0x427b84]\n??:? void tmph7wd__i9.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t\tdigit_count++;\n\t}\n\t\n\tif (dot_count == 0)\n\t\treturn false;\n\t\n\tif (digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvkle5axn.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427edd]\n??:? void tmpvkle5axn.__unittest_L38_C1() [0x427ba6]\n??:? void tmpvkle5axn.__modtest() [0x427c60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43014c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aae1]\n??:? runModuleUnitTests [0x42ba4d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tbool is_decimal = true;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(is_decimal)\n\t{\n\t\tint dot_index = num.indexOf('.');\n\t\tif(dot_index == -1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn num.length - dot_index - 1 <= 2;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmp5v910v2b.d(23): Error: undefined identifier `isdigit`\n/tmp/tmp5v910v2b.d(32): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5v910v2b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif(num[0] == '-')\n\t{\n\t\ti = 1;\n\t}\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count == 1 && digit_count == num.length - 1)\n\t{\n\t\treturn true;\n\t}\n\telse if(dot_count == 0 && digit_count == num.length)\n\t{\n\t\treturn true;\n\t}\n\telse if(dot_count == 1 && digit_count == num.length - 2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmputv0qqpr.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmputv0qqpr.__unittest_L48_C1() [0x427bd0]\n??:? void tmputv0qqpr.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aae2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430124]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aab9]\n??:? runModuleUnitTests [0x42ba25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428378]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 1 && digit_count > 3)\n\t\treturn false;\n\t\n\tif(dot_count == 0 && digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpx6_fwhjz.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx6_fwhjz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length(); i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpvvks_qlj.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvvks_qlj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7uwt2sn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp7uwt2sn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmp7uwt2sn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpft5s8k2i.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpft5s8k2i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\tif(dot_index == num.length - 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(digit_count - dot_index > 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpy7wsox6z.d(38): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy7wsox6z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_elrnv69.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp_elrnv69.__unittest_L32_C1() [0x427b0e]\n??:? void tmp_elrnv69.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0)\n\t{\n\t\treturn false;\n\t}\n\t\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj78aebpj.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpj78aebpj.__unittest_L50_C1() [0x427b3e]\n??:? void tmpj78aebpj.__modtest() [0x427bf8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa79]\n??:? runModuleUnitTests [0x42b9e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428338]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif (dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (!isDigit(num[i]))\n\t\t\treturn false;\n\t}\n\tif (dot == 0)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpg3zpiid9.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmpg3zpiid9.d(22): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg3zpiid9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif(num[0] == '-')\n\t\ti = 1;\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif(digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwmw33u7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpjwmw33u7.__unittest_L31_C1() [0x427b42]\n??:? void tmpjwmw33u7.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\tint dot_count = 0;\n\t\n\tforeach (i, c; num)\n\t{\n\t\tif (c == '.')\n\t\t{\n\t\t\tif (is_decimal) return false;\n\t\t\tis_decimal = true;\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (c < '0' || c > '9') return false;\n\t}\n\t\n\tif (dot_count > 1) return false;\n\t\n\tif (is_decimal)\n\t{\n\t\tint dot_index = num.indexOf('.');\n\t\tif (dot_index == num.length - 1) return false;\n\t\tif (num.length - dot_index - 1 > 2) return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmppclqvjso.d(29): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppclqvjso.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif (c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) return false;\n\t\t}\n\t\telse if (!isdigit(c)) return false;\n\t}\n\t\n\tif (dot_count == 0) return true;\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\treturn num.length - dot_index - 1 <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmplecgbxn3.d(20): Error: undefined identifier `isdigit`\n/tmp/tmplecgbxn3.d(25): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplecgbxn3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint count = 0;\n\tbool is_decimal = false;\n\t\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\twhile(i < num.length)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tif(is_decimal)\n\t\t\t\treturn false;\n\t\t\telse\n\t\t\t\tis_decimal = true;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse if(is_decimal)\n\t\t\tcount++;\n\t\ti++;\n\t}\n\t\n\treturn count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_elrnv69.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp_elrnv69.__unittest_L32_C1() [0x427b0e]\n??:? void tmp_elrnv69.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 3)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpciy9xf3c.d(54): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpciy9xf3c.__unittest_L50_C1() [0x427ae6]\n??:? void tmpciy9xf3c.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == num.length - 1) \n\t{\n\t\treturn true;\n\t}\n\telse if (dot_count == 0 && digit_count == num.length) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3wnlucq.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpm3wnlucq.__unittest_L39_C1() [0x427b84]\n??:? void tmpm3wnlucq.__modtest() [0x427bec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint len = num.length;\n\tint i = 0;\n\tint dot_count = 0;\n\tint decimal_count = 0;\n\t\n\tif(num[0] == '.')\n\t\treturn false;\n\t\n\tif(num[len-1] == '.')\n\t\treturn false;\n\t\n\tfor(i = 0; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse if(dot_count == 1)\n\t\t\tdecimal_count++;\n\t}\n\t\n\tif(decimal_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpiwti4v37.d(9): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiwti4v37.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn (dot_count == 1 && digit_count == 3);\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp86avnx9a.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp86avnx9a.__unittest_L28_C1() [0x427b0e]\n??:? void tmp86avnx9a.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (num.length == 0) return false;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) return false;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif (digit_count > 2) return false;\n\t\t}\n\t\telse return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcu29x29v.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpcu29x29v.__unittest_L31_C1() [0x427b22]\n??:? void tmpcu29x29v.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && num_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2awbcr2f.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmp2awbcr2f.__unittest_L37_C1() [0x427aca]\n??:? void tmp2awbcr2f.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbfc7oj7.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmbfc7oj7.__unittest_L32_C1() [0x427b0e]\n??:? void tmpmbfc7oj7.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf4u7c8k1.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpf4u7c8k1.__unittest_L37_C1() [0x427aca]\n??:? void tmpf4u7c8k1.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t} else if(!isdigit(c)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif(dot_count == 0)\n\t\treturn false;\n\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmp6xk40cpr.d(17): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6xk40cpr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t} else if(isDigit(c)) {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpto3dsge9.d(15): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpto3dsge9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count == 0)\n\t\treturn false;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpoq5v42nz.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoq5v42nz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c < '0' || c > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count == 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph9vxbe62.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmph9vxbe62.__unittest_L28_C1() [0x427ac2]\n??:? void tmph9vxbe62.__modtest() [0x427b7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint len = num.length;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (len == 0)\n\t\treturn false;\n\t\n\twhile (i < len)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t\t\n\t\ti++;\n\t}\n\t\n\tif (dot_count == 0)\n\t\treturn false;\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpd6rpiubs.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd6rpiubs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfs40rntp.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpfs40rntp.__unittest_L29_C1() [0x427b36]\n??:? void tmpfs40rntp.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isDigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpy327rm0v.d(20): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy327rm0v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf4u7c8k1.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpf4u7c8k1.__unittest_L37_C1() [0x427aca]\n??:? void tmpf4u7c8k1.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif(num[0] == '-')\n\t{\n\t\ti = 1;\n\t}\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeb9r6tbx.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmpeb9r6tbx.__unittest_L45_C1() [0x427b52]\n??:? void tmpeb9r6tbx.__modtest() [0x427c0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa91]\n??:? runModuleUnitTests [0x42b9fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428350]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 2) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp33qu90ja.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp33qu90ja.__unittest_L35_C1() [0x427b0e]\n??:? void tmp33qu90ja.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn (dot_count == 1 && digit_count == 3);\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp374x8ekf.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp374x8ekf.__unittest_L22_C1() [0x427b0e]\n??:? void tmp374x8ekf.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0cabb1u.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp_0cabb1u.__unittest_L45_C1() [0x427ae2]\n??:? void tmp_0cabb1u.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint len = num.length;\n\tint i = 0;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (len == 0)\n\t\treturn false;\n\t\t\n\twhile (i < len)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t\t\t\n\t\ti++;\n\t}\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp5ejgh8p6.d(9): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ejgh8p6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1) {\n\t\tif(digit_count > 2) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgq4yv958.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpgq4yv958.__unittest_L36_C1() [0x427ada]\n??:? void tmpgq4yv958.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\t\n\t\tif(dot_count == 1)\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\t\n\tif(dot_count == 1 && digit_count != 2)\n\t\treturn false;\n\t\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp17eykt8t.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp17eykt8t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9') \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_wxvq7ta.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp_wxvq7ta.__unittest_L32_C1() [0x427b0a]\n??:? void tmp_wxvq7ta.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9') \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_wxvq7ta.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp_wxvq7ta.__unittest_L32_C1() [0x427b0a]\n??:? void tmp_wxvq7ta.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0cabb1u.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp_0cabb1u.__unittest_L45_C1() [0x427ae2]\n??:? void tmp_0cabb1u.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(c < '0' || c > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbv41ai00.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpbv41ai00.__unittest_L37_C1() [0x427ade]\n??:? void tmpbv41ai00.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == num.length - 1) {\n\t\treturn true;\n\t}\n\telse if(dot_count == 0 && digit_count == num.length) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_4580mks.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp_4580mks.__unittest_L34_C1() [0x427b40]\n??:? void tmp_4580mks.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8l__vk1x.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp8l__vk1x.__unittest_L43_C1() [0x427ada]\n??:? void tmp8l__vk1x.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpari_3v4o.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpari_3v4o.__unittest_L32_C1() [0x427ace]\n??:? void tmpari_3v4o.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif (digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8j_n4hkd.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp8j_n4hkd.__unittest_L36_C1() [0x427b26]\n??:? void tmp8j_n4hkd.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\tbool is_negative = false;\n\t\n\tif (num[0] == '-') {\n\t\tis_negative = true;\n\t\tnum = num[1..$];\n\t}\n\t\n\tforeach (i, c; num) {\n\t\tif (c == '.') {\n\t\t\tif (is_decimal) return false;\n\t\t\tis_decimal = true;\n\t\t} else if (!isDigit(c)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (is_decimal) {\n\t\tauto parts = split(num, \".\");\n\t\tif (parts[1].length > 2) return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp_aqj1hw4.d(23): Error: undefined identifier `isDigit`\n/tmp/tmp_aqj1hw4.d(29): Error: undefined identifier `split`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_aqj1hw4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\t\n\tforeach(i, c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tif(is_decimal) return false;\n\t\t\telse is_decimal = true;\n\t\t}\n\t\telse if(!('0' <= c && c <= '9')) return false;\n\t}\n\t\n\tif(is_decimal)\n\t{\n\t\tint dot_index = num.indexOf('.');\n\t\treturn num.length - dot_index <= 3;\n\t}\n\telse return true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp0vh9uwyv.d(25): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0vh9uwyv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp3k75tb_l.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3k75tb_l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif (digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpycfiq48_.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpycfiq48_.__unittest_L30_C1() [0x427b16]\n??:? void tmpycfiq48_.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ye7i2gq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp3ye7i2gq.__unittest_L37_C1() [0x427b0e]\n??:? void tmp3ye7i2gq.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9fyak_rh.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp9fyak_rh.__unittest_L35_C1() [0x427b0e]\n??:? void tmp9fyak_rh.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpfka5mx49.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfka5mx49.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tint len = num.length;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tif(len == 0)\n\t\treturn false;\n\twhile(i < len)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t\ti++;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpg1b0j26l.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg1b0j26l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0cabb1u.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp_0cabb1u.__unittest_L45_C1() [0x427ae2]\n??:? void tmp_0cabb1u.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptulxmfvr.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmptulxmfvr.__unittest_L32_C1() [0x427b1c]\n??:? void tmptulxmfvr.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint count = 0;\n\tbool is_decimal = false;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tis_decimal = true;\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count > 1)\n\t{\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn is_decimal;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpep11spjz.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpep11spjz.__unittest_L28_C1() [0x427acf]\n??:? void tmpep11spjz.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43004c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e1]\n??:? runModuleUnitTests [0x42b94d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\t// Check if the string is empty\n\tif (num.empty())\n\t\treturn false;\n\t\n\t// Check if the string contains any non-digit characters\n\tfor (int i = 0; i < num.length(); i++)\n\t{\n\t\tif (!isdigit(num[i]))\n\t\t{\n\t\t\t// If the character is a decimal point, continue\n\t\t\tif (num[i] == '.')\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\t// If the character is a negative sign, continue\n\t\t\tif (num[i] == '-')\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\t// Otherwise, return false\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\t// Check if the string contains more than one decimal point\n\tint decimal_count = 0;\n\tfor (int i = 0; i < num.length(); i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t\tdecimal_count++;\n\t}\n\tif (decimal_count > 1)\n\t\treturn false;\n\t\n\t// Check if the string contains more than two digits after the decimal point\n\tint decimal_index = num.find('.');\n\tif (decimal_index != -1)\n\t{\n\t\tif (num.length() - decimal_index - 1 > 2)\n\t\t\treturn false;\n\t}\n\t\n\t// Check if the string contains more than one negative sign\n\tint negative_count = 0;\n\tfor (int i = 0; i < num.length(); i++)\n\t{\n\t\tif (num[i] == '-')\n\t\t\tnegative_count++;\n\t}\n\tif (negative_count > 1)\n\t\treturn false;\n\t\n\t// Check if the string contains a negative sign not at the beginning\n\tint negative_index = num.find('-');\n\tif (negative_index != -1)\n\t{\n\t\tif (negative_index != 0)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmppjw3hc83.d(10): Error: no property `empty` for type `string`\n/tmp/tmppjw3hc83.d(14): Error: no property `length` for type `string`\n/tmp/tmppjw3hc83.d(16): Error: undefined identifier `isdigit`\n/tmp/tmppjw3hc83.d(33): Error: no property `length` for type `string`\n/tmp/tmppjw3hc83.d(42): Error: no property `find` for type `string`\n/tmp/tmppjw3hc83.d(45): Error: no property `length` for type `string`\n/tmp/tmppjw3hc83.d(51): Error: no property `length` for type `string`\n/tmp/tmppjw3hc83.d(60): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppjw3hc83.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\t\n\tif(digit_count - dot_count > 2)\n\t\treturn false;\n\t\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp6o08luoe.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6o08luoe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n    int dot_count = 0;\n    int digit_count = 0;\n    int i = 0;\n    if (num[0] == '-')\n        i = 1;\n    for (; i < num.length; i++)\n    {\n        if (num[i] == '.')\n        {\n            dot_count++;\n            if (dot_count > 1)\n                return false;\n        }\n        else if (num[i] < '0' || num[i] > '9')\n            return false;\n        else\n            digit_count++;\n    }\n    return digit_count > 1;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqkvvz4ls.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e6d]\n??:? void tmpqkvvz4ls.__unittest_L29_C1() [0x427b88]\n??:? void tmpqkvvz4ls.__modtest() [0x427bf0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]\n??:? runModuleUnitTests [0x42b9dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428330]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppsuj8pn6.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmppsuj8pn6.__unittest_L37_C1() [0x427b0e]\n??:? void tmppsuj8pn6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1) {\n\t\tif(digit_count > 2) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgq4yv958.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpgq4yv958.__unittest_L36_C1() [0x427ada]\n??:? void tmpgq4yv958.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(dot_count == 0 && digit_count > 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyvfgij5i.d(51): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpyvfgij5i.__unittest_L45_C1() [0x427b40]\n??:? void tmpyvfgij5i.__modtest() [0x427ba8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbfc7oj7.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmbfc7oj7.__unittest_L32_C1() [0x427b0e]\n??:? void tmpmbfc7oj7.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpfka5mx49.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfka5mx49.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tsize_t pos = num.find('.');\n\tif (pos == string.npos) return false;\n\tif (num.length - pos - 1 > 2) return false;\n\tfor (size_t i = 0; i < num.length; i++) \n\t{\n\t\tif (i == pos) continue;\n\t\tif (num[i] < '0' || num[i] > '9') return false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp2is0pu4h.d(9): Error: no property `find` for type `string`\n/tmp/tmp2is0pu4h.d(10): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2is0pu4h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length(); i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1) \n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0) \n\t{\n\t\treturn true;\n\t}\n\t\n\tif (digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpl6ydmexn.d(11): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6ydmexn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num) {\n\t\tif (c == '.') {\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (c < '0' || c > '9') {\n\t\t\treturn false;\n\t\t}\n\t\tdigit_count++;\n\t}\n\t\n\tif (dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\treturn digit_count - 1 <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw5m3h2p6.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpw5m3h2p6.__unittest_L33_C1() [0x427ada]\n??:? void tmpw5m3h2p6.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_pos = num.find(\".\");\n\tif (dot_pos == -1) return false;\n\tif (num.length() - dot_pos > 3) return false;\n\tif (num.length() - dot_pos == 3) \n\t{\n\t\tif (num[dot_pos + 2] == '0') return false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpyu0t2euz.d(9): Error: no property `find` for type `string`\n/tmp/tmpyu0t2euz.d(11): Error: no property `length` for type `string`\n/tmp/tmpyu0t2euz.d(12): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyu0t2euz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count > 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpd9z4ft9x.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9z4ft9x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = false;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1zwhel_y.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmp1zwhel_y.__unittest_L33_C1() [0x427ace]\n??:? void tmp1zwhel_y.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\tint dot_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\t++dot_count;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(!isdigit(c))\n\t\t\treturn false;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\tauto dot_pos = num.find('.');\n\t\n\tif(dot_pos == num.length - 1)\n\t\treturn false;\n\t\n\tif(num.length - dot_pos - 1 > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpk3j5_c9u.d(22): Error: undefined identifier `isdigit`\n/tmp/tmpk3j5_c9u.d(32): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk3j5_c9u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t\tdot_count++;\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t\tdigit_count++;\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif (dot_count > 1)\n\t\treturn false;\n\t\n\tif (dot_count == 0)\n\t\treturn true;\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfth3m2eg.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmpfth3m2eg.__unittest_L37_C1() [0x427b52]\n??:? void tmpfth3m2eg.__modtest() [0x427c0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc27]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa91]\n??:? runModuleUnitTests [0x42b9fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428350]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(c < '0' || c > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - 1 <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5es8eo_a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp5es8eo_a.__unittest_L34_C1() [0x427ada]\n??:? void tmp5es8eo_a.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 2)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps6ek5cs6.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmps6ek5cs6.__unittest_L36_C1() [0x427b0e]\n??:? void tmps6ek5cs6.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\tint i = 0;\n\tif (num[0] == '.') return false;\n\twhile (i < num.length)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) return false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9') return false;\n\t\telse\n\t\t{\n\t\t\tnum_count++;\n\t\t\tif (num_count > 2) return false;\n\t\t}\n\t\ti++;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpezpip7tu.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpezpip7tu.__unittest_L30_C1() [0x427b46]\n??:? void tmpezpip7tu.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn digit_count <= 2;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzx1p0gtq.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmpzx1p0gtq.__unittest_L39_C1() [0x427ada]\n??:? void tmpzx1p0gtq.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(num_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfb59xbah.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpfb59xbah.__unittest_L45_C1() [0x427ae2]\n??:? void tmpfb59xbah.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (digit_count <= 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ckok1j0.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp3ckok1j0.__unittest_L45_C1() [0x427b26]\n??:? void tmp3ckok1j0.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\twhile(i < num.length)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\ti++;\n\t}\n\tif(dot_count > 1 || digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp87d1mh26.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmp87d1mh26.__unittest_L34_C1() [0x427b0e]\n??:? void tmp87d1mh26.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tbool is_decimal = true;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (!is_digit(num[i]))\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpuufnwfor.d(22): Error: undefined identifier `is_digit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuufnwfor.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphj7uk85c.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmphj7uk85c.__unittest_L35_C1() [0x427b0e]\n??:? void tmphj7uk85c.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn digit_count - num.indexOf('.') <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpidhd2hei.d(18): Error: undefined identifier `isdigit`\n/tmp/tmpidhd2hei.d(38): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpidhd2hei.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif (c == '.') {\n\t\t\tdot_count++;\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\tif (dot_index == 0 || dot_index == num.length - 1) {\n\t\treturn false;\n\t}\n\t\n\treturn digit_count - dot_index == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpp4r_gvl8.d(30): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp4r_gvl8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot = num.find('.');\n\tif (dot == -1)\n\t\treturn false;\n\tauto after_dot = num.length - dot - 1;\n\tif (after_dot > 2)\n\t\treturn false;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (i == dot)\n\t\t\tcontinue;\n\t\tif (!isdigit(num[i]))\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpcz8k0spb.d(9): Error: no property `find` for type `string`\n/tmp/tmpcz8k0spb.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcz8k0spb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbfc7oj7.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpmbfc7oj7.__unittest_L32_C1() [0x427b0e]\n??:? void tmpmbfc7oj7.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0cabb1u.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp_0cabb1u.__unittest_L45_C1() [0x427ae2]\n??:? void tmp_0cabb1u.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tif (num.length == 0)\n\t\treturn false;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif (digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9errp_hg.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp9errp_hg.__unittest_L34_C1() [0x427b1e]\n??:? void tmp9errp_hg.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa59]\n??:? runModuleUnitTests [0x42b9c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428318]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpq20ilbj1.d(19): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq20ilbj1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tbool is_decimal = false;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tstring[] parts = num.split(\".\");\n\t\tif(parts[1].length == 2)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp1smwy1tn.d(22): Error: undefined identifier `isdigit`\n/tmp/tmp1smwy1tn.d(30): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1smwy1tn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2 && dot_count == 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2k7ucqqv.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp2k7ucqqv.__unittest_L32_C1() [0x427ad2]\n??:? void tmp2k7ucqqv.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint count = 0;\n\tfor (int i = 0; i < num.length(); i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count > 1) \n\t{\n\t\treturn false;\n\t}\n\telse \n\t{\n\t\treturn true;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpncgxsvde.d(10): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpncgxsvde.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tbool dot = false;\n\tint dot_pos = 0;\n\tint len = num.length;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tif (dot)\n\t\t\t\treturn false;\n\t\t\tdot = true;\n\t\t\tdot_pos = i;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t}\n\tif (dot)\n\t{\n\t\tif (len - dot_pos > 3)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmp1okauk27.d(12): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1okauk27.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9bjzb72b.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp9bjzb72b.__unittest_L40_C1() [0x427ada]\n??:? void tmp9bjzb72b.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeqo22uc5.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpeqo22uc5.__unittest_L32_C1() [0x427ace]\n??:? void tmpeqo22uc5.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1) return false;\n\t\t}\n\t\telse if(!isDigit(c)) return false;\n\t}\n\t\n\tif(dot_count == 0) return true;\n\t\n\tauto dot_pos = num.find('.');\n\t\n\treturn num.length - dot_pos - 1 <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpylg9bswi.d(20): Error: undefined identifier `isDigit`\n/tmp/tmpylg9bswi.d(25): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpylg9bswi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint len = num.length;\n\tint i = 0;\n\tif(num[0] == '-')\n\t\ti = 1;\n\tfor(; i < len; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif(dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(num[i]))\n\t\t\treturn false;\n\t}\n\tif(dot == 0)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmplp7i5w5u.d(10): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmplp7i5w5u.d(22): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplp7i5w5u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8l__vk1x.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp8l__vk1x.__unittest_L43_C1() [0x427ada]\n??:? void tmp8l__vk1x.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint num_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tnum_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && num_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmper7ux6c1.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmper7ux6c1.__unittest_L37_C1() [0x427b0e]\n??:? void tmper7ux6c1.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tbool dot = false;\n\tbool digit = false;\n\t\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tif (dot) return false;\n\t\t\tdot = true;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit = true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (!digit) return false;\n\t\n\tif (dot) {\n\t\tint dot_pos = num.find('.');\n\t\tif (num.length - dot_pos - 1 > 2) return false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmptg0dq7z2.d(28): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptg0dq7z2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count == 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmphdcmme9s.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphdcmme9s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (isdigit(num[i])) {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif (digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmprgh0bzmw.d(15): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprgh0bzmw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1 || digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsrt10djo.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpsrt10djo.__unittest_L35_C1() [0x427aca]\n??:? void tmpsrt10djo.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1) \n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 0) \n\t{\n\t\treturn false;\n\t}\n\tif (digit_count > 3) \n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg5ybhj78.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpg5ybhj78.__unittest_L40_C1() [0x427b22]\n??:? void tmpg5ybhj78.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) {\n\t\tif(c == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0) {\n\t\treturn true;\n\t}\n\t\n\tif(digit_count > 2) {\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw73h_243.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpw73h_243.__unittest_L38_C1() [0x427ae2]\n??:? void tmpw73h_243.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\t// check if the string is empty\n\tif (num.empty())\n\t\treturn false;\n\t\n\t// check if the string contains a decimal point\n\tif (num.find('.') == string::npos)\n\t\treturn false;\n\t\n\t// check if the string contains any characters other than digits and a decimal point\n\tfor (int i = 0; i < num.size(); i++)\n\t{\n\t\tif (!isdigit(num[i]) && num[i] != '.')\n\t\t\treturn false;\n\t}\n\t\n\t// check if the string contains more than 2 digits after the decimal point\n\tint decimal_point_index = num.find('.');\n\tif (num.size() - decimal_point_index - 1 > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpounl6nc1.d(14): Error: found `:` when expecting `)`\n/tmp/tmpounl6nc1.d(14): Error: found `:` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpounl6nc1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tif (num.length == 0)\n\t\treturn false;\n\t\n\tforeach (c; num)\n\t{\n\t\tif (c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (is_decimal)\n\t{\n\t\tif (digit_count > 2)\n\t\t\tis_decimal = false;\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc10ltn6t.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpc10ltn6t.__unittest_L46_C1() [0x427ae2]\n??:? void tmpc10ltn6t.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr54s9lq9.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpr54s9lq9.__unittest_L36_C1() [0x427b16]\n??:? void tmpr54s9lq9.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif(digit_count - dot_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsbt7_8kh.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpsbt7_8kh.__unittest_L45_C1() [0x427ae6]\n??:? void tmpsbt7_8kh.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif (dot_count > 1 || digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxj4k9mcs.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpxj4k9mcs.__unittest_L35_C1() [0x427b3a]\n??:? void tmpxj4k9mcs.__modtest() [0x427bf4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaa2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa79]\n??:? runModuleUnitTests [0x42b9e5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428338]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptejwr4hh.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmptejwr4hh.__unittest_L44_C1() [0x427ade]\n??:? void tmptejwr4hh.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0)\n\t\treturn false;\n\t\n\tbool is_decimal = false;\n\tint dot_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tif(is_decimal)\n\t\t\t\treturn false;\n\t\t\t\n\t\t\tis_decimal = true;\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(!isDigit(c))\n\t\t\treturn false;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(is_decimal)\n\t{\n\t\tint dot_index = num.indexOf('.');\n\t\tif(num.length - dot_index - 1 > 2)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpcv9w2hs1.d(25): Error: undefined identifier `isDigit`\n/tmp/tmpcv9w2hs1.d(34): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcv9w2hs1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2 && dot_count == 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2k7ucqqv.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmp2k7ucqqv.__unittest_L32_C1() [0x427ad2]\n??:? void tmp2k7ucqqv.__modtest() [0x427b8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(isdigit(c))\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpqo9bkdj6.d(18): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqo9bkdj6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint digit = 0;\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(dot == 1 && digit == num.length - 1)\n\t{\n\t\treturn true;\n\t}\n\telse if(dot == 0 && digit == num.length)\n\t{\n\t\treturn true;\n\t}\n\telse if(dot == 1 && digit == num.length - 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvc68jzrz.d(49): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpvc68jzrz.__unittest_L43_C1() [0x427ba0]\n??:? void tmpvc68jzrz.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc1f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aab2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300f4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbd1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa89]\n??:? runModuleUnitTests [0x42b9f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428348]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot_pos = num.find('.');\n\tif (dot_pos == string.npos)\n\t\treturn false;\n\t\n\tif (num.length - dot_pos - 1 > 2)\n\t\treturn false;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (i == dot_pos)\n\t\t\tcontinue;\n\t\t\n\t\tif (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "/tmp/tmp_jh_hsp3.d(9): Error: no property `find` for type `string`\n/tmp/tmp_jh_hsp3.d(10): Error: no property `npos` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_jh_hsp3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint i = 0;\n\tbool is_decimal = false;\n\tbool is_precision = false;\n\tbool is_negative = false;\n\tbool is_positive = false;\n\t\n\tif(num[0] == '-')\n\t{\n\t\tis_negative = true;\n\t\ti++;\n\t}\n\telse if(num[0] == '+')\n\t{\n\t\tis_positive = true;\n\t\ti++;\n\t}\n\t\n\tfor(; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tis_decimal = true;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(is_decimal && !is_precision)\n\t\t{\n\t\t\tis_precision = true;\n\t\t}\n\t\t\n\t\tif(!is_decimal && num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(is_decimal && is_precision && num[i] < '0' || num[i] > '9')\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(is_decimal && is_precision)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5iftmuvz.d(63): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmp5iftmuvz.__unittest_L57_C1() [0x427c48]\n??:? void tmp5iftmuvz.__modtest() [0x427cb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bcc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab5a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fced]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43019c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab31]\n??:? runModuleUnitTests [0x42ba9d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvd1s86f1.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpvd1s86f1.__unittest_L35_C1() [0x427b16]\n??:? void tmpvd1s86f1.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 2)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8l__vk1x.d(47): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp8l__vk1x.__unittest_L43_C1() [0x427ada]\n??:? void tmp8l__vk1x.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp970yjxj.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpp970yjxj.__unittest_L32_C1() [0x427ace]\n??:? void tmpp970yjxj.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint decimal_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9')\n\t\t{\n\t\t\tif(dot_count == 1)\n\t\t\t\tdecimal_count++;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\tif(decimal_count == 2)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint precision = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(dot > 0)\n\t\t{\n\t\t\tprecision++;\n\t\t}\n\t\t\n\t\tif(!isDigit(c))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(precision > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpm79a7qvt.d(25): Error: undefined identifier `isDigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm79a7qvt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c < '0' || c > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjgc0sc93.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpjgc0sc93.__unittest_L31_C1() [0x427ace]\n??:? void tmpjgc0sc93.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 2)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp970yjxj.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpp970yjxj.__unittest_L32_C1() [0x427ace]\n??:? void tmpp970yjxj.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count != 1) {\n\t\treturn false;\n\t}\n\tif (digit_count != num.length - 1) {\n\t\treturn false;\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmwejg99r.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmpmwejg99r.__unittest_L30_C1() [0x427b74]\n??:? void tmpmwejg99r.__modtest() [0x427bdc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint len = num.length;\n\t\n\tfor (int i = 0; i < len; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tdot_count++;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\tdigit_count++;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1) {\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 1 && digit_count > 2) {\n\t\treturn true;\n\t}\n\t\n\tif (dot_count == 0 && digit_count <= 2) {\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpngkfz_iz.d(11): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpngkfz_iz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprurvsejq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmprurvsejq.__unittest_L37_C1() [0x427aca]\n??:? void tmprurvsejq.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif (digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu0hp4it5.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpu0hp4it5.__unittest_L31_C1() [0x427b42]\n??:? void tmpu0hp4it5.__modtest() [0x427bfc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aaaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa81]\n??:? runModuleUnitTests [0x42b9ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428340]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tbool is_decimal = false;\n\tbool is_precision = false;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tif(is_decimal) return false;\n\t\t\tis_decimal = true;\n\t\t}\n\t\telse if(num[i] == '0' || num[i] == '1' || num[i] == '2' || num[i] == '3' || num[i] == '4' || num[i] == '5' || num[i] == '6' || num[i] == '7' || num[i] == '8' || num[i] == '9')\n\t\t{\n\t\t\tif(is_decimal) is_precision = true;\n\t\t}\n\t\telse return false;\n\t}\n\t\n\tif(is_decimal && is_precision) return true;\n\telse return false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe09hmg5f.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427f65]\n??:? void tmpe09hmg5f.__unittest_L31_C1() [0x427c80]\n??:? void tmpe09hmg5f.__modtest() [0x427ce8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bcff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab92]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fd25]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4301d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fcb1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ab69]\n??:? runModuleUnitTests [0x42bad5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428428]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp503jwk1n.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmp503jwk1n.__unittest_L35_C1() [0x427aca]\n??:? void tmp503jwk1n.__modtest() [0x427b84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) return false;\n\t\n\tbool has_decimal = false;\n\tbool has_digit = false;\n\t\n\tfor (int i = 0; i < num.length; i++) {\n\t\tif (num[i] == '.') {\n\t\t\tif (has_decimal) return false;\n\t\t\thas_decimal = true;\n\t\t} else if (num[i] >= '0' && num[i] <= '9') {\n\t\t\thas_digit = true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (!has_digit) return false;\n\t\n\tif (!has_decimal) return true;\n\t\n\tint decimal_index = num.find('.');\n\t\n\tif (num.length - decimal_index - 1 > 2) return false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "/tmp/tmpnccadq0n.d(29): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnccadq0n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tint i = 0;\n\tif (num[0] == '-')\n\t\ti = 1;\n\tfor (; i < num.length(); i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif (dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\tif (digit_count > 2)\n\t\treturn false;\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp932nz7zq.d(14): Error: no property `length` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp932nz7zq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\tis_decimal = false;\n\t}\n\telse if (dot_count == 1 && digit_count > 2)\n\t{\n\t\tis_decimal = false;\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwr9tap7b.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpwr9tap7b.__unittest_L41_C1() [0x427b1a]\n??:? void tmpwr9tap7b.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa82]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa59]\n??:? runModuleUnitTests [0x42b9c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428318]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif(num.length == 0) return false;\n\t\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(c < '0' || c > '9') return false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1) return false;\n\t\n\tif(dot_count == 1)\n\t{\n\t\tif(digit_count > 3) return false;\n\t\tif(digit_count == 3) return true;\n\t\tif(digit_count == 2) return true;\n\t\tif(digit_count == 1) return false;\n\t}\n\t\n\tif(dot_count == 0)\n\t{\n\t\tif(digit_count > 2) return false;\n\t\tif(digit_count == 2) return true;\n\t\tif(digit_count == 1) return true;\n\t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqoppgqfi.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x427e75]\n??:? void tmpqoppgqfi.__unittest_L46_C1() [0x427b3a]\n??:? void tmpqoppgqfi.__modtest() [0x427bf4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa2e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430070]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa05]\n??:? runModuleUnitTests [0x42b971]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoft0ykhm.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e45]\n??:? void tmpoft0ykhm.__unittest_L35_C1() [0x427b0e]\n??:? void tmpoft0ykhm.__modtest() [0x427bc8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa72]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa49]\n??:? runModuleUnitTests [0x42b9b5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428308]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint len = num.length;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor (int i = 0; i < len; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1 || digit_count > 2) \n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmptb3vhidu.d(9): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptb3vhidu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif(c < '0' || c > '9')\n\t\t\treturn false;\n\t\t\n\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count > 1)\n\t\treturn false;\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - 1 <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5es8eo_a.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp5es8eo_a.__unittest_L34_C1() [0x427ada]\n??:? void tmp5es8eo_a.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tfor(int i = 0; i < num.length; i++)\n\t{\n\t\tif(num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count == 0)\n\t\treturn false;\n\t\n\treturn digit_count <= 3;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk1shkpr0.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpk1shkpr0.__unittest_L31_C1() [0x427b16]\n??:? void tmpk1shkpr0.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa51]\n??:? runModuleUnitTests [0x42b9bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428310]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint decimal_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c == '-')\n\t\t{\n\t\t\tif(decimal_count > 0)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c < '0' || c > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdecimal_count++;\n\t}\n\t\n\tif(decimal_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp76o4x7w3.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmp76o4x7w3.__unittest_L36_C1() [0x427ae2]\n??:? void tmp76o4x7w3.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\treturn num.match(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpkct5yeym.d(9): Error: no property `match` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkct5yeym.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (is_digit(num[i])) \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (dot_count == 1 && digit_count == 3) \n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpxlxw370t.d(17): Error: undefined identifier `is_digit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxlxw370t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot = 0;\n\tint i = 0;\n\tint len = num.length;\n\t\n\tif (num[0] == '-')\n\t\ti = 1;\n\t\n\tfor (; i < len; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot++;\n\t\t\tif (dot > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if (num[i] < '0' || num[i] > '9')\n\t\t\treturn false;\n\t}\n\t\n\tif (dot == 0)\n\t\treturn false;\n\t\n\tif (num.find('.') + 3 < len)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmphnpgsbsk.d(11): Error: cannot implicitly convert expression `num.length` of type `ulong` to `int`\n/tmp/tmphnpgsbsk.d(31): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphnpgsbsk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c < '0' || c > '9')\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(dot_count == 0)\n\t\treturn true;\n\t\n\treturn digit_count - dot_count <= 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa8t4wbsm.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e0d]\n??:? void tmpa8t4wbsm.__unittest_L31_C1() [0x427ad6]\n??:? void tmpa8t4wbsm.__modtest() [0x427b90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb33]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb59]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430008]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fae5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a99d]\n??:? runModuleUnitTests [0x42b909]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42825c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tbool is_decimal = true;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\tis_decimal = false;\n\t}\n\t\n\tif(digit_count > 2)\n\t{\n\t\tis_decimal = false;\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7oyt3uls.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmp7oyt3uls.__unittest_L42_C1() [0x427ace]\n??:? void tmp7oyt3uls.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif(dot_count != 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tint dot_index = num.indexOf('.');\n\t\n\tif(dot_index == 0 || dot_index == num.length - 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(digit_count - dot_index > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpm0nt77xt.d(33): Error: no property `indexOf` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm0nt77xt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tbool is_decimal = true;\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t{\n\t\t\t\tis_decimal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t{\n\t\t\tis_decimal = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif(is_decimal)\n\t{\n\t\tint dot_index = num.find('.');\n\t\tif(dot_index != -1)\n\t\t{\n\t\t\tif(num.length - dot_index - 1 > 2)\n\t\t\t\tis_decimal = false;\n\t\t}\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmplsrjawp8.d(22): Error: undefined identifier `isdigit`\n/tmp/tmplsrjawp8.d(31): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplsrjawp8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif(dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 0 && digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif(dot_count == 1 && digit_count > 3)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp2mvkc1ay.d(18): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2mvkc1ay.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(c >= '0' && c <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t\tif(digit_count > 3)\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1665517528,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoyydpjnw.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpoyydpjnw.__unittest_L32_C1() [0x427ace]\n??:? void tmpoyydpjnw.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tbool is_decimal = false;\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num) \n\t{\n\t\tif(c == '.') \n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if(c >= '0' && c <= '9') \n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t}\n\t\n\tif(dot_count == 1 && digit_count == 2) \n\t{\n\t\tis_decimal = true;\n\t}\n\t\n\treturn is_decimal;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphnfn6ol3.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmphnfn6ol3.__unittest_L32_C1() [0x427ac2]\n??:? void tmphnfn6ol3.__modtest() [0x427b7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tif (num.length == 0) \n\t\treturn false;\n\t\n\tint dot = 0;\n\tfor (int i = 0; i < num.length; i++) \n\t{\n\t\tif (num[i] == '.') \n\t\t{\n\t\t\tdot++;\n\t\t\tif (dot > 1) \n\t\t\t\treturn false;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif (num[i] < '0' || num[i] > '9') \n\t\t\treturn false;\n\t}\n\t\n\tif (dot == 0) \n\t\treturn false;\n\t\n\tint dot_pos = num.find('.');\n\tif (dot_pos == num.length - 1) \n\t\treturn false;\n\t\n\tif (dot_pos == num.length - 3) \n\t\treturn true;\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmp18knp5jq.d(30): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp18knp5jq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tauto dot = num.find('.');\n\tif (dot == -1)\n\t\treturn false;\n\t\n\tauto dot_count = num.count('.');\n\tif (dot_count > 1)\n\t\treturn false;\n\t\n\tauto dot_pos = num.find('.');\n\tif (dot_pos == 0 || dot_pos == num.length - 1)\n\t\treturn false;\n\t\n\tauto after_dot = num.length - dot_pos - 1;\n\tif (after_dot > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpvs6e3r_4.d(9): Error: no property `find` for type `string`\n/tmp/tmpvs6e3r_4.d(13): Error: no property `count` for type `string`\n/tmp/tmpvs6e3r_4.d(17): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvs6e3r_4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\tif(digit_count > 2)\n\t\treturn false;\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpo6uxe9rw.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo6uxe9rw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\t\n\tforeach(char c; num)\n\t{\n\t\tif(c == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t\tif(dot_count > 1)\n\t\t\t\treturn false;\n\t\t}\n\t\telse if(!isdigit(c))\n\t\t\treturn false;\n\t\telse\n\t\t\tdigit_count++;\n\t}\n\t\n\treturn digit_count > 2;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "/tmp/tmpeb2xrv1a.d(20): Error: undefined identifier `isdigit`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeb2xrv1a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to check whether a given string is a decimal number with a precision of 2.\n\t\n*/\nbool is_decimal(string num) \n{\n\tint dot_count = 0;\n\tint digit_count = 0;\n\tfor (int i = 0; i < num.length; i++)\n\t{\n\t\tif (num[i] == '.')\n\t\t{\n\t\t\tdot_count++;\n\t\t}\n\t\telse if (num[i] >= '0' && num[i] <= '9')\n\t\t{\n\t\t\tdigit_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (dot_count > 1)\n\t{\n\t\treturn false;\n\t}\n\t\n\tif (dot_count == 0)\n\t{\n\t\treturn true;\n\t}\n\t\n\tif (digit_count > 2)\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\nunittest\n{\n    alias candidate = is_decimal;\n\n    assert(candidate(\"123.11\") == true);\n    assert(candidate(\"e666.86\") == false);\n    assert(candidate(\"3.124587\") == false);\n    assert(candidate(\"1.11\") == true);\n    assert(candidate(\"1.1.11\") == false);\n}\nvoid main(){}",
      "timestamp": 1666122996,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9xiue_nq.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427e5d]\n??:? void tmp9xiue_nq.__unittest_L44_C1() [0x427b26]\n??:? void tmp9xiue_nq.__modtest() [0x427be0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa61]\n??:? runModuleUnitTests [0x42b9cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428320]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
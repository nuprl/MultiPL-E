{
  "name": "mbpp_245_max_sum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\n\t\n*/\nlong max_sum(long[] arr) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = max_sum;\n\n    assert(candidate([1L, 15L, 51L, 45L, 33L, 100L, 12L, 18L, 9L]) == 194L);\n    assert(candidate([80L, 60L, 30L, 40L, 20L, 10L]) == 210L);\n    assert(candidate([2L, 3L, 14L, 16L, 21L, 23L, 29L, 30L]) == 138L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (long i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor (long i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0]+dec[1];\n\t\n\tfor (long i = 1; i < arr.length-1; i++) \n\t{\n\t\tmax = max(max, inc[i]+dec[i+1]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i; 1..arr.length)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tforeach(i; arr.length-2..0)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0..arr.length-1)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], arr[i] + inc[i-1]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], arr[i] + dec[i+1]);\n\t}\n\t\n\tlong max = inc[0] + dec[1];\n\tfor(int i = 1; i < arr.length-1; i++)\n\t{\n\t\tif(inc[i] + dec[i+1] > max)\n\t\t\tmax = inc[i] + dec[i+1];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (long i = 1; i < arr.length; i++) \n\t{\n\t\tfor (long j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (long j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (long i = 0; i < arr.length; i++) \n\t{\n\t\tif (max < inc[i] + dec[i] - arr[i]) \n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\tlong max = inc[0] + dec[1];\n\tfor (int i = 1; i < arr.length-1; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i+1]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) {\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) {\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) {\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_inc = new long[arr.length];\n\tlong[] max_dec = new long[arr.length];\n\t\n\tmax_inc[0] = arr[0];\n\tmax_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tmax_inc[i] = max(arr[i], max_inc[i-1]+arr[i]);\n\t}\n\t\n\tfor(long i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_dec[i] = max(arr[i], max_dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max_sum = max_inc[0] + max_dec[0] - arr[0];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_inc[i] + max_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (long i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i=1; i<arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor(int i=arr.length-2; i>=0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i=1; i<arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tif (max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor (long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor (long j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor (long i = 1; i < arr.length; i++)\n\t{\n\t\tif (max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n    long[] inc = new long[arr.length];\n    long[] dec = new long[arr.length];\n    long max = 0;\n    for (int i = 0; i < arr.length; i++) {\n        inc[i] = arr[i];\n        for (int j = 0; j < i; j++) {\n            if (arr[j] < arr[i]) {\n                inc[i] = max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n    for (int i = arr.length - 1; i >= 0; i--) {\n        dec[i] = arr[i];\n        for (int j = arr.length - 1; j > i; j--) {\n            if (arr[j] < arr[i]) {\n                dec[i] = max(dec[i], dec[j] + arr[i]);\n            }\n        }\n        max = max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i=1; i<arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tfor(int i=arr.length-2; i>=0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i=0; i<arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tif(i == 0)\n\t\t\tcontinue;\n\t\t\n\t\tinc[i] = max(inc[i-1] + v, v);\n\t}\n\t\n\tforeach_reverse(i, v; arr)\n\t{\n\t\tif(i == arr.length-1)\n\t\t\tcontinue;\n\t\t\n\t\tdec[i] = max(dec[i+1] + v, v);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i, v; arr)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - v);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tleft[i] = max(arr[i], left[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tright[i] = max(arr[i], right[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = left[0] + right[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\t// find the longest increasing subsequence\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// find the longest decreasing subsequence\n\tfor (int i = arr.length - 1; i >= 0; i--)\n\t{\n\t\tlds[i] = arr[i];\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// find the maximum sum\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tlis[i] = v;\n\t\tlds[i] = v;\n\t}\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(arr[j] < arr[i] && lis[i] < lis[j] + arr[i])\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t}\n\t}\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tforeach(j; i .. arr.length)\n\t\t{\n\t\t\tif(arr[j] < arr[i] && lds[i] < lds[j] + arr[i])\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tforeach(i, v; arr)\n\t{\n\t\tif(max < lis[i] + lds[i] - arr[i])\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tleft[i] = max(arr[i], left[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tright[i] = max(arr[i], right[i+1] + arr[i]);\n\t}\n\t\n\tlong max = left[0] + right[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i=1; i<arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor(int i=arr.length-2; i>=0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i=0; i<arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j]) \n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j]) \n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor (long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor (long j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor (long j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (long i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i;1..arr.length)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tforeach(i;arr.length-2..0)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i;0..arr.length)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[1];\n\tfor(int i = 1; i < arr.length-1; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i+1]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tleft[i] = max(left[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tright[i] = max(right[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = 0;\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1], arr[i]);\n\t}\n\t\n\tfor(long i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(long i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tinc[i] = max(inc[i - 1] + v, v);\n\t}\n\t\n\tforeach_reverse(i, v; arr)\n\t{\n\t\tdec[i] = max(dec[i + 1] + v, v);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length - 1)\n\t{\n\t\tmax = max(max, inc[i] + dec[i + 1]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tinc[i] = max(inc[i-1], v);\n\t}\n\t\n\tforeach_reverse(i, v; arr)\n\t{\n\t\tdec[i] = max(dec[i+1], v);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0 .. arr.length)\n\t{\n\t\tmax = max(max, inc[i] + dec[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[j] < arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[j] < arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\tlong max_sum = 0;\n\t\n\tmax_sum_inc[0] = arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], arr[i] + max_sum_inc[i-1]);\n\t}\n\t\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], arr[i] + max_sum_dec[i+1]);\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i=1;i<arr.length;i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i],arr[i]);\n\t}\n\tfor(int i=arr.length-2;i>=0;i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i],arr[i]);\n\t}\n\tlong max = inc[0]+dec[0]-arr[0];\n\tfor(int i=1;i<arr.length;i++)\n\t{\n\t\tif(inc[i]+dec[i]-arr[i]>max)\n\t\t{\n\t\t\tmax = inc[i]+dec[i]-arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tforeach(i; 0..arr.length)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tforeach(i; 1..arr.length)\n\t{\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t}\n\t}\n\t\n\tforeach(i; arr.length-2..0)\n\t{\n\t\tforeach(j; arr.length-1..i)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tforeach(i; 1..arr.length)\n\t{\n\t\tif(max < lis[i] + lds[i] - arr[i])\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\tlong max = inc[0]+dec[0]-arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t\t\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[j] < arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t\tif (arr[j] > arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) {\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) {\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) {\n\t\tfor (int j = arr.length - 1; j > i; j--) {\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) {\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i; 1..arr.length)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tforeach(i; arr.length-2..0)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0..arr.length-1)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < lis[i] + lds[i] - arr[i])\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tleft[i] = max(left[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tright[i] = max(right[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor (long i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\tfor (long i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor (long i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax_sum_inc[i] = arr[i];\n\t\tmax_sum_dec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i]) \n\t\t\t{\n\t\t\t\tmax_sum_inc[i] = max_sum_inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i]) \n\t\t\t{\n\t\t\t\tmax_sum_dec[i] = max_sum_dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max_sum = max_sum_dec[0] + max_sum_inc[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (max_sum < max_sum_dec[i] + max_sum_inc[i] - arr[i]) \n\t\t{\n\t\t\tmax_sum = max_sum_dec[i] + max_sum_inc[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(long i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = arr[i];\n\t\tmax_sum_dec[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tmax_sum_inc[i] = max_sum_inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tmax_sum_dec[i] = max_sum_dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < max_sum_inc[i] + max_sum_dec[i] - arr[i])\n\t\t{\n\t\t\tmax = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tif (arr.length == 0) \n\t{\n\t\treturn 0;\n\t}\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(inc[i - 1] + arr[i], arr[i]);\n\t}\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(dec[i + 1] + arr[i], arr[i]);\n\t}\n\tlong max = inc[0] + dec[1];\n\tfor (int i = 1; i < arr.length - 1; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i + 1]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i,a; arr[1..$]) \n\t{\n\t\tinc[i] = max(inc[i-1]+a, a);\n\t}\n\t\n\tforeach(i,a; arr[$-1..0]) \n\t{\n\t\tdec[i] = max(dec[i+1]+a, a);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0..arr.length-1) \n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = max(lis[i], lis[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = max(lds[i], lds[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (inc[i] + dec[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < lis[i] + lds[i] - arr[i])\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n    long[] max_sum_inc = new long[arr.length];\n    long[] max_sum_dec = new long[arr.length];\n    long[] max_sum_bitonic = new long[arr.length];\n    long max_sum = 0;\n    for (int i = 0; i < arr.length; i++) {\n        max_sum_inc[i] = arr[i];\n        max_sum_dec[i] = arr[i];\n        max_sum_bitonic[i] = arr[i];\n    }\n    for (int i = 1; i < arr.length; i++) {\n        for (int j = 0; j < i; j++) {\n            if (arr[i] > arr[j]) {\n                max_sum_inc[i] = max(max_sum_inc[i], max_sum_inc[j] + arr[i]);\n            }\n        }\n    }\n    for (int i = arr.length - 2; i >= 0; i--) {\n        for (int j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j]) {\n                max_sum_dec[i] = max(max_sum_dec[i], max_sum_dec[j] + arr[i]);\n            }\n        }\n    }\n    for (int i = 0; i < arr.length; i++) {\n        max_sum_bitonic[i] = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n    }\n    for (int i = 0; i < arr.length; i++) {\n        max_sum = max(max_sum, max_sum_bitonic[i]);\n    }\n    return max_sum;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\tlong max_sum = arr[0];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t\tmax_sum_dec[arr.length-1-i] = max(arr[arr.length-1-i], max_sum_dec[arr.length-i] + arr[arr.length-1-i]);\n\t}\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t\tif (arr[i] < arr[j])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max)\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = arr[i];\n\t\tmax_sum_dec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tmax_sum_inc[i] = max_sum_inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tmax_sum_dec[i] = max_sum_dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tif (max < max_sum_inc[i] + max_sum_dec[i] - arr[i])\n\t\t{\n\t\t\tmax = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tleft[i] = max(left[i - 1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tright[i] = max(right[i + 1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax_sum = max(max_sum, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[j] < arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = arr[i];\n\t\tfor (int j = arr.length-1; j > i; j--) \n\t\t{\n\t\t\tif (arr[j] < arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i - 1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i + 1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] dp = new long[arr.length];\n\tlong[] dp2 = new long[arr.length];\n\t\n\tdp[0] = arr[0];\n\tdp2[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tdp[i] = max(arr[i], dp[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdp2[i] = max(arr[i], dp2[i+1] + arr[i]);\n\t}\n\t\n\tlong max = dp[0] + dp2[1];\n\tfor(int i = 1; i < arr.length-1; i++)\n\t{\n\t\tmax = max(max, dp[i] + dp2[i+1]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length - 1] = arr[arr.length - 1];\n\tfor (long i = 1; i < arr.length; i++)\n\t\tinc[cast(int)i] = max(inc[cast(int)i - 1] + arr[cast(int)i], arr[cast(int)i]);\n\tfor (long i = arr.length - 2; i >= 0; i--)\n\t\tdec[cast(int)i] = max(dec[cast(int)i + 1] + arr[cast(int)i], arr[cast(int)i]);\n\tlong max = inc[0] + dec[1];\n\tfor (long i = 1; i < arr.length - 1; i++)\n\t\tmax = max(max, inc[cast(int)i] + dec[cast(int)i + 1]);\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tinc[i] = max(inc[i-1]+v, v);\n\t\tdec[arr.length-i-1] = max(dec[arr.length-i]+v, v);\n\t}\n\t\n\tlong max = inc[0] + dec[1];\n\t\n\tforeach(i, v; inc)\n\t{\n\t\tmax = max(max, inc[i] + dec[i+1]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tleft[i] = max(left[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tright[i] = max(right[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\tlong max = inc[0]+dec[0]-arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tinc[i] = max(inc[i-1]+v, v);\n\t}\n\t\n\tforeach_reverse(i, v; arr)\n\t{\n\t\tdec[i] = max(dec[i+1]+v, v);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; arr)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\t//LIS\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//LDS\n\tfor (int i = arr.length - 1; i >= 0; i--) \n\t{\n\t\tlds[i] = arr[i];\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] dp_inc = new long[arr.length];\n\tlong[] dp_dec = new long[arr.length];\n\t\n\tdp_inc[0] = arr[0];\n\tdp_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i=1; i<arr.length; i++)\n\t{\n\t\tdp_inc[i] = arr[i];\n\t\tfor (int j=0; j<i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tdp_inc[i] = max(dp_inc[i], dp_inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i=arr.length-2; i>=0; i--)\n\t{\n\t\tdp_dec[i] = arr[i];\n\t\tfor (int j=arr.length-1; j>i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j])\n\t\t\t{\n\t\t\t\tdp_dec[i] = max(dp_dec[i], dp_dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max_sum = 0;\n\tfor (int i=0; i<arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, dp_inc[i] + dp_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) {\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) {\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) {\n\t\tfor (int j = arr.length - 1; j > i; j--) {\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) {\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) {\n\t\tif (lis[i] + lds[i] - arr[i] > max) {\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tlis[i] = v;\n\t\tlds[i] = v;\n\t}\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tforeach(j; 0 .. i)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = max(lis[i], lis[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i, v; arr)\n\t{\n\t\tforeach(j; i .. arr.length)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = max(lds[i], lds[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tforeach(i, v; arr)\n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i=1;i<arr.length;i++)\n\t{\n\t\tinc[i] = max(arr[i],inc[i-1]+arr[i]);\n\t}\n\tfor(int i=arr.length-2;i>=0;i--)\n\t{\n\t\tdec[i] = max(arr[i],dec[i+1]+arr[i]);\n\t}\n\tlong max = inc[0]+dec[0]-arr[0];\n\tfor(int i=1;i<arr.length;i++)\n\t{\n\t\tif(max<inc[i]+dec[i]-arr[i])\n\t\t\tmax = inc[i]+dec[i]-arr[i];\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i,v; arr[1..$])\n\t\tinc[i] = max(inc[i-1] + v, v);\n\t\n\tforeach_reverse(i,v; arr[0..$-1])\n\t\tdec[i] = max(dec[i+1] + v, v);\n\t\n\tlong max = 0;\n\tforeach(i,v; arr)\n\t\tmax = max(max, inc[i] + dec[i] - v);\n\t\n\treturn max;\n}",
    "{\n\tlong[] dp = new long[arr.length];\n\tlong[] dp2 = new long[arr.length];\n\tdp[0] = arr[0];\n\tdp2[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++) \n\t{\n\t\tdp[i] = max(dp[i-1]+arr[i], arr[i]);\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdp2[i] = max(dp2[i+1]+arr[i], arr[i]);\n\t}\n\tlong max = dp[0]+dp2[1];\n\tfor(int i = 1; i < arr.length-1; i++) \n\t{\n\t\tmax = max(max, dp[i]+dp2[i+1]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax_sum_inc[i] = arr[i];\n\t\tmax_sum_dec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i]) \n\t\t\t{\n\t\t\t\tmax_sum_inc[i] = max_sum_inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i]) \n\t\t\t{\n\t\t\t\tmax_sum_dec[i] = max_sum_dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i]) \n\t\t{\n\t\t\tmax_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tleft[i] = max(arr[i], arr[i]+left[i-1]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tright[i] = max(arr[i], arr[i]+right[i+1]);\n\t}\n\t\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, left[i]+right[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) \n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) \n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tif (max < inc[i] + dec[i] - arr[i]) \n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = arr[0];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t\tmax = max(max, inc[i]);\n\t}\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t\tmax = max(max, dec[i]);\n\t}\n\tfor (int i = 1; i < arr.length-1; i++) \n\t{\n\t\tmax = max(max, inc[i-1] + dec[i+1]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(inc[i] + dec[i] - arr[i] > max)\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tforeach(i, e; arr)\n\t{\n\t\tinc[i] = e;\n\t\tdec[i] = e;\n\t}\n\t\n\tforeach(i; 1..arr.length)\n\t{\n\t\tforeach(j; 0..i)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t\t\n\t\t\tif(arr[j] > arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tforeach(i, e; inc)\n\t{\n\t\tif(e + dec[i] > max)\n\t\t{\n\t\t\tmax = e + dec[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n    long[] inc = new long[arr.length];\n    long[] dec = new long[arr.length];\n    long max = 0;\n    for (int i = 0; i < arr.length; i++) \n    {\n        inc[i] = arr[i];\n        for (int j = 0; j < i; j++) \n        {\n            if (arr[j] < arr[i]) \n            {\n                inc[i] = max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n    for (int i = arr.length - 1; i >= 0; i--) \n    {\n        dec[i] = arr[i];\n        for (int j = arr.length - 1; j > i; j--) \n        {\n            if (arr[j] < arr[i]) \n            {\n                dec[i] = max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n    for (int i = 0; i < arr.length; i++) \n    {\n        max = max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], arr[i] + inc[i-1]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], arr[i] + dec[i+1]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(long j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(long i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(long j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] sum_inc = new long[arr.length];\n\tlong[] sum_dec = new long[arr.length];\n\t\n\tsum_inc[0] = arr[0];\n\tsum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tsum_inc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && sum_inc[i] < sum_inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tsum_inc[i] = sum_inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tsum_dec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && sum_dec[i] < sum_dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tsum_dec[i] = sum_dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tif(max < sum_inc[i] + sum_dec[i] - arr[i])\n\t\t{\n\t\t\tmax = sum_inc[i] + sum_dec[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j]+arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j]+arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(inc[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(long i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(dec[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\tlong max_sum = arr[0];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t\tmax_sum_dec[arr.length-1-i] = max(arr[arr.length-1-i], max_sum_dec[arr.length-i] + arr[arr.length-1-i]);\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(lis[i] + lds[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tleft[i] = max(left[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length-2; i >= 0; i--) \n\t{\n\t\tright[i] = max(right[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = max(arr[i], arr[i] + inc[i-1]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = max(arr[i], arr[i] + dec[i+1]);\n\t}\n\t\n\tlong max = -1;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = 0;\n\tfor(int i = 0; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tmax_sum_dec[arr.length - 1] = arr[arr.length - 1];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i]);\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tmax_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i; 1..arr.length)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tforeach(i; arr.length-2..0)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] left = new long[arr.length];\n\tlong[] right = new long[arr.length];\n\t\n\tleft[0] = arr[0];\n\tright[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tleft[i] = max(left[i-1] + arr[i], arr[i]);\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tright[i] = max(right[i+1] + arr[i], arr[i]);\n\t}\n\t\n\tlong max = left[0] + right[0] - arr[0];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, left[i] + right[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) \n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--) \n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i]) \n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max) \n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[j] < arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tinc[i] = arr[i];\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && inc[i] < inc[j] + arr[i])\n\t\t\t{\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tdec[i] = arr[i];\n\t\tfor(int j = arr.length-1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && dec[i] < dec[j] + arr[i])\n\t\t\t{\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = inc[0] + dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < inc[i] + dec[i] - arr[i])\n\t\t{\n\t\t\tmax = inc[i] + dec[i] - arr[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor(long i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tfor(long j = 0; j < i; j++)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(long i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor(long j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif(arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\t\n\tfor(long i = 1; i < arr.length; i++)\n\t{\n\t\tif(max < lis[i] + lds[i] - arr[i])\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i; 1..arr.length)\n\t{\n\t\tinc[i] = max(arr[i], inc[i-1]+arr[i]);\n\t}\n\t\n\tforeach(i; arr.length-2..0)\n\t{\n\t\tdec[i] = max(arr[i], dec[i+1]+arr[i]);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0..arr.length)\n\t{\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) \n\t{\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j]) \n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t\tif (arr[i] < arr[j]) \n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) \n\t{\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t\tfor (int j = 0; j < i; j++) \n\t\t{\n\t\t\tif (arr[i] > arr[j]) \n\t\t\t{\n\t\t\t\tinc[i] = max(inc[i], inc[j] + arr[i]);\n\t\t\t}\n\t\t\tif (arr[i] < arr[j]) \n\t\t\t{\n\t\t\t\tdec[i] = max(dec[i], dec[j] + arr[i]);\n\t\t\t}\n\t\t}\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\treturn max;\n}",
    "{\n\tlong[] max_sum_inc = new long[arr.length];\n\tlong[] max_sum_dec = new long[arr.length];\n\t\n\tmax_sum_inc[0] = arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum_inc[i] = max(arr[i], max_sum_inc[i-1] + arr[i]);\n\t}\n\t\n\tmax_sum_dec[arr.length-1] = arr[arr.length-1];\n\tfor(int i = arr.length-2; i >= 0; i--)\n\t{\n\t\tmax_sum_dec[i] = max(arr[i], max_sum_dec[i+1] + arr[i]);\n\t}\n\t\n\tlong max_sum = max_sum_inc[0] + max_sum_dec[0] - arr[0];\n\tfor(int i = 1; i < arr.length; i++)\n\t{\n\t\tmax_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i]);\n\t}\n\t\n\treturn max_sum;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tforeach(i, v; arr) {\n\t\tlis[i] = v;\n\t\tlds[i] = v;\n\t}\n\t\n\tforeach(i; 1..arr.length) {\n\t\tforeach(j; 0..i) {\n\t\t\tif(arr[i] > arr[j] && lis[i] < lis[j] + arr[i]) {\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 1..arr.length) {\n\t\tforeach(j; 0..i) {\n\t\t\tif(arr[i] < arr[j] && lds[i] < lds[j] + arr[i]) {\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tforeach(i; 0..arr.length) {\n\t\tmax = max(max, lis[i] + lds[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] lis = new long[arr.length];\n\tlong[] lds = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++)\n\t{\n\t\tlis[i] = arr[i];\n\t\tlds[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tfor (int j = 0; j < i; j++)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lis[i] < lis[j] + arr[i])\n\t\t\t{\n\t\t\t\tlis[i] = lis[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--)\n\t{\n\t\tfor (int j = arr.length - 1; j > i; j--)\n\t\t{\n\t\t\tif (arr[i] > arr[j] && lds[i] < lds[j] + arr[i])\n\t\t\t{\n\t\t\t\tlds[i] = lds[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = lis[0] + lds[0] - arr[0];\n\tfor (int i = 1; i < arr.length; i++)\n\t{\n\t\tif (lis[i] + lds[i] - arr[i] > max)\n\t\t{\n\t\t\tmax = lis[i] + lds[i] - arr[i];\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tinc[i] = arr[i];\n\t\tdec[i] = arr[i];\n\t}\n\t\n\tfor (int i = 1; i < arr.length; i++) {\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) {\n\t\t\t\tinc[i] = inc[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = arr.length - 2; i >= 0; i--) {\n\t\tfor (int j = arr.length - 1; j > i; j--) {\n\t\t\tif (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) {\n\t\t\t\tdec[i] = dec[j] + arr[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++) {\n\t\tmax = max(max, inc[i] + dec[i] - arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tforeach(i,v;arr)\n\t{\n\t\tinc[i] = max(inc[i-1]+v,v);\n\t}\n\t\n\tforeach_reverse(i,v;arr)\n\t{\n\t\tdec[i] = max(dec[i+1]+v,v);\n\t}\n\t\n\tlong max = 0;\n\tforeach(i;arr)\n\t{\n\t\tmax = max(max,inc[i]+dec[i]-arr[i]);\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong[] inc = new long[arr.length];\n\tlong[] dec = new long[arr.length];\n\t\n\tinc[0] = arr[0];\n\tdec[arr.length-1] = arr[arr.length-1];\n\t\n\tfor (int i = 1; i < arr.length; i++)\n\t\tinc[i] = max(inc[i-1]+arr[i], arr[i]);\n\t\n\tfor (int i = arr.length-2; i >= 0; i--)\n\t\tdec[i] = max(dec[i+1]+arr[i], arr[i]);\n\t\n\tlong max = 0;\n\tfor (int i = 0; i < arr.length; i++)\n\t\tmax = max(max, inc[i]+dec[i]-arr[i]);\n\t\n\treturn max;\n}"
  ]
}
{
  "name": "mbpp_637_noprofit_noloss",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n\tWrite a function to check whether the given amount has no profit and no loss\n\t\n*/\nbool noprofit_noloss(long actual_cost, long sale_amount) \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
  "prompt_terminology": "reworded",
  "tests": "unittest\n{\n    alias candidate = noprofit_noloss;\n\n    assert(candidate(1500L, 1200L) == false);\n    assert(candidate(100L, 100L) == true);\n    assert(candidate(2000L, 5000L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn (actual_cost == sale_amount);\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}",
    "{\n\treturn actual_cost == sale_amount;\n}"
  ]
}
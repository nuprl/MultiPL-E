language: php
name: HumanEval_48_is_palindrome
results:
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = trim($text);\n\
    \    return $text == strrev($text);\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\,\\!\\?]+/', '', $text);\n    return $text == strrev($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = trim($text);\n\
    \    return $text == strrev($text);\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = trim($text);\n\
    \    return $text == strrev($text);\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\!\\?]+/', '', $text);\n    return $text == strrev($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 255
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\,\\!\\?]+/', '', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n\
    \    $text = trim($text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n \
    \   $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxbnl5cjs.php on line 46

    '
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\,\\!\\?\\-]/', '', $text);\n    return $text == strrev($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = trim($text);\n\
    \    return $text == strrev($text);\n}\nfunction candidate(...$args) {\n    return\
    \ is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\,\\?\\!\\:\\;\\$\\%\\&\\(\\)\\-\\_\\=\\+\\@\\#\\$\\*\\+\\,\\;\\/\\-\\<\\\
    >\\=\\/\\?]/i', '', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n\
    \    $text = trim($text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = trim($text);\n\
    \    return $text == strrev($text);\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 255
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\,\\?\\'\\!\\:\\;\\-]/i', '', $text);\n    $text = preg_replace('/\\s+/',\
    \ ' ', $text);\n    $text = trim($text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text\
    \ = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\s+/', '\
    \ ', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    $\nfunction candidate(...$args) {\n    return is_palindrome(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdvtzp9bi.php on line 47

    '
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return strrev($text) === $text;\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 255
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z A-Z 0-9\
    \ \\.\\,\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\. ]+/', ' ', $text);\n\
    \    $text = preg_replace('/[\\, ]+/', ' ', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_replace('/[\\!\\?]+/', '', $text);\n \
    \   $text = preg_replace('/[\\!\\?]+/', '', $text);\n    $text = preg_replace('/[\\\
    !\\?]+/', '', $text);\n    $text = preg_\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4i6md87q.php on line 37

    '
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n    $text = trim($text);\n\
    \    return $text == strrev($text);\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    return (strrev($text) === $text);\n}\nfunction candidate(...$args) {\n\
    \    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaa\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    zbcd\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyx\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywyz\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xywzx\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730486
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z ]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574
- exit_code: 0
  program: "<?php\n// Checks if given string is a palindrome\nfunction is_palindrome($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z 0-9]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_palindrome(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"aba\") !== true) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"aaaaa\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730574

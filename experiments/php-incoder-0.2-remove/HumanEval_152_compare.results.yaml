language: php
name: HumanEval_152_compare
results:
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $correct[$key] = 0;\n        } else {\n            $correct[$key] =\
    \ abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n\n$game =\
    \ array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n  \
    \  5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpto4w14gs.php on line 101

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return\
    \ $result;\n}\n$game = array(\n    array(1,2,3,4,5,6,7,8,9,10),\n    array(1,2,3,4,5,6,7,8,9,10)\n\
    );\n$guess = array(\n    array(2,3,4,5,6,7,8,9,10),\n    array(2,3,4,5,6,7,8,9,10)\n\
    );\n$result = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpvbks42ix.php:15\n\
    Stack trace:\n#0 /tmp/tmpvbks42ix.php(27): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpvbks42ix.php on line 15\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n$game = array(\n    0 => 10,\n    1\
    \ => 5,\n    2 => 5,\n    3 => 10,\n    4 => 5,\n    5 => 5,\n    6 => 5,\n  \
    \  7 => 5,\n    8 => 5,\n    9 => 5,\n    10 => 5,\n    11 => 5,\n    12 => 5,\n\
    \    13 => 5,\n    14 => 5,\n    15 => 5,\n    16 => 5,\n    17 => 5,\n    18\
    \ => 5,\n    19 => 5,\n    20 => 5,\n    21 => 5,\n    22 => 5,\n    23 => 5,\n\
    \    24 => 5,\n    25 => 5,\n    26 => 5,\n    27 => 5,\n    28 => 5,\n    29\
    \ => 5,\n    30 => 5,\n    31 => 5,\n    32 => 5,\n    33 => 5,\n    34 => 5,\n\
    \    35 => 5,\n    36 => 5,\n    37 => 5,\n    38 => 5,\n    39 => 5,\n    40\
    \ => 5,\n    41 => 5,\n    42 => 5,\n    43 => 5,\n    44 => 5,\n    45 => 5,\n\
    \    46 => 5,\n    47 => 5,\n    48 => 5,\n    49 => 5,\n    50 => 5,\n    51\
    \ => 5,\n    52 => 5,\n    53 => 5,\n    54 => 5,\n    55 => 5,\n    56 => 5,\n\
    \    57 => 5,\n    58 => 5,\n    59 => 5,\n    60 => 5,\n    61 => 5,\n    62\
    \ => 5,\n    63 => 5,\n    64 => 5,\n    65 => 5,\n    66 => 5,\n    67 => 5,\n\
    \    68 => 5,\n    69 => 5,\n    70 => 5,\n    71 => 5,\n    72 => 5,\n    73\
    \ => 5,\n    74 => 5,\n    75 => 5,\n    76 => 5,\n    77 => 5,\n    78 => 5,\n\
    \    79 => 5,\n    80 => 5,\n    81 => 5,\n    82 => 5,\n    83 => 5,\n    84\
    \ => 5,\n    85 => 5,\n    86 => \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvl4o2dnw.php on line 105

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 =>\
    \ 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n   \
    \ 11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16\
    \ => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 =>\
    \ 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n\
    \    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n \
    \   32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n  \
    \  37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n   \
    \ 42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47\
    \ => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 =>\
    \ 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n\
    \    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n \
    \   63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n  \
    \  68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n   \
    \ 73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppymarfhl.php on line 101

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 1,\n    2 => 1,\n    3 => 1,\n    4 => 1,\n    5 => 1,\n    6 => 1,\n \
    \   7 => 1,\n    8 => 1,\n    9 => 1,\n    10 => 1,\n    11 => 1,\n    12 => 1,\n\
    \    13 => 1,\n    14 => 1,\n    15 => 1,\n    16 => 1,\n    17 => 1,\n    18\
    \ => 1,\n    19 => 1,\n    20 => 1,\n    21 => 1,\n    22 => 1,\n    23 => 1,\n\
    \    24 => 1,\n    25 => 1,\n    26 => 1,\n    27 => 1,\n    28 => 1,\n    29\
    \ => 1,\n    30 => 1,\n    31 => 1,\n    32 => 1,\n    33 => 1,\n    34 => 1,\n\
    \    35 => 1,\n    36 => 1,\n    37 => 1,\n    38 => 1,\n    39 => 1,\n    40\
    \ => 1,\n    41 => 1,\n    42 => 1,\n    43 => 1,\n    44 => 1,\n    45 => 1,\n\
    \    46 => 1,\n    47 => 1,\n    48 => 1,\n    49 => 1,\n    50 => 1,\n    51\
    \ => 1,\n    52 => 1,\n    53 => 1,\n    54 => 1,\n    55 => 1,\n    56 => 1,\n\
    \    57 => 1,\n    58 => 1,\n    59 => 1,\n    60 => 1,\n    61 => 1,\n    62\
    \ => 1,\n    63 => 1,\n    64 => 1,\n    65 => 1,\n    66 => 1,\n    67 => 1,\n\
    \    68 => 1,\n    69 => 1,\n    70 => 1,\n    71 => 1,\n    72 => 1,\n    73\
    \ => 1,\n    74 => 1,\n    75 => 1,\n    76 => 1,\n    77 => 1,\n    78 => 1,\n\
    \    79 => 1,\n    80 => 1,\n    81 => 1,\n    82 => 1,\n    83 => 1,\n    84\
    \ => 1,\n    85 => 1,\n    86 => \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvhmp8ulk.php on line 106

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 100,\n    2\
    \ => 200,\n    3 => 300,\n    4 => 400,\n    5 => 500,\n    6 => 600,\n    7 =>\
    \ 700,\n    8 => 800,\n    9 => 900,\n];\n\n$guess = [\n    1 => 100,\n    2 =>\
    \ 200,\n    3 => 300,\n    4 => 400,\n    5 => 500,\n    6 => 600,\n    7 => 700,\n\
    \    8 => 800,\n    9 => 900,\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmplqqvqyxt.php:13\n\
    Stack trace:\n#0 /tmp/tmplqqvqyxt.php(42): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmplqqvqyxt.php on line 13\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 10,\n  \
    \  1 => 5,\n    2 => 7,\n    3 => 3,\n    4 => 8,\n    5 => 1,\n    6 => 2,\n\
    \    7 => 4,\n    8 => 9,\n    9 => 6,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n\
    \    80 \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqpzv54s9.php on line 100

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3\
    \ => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    1 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    3 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    4 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    5 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    6 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    7 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfx6wlxx9.php on line 118

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess[$index] - $score);\n        }\n    }\n    return $result;\n}\n\
    $game = array(\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6i6ob5ig.php on line 78

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = 0;\n\
    \    foreach ($game as $key => $value) {\n        if ($guess == $value) {\n  \
    \          $correct++;\n        }\n    }\n    return $correct;\n}\n\n$game = [\n\
    \    1 => 1,\n    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n\
    \    7 => 7,\n    8 => 8,\n    9 => 9,\n    10 => 10,\n    11 => 11,\n    12 =>\
    \ 12,\n    13 => 13,\n    14 => 14,\n    15 => 15,\n    16 => 16,\n    17 => 17,\n\
    \    18 => 18,\n    19 => 19,\n    20 => 20,\n    21 => 21,\n    22 => 22,\n \
    \   23 => 23,\n    24 => 24,\n    25 => 25,\n    26 => 26,\n    27 => 27,\n  \
    \  28 => 28,\n    29 => 29,\n    30 => 30,\n    31 => 31,\n    32 => 32,\n   \
    \ 33 => 33,\n    34 => 34,\n    35 => 35,\n    36 => 36,\n    37 => 37,\n    38\
    \ => 38,\n    39 => 39,\n    40 => 40,\n    41 => 41,\n    42 => 42,\n    43 =>\
    \ 43,\n    44 => 44,\n    45 => 45,\n    46 => 46,\n    47 => 47,\n    48 => 48,\n\
    \    49 => 49,\n    50 => 50,\n    51 => 51,\n    52 => 52,\n    53 => 53,\n \
    \   54 => 54,\n    55 => 55,\n    56 => 56,\n    57 => 57,\n    58 => 58,\n  \
    \  59 => 59,\n    60 => 60,\n    61 => 61,\n    62 => 62,\n    63 => 63,\n   \
    \ 64 => 64,\n    65 => 65,\n    66 => 66,\n    67 => 67,\n    68 => 68,\n    69\
    \ => 69,\n    70 => 70,\n    71 => 71,\n    72 => 72,\n    73 => 73,\n    74 =>\
    \ 74,\n    75 => 75,\n    76 => 76,\n    77 => 77,\n    78 => 78,\n    79 => 79,\n\
    \    80 => 80,\n    81 => \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpprmsbitp.php on line 102

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        if($game[$i] == $guess[$i])\
    \ {\n            $correct[$i] = 0;\n        } else {\n            $correct[$i]\
    \ = abs($guess[$i] - $game[$i]);\n        }\n    }\n    return $correct;\n}\n\n\
    $game = array(\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4ttb9me7.php on line 72

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 10,\n    1 =>\
    \ 20,\n    2 => 30,\n    3 => 40,\n    4 => 50,\n    5 => 60,\n    6 => 70,\n\
    \    7 => 80,\n    8 => 90,\n    9 => 100\n];\n$guess = [\n    0 => 10,\n    1\
    \ => 20,\n    2 => 30,\n    3 => 40,\n    4 => 50,\n    5 => 60,\n    6 => 70,\n\
    \    7 => 80,\n    8 => 90,\n    9 => 100\n];\n$result = compare($game, $guess);\n\
    var_dump($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpi8v36miu.php:13\n\
    Stack trace:\n#0 /tmp/tmpi8v36miu.php(41): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpi8v36miu.php on line 13\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $result[$key] = 0;\n        } else {\n            $result[$key] = abs($guess\
    \ - $score);\n        }\n    }\n    return $result;\n}\n\n$game = [\n    0 =>\
    \ [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n    \
    \    4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 =>\
    \ 9,\n        9 => 10,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n\
    \        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6\
    \ => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    2 =>\
    \ [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n    \
    \    4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 =>\
    \ 9,\n        9 => 10,\n    ],\n    3 => [\n        0 => 1,\n        1 => 2,\n\
    \        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6\
    \ => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    4 =>\
    \ [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n    \
    \    4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 =>\
    \ 9,\n        9 => 10,\n    ],\n    5 => [\n        0 => 1,\n        1 => 2,\n\
    \        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6\
    \ => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    6 =>\
    \ [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n    \
    \    4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 =>\
    \ 9,\n        9 => 10,\n    ],\n    7 => [\n        0 => 1,\n        1 => 2,\n\
    \        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6\
    \ => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp61q_x35u.php on line 118

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game['score'];\n\
    \    $guess = $guess['score'];\n    $correct = 0;\n    foreach ($game as $key\
    \ => $value) {\n        if ($value == $guess[$key]) {\n            $correct++;\n\
    \        }\n    }\n    return $correct;\n}\n\n$game = array(\n    array(\n   \
    \     'score' => 10,\n        'guess' => 5\n    ),\n    array(\n        'score'\
    \ => 5,\n        'guess' => 10\n    ),\n    array(\n        'score' => 1,\n  \
    \      'guess' => 5\n    ),\n    array(\n        'score' => 5,\n        'guess'\
    \ => 1\n    ),\n    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n\
    \    array(\n        'score' => 10,\n        'guess' => 5\n    ),\n    array(\n\
    \        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n        'score'\
    \ => 5,\n        'guess' => 10\n    ),\n    array(\n        'score' => 5,\n  \
    \      'guess' => 5\n    ),\n    array(\n        'score' => 5,\n        'guess'\
    \ => 5\n    ),\n    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n\
    \    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n\
    \        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n        'score'\
    \ => 5,\n        'guess' => 5\n    ),\n    array(\n        'score' => 5,\n   \
    \     'guess' => 5\n    ),\n    array(\n        'score' => 5,\n        'guess'\
    \ => 5\n    ),\n    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n\
    \    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n\
    \        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n        'score'\
    \ => 5,\n        'guess' => 5\n    ),\n    array(\n        'score' => 5,\n   \
    \     'guess' => 5\n    ),\n    array(\n        'score' => 5,\n        'guess'\
    \ => 5\n    ),\n    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n\
    \    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n\
    \        'score' => 5,\n        'guess' => 5\n    ),\n    array(\n        'score'\
    \ => 5,\n        'guess' => 5\n    ),\n    array(\n        'score' => 5,\n   \
    \     'guess' => 5\n    ),\n    array(\n        'score' => 5,\n        'guess'\
    \ => 5\n    ),\n    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n\
    \    array(\n        'score' => 5,\n        'guess' => 5\n    ),\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkga926b3.php on line 144

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game[0];\n\
    \    $guess = $guess[0];\n    $difference = array();\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $difference[$i] = abs($guess[$i] - $score);\n    }\n    return\
    \ $difference;\n}\n\n$game = array(\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n\nfunction candidate(...$args) {\n   \
    \ return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptgzq74rv.php on line 72

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => [\n        0\
    \ => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n\
    \    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n     \
    \   3 => 4,\n        4 => 5,\n    ],\n    2 => [\n        0 => 1,\n        1 =>\
    \ 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n    ],\n    3 => [\n\
    \        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4\
    \ => 5,\n    ],\n    4 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n    ],\n];\n$guess = [\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n];\n$result = compare($game, $guess);\n\
    var_dump($result);\n</code>\n<|/ a |>\n<| c |>\nThank you for your answer! I appreciate\
    \ it! I understand your solution, but I still don't understand how it works. I\
    \ understand that we are looping through the array and comparing each element\
    \ with the guess, but I don't understand how it knows to compare the scores against\
    \ the guesses. I understand that we are looping through the array and comparing\
    \ each element with the guesses, but I don't understand how it knows to compare\
    \ the scores against the guesses. I understand that we are looping through the\
    \ array and comparing each element with the guesses, but I don't understand how\
    \ it knows to compare the scores against the guesses. I understand that we are\
    \ looping through the array and comparing each element with the guesses, but I\
    \ don't understand how it knows to compare the scores against the guesses. I understand\
    \ that we are looping through the array and comparing each element with the guesses,\
    \ but I don't understand how it knows to compare the scores against the guesses.\
    \ I understand that we are looping through the array and comparing each element\
    \ with the guesses, but I don't understand how it knows to compare the scores\
    \ against the guesses. I understand that we are looping through the array and\
    \ comparing each element with the guesses, but I don't understand how it knows\
    \ to compare the scores against the guesses. I understand that we are looping\
    \ through the \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpeo1ip095.php on line 63

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($score - $guess[$index]);\n        }\n    }\n    return $result;\n}\n\n\
    $game = [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 =>\
    \ 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 =>\
    \ 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15\
    \ => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n  \
    \  20 => 100,\n    21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n\
    \    25 => 100,\n    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n\
    \    30 => 100,\n    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n\
    \    35 => 100,\n    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n\
    \    40 => 100,\n    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n\
    \    45 => 100,\n    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n\
    \    50 => 100,\n    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n\
    \    55 => 100,\n    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n\
    \    60 => 100,\n    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n\
    \    65 => 100,\n    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n\
    \    70 => 100,\n    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n\
    \    75 => 100,\n    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n\
    \    80 => 100,\n    81 => 100,\n    82 => 100,\n    83 => 100,\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpge48v475.php on line 106

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 100,\n    1 =>\
    \ 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 => 100,\n\
    \    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 => 100,\n\
    \    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16 => 100,\n\
    \    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n    21 => 100,\n\
    \    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n    26 => 100,\n\
    \    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n    31 => 100,\n\
    \    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n    36 => 100,\n\
    \    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n    41 => 100,\n\
    \    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n    46 => 100,\n\
    \    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n    51 => 100,\n\
    \    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n    56 => 100,\n\
    \    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n    61 => 100,\n\
    \    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n    66 => 100,\n\
    \    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n    71 => 100,\n\
    \    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n    76 => 100,\n\
    \    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n    81 => 100,\n\
    \    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n    86 => 100,\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppddq65_2.php on line 106

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ array(\n    array(10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw_yxoqb7.php on line 24

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $key => $value) {\n        if ($guess == $value) {\n  \
    \          $correct[$key] = 0;\n        } else {\n            $correct[$key] =\
    \ abs($guess - $value);\n        }\n    }\n    return $correct;\n}\n\n$game =\
    \ array(\n    1 => 1,\n    2 => 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n  \
    \  6 => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n    10 => 10,\n    11 => 11,\n\
    \    12 => 12,\n    13 => 13,\n    14 => 14,\n    15 => 15,\n    16 => 16,\n \
    \   17 => 17,\n    18 => 18,\n    19 => 19,\n    20 => 20,\n    21 => 21,\n  \
    \  22 => 22,\n    23 => 23,\n    24 => 24,\n    25 => 25,\n    26 => 26,\n   \
    \ 27 => 27,\n    28 => 28,\n    29 => 29,\n    30 => 30,\n    31 => 31,\n    32\
    \ => 32,\n    33 => 33,\n    34 => 34,\n    35 => 35,\n    36 => 36,\n    37 =>\
    \ 37,\n    38 => 38,\n    39 => 39,\n    40 => 40,\n    41 => 41,\n    42 => 42,\n\
    \    43 => 43,\n    44 => 44,\n    45 => 45,\n    46 => 46,\n    47 => 47,\n \
    \   48 => 48,\n    49 => 49,\n    50 => 50,\n    51 => 51,\n    52 => 52,\n  \
    \  53 => 53,\n    54 => 54,\n    55 => 55,\n    56 => 56,\n    57 => 57,\n   \
    \ 58 => 58,\n    59 => 59,\n    60 => 60,\n    61 => 61,\n    62 => 62,\n    63\
    \ => 63,\n    64 => 64,\n    65 => 65,\n    66 => 66,\n    67 => 67,\n    68 =>\
    \ 68,\n    69 => 69,\n    70 => 70,\n    71 => 71,\n    72 => 72,\n    73 => 73,\n\
    \    74 => 74,\n    75 => 75,\n    76 => 76,\n    77 => 77,\n    78 => \nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt4le61cz.php on line 101

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game[0];\n\
    \    $guess = $game[1];\n    $result = [];\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score);\n    }\n    return\
    \ $result;\n}\n$game = [\n    [10, 20, 30],\n    [10, 20, 30]\n];\n$guess = [\n\
    \    [10, 20, 30],\n    [10, 20, 30]\n];\nvar_dump(compare($game, $guess));\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp_73ij7ag.php:15\n\
    Stack trace:\n#0 /tmp/tmp_73ij7ag.php(27): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmp_73ij7ag.php on line 15\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        $result[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n\
    \    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12\
    \ => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 =>\
    \ 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n\
    \    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n \
    \   28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n  \
    \  33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n   \
    \ 38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43\
    \ => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 =>\
    \ 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n\
    \    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n \
    \   59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n  \
    \  64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n   \
    \ 69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74\
    \ => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgc_bmt8x.php on line 98

    '
  timestamp: 1659730795
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($score - $guess[$index]);\n        }\n    }\n    return $result;\n}\n\
    $game = [\n    1 => 5,\n    2 => 3,\n    3 => 2,\n    4 => 1,\n    5 => 4,\n];\n\
    $guess = [\n    1 => 2,\n    2 => 3,\n    3 => 2,\n    4 => 1,\n    5 => 4,\n\
    ];\n$result = compare($game, $guess);\nvar_dump($result);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(5) {\n  [1]=>\n  int(3)\n  [2]=>\n  int(0)\n  [3]=>\n  int(0)\n \
    \ [4]=>\n  int(0)\n  [5]=>\n  int(0)\n}\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return\
    \ $result;\n}\n\n$game = array(\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100,\
    \ 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60,\
    \ 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100,\
    \ 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60,\
    \ 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100,\
    \ 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60,\
    \ 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100,\
    \ 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60,\
    \ 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100,\
    \ 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60,\
    \ 50, 40, 30, 20, 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphw_9kqgv.php on line 50

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = 0;\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $correct++;\n        }\n    }\n    return $correct;\n}\n\n$game = array(\n\
    \    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n\
    \    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 =>\
    \ 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n\
    \    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n \
    \   22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n  \
    \  27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n   \
    \ 32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37\
    \ => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 =>\
    \ 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n\
    \    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n \
    \   53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n  \
    \  58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n   \
    \ 63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68\
    \ => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 =>\
    \ 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n\
    \    79 => 80,\n    \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdowg5xdh.php on line 102

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        $correct[$index] = abs($guess\
    \ - $score);\n    }\n    return $correct;\n}\n\n$game = array(\n    array(100,\
    \ 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(90, 80, 70, 60, 50,\
    \ 40, 30, 20, 10, 5, 2, 1),\n    array(80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n\
    \    array(70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(60, 50, 40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(50, 40, 30, 20, 10, 5, 2, 1),\n    array(40, 30, 20,\
    \ 10, 5, 2, 1),\n    array(30, 20, 10, 5, 2, 1),\n    array(20, 10, 5, 2, 1),\n\
    \    array(10, 5, 2, 1),\n    array(5, 2, 1),\n    array(2, 1),\n    array(1),\n\
    );\n\n$guess = array(\n    array(100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2,\
    \ 1),\n    array(90, 80, 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(80,\
    \ 70, 60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(70, 60, 50, 40, 30, 20, 10,\
    \ 5, 2, 1),\n    array(60, 50, 40, 30, 20, 10, 5, 2, 1),\n    array(50, 40, 30,\
    \ 20, 10, 5, 2, 1),\n    array(40, 30, 20, 10, 5, 2, 1),\n    array(30, 20, 10,\
    \ 5, 2, 1),\n    array(20, 10, 5, 2, 1),\n    array(10, 5, 2, 1),\n    array(5,\
    \ 2, 1),\n    array(2, 1),\n    array(1),\n);\n\n$correct = compare($game, $guess);\n\
    print_r($correct);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpag5fzm8f.php:13\n\
    Stack trace:\n#0 /tmp/tmpag5fzm8f.php(50): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpag5fzm8f.php on line 13\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpf28jd7vv.php:13\n\
    Stack trace:\n#0 /tmp/tmpf28jd7vv.php(18): compare(Array, Array)\n#1 /tmp/tmpf28jd7vv.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmpf28jd7vv.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpf28jd7vv.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => [\n       \
    \ 0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n    1 => [\n        0 =>\
    \ 2,\n        1 => 3,\n        2 => 4,\n    ],\n    2 => [\n        0 => 3,\n\
    \        1 => 4,\n        2 => 5,\n    ],\n];\n\n$guess = [\n    0 => 2,\n   \
    \ 1 => 3,\n    2 => 4,\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if there are multiple\
    \ matches. For example, if the game is `[0 => [0 => 1, 1 => 2, 2 => 3], 1 => [0\
    \ => 2, 1 => 3, 2 => 4], 2 => [0 => 3, 1 => 4, 2 => 5]]` and a guess is `[0 =>\
    \ 2, 1 => 3, 2 => 4]`, it will return `[0 => 1, 1 => 2, 2 => 3]` instead of `[0\
    \ => 0, 1 => 1, 2 => 2]`.\n<|/ c |>\n<| c |>\nI see what you mean. I've updated\
    \ my answer to account for multiple matches.\n<|/ c |>\n<| c |>\nThanks for the\
    \ update. I've updated my answer to include a solution that accounts for multiple\
    \ matches.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$game = [\n    0 => [\n\
    \        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n    1 => [\n     \
    \   0 => 2,\n        1 => 3,\n        2 => 4,\n    ],\n    2 => [\n        0 =>\
    \ 3,\n        1 => 4,\n        2 => 5,\n    ],\n];\n\n$guess = [\n    0 => 2,\n\
    \    1 => 3,\n    2 => 4,\n];\n\n$result = [];\nforeach ($game as $index => $score)\
    \ {\n    foreach ($score as $key => $value) {\n        $result[$index][$key] =\
    \ abs($guess - $value);\n    }\n}\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$game = [\n    0 => [\n        0 => 1,\n\
    \        1 => 2,\n        \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwbvu9npo.php on line 44

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz2c7_fh0.php on line 72

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        if ($game[$key] == $value) {\n            $result[$key] =\
    \ 0;\n        } else {\n            $result[$key] = abs($game[$key] - $value);\n\
    \        }\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzxizid9.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 1,\n    2 =>\
    \ 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 =>\
    \ 8,\n    9 => 9,\n    10 => 10\n];\n\n$guess = [\n    1 => 2,\n    2 => 4,\n\
    \    3 => 5,\n    4 => 6,\n    5 => 7,\n    6 => 8,\n    7 => 9,\n    8 => 10,\n\
    \    9 => 11,\n    10 => 12\n];\n\nvar_dump(compare($game, $guess));\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts, but this does not solve\
    \ the problem. Your code returns an array with all the differences between the\
    \ guess and the score, but I need the difference between the guess and the score\
    \ for each index in the array. Your code returns an array with all the differences\
    \ between the guess and the score, but I need the difference between the guess\
    \ and the score for each index in the array.\n<|/ c |>\n<| c |>\nI updated my\
    \ answer to reflect your clarification.\n<|/ c |>\n<| c |>\nI appreciate your\
    \ efforts, but this does not solve the problem. Your code returns an array with\
    \ all the differences between the guess and the score, but I need the difference\
    \ between the guess and the score for each index in the array. Your code returns\
    \ an array with all the differences between the guess and the score, but I need\
    \ the difference between the guess and the score for each index in the array.\n\
    <|/ c |>\n<| c |>\nI updated my answer to reflect your clarification.\n<|/ c |>\n\
    <| c |>\nI appreciate your efforts, but this does not solve the problem. Your\
    \ code returns an array with all the differences between the guess and the score,\
    \ but I need the difference between the guess and the score for each index in\
    \ the array. Your code returns an array with all the differences between the guess\
    \ and the score, but I need the difference between the guess and the score for\
    \ each index in the array.\n<|/ c |>\n<| a tags=arrays,php |>\nI finally found\
    \ a solution that works. I hope this helps someone else.\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpc89r95cm.php on line 45

    '
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $key => $score) {\n        if ($guess[$key] == $score)\
    \ {\n            $correct[$key] = 0;\n        } else {\n            $correct[$key]\
    \ = abs($guess[$key] - $score);\n        }\n    }\n    return $correct;\n}\n\n\
    $game = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n);\n$guess =\
    \ array(\n    0 => 1,\n    1 => 3,\n    2 => 4,\n    3 => 5,\n    4 => 6,\n  \
    \  5 => 7,\n    6 => 8,\n    7 => 9,\n    8 => 10,\n    9 => 11\n);\n$correct\
    \ = compare($game, $guess);\nprint_r($correct);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 1\n    [4]\
    \ => 1\n    [5] => 1\n    [6] => 1\n    [7] => 1\n    [8] => 1\n    [9] => 1\n\
    )\n"
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n\
    \    80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpadhhsabw.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 100,\n    1\
    \ => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 =>\
    \ 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 =>\
    \ 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16\
    \ => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n  \
    \  21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n\
    \    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n\
    \    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n\
    \    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n\
    \    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n\
    \    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n\
    \    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n\
    \    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n\
    \    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n\
    \    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n\
    \    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n\
    \    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n\
    \    81 => 100,\n    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n\
    \    86 => 100,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw906i_yu.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n$game = [\n    0 => [\n        0 =>\
    \ 1,\n        1 => 2,\n        2 => 3,\n    ],\n    1 => [\n        0 => 1,\n\
    \        1 => 2,\n        2 => 3,\n    ],\n    2 => [\n        0 => 1,\n     \
    \   1 => 2,\n        2 => 3,\n    ],\n];\n$guess = [\n    0 => 1,\n    1 => 2,\n\
    \    2 => 3,\n];\n$result = compare($game, $guess);\nvar_dump($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you for your answer. I tried your solution and\
    \ it works. But I still don't understand why my code doesn't work. Could you please\
    \ explain it to me?\n<|/ c |>\n<| c |>\nI added an explanation to the answer\n\
    <|/ c |>\n<| c |>\nThank you for your explanation. I understand now why my code\
    \ doesn't work. Your explanation helped me a lot.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n\
    \        2 => 3,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n     \
    \   2 => 3,\n    ],\n    2 => [\n        0 => 1,\n        1 => 2,\n        2 =>\
    \ 3,\n    ],\n];\n$guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n$result\
    \ = array_map(function($game, $guess) {\n    return abs($guess - $game);\n}, $game,\
    \ $guess);\nvar_dump($result);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ for your answer. I tried your solution and it works. But I still don't understand\
    \ why my code doesn't work. Could you please explain it to me?\n<|/ c |>\n<| c\
    \ |>\nThe issue is with your `foreach` loop. You're not looping through the arrays,\
    \ you're looping through the keys. So you're comparing `0` with `1`, `1` with\
    \ `2`, `2` with `3`. You're not comparing `0` with `1`, `1` with `2`, `2` with\
    \ `3`, you're comparing `0` with `\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1mclb_m3.php on line 41

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 1,\n            1 => 0,\n            2 => 0,\n\
    \            3 => 0,\n            4 => 0,\n            5 => 0,\n            6\
    \ => 0,\n            7 => 0,\n            8 => 0,\n            9 => 0,\n     \
    \       10 => 0,\n            11 => 0,\n            12 => 0,\n            13 =>\
    \ 0,\n            14 => 0,\n            15 => 0,\n            16 => 0,\n     \
    \       17 => 0,\n            18 => 0,\n            19 => 0,\n            20 =>\
    \ 0,\n            21 => 0,\n            22 => 0,\n            23 => 0,\n     \
    \       24 => 0,\n            25 => 0,\n            26 => 0,\n            27 =>\
    \ 0,\n            28 => 0,\n            29 => 0,\n            30 => 0,\n     \
    \       31 => 0,\n            32 => 0,\n            33 => 0,\n            34 =>\
    \ 0,\n            35 => 0,\n            36 => 0,\n            37 => 0,\n     \
    \       38 => 0,\n            39 => 0,\n            40 => 0,\n            41 =>\
    \ 0,\n            42 => 0,\n            43 => 0,\n            44 => 0,\n     \
    \       45 => 0,\n            46 => 0,\n            47 => 0,\n            48 =>\
    \ 0,\n            49 => 0,\n            50 => 0,\n            51 => 0,\n     \
    \       52 => 0,\n            53 => 0,\n            54 => 0,\n            55 =>\
    \ 0,\n            56 => 0,\n            57 => 0,\n            58 => 0,\n     \
    \       59 => 0,\n            60 => 0,\n            61 => 0,\n            62 =>\
    \ 0,\n            63 => 0,\n            64 => 0,\n            65 => 0,\n     \
    \       66 => 0,\n            67 => 0,\n            68 => 0,\n            69 =>\
    \ 0,\n            70 => 0,\n            71 => 0,\n            72 => 0,\n     \
    \       73 => 0,\n            74 => 0,\n            75 => 0,\n            76 =>\
    \ 0,\n            77 => 0,\n            78 => 0,\n            79 => 0,\n     \
    \       80 => 0,\n            81 => 0,\n            82 => 0,\n            83 =>\
    \ 0,\n            84 => 0,\n            85 => 0,\n            86 => 0,\n     \
    \       87 => 0,\n            88 => 0,\n            89 => 0,\n            90 =>\
    \ 0,\n            91 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6695fehr.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game[0];\n\
    \    $guess = $guess[0];\n    $result = [];\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score);\n    }\n    return\
    \ $result;\n}\n\n$game = [\n    [10, 20, 30],\n    [20, 30, 40],\n    [30, 40,\
    \ 50]\n];\n\n$guess = [\n    [10, 20, 30],\n    [20, 30, 40],\n    [30, 40, 50],\n\
    \    [40, 50, 60],\n    [50, 60, 70],\n    [60, 70, 80],\n    [70, 80, 90],\n\
    \    [80, 90, 100]\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmps0f44nay.php:15\n\
    Stack trace:\n#0 /tmp/tmps0f44nay.php(37): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmps0f44nay.php on line 15\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n$game = [\n    1 => 1,\n    2 => 2,\n\
    \    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n\
    \    9 => 9,\n    10 => 10,\n    11 => 11,\n    12 => 12,\n    13 => 13,\n   \
    \ 14 => 14,\n    15 => 15,\n    16 => 16,\n    17 => 17,\n    18 => 18,\n    19\
    \ => 19,\n    20 => 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n    24 =>\
    \ 24,\n    25 => 25,\n    26 => 26,\n    27 => 27,\n    28 => 28,\n    29 => 29,\n\
    \    30 => 30,\n    31 => 31,\n    32 => 32,\n    33 => 33,\n    34 => 34,\n \
    \   35 => 35,\n    36 => 36,\n    37 => 37,\n    38 => 38,\n    39 => 39,\n  \
    \  40 => 40,\n    41 => 41,\n    42 => 42,\n    43 => 43,\n    44 => 44,\n   \
    \ 45 => 45,\n    46 => 46,\n    47 => 47,\n    48 => 48,\n    49 => 49,\n    50\
    \ => 50,\n    51 => 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n    55 =>\
    \ 55,\n    56 => 56,\n    57 => 57,\n    58 => 58,\n    59 => 59,\n    60 => 60,\n\
    \    61 => 61,\n    62 => 62,\n    63 => 63,\n    64 => 64,\n    65 => 65,\n \
    \   66 => 66,\n    67 => 67,\n    68 => 68,\n    69 => 69,\n    70 => 70,\n  \
    \  71 => 71,\n    72 => 72,\n    73 => 73,\n    74 => 74,\n    75 => 75,\n   \
    \ 76 => 76,\n    77 => 77,\n    78 => 78,\n    79 => 79,\n    80 => 80,\n    81\
    \ => 81,\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkkm26zha.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 100,\n    2\
    \ => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 =>\
    \ 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 => 100,\n    12 =>\
    \ 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16 => 100,\n    17\
    \ => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n    21 => 100,\n  \
    \  22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n    26 => 100,\n\
    \    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n    31 => 100,\n\
    \    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n    36 => 100,\n\
    \    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n    41 => 100,\n\
    \    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n    46 => 100,\n\
    \    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n    51 => 100,\n\
    \    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n    56 => 100,\n\
    \    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n    61 => 100,\n\
    \    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n    66 => 100,\n\
    \    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n    71 => 100,\n\
    \    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n    76 => 100,\n\
    \    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n    81 => 100,\n\
    \    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n    86 => 100,\n\
    \    87 => 100,\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp0xe46wv.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $value) {\n        if ($guess == $value) {\n  \
    \          $result[] = 0;\n        } else {\n            $result[] = abs($guess\
    \ - $value);\n        }\n    }\n    return $result;\n}\n\n$game = [\n    0 =>\
    \ 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 =>\
    \ 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n \
    \   12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n  \
    \  17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n   \
    \ 22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27\
    \ => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 =>\
    \ 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n\
    \    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n \
    \   43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n  \
    \  48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n   \
    \ 53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58\
    \ => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 =>\
    \ 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n\
    \    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n \
    \   74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => \nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwn_d6fuv.php on line 102

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        $result[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10,\
    \ 20, 30, 40),\n    array(20, 30, 40, 50),\n    array(30, 40, 50, 60),\n    array(40,\
    \ 50, 60, 70),\n);\n\n$guess = array(\n    array(10, 20, 30, 40),\n    array(20,\
    \ 30, 40, 50),\n    array(30, 40, 50, 60),\n    array(40, 50, 60, 70),\n);\n\n\
    $result = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpb8l63sxp.php:13\n\
    Stack trace:\n#0 /tmp/tmpb8l63sxp.php(32): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpb8l63sxp.php on line 13\n"
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = 0;\n\
    \    $guesses = count($guess);\n    $scores = count($game);\n    $result = [];\n\
    \    for ($i = 0; $i < $guesses; $i++) {\n        $result[$i] = abs($guess[$i]\
    \ - $game[$i]);\n        if ($result[$i] == 0) {\n            $correct++;\n  \
    \      }\n    }\n    return $result;\n}\n$guess = [1, 5, 3, 6, 2];\n$game = [1,\
    \ 5, 3, 6, 2];\n$result = compare($game, $guess);\nprint_r($result);\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 0\n)\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 10,\n    1 =>\
    \ 20,\n    2 => 30,\n    3 => 40,\n    4 => 50,\n    5 => 60,\n    6 => 70,\n\
    \    7 => 80,\n    8 => 90,\n    9 => 100\n];\n$guess = [\n    0 => 10,\n    1\
    \ => 20,\n    2 => 30,\n    3 => 40,\n    4 => 50,\n    5 => 60,\n    6 => 70,\n\
    \    7 => 80,\n    8 => 90,\n    9 => 100\n];\n$result = compare($game, $guess);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpe13hi4z0.php:13\n\
    Stack trace:\n#0 /tmp/tmpe13hi4z0.php(41): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpe13hi4z0.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $diff = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $diff[$key] = abs($value - $score[$key]);\n    }\n    return $diff;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n    1 => [\n        0 => 2,\n        1 => 3,\n        2 => 4,\n    ],\n\
    \    2 => [\n        0 => 3,\n        1 => 4,\n        2 => 5,\n    ],\n];\n\n\
    $guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$diff = compare($game,\
    \ $guess);\nprint_r($diff);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your\
    \ answer, but this doesn't seem to work. I'm getting a blank array back.\n<|/\
    \ c |>\n<| c |>\nI edited my answer to include a working example. Let me know\
    \ if it helps.\n<|/ c |>\n<| c |>\nThanks for your help but this still doesn't\
    \ work. I'm getting a blank array back.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to include a working example. Let me know if it helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your help but this still doesn't work. I'm getting a blank array back.\n\
    <|/ c |>\n<| a tags=php,arrays |>\nI finally figured it out. Thanks everyone for\
    \ your help.\n<code>\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpy4thh85b.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $correct[$key] = 0;\n        } else {\n            $correct[$key] =\
    \ abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n\n$game =\
    \ array(\n    0 => 10,\n    1 => 5,\n    2 => 8,\n    3 => 6,\n    4 => 7,\n \
    \   5 => 9,\n    6 => 3,\n    7 => 1,\n    8 => 4,\n    9 => 2\n);\n\n$guess =\
    \ array(\n    0 => 10,\n    1 => 5,\n    2 => 8,\n    3 => 6,\n    4 => 7,\n \
    \   5 => 9,\n    6 => 3,\n    7 => 1,\n    8 => 4,\n    9 => 2\n);\n\n$correct\
    \ = compare($game, $guess);\nprint_r($correct);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpkg0n4zzf.php:16\n\
    Stack trace:\n#0 /tmp/tmpkg0n4zzf.php(48): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpkg0n4zzf.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10\n];\n$guess = [\n    0 => 1,\n    1 => 3,\n   \
    \ 2 => 5,\n    3 => 7,\n    4 => 9,\n    5 => 11,\n    6 => 13,\n    7 => 15,\n\
    \    8 => 17,\n    9 => 19\n];\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThank you for your answer. Your solution\
    \ works perfectly for me. Thank you very much!\n<|/ c |>\n<| c |>\nGlad I could\
    \ help! :)\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$game = [\n    0 => 1,\n\
    \    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10\n];\n$guess = [\n    0 => 1,\n    1 =>\
    \ 3,\n    2 => 5,\n    3 => 7,\n    4 => 9,\n    5 => 11,\n    6 => 13,\n    7\
    \ => 15,\n    8 => 17,\n    9 => 19\n];\n$result = array_intersect($game, $guess);\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThank you for your\
    \ answer. Your solution works perfectly for me. Thank you very much!\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n<?php\n$game = [\n    0 => 1,\n    1 => 2,\n\
    \    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10\n];\n$guess = [\n    0 => 1,\n    1 => 3,\n    2 =>\
    \ 5,\n    3 => 7,\n    4 => 9,\n    5 => 11,\n    6 => 13,\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk8mg2gbi.php on line 43

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 100,\n    2 =>\
    \ 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 => 100,\n\
    \    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 => 100,\n    12 => 100,\n\
    \    13 => 100,\n    14 => 100,\n    15 => 100,\n    16 => 100,\n    17 => 100,\n\
    \    18 => 100,\n    19 => 100,\n    20 => 100,\n    21 => 100,\n    22 => 100,\n\
    \    23 => 100,\n    24 => 100,\n    25 => 100,\n    26 => 100,\n    27 => 100,\n\
    \    28 => 100,\n    29 => 100,\n    30 => 100,\n    31 => 100,\n    32 => 100,\n\
    \    33 => 100,\n    34 => 100,\n    35 => 100,\n    36 => 100,\n    37 => 100,\n\
    \    38 => 100,\n    39 => 100,\n    40 => 100,\n    41 => 100,\n    42 => 100,\n\
    \    43 => 100,\n    44 => 100,\n    45 => 100,\n    46 => 100,\n    47 => 100,\n\
    \    48 => 100,\n    49 => 100,\n    50 => 100,\n    51 => 100,\n    52 => 100,\n\
    \    53 => 100,\n    54 => 100,\n    55 => 100,\n    56 => 100,\n    57 => 100,\n\
    \    58 => 100,\n    59 => 100,\n    60 => 100,\n    61 => 100,\n    62 => 100,\n\
    \    63 => 100,\n    64 => 100,\n    65 => 100,\n    66 => 100,\n    67 => 100,\n\
    \    68 => 100,\n    69 => 100,\n    70 => 100,\n    71 => 100,\n    72 => 100,\n\
    \    73 => 100,\n    74 => 100,\n    75 => 100,\n    76 => 100,\n    77 => 100,\n\
    \    78 => 100,\n    79 => 100,\n    80 => 100,\n    81 => 100,\n    82 => 100,\n\
    \    83 => 100,\n    84 => 100,\n    85 => 100,\n    86 => 100,\n    87 => 100,\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp5tgex8x.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        if ($game[$key] == $value) {\n            $result[$key] =\
    \ 0;\n        } else {\n            $result[$key] = abs($game[$key] - $value);\n\
    \        }\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppezmc8io.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        if ($game[$key] == $value) {\n            $result[$key] =\
    \ 0;\n        } else {\n            $result[$key] = abs($game[$key] - $value);\n\
    \        }\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzxizid9.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 1,\n            1 => 1,\n            2 => 1,\n\
    \            3 => 1,\n            4 => 1,\n            5 => 1,\n            6\
    \ => 1,\n            7 => 1,\n            8 => 1,\n            9 => 1,\n     \
    \       10 => 1,\n            11 => 1,\n            12 => 1,\n            13 =>\
    \ 1,\n            14 => 1,\n            15 => 1,\n            16 => 1,\n     \
    \       17 => 1,\n            18 => 1,\n            19 => 1,\n            20 =>\
    \ 1,\n            21 => 1,\n            22 => 1,\n            23 => 1,\n     \
    \       24 => 1,\n            25 => 1,\n            26 => 1,\n            27 =>\
    \ 1,\n            28 => 1,\n            29 => 1,\n            30 => 1,\n     \
    \       31 => 1,\n            32 => 1,\n            33 => 1,\n            34 =>\
    \ 1,\n            35 => 1,\n            36 => 1,\n            37 => 1,\n     \
    \       38 => 1,\n            39 => 1,\n            40 => 1,\n            41 =>\
    \ 1,\n            42 => 1,\n            43 => 1,\n            44 => 1,\n     \
    \       45 => 1,\n            46 => 1,\n            47 => 1,\n            48 =>\
    \ 1,\n            49 => 1,\n            50 => 1,\n            51 => 1,\n     \
    \       52 => 1,\n            53 => 1,\n            54 => 1,\n            55 =>\
    \ 1,\n            56 => 1,\n            57 => 1,\n            58 => 1,\n     \
    \       59 => 1,\n            60 => 1,\n            61 => 1,\n            62 =>\
    \ 1,\n            63 => 1,\n            64 => 1,\n            65 => 1,\n     \
    \       66 => 1,\n            67 => 1,\n            68 => 1,\n            69 =>\
    \ 1,\n            70 => 1,\n            71 => 1,\n            72 => 1,\n     \
    \       73 => 1,\n            74 => 1,\n            75 => 1,\n            76 =>\
    \ 1,\n            77 => 1,\n            78 => 1,\n            79 => 1,\n     \
    \       80 => 1,\n            81 => 1,\n            82 => 1,\n            83 =>\
    \ 1,\n            84 => 1,\n            85 => 1,\n            86 => 1,\n     \
    \       87 => 1,\n            88 => 1,\n            89 => 1,\n            90 =>\
    \ 1,\n            91 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgdqb46hi.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n\
    \    80 \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpckvo_nhw.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 3,\n    2 => 2,\n    3 => 1,\n    4 => 2,\n    5 => 1,\n    6 => 1,\n    7 =>\
    \ 1,\n    8 => 1,\n    9 => 1,\n    10 => 1,\n    11 => 1,\n    12 => 1,\n   \
    \ 13 => 1,\n    14 => 1,\n    15 => 1,\n    16 => 1,\n    17 => 1,\n    18 =>\
    \ 1,\n    19 => 1,\n    20 => 1,\n    21 => 1,\n    22 => 1,\n    23 => 1,\n \
    \   24 => 1,\n    25 => 1,\n    26 => 1,\n    27 => 1,\n    28 => 1,\n    29 =>\
    \ 1,\n    30 => 1,\n    31 => 1,\n    32 => 1,\n    33 => 1,\n    34 => 1,\n \
    \   35 => 1,\n    36 => 1,\n    37 => 1,\n    38 => 1,\n    39 => 1,\n    40 =>\
    \ 1,\n    41 => 1,\n    42 => 1,\n    43 => 1,\n    44 => 1,\n    45 => 1,\n \
    \   46 => 1,\n    47 => 1,\n    48 => 1,\n    49 => 1,\n    50 => 1,\n    51 =>\
    \ 1,\n    52 => 1,\n    53 => 1,\n    54 => 1,\n    55 => 1,\n    56 => 1,\n \
    \   57 => 1,\n    58 => 1,\n    59 => 1,\n    60 => 1,\n    61 => 1,\n    62 =>\
    \ 1,\n    63 => 1,\n    64 => 1,\n    65 => 1,\n    66 => 1,\n    67 => 1,\n \
    \   68 => 1,\n    69 => 1,\n    70 => 1,\n    71 => 1,\n    72 => 1,\n    73 =>\
    \ 1,\n    74 => 1,\n    75 => 1,\n    76 => 1,\n    77 => 1,\n    78 => 1,\n \
    \   79 => 1,\n    80 => 1,\n    81 => 1,\n    82 => 1,\n    83 => 1,\n    84 =>\
    \ 1,\n    85 => 1,\n    86 => 1,\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzomb5lcz.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct[$index] = 0;\n        } else {\n            $correct[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n$game =\
    \ array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n  \
    \  5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp20qit0m6.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n        10 => 11,\n        11 => 12,\n\
    \        12 => 13,\n        13 => 14,\n        14 => 15,\n        15 => 16,\n\
    \        16 => 17,\n        17 => 18,\n        18 => 19,\n        19 => 20,\n\
    \        20 => 21,\n        21 => 22,\n        22 => 23,\n        23 => 24,\n\
    \        24 => 25,\n        25 => 26,\n        26 => 27,\n        27 => 28,\n\
    \        28 => 29,\n        29 => 30,\n        30 => 31,\n        31 => 32,\n\
    \        32 => 33,\n        33 => 34,\n        34 => 35,\n        35 => 36,\n\
    \        36 => 37,\n        37 => 38,\n        38 => 39,\n        39 => 40,\n\
    \        40 => 41,\n        41 => 42,\n        42 => 43,\n        43 => 44,\n\
    \        44 => 45,\n        45 => 46,\n        46 => 47,\n        47 => 48,\n\
    \        48 => 49,\n        49 => 50,\n        50 => 51,\n        51 => 52,\n\
    \        52 => 53,\n        53 => 54,\n        54 => 55,\n        55 => 56,\n\
    \        56 => 57,\n        57 => 58,\n        58 => 59,\n        59 => 60,\n\
    \        60 => 61,\n        61 => 62,\n        62 => 63,\n        63 => 64,\n\
    \        64 => 65,\n        65 => 66,\n        66 => 67,\n        67 => 68,\n\
    \        68 => 69,\n        69 => 70,\n        70 => 71,\n        71 => 72,\n\
    \        72 => 73,\n        73 => 74,\n        74 => 75,\n        75 => 76,\n\
    \        76 => 77,\n        77 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5qj4m_ea.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => [\n       \
    \ 0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n\
    \        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9\
    \ => 10,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    2 => [\n        0 => 1,\n\
    \        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5\
    \ => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n\
    \    ],\n    3 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n     \
    \   3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    4 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    5 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    6 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    7 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    8 => [\n        0 => 1,\n    \
    \    1 => 2,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpaehn7l8a.php on line 119

    '
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        if ($game[$key] == $value) {\n            $result[$key] =\
    \ 0;\n        } else {\n            $result[$key] = abs($value - $game[$key]);\n\
    \        }\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10\n);\n$guess = array(\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10\n);\n$result = compare($game, $guess);\nprint_r($result);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 0\n    [5] => 0\n    [6] => 0\n    [7] => 0\n    [8] => 0\n    [9] => 0\n\
    )\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($guess - $score[$key]);\n    }\n    return $result;\n\
    }\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n        10 => 11,\n        11 => 12,\n\
    \        12 => 13,\n        13 => 14,\n        14 => 15,\n        15 => 16,\n\
    \        16 => 17,\n        17 => 18,\n        18 => 19,\n        19 => 20,\n\
    \        20 => 21,\n        21 => 22,\n        22 => 23,\n        23 => 24,\n\
    \        24 => 25,\n        25 => 26,\n        26 => 27,\n        27 => 28,\n\
    \        28 => 29,\n        29 => 30,\n        30 => 31,\n        31 => 32,\n\
    \        32 => 33,\n        33 => 34,\n        34 => 35,\n        35 => 36,\n\
    \        36 => 37,\n        37 => 38,\n        38 => 39,\n        39 => 40,\n\
    \        40 => 41,\n        41 => 42,\n        42 => 43,\n        43 => 44,\n\
    \        44 => 45,\n        45 => 46,\n        46 => 47,\n        47 => 48,\n\
    \        48 => 49,\n        49 => 50,\n        50 => 51,\n        51 => 52,\n\
    \        52 => 53,\n        53 => 54,\n        54 => 55,\n        55 => 56,\n\
    \        56 => 57,\n        57 => 58,\n        58 => 59,\n        59 => 60,\n\
    \        60 => 61,\n        61 => 62,\n        62 => 63,\n        63 => 64,\n\
    \        64 => 65,\n        65 => 66,\n        66 => 67,\n        67 => 68,\n\
    \        68 => 69,\n        69 => 70,\n        70 => 71,\n        71 => 72,\n\
    \        72 => 73,\n        73 => 74,\n        74 => 75,\n        75 => 76,\n\
    \        76 => 77,\n        77\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_myv1_aq.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = array(\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzi1cpsse.php on line 71

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 100,\n\
    \    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n \
    \   6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n \
    \   11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n\
    \    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n\
    \    21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n\
    \    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n\
    \    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n\
    \    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n\
    \    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n\
    \    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n\
    \    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n\
    \    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n\
    \    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n\
    \    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n\
    \    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n\
    \    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n\
    \    81 => 100,\n    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n\
    \    86 => \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj561pcpe.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 5,\n    1 =>\
    \ 3,\n    2 => 4,\n    3 => 1,\n    4 => 2,\n    5 => 2,\n    6 => 4,\n    7 =>\
    \ 3,\n    8 => 5,\n    9 => 4,\n];\n\n$guess = [\n    0 => 2,\n    1 => 3,\n \
    \   2 => 4,\n    3 => 1,\n    4 => 2,\n    5 => 2,\n    6 => 4,\n    7 => 3,\n\
    \    8 => 5,\n    9 => 4,\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpox4rc8jv.php:13\n\
    Stack trace:\n#0 /tmp/tmpox4rc8jv.php(44): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpox4rc8jv.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10\n];\n\n$guess = [\n    0 => 1,\n    1 => 2,\n \
    \   2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10\n];\n\n$result = compare($game, $guess);\nvar_dump($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThank you for your answer. Your code\
    \ works perfectly but i can't understand how it works. Can you explain it to me?\n\
    <|/ c |>\n<| c |>\nSure. I've added some comments to the code so you can understand\
    \ it better. Hope it helps.\n<|/ c |>\n<| c |>\nThank you very much! I understand\
    \ it now!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\n$game = [\n    0 => 1,\n\
    \    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10\n];\n\n$guess = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10\n];\n\n$result = array_map(function($a, $b){\n\
    \    return abs($a-$b);\n}, $game, $guess);\n\nprint_r($result);\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$game = [\n    0 => 1,\n\
    \    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10\n];\n\n$guess = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnektntla.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n   \
    \ 1 => 3,\n    2 => 2,\n    3 => 1,\n    4 => 2,\n    5 => 3,\n    6 => 1,\n \
    \   7 => 2,\n    8 => 1,\n    9 => 1,\n    10 => 1,\n    11 => 1,\n    12 => 1,\n\
    \    13 => 1,\n    14 => 1,\n    15 => 1,\n    16 => 1,\n    17 => 1,\n    18\
    \ => 1,\n    19 => 1,\n    20 => 1,\n    21 => 1,\n    22 => 1,\n    23 => 1,\n\
    \    24 => 1,\n    25 => 1,\n    26 => 1,\n    27 => 1,\n    28 => 1,\n    29\
    \ => 1,\n    30 => 1,\n    31 => 1,\n    32 => 1,\n    33 => 1,\n    34 => 1,\n\
    \    35 => 1,\n    36 => 1,\n    37 => 1,\n    38 => 1,\n    39 => 1,\n    40\
    \ => 1,\n    41 => 1,\n    42 => 1,\n    43 => 1,\n    44 => 1,\n    45 => 1,\n\
    \    46 => 1,\n    47 => 1,\n    48 => 1,\n    49 => 1,\n    50 => 1,\n    51\
    \ => 1,\n    52 => 1,\n    53 => 1,\n    54 => 1,\n    55 => 1,\n    56 => 1,\n\
    \    57 => 1,\n    58 => 1,\n    59 => 1,\n    60 => 1,\n    61 => 1,\n    62\
    \ => 1,\n    63 => 1,\n    64 => 1,\n    65 => 1,\n    66 => 1,\n    67 => 1,\n\
    \    68 => 1,\n    69 => 1,\n    70 => 1,\n    71 => 1,\n    72 => 1,\n    73\
    \ => 1,\n    74 => 1,\n    75 => 1,\n    76 => 1,\n    77 => 1,\n    78 => 1,\n\
    \    79 => 1,\n    80 => 1,\n    81 => 1,\n    82 => 1,\n    83 => 1,\n    84\
    \ => 1,\n    85 => 1,\n    86 => \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzes4otu3.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz2c7_fh0.php on line 72

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 100,\n    1\
    \ => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 =>\
    \ 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 =>\
    \ 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16\
    \ => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n  \
    \  21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n\
    \    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n\
    \    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n\
    \    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n\
    \    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n\
    \    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n\
    \    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n\
    \    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n\
    \    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n\
    \    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n\
    \    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n\
    \    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n\
    \    81 => 100,\n    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n\
    \    86 => 100,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw906i_yu.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 1,\n            1 => 0,\n            2 => 0,\n\
    \            3 => 0,\n            4 => 0,\n            5 => 0,\n            6\
    \ => 0,\n            7 => 0,\n            8 => 0,\n            9 => 0,\n     \
    \       10 => 0,\n            11 => 0,\n            12 => 0,\n            13 =>\
    \ 0,\n            14 => 0,\n            15 => 0,\n            16 => 0,\n     \
    \       17 => 0,\n            18 => 0,\n            19 => 0,\n            20 =>\
    \ 0,\n            21 => 0,\n            22 => 0,\n            23 => 0,\n     \
    \       24 => 0,\n            25 => 0,\n            26 => 0,\n            27 =>\
    \ 0,\n            28 => 0,\n            29 => 0,\n            30 => 0,\n     \
    \       31 => 0,\n            32 => 0,\n            33 => 0,\n            34 =>\
    \ 0,\n            35 => 0,\n            36 => 0,\n            37 => 0,\n     \
    \       38 => 0,\n            39 => 0,\n            40 => 0,\n            41 =>\
    \ 0,\n            42 => 0,\n            43 => 0,\n            44 => 0,\n     \
    \       45 => 0,\n            46 => 0,\n            47 => 0,\n            48 =>\
    \ 0,\n            49 => 0,\n            50 => 0,\n            51 => 0,\n     \
    \       52 => 0,\n            53 => 0,\n            54 => 0,\n            55 =>\
    \ 0,\n            56 => 0,\n            57 => 0,\n            58 => 0,\n     \
    \       59 => 0,\n            60 => 0,\n            61 => 0,\n            62 =>\
    \ 0,\n            63 => 0,\n            64 => 0,\n            65 => 0,\n     \
    \       66 => 0,\n            67 => 0,\n            68 => 0,\n            69 =>\
    \ 0,\n            70 => 0,\n            71 => 0,\n            72 => 0,\n     \
    \       73 => 0,\n            74 => 0,\n            75 => 0,\n            76 =>\
    \ 0,\n            77 => 0,\n            78 => 0,\n            79 => 0,\n     \
    \       80 => 0,\n            81 => 0,\n            82 => 0,\n            83 =>\
    \ 0,\n            84 => 0,\n            85 => 0,\n            86 => 0,\n     \
    \       87 => 0,\n            88 => 0,\n            89 => 0,\n            90 =>\
    \ 0,\n            91 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6695fehr.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 5,\n \
    \   1 => 3,\n    2 => 4,\n    3 => 2,\n    4 => 1,\n    5 => 0\n);\n$guess = array(\n\
    \    0 => 2,\n    1 => 2,\n    2 => 1,\n    3 => 3,\n    4 => 4,\n    5 => 5\n\
    );\n$result = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpln1wsgug.php:13\n\
    Stack trace:\n#0 /tmp/tmpln1wsgug.php(34): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpln1wsgug.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess === $score) {\n\
    \            $result[] = 0;\n        } else {\n            $result[] = abs($guess\
    \ - $score);\n        }\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n\
    \    1 => 3,\n    2 => 5,\n    3 => 7,\n    4 => 9,\n    5 => 11,\n    6 => 13,\n\
    \    7 => 15,\n    8 => 17,\n    9 => 19,\n    10 => 21,\n    11 => 23,\n    12\
    \ => 25,\n    13 => 27,\n    14 => 29,\n    15 => 31,\n    16 => 33,\n    17 =>\
    \ 35,\n    18 => 37,\n    19 => 39,\n    20 => 41,\n    21 => 43,\n    22 => 45,\n\
    \    23 => 47,\n    24 => 49,\n    25 => 51,\n    26 => 53,\n    27 => 55,\n \
    \   28 => 57,\n    29 => 59,\n    30 => 61,\n    31 => 63,\n    32 => 65,\n  \
    \  33 => 67,\n    34 => 69,\n    35 => 71,\n    36 => 73,\n    37 => 75,\n   \
    \ 38 => 77,\n    39 => 79,\n    40 => 81,\n    41 => 83,\n    42 => 85,\n    43\
    \ => 87,\n    44 => 89,\n    45 => 91,\n    46 => 93,\n    47 => 95,\n    48 =>\
    \ 97,\n    49 => 99,\n    50 => 101,\n    51 => 103,\n    52 => 105,\n    53 =>\
    \ 107,\n    54 => 109,\n    55 => 111,\n    56 => 113,\n    57 => 115,\n    58\
    \ => 117,\n    59 => 119,\n    60 => 121,\n    61 => 123,\n    62 => 125,\n  \
    \  63 => 127,\n    64 => 129,\n    65 => 131,\n    66 => 133,\n    67 => 135,\n\
    \    68 => 137,\n    69 => 139,\n    70 => 141,\n    71 => 143,\n    72 => 145,\n\
    \    73 => 147,\n    74 => 149,\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8j0dkmnp.php on line 98

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess === $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n$game = [\n\
    \    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n\
    \    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 =>\
    \ 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n\
    \    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n \
    \   22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n  \
    \  27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n   \
    \ 32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37\
    \ => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 =>\
    \ 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n\
    \    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n \
    \   53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n  \
    \  58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n   \
    \ 63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68\
    \ => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 =>\
    \ 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5k0a4t4o.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        $result[$i] = abs($guess[$i]\
    \ - $game[$i]);\n    }\n    return $result;\n}\n$game = array(\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptrdt81l0.php on line 70

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n  \
    \  5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => \nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3kd0x89t.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => [\n       \
    \ 0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n\
    \        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9\
    \ => 10,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    2 => [\n        0 => 1,\n\
    \        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5\
    \ => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n\
    \    ],\n    3 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n     \
    \   3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    4 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    5 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    6 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    7 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    8 => [\n        0 => 1,\n    \
    \    1 => 2,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpaehn7l8a.php on line 119

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => [\n        0\
    \ => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n\
    \        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9\
    \ => 10,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    2 => [\n        0 => 1,\n\
    \        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5\
    \ => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n\
    \    ],\n    3 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n     \
    \   3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    4 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    5 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    6 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    7 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    8 => [\n        0 => 1,\n    \
    \    1 => 2,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv_aw4ow2.php on line 118

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($guess[$key] - $score[$key]);\n    }\n    return\
    \ $result;\n}\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n   \
    \     2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 =>\
    \ 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n        10 => 11,\n\
    \        11 => 12,\n        12 => 13,\n        13 => 14,\n        14 => 15,\n\
    \        15 => 16,\n        16 => 17,\n        17 => 18,\n        18 => 19,\n\
    \        19 => 20,\n        20 => 21,\n        21 => 22,\n        22 => 23,\n\
    \        23 => 24,\n        24 => 25,\n        25 => 26,\n        26 => 27,\n\
    \        27 => 28,\n        28 => 29,\n        29 => 30,\n        30 => 31,\n\
    \        31 => 32,\n        32 => 33,\n        33 => 34,\n        34 => 35,\n\
    \        35 => 36,\n        36 => 37,\n        37 => 38,\n        38 => 39,\n\
    \        39 => 40,\n        40 => 41,\n        41 => 42,\n        42 => 43,\n\
    \        43 => 44,\n        44 => 45,\n        45 => 46,\n        46 => 47,\n\
    \        47 => 48,\n        48 => 49,\n        49 => 50,\n        50 => 51,\n\
    \        51 => 52,\n        52 => 53,\n        53 => 54,\n        54 => 55,\n\
    \        55 => 56,\n        56 => 57,\n        57 => 58,\n        58 => 59,\n\
    \        59 => 60,\n        60 => 61,\n        61 => 62,\n        62 => 63,\n\
    \        63 => 64,\n        64 => 65,\n        65 => 66,\n        66 => 67,\n\
    \        67 => 68,\n        68 => 69,\n        69 => 70,\n        70 => 71,\n\
    \        71 => 72,\n        72 => 73,\n        73 => 74,\n        74 => 75,\n\
    \        75 => 76,\n        76 => 77,\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq_0j98ix.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n\
    \    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n];\n$guess\
    \ = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n$result = compare($game, $guess);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpcdp5zllw.php:15\n\
    Stack trace:\n#0 /tmp/tmpcdp5zllw.php(42): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpcdp5zllw.php on line 15\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 1,\n            1 => 1,\n            2 => 1,\n\
    \            3 => 1,\n            4 => 1,\n            5 => 1,\n            6\
    \ => 1,\n            7 => 1,\n            8 => 1,\n            9 => 1,\n     \
    \       10 => 1,\n            11 => 1,\n            12 => 1,\n            13 =>\
    \ 1,\n            14 => 1,\n            15 => 1,\n            16 => 1,\n     \
    \       17 => 1,\n            18 => 1,\n            19 => 1,\n            20 =>\
    \ 1,\n            21 => 1,\n            22 => 1,\n            23 => 1,\n     \
    \       24 => 1,\n            25 => 1,\n            26 => 1,\n            27 =>\
    \ 1,\n            28 => 1,\n            29 => 1,\n            30 => 1,\n     \
    \       31 => 1,\n            32 => 1,\n            33 => 1,\n            34 =>\
    \ 1,\n            35 => 1,\n            36 => 1,\n            37 => 1,\n     \
    \       38 => 1,\n            39 => 1,\n            40 => 1,\n            41 =>\
    \ 1,\n            42 => 1,\n            43 => 1,\n            44 => 1,\n     \
    \       45 => 1,\n            46 => 1,\n            47 => 1,\n            48 =>\
    \ 1,\n            49 => 1,\n            50 => 1,\n            51 => 1,\n     \
    \       52 => 1,\n            53 => 1,\n            54 => 1,\n            55 =>\
    \ 1,\n            56 => 1,\n            57 => 1,\n            58 => 1,\n     \
    \       59 => 1,\n            60 => 1,\n            61 => 1,\n            62 =>\
    \ 1,\n            63 => 1,\n            64 => 1,\n            65 => 1,\n     \
    \       66 => 1,\n            67 => 1,\n            68 => 1,\n            69 =>\
    \ 1,\n            70 => 1,\n            71 => 1,\n            72 => 1,\n     \
    \       73 => 1,\n            74 => 1,\n            75 => 1,\n            76 =>\
    \ 1,\n            77 => 1,\n            78 => 1,\n            79 => 1,\n     \
    \       80 => 1,\n            81 => 1,\n            82 => 1,\n            83 =>\
    \ 1,\n            84 => 1,\n            85 => 1,\n            86 => 1,\n     \
    \       87 => 1,\n            88 => 1,\n            89 => 1,\n            90 =>\
    \ 1,\n            91 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgdqb46hi.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $value) {\n        if ($guess == $value) {\n  \
    \          $result[$key] = 0;\n        } else {\n            $result[$key] = abs($guess\
    \ - $value);\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpn3_dc_jq.php:16\n\
    Stack trace:\n#0 /tmp/tmpn3_dc_jq.php(22): compare(Array, Array)\n#1 /tmp/tmpn3_dc_jq.php(26):\
    \ candidate(Array, Array)\n#2 /tmp/tmpn3_dc_jq.php(32): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpn3_dc_jq.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n\
    \    80 \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpckvo_nhw.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpf28jd7vv.php:13\n\
    Stack trace:\n#0 /tmp/tmpf28jd7vv.php(18): compare(Array, Array)\n#1 /tmp/tmpf28jd7vv.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmpf28jd7vv.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpf28jd7vv.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = 0;\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct++;\n        }\n    }\n    return $correct;\n}\n\n$game =\
    \ array(\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n   \
    \ array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq7zvp2it.php on line 74

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct[$index] = 0;\n        } else {\n            $correct[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n\n$game\
    \ = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjbr2z59f.php on line 101

    '
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        $result[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct[$index] = 0;\n        } else {\n            $correct[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n$game =\
    \ array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n  \
    \  5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp20qit0m6.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n$game = [\n\
    \    0 => 100,\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n \
    \   5 => 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n  \
    \  10 => 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n\
    \    15 => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n\
    \    20 => 100,\n    21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n\
    \    25 => 100,\n    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n\
    \    30 => 100,\n    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n\
    \    35 => 100,\n    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n\
    \    40 => 100,\n    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n\
    \    45 => 100,\n    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n\
    \    50 => 100,\n    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n\
    \    55 => 100,\n    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n\
    \    60 => 100,\n    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n\
    \    65 => 100,\n    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n\
    \    70 => 100,\n    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n\
    \    75 => 100,\n    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n\
    \    80 => 100,\n    81 => 100,\n    82 => 100,\n    83 => 100,\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpv5ithfiv.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 5,\n    1 =>\
    \ 6,\n    2 => 7,\n    3 => 8,\n    4 => 9,\n    5 => 10,\n];\n$guess = [\n  \
    \  0 => 5,\n    1 => 6,\n    2 => 7,\n    3 => 8,\n    4 => 9,\n    5 => 10,\n\
    ];\n$result = compare($game, $guess);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThank you so much! I really appreciate your help!\n<|/ c |>\n<|\
    \ c |>\nNo problem. Glad I could help.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6phfc7ly.php on line 35

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    \n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    \n\
    \    return $result;\n}\n\n$game = array(\n    array(1,2,3,4,5,6,7,8,9),\n   \
    \ array(2,3,4,5,6,7,8,9,10)\n);\n\n$guess = array(\n    array(2,3,4,5,6,7,8,9,10),\n\
    \    array(2,3,4,5,6,7,8,9,10)\n);\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmph0uh0bi1.php:16\n\
    Stack trace:\n#0 /tmp/tmph0uh0bi1.php(32): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmph0uh0bi1.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 1,\n    2 => 1,\n    3 => 1,\n    4 => 1,\n    5 => 1,\n    6 => 1,\n \
    \   7 => 1,\n    8 => 1,\n    9 => 1,\n    10 => 1,\n    11 => 1,\n    12 => 1,\n\
    \    13 => 1,\n    14 => 1,\n    15 => 1,\n    16 => 1,\n    17 => 1,\n    18\
    \ => 1,\n    19 => 1,\n    20 => 1,\n    21 => 1,\n    22 => 1,\n    23 => 1,\n\
    \    24 => 1,\n    25 => 1,\n    26 => 1,\n    27 => 1,\n    28 => 1,\n    29\
    \ => 1,\n    30 => 1,\n    31 => 1,\n    32 => 1,\n    33 => 1,\n    34 => 1,\n\
    \    35 => 1,\n    36 => 1,\n    37 => 1,\n    38 => 1,\n    39 => 1,\n    40\
    \ => 1,\n    41 => 1,\n    42 => 1,\n    43 => 1,\n    44 => 1,\n    45 => 1,\n\
    \    46 => 1,\n    47 => 1,\n    48 => 1,\n    49 => 1,\n    50 => 1,\n    51\
    \ => 1,\n    52 => 1,\n    53 => 1,\n    54 => 1,\n    55 => 1,\n    56 => 1,\n\
    \    57 => 1,\n    58 => 1,\n    59 => 1,\n    60 => 1,\n    61 => 1,\n    62\
    \ => 1,\n    63 => 1,\n    64 => 1,\n    65 => 1,\n    66 => 1,\n    67 => 1,\n\
    \    68 => 1,\n    69 => 1,\n    70 => 1,\n    71 => 1,\n    72 => 1,\n    73\
    \ => 1,\n    74 => 1,\n    75 => 1,\n    76 => 1,\n    77 => 1,\n    78 => 1,\n\
    \    79 => 1,\n    80 => 1,\n    81 => 1,\n    82 => 1,\n    83 => 1,\n    84\
    \ => 1,\n    85 => 1,\n    86 => \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvhmp8ulk.php on line 106

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 5,\n    2 =>\
    \ 6,\n    3 => 7,\n    4 => 8,\n    5 => 9,\n    6 => 10,\n    7 => 11,\n    8\
    \ => 12,\n    9 => 13,\n    10 => 14,\n    11 => 15,\n    12 => 16,\n    13 =>\
    \ 17,\n    14 => 18,\n    15 => 19,\n    16 => 20,\n    17 => 21,\n    18 => 22,\n\
    \    19 => 23,\n    20 => 24,\n    21 => 25,\n    22 => 26,\n    23 => 27,\n \
    \   24 => 28,\n    25 => 29,\n    26 => 30,\n    27 => 31,\n    28 => 32,\n  \
    \  29 => 33,\n    30 => 34,\n    31 => 35,\n    32 => 36,\n    33 => 37,\n   \
    \ 34 => 38,\n    35 => 39,\n    36 => 40,\n    37 => 41,\n    38 => 42,\n    39\
    \ => 43,\n    40 => 44,\n    41 => 45,\n    42 => 46,\n    43 => 47,\n    44 =>\
    \ 48,\n    45 => 49,\n    46 => 50,\n    47 => 51,\n    48 => 52,\n    49 => 53,\n\
    \    50 => 54,\n    51 => 55,\n    52 => 56,\n    53 => 57,\n    54 => 58,\n \
    \   55 => 59,\n    56 => 60,\n    57 => 61,\n    58 => 62,\n    59 => 63,\n  \
    \  60 => 64,\n    61 => 65,\n    62 => 66,\n    63 => 67,\n    64 => 68,\n   \
    \ 65 => 69,\n    66 => 70,\n    67 => 71,\n    68 => 72,\n    69 => 73,\n    70\
    \ => 74,\n    71 => 75,\n    72 => 76,\n    73 => 77,\n    74 => 78,\n    75 =>\
    \ 79,\n    76 => 80,\n    77 => 81,\n    78 => 82,\n    79 => 83,\n    80 => 84,\n\
    \    8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpgl05ycf5.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 0,\n            1 => 0,\n            2 => 0,\n\
    \            3 => 0,\n            4 => 0,\n            5 => 0,\n            6\
    \ => 0,\n            7 => 0,\n            8 => 0,\n            9 => 0,\n     \
    \       10 => 0,\n            11 => 0,\n            12 => 0,\n            13 =>\
    \ 0,\n            14 => 0,\n            15 => 0,\n            16 => 0,\n     \
    \       17 => 0,\n            18 => 0,\n            19 => 0,\n            20 =>\
    \ 0,\n            21 => 0,\n            22 => 0,\n            23 => 0,\n     \
    \       24 => 0,\n            25 => 0,\n            26 => 0,\n            27 =>\
    \ 0,\n            28 => 0,\n            29 => 0,\n            30 => 0,\n     \
    \       31 => 0,\n            32 => 0,\n            33 => 0,\n            34 =>\
    \ 0,\n            35 => 0,\n            36 => 0,\n            37 => 0,\n     \
    \       38 => 0,\n            39 => 0,\n            40 => 0,\n            41 =>\
    \ 0,\n            42 => 0,\n            43 => 0,\n            44 => 0,\n     \
    \       45 => 0,\n            46 => 0,\n            47 => 0,\n            48 =>\
    \ 0,\n            49 => 0,\n            50 => 0,\n            51 => 0,\n     \
    \       52 => 0,\n            53 => 0,\n            54 => 0,\n            55 =>\
    \ 0,\n            56 => 0,\n            57 => 0,\n            58 => 0,\n     \
    \       59 => 0,\n            60 => 0,\n            61 => 0,\n            62 =>\
    \ 0,\n            63 => 0,\n            64 => 0,\n            65 => 0,\n     \
    \       66 => 0,\n            67 => 0,\n            68 => 0,\n            69 =>\
    \ 0,\n            70 => 0,\n            71 => 0,\n            72 => 0,\n     \
    \       73 => 0,\n            74 => 0,\n            75 => 0,\n            76 =>\
    \ 0,\n            77 => 0,\n            78 => 0,\n            79 => 0,\n     \
    \       80 => 0,\n            81 => 0,\n            82 => 0,\n            83 =>\
    \ 0,\n            84 => 0,\n            85 => 0,\n            86 => 0,\n     \
    \       87 => 0,\n            88 => 0,\n            89 => 0,\n            90 =>\
    \ 0,\n            91 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4s5facb2.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4\
    \ => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n  \
    \  10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n   \
    \ 15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20\
    \ => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 =>\
    \ 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n\
    \    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n \
    \   36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n  \
    \  41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n   \
    \ 46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51\
    \ => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 =>\
    \ 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n\
    \    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n \
    \   67 => 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n  \
    \  72 => 73,\n    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n   \
    \ 77 => 78,\n    78\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfep0g3fa.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 3,\n    2 => 5,\n    3 => 7,\n    4 => 9,\n    5 => 11,\n    6 => 13,\n    7\
    \ => 15,\n    8 => 17,\n    9 => 19,\n    10 => 21,\n    11 => 23,\n    12 =>\
    \ 25,\n    13 => 27,\n    14 => 29,\n    15 => 31,\n    16 => 33,\n    17 => 35,\n\
    \    18 => 37,\n    19 => 39,\n    20 => 41,\n    21 => 43,\n    22 => 45,\n \
    \   23 => 47,\n    24 => 49,\n    25 => 51,\n    26 => 53,\n    27 => 55,\n  \
    \  28 => 57,\n    29 => 59,\n    30 => 61,\n    31 => 63,\n    32 => 65,\n   \
    \ 33 => 67,\n    34 => 69,\n    35 => 71,\n    36 => 73,\n    37 => 75,\n    38\
    \ => 77,\n    39 => 79,\n    40 => 81,\n    41 => 83,\n    42 => 85,\n    43 =>\
    \ 87,\n    44 => 89,\n    45 => 91,\n    46 => 93,\n    47 => 95,\n    48 => 97,\n\
    \    49 => 99,\n    50 => 101,\n    51 => 103,\n    52 => 105,\n    53 => 107,\n\
    \    54 => 109,\n    55 => 111,\n    56 => 113,\n    57 => 115,\n    58 => 117,\n\
    \    59 => 119,\n    60 => 121,\n    61 => 123,\n    62 => 125,\n    63 => 127,\n\
    \    64 => 129,\n    65 => 131,\n    66 => 133,\n    67 => 135,\n    68 => 137,\n\
    \    69 => 139,\n    70 => 141,\n    71 => 143,\n    72 => 145,\n    73 => 147,\n\
    \    74 => 149,\n    75 => 151,\n    76 => 153,\n    77 \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp80dg_pdz.php on line 96

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n\
    \    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n];\n\n\
    $guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$result = compare($game,\
    \ $guess);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI appreciate\
    \ your efforts, but the code you provided does not work. Can you please check\
    \ it again?\n<|/ c |>\n<| c |>\nI edited my answer, I forgot to add the `abs`\
    \ to the `result` array\n<|/ c |>\n<| c |>\nI edited my answer, I forgot to add\
    \ the `abs` to the `result` array\n<|/ c |>\n<| c |>\nI edited my answer, I forgot\
    \ to add the `abs` to the `result` array\n<|/ c |>\n<| c |>\nI edited my answer,\
    \ I forgot to add the `abs` to the `result` array\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnjx6ul_x.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game[0];\n\
    \    $guess = $guess[0];\n    $diff = 0;\n    foreach ($guess as $key => $value)\
    \ {\n        if ($game[$key] == $value) {\n            $diff += 0;\n        }\
    \ else {\n            $diff += abs($value - $game[$key]);\n        }\n    }\n\
    \    return $diff;\n}\n\n$game = array(\n    array(10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcgeczws2.php on line 26

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach($game as $index => $score) {\n        if($guess == $score) {\n  \
    \          $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n  \
    \  5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => \nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt3dvxlkq.php on line 101

    '
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        if($game[$i] == $guess[$i])\
    \ {\n            $correct[$i] = 0;\n        } else {\n            $correct[$i]\
    \ = abs($guess[$i] - $game[$i]);\n        }\n    }\n    return $correct;\n}\n\n\
    $game = array(5, 3, 6, 2, 7, 1, 4, 8);\n$guess = array(4, 6, 8, 3, 7, 2, 5, 1);\n\
    $correct = compare($game, $guess);\nprint_r($correct);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 1\n    [4]\
    \ => 0\n    [5] => 1\n    [6] => 1\n    [7] => 7\n)\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n        10 => 11,\n        11 => 12,\n\
    \        12 => 13,\n        13 => 14,\n        14 => 15,\n        15 => 16,\n\
    \        16 => 17,\n        17 => 18,\n        18 => 19,\n        19 => 20,\n\
    \        20 => 21,\n        21 => 22,\n        22 => 23,\n        23 => 24,\n\
    \        24 => 25,\n        25 => 26,\n        26 => 27,\n        27 => 28,\n\
    \        28 => 29,\n        29 => 30,\n        30 => 31,\n        31 => 32,\n\
    \        32 => 33,\n        33 => 34,\n        34 => 35,\n        35 => 36,\n\
    \        36 => 37,\n        37 => 38,\n        38 => 39,\n        39 => 40,\n\
    \        40 => 41,\n        41 => 42,\n        42 => 43,\n        43 => 44,\n\
    \        44 => 45,\n        45 => 46,\n        46 => 47,\n        47 => 48,\n\
    \        48 => 49,\n        49 => 50,\n        50 => 51,\n        51 => 52,\n\
    \        52 => 53,\n        53 => 54,\n        54 => 55,\n        55 => 56,\n\
    \        56 => 57,\n        57 => 58,\n        58 => 59,\n        59 => 60,\n\
    \        60 => 61,\n        61 => 62,\n        62 => 63,\n        63 => 64,\n\
    \        64 => 65,\n        65 => 66,\n        66 => 67,\n        67 => 68,\n\
    \        68 => 69,\n        69 => 70,\n        70 => 71,\n        71 => 72,\n\
    \        72 => 73,\n        73 => 74,\n        74 => 75,\n        75 => 76,\n\
    \        76 => 77,\n        77 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6wqzpy7h.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptopve4x9.php:13\n\
    Stack trace:\n#0 /tmp/tmptopve4x9.php(18): compare(Array, Array)\n#1 /tmp/tmptopve4x9.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmptopve4x9.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptopve4x9.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n$game = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n \
    \   78 => \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu3tcwzl.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n$game = [\n    0 => [\n        0 => 1,\n        1 => 0,\n        2 => 0,\n\
    \        3 => 0,\n        4 => 0,\n        5 => 0,\n        6 => 0,\n        7\
    \ => 0,\n        8 => 0,\n        9 => 0,\n    ],\n    1 => [\n        0 => 0,\n\
    \        1 => 0,\n        2 => 0,\n        3 => 0,\n        4 => 0,\n        5\
    \ => 0,\n        6 => 0,\n        7 => 0,\n        8 => 0,\n        9 => 0,\n\
    \    ],\n    2 => [\n        0 => 0,\n        1 => 0,\n        2 => 0,\n     \
    \   3 => 0,\n        4 => 0,\n        5 => 0,\n        6 => 0,\n        7 => 0,\n\
    \        8 => 0,\n        9 => 0,\n    ],\n    3 => [\n        0 => 0,\n     \
    \   1 => 0,\n        2 => 0,\n        3 => 0,\n        4 => 0,\n        5 => 0,\n\
    \        6 => 0,\n        7 => 0,\n        8 => 0,\n        9 => 0,\n    ],\n\
    \    4 => [\n        0 => 0,\n        1 => 0,\n        2 => 0,\n        3 => 0,\n\
    \        4 => 0,\n        5 => 0,\n        6 => 0,\n        7 => 0,\n        8\
    \ => 0,\n        9 => 0,\n    ],\n    5 => [\n        0 => 0,\n        1 => 0,\n\
    \        2 => 0,\n        3 => 0,\n        4 => 0,\n        5 => 0,\n        6\
    \ => 0,\n        7 => 0,\n        8 => 0,\n        9 => 0,\n    ],\n    6 => [\n\
    \        0 => 0,\n        1 => 0,\n        2 => 0,\n        3 => 0,\n        4\
    \ => 0,\n        5 => 0,\n        6 => 0,\n        7 => 0,\n        8 => 0,\n\
    \        9 => 0,\n    ],\n    7 => [\n        0 => 0,\n        1 => 0,\n     \
    \   2 => 0,\n        3 => 0,\n        4 => 0,\n        5 => 0,\n        6 => 0,\n\
    \        7 => 0,\n        8 => 0,\n        9 => 0,\n    ],\n    8 \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpng628qu5.php on line 117

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10\n];\n$guess = [\n    0 => 2,\n    1 => 3,\n   \
    \ 2 => 4,\n    3 => 5,\n    4 => 6,\n    5 => 7,\n    6 => 8,\n    7 => 9,\n \
    \   8 => 10,\n    9 => 11\n];\n$result = compare($game, $guess);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmppodt3y91.php:13\n\
    Stack trace:\n#0 /tmp/tmppodt3y91.php(41): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmppodt3y91.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $diff = 0;\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $diff = 0;\n        } else {\n \
    \           $diff = $guess - $score[$key];\n        }\n    }\n    return $diff;\n\
    }\n\n$game = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4\
    \ => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n  \
    \  10 => 11,\n    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n   \
    \ 15 => 16,\n    16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20\
    \ => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 =>\
    \ 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n\
    \    31 => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n \
    \   36 => 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n  \
    \  41 => 42,\n    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n   \
    \ 46 => 47,\n    47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51\
    \ => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 =>\
    \ 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n\
    \    62 => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n \
    \   67 => 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n  \
    \  72 => 73,\n    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => \nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpd193gg__.php on line 102

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess[$index] - $score);\n        }\n    }\n    return $result;\n}\n\n\
    $game = [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 =>\
    \ 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 =>\
    \ 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15\
    \ => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n  \
    \  20 => 100,\n];\n$guess = [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n \
    \   4 => 100,\n    5 => 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n  \
    \  9 => 100,\n    10 => 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n\
    \    14 => 100,\n    15 => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n\
    \    19 => 100,\n    20 => 100,\n];\n$result = compare($game, $guess);\nvar_dump($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for the answer. Your code works\
    \ perfectly but i need to use array_diff to compare the two arrays. I edited my\
    \ question to show you the code i tried but i get an error.\n<|/ c |>\n<| c |>\n\
    I edited my answer to include a solution that uses array_diff. Hope this helps!\n\
    <|/ c |>\n<| c |>\nThanks again for the answer. Your code works perfectly but\
    \ i need to use array_diff to compare the two arrays. I edited my question to\
    \ show you the code i tried but i get an error.\n<|/ c |>\n<| c |>\nI edited my\
    \ answer to include a solution that uses array_diff. Hope this helps!\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n$game = [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n\
    \    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n \
    \   9 \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwtps6yr5.php on line 68

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    for($i = 0; $i < count($game); $i++)\
    \ {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => 5,\n    1 => 4,\n    2 => 3,\n    3 => 2,\n    4 => 1,\n\
    \    5 => 0\n];\n$guess = [\n    0 => 3,\n    1 => 2,\n    2 => 1,\n    3 => 0,\n\
    \    4 => 1,\n    5 => 2\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nI really like this solution. Thank\
    \ you for sharing it.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpywuljzc5.php on line 39

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game['score'];\n\
    \    $guess = $guess['score'];\n    $result = [];\n    foreach ($guess as $key\
    \ => $value) {\n        $result[$key] = abs($value - $score);\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer.\
    \ Unfortunately I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any loops because I cannot use any loops because I cannot use any\
    \ loops because I cannot use any loops because I cannot use any loops because\
    \ I cannot use any \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpol2l1hi3.php on line 19

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 1,\n            1 => 2,\n            2 => 3,\n\
    \            3 => 4,\n            4 => 5,\n            5 => 6,\n            6\
    \ => 7,\n            7 => 8,\n            8 => 9,\n            9 => 10,\n    \
    \        10 => 11,\n            11 => 12,\n            12 => 13,\n           \
    \ 13 => 14,\n            14 => 15,\n            15 => 16,\n            16 => 17,\n\
    \            17 => 18,\n            18 => 19,\n            19 => 20,\n       \
    \     20 => 21,\n            21 => 22,\n            22 => 23,\n            23\
    \ => 24,\n            24 => 25,\n            25 => 26,\n            26 => 27,\n\
    \            27 => 28,\n            28 => 29,\n            29 => 30,\n       \
    \     30 => 31,\n            31 => 32,\n            32 => 33,\n            33\
    \ => 34,\n            34 => 35,\n            35 => 36,\n            36 => 37,\n\
    \            37 => 38,\n            38 => 39,\n            39 => 40,\n       \
    \     40 => 41,\n            41 => 42,\n            42 => 43,\n            43\
    \ => 44,\n            44 => 45,\n            45 => 46,\n            46 => 47,\n\
    \            47 => 48,\n            48 => 49,\n            49 => 50,\n       \
    \     50 => 51,\n            51 => 52,\n            52 => 53,\n            53\
    \ => 54,\n            54 => 55,\n            55 => 56,\n            56 => 57,\n\
    \            57 => 58,\n            58 => 59,\n            59 => 60,\n       \
    \     60 => 61,\n            61 => 62,\n            62 => 63,\n            63\
    \ => 64,\n            64 => 65,\n            65 => 66,\n            66 => 67,\n\
    \            67 => 68,\n            68 => 69,\n            69 => 70,\n       \
    \     70 => 71,\n            71 => 72,\n            72 => 73,\n            73\
    \ => 74,\n            74 => 75,\n            75 => 76,\n            76 => 77,\n\
    \            77 => 78,\n            78 => 79,\n            79 => 80,\n       \
    \     80 => 81,\n            81 => 82,\n            82 => 83,\n            83\
    \ => 84,\n            84 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpestm21lh.php on line 98

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    for($i = 0; $i < count($game); $i++)\
    \ {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfvgye4jh.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    for($i = 0; $i < count($game); $i++)\
    \ {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [9, 8, 7, 6, 5, 4, 3,\
    \ 2, 1, 0]\n];\n$guess = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1, 0]\n];\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it out with $game\
    \ = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n\
    ];\n$guess = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [9, 8, 7, 6, 5, 4, 3,\
    \ 2, 1, 0]\n];\n<|/ c |>\n<| c |>\nI added a comment to the question to clarify\
    \ the requirements.\n<|/ c |>\n<| c |>\nI added a comment to the question to clarify\
    \ the requirements.\n<|/ c |>\n<| c |>\nI added a comment to the question to clarify\
    \ the requirements.\n<|/ c |>\n<| c |>\nI added a comment to the question to clarify\
    \ the requirements.\n<|/ c |>\n<| a dscore=0 |>\nThis should work:\n<code>\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpj3njup83.php on line 30

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct[$index] = 0;\n        } else {\n            $correct[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n\n$game\
    \ = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n\
    \    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n\
    \    11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n \
    \   16 => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n  \
    \  21 => 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n   \
    \ 26 => 27,\n    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31\
    \ => 32,\n    32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 =>\
    \ 37,\n    37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n\
    \    42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n \
    \   47 => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n  \
    \  52 => 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n   \
    \ 57 => 58,\n    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62\
    \ => 63,\n    63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 =>\
    \ 68,\n    68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n\
    \    73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjbr2z59f.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct[] = 0;\n        } else {\n            $correct[] = abs($guess\
    \ - $score);\n        }\n    }\n    return $correct;\n}\n$game = array(\n    0\
    \ => 100,\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 =>\
    \ 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 =>\
    \ 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15\
    \ => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n  \
    \  20 => 100,\n    21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n\
    \    25 => 100,\n    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n\
    \    30 => 100,\n    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n\
    \    35 => 100,\n    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n\
    \    40 => 100,\n    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n\
    \    45 => 100,\n    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n\
    \    50 => 100,\n    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n\
    \    55 => 100,\n    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n\
    \    60 => 100,\n    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n\
    \    65 => 100,\n    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n\
    \    70 => 100,\n    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n\
    \    75 => 100,\n    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n\
    \    80 => 100,\n    81 => 100,\n    82 => 100,\n    83 => \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpucsqonxz.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpkejg65vp.php:13\n\
    Stack trace:\n#0 /tmp/tmpkejg65vp.php(18): compare(Array, Array)\n#1 /tmp/tmpkejg65vp.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmpkejg65vp.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpkejg65vp.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess[$index] - $score);\n        }\n    }\n    return $result;\n}\n\n\
    $game = [\n    1 => 5,\n    2 => 4,\n    3 => 3,\n    4 => 2,\n    5 => 1,\n];\n\
    \n$guess = [\n    1 => 5,\n    2 => 4,\n    3 => 3,\n    4 => 2,\n    5 => 1,\n\
    \    6 => 5,\n    7 => 4,\n    8 => 3,\n    9 => 2,\n    10 => 1,\n];\n\nvar_dump(compare($game,\
    \ $guess));\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprxwqk33j.php on line 44

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = array(\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzi1cpsse.php on line 71

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($guess - $score);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n        10 => 11,\n        11 => 12,\n\
    \        12 => 13,\n        13 => 14,\n        14 => 15,\n        15 => 16,\n\
    \        16 => 17,\n        17 => 18,\n        18 => 19,\n        19 => 20,\n\
    \        20 => 21,\n        21 => 22,\n        22 => 23,\n        23 => 24,\n\
    \        24 => 25,\n        25 => 26,\n        26 => 27,\n        27 => 28,\n\
    \        28 => 29,\n        29 => 30,\n        30 => 31,\n        31 => 32,\n\
    \        32 => 33,\n        33 => 34,\n        34 => 35,\n        35 => 36,\n\
    \        36 => 37,\n        37 => 38,\n        38 => 39,\n        39 => 40,\n\
    \        40 => 41,\n        41 => 42,\n        42 => 43,\n        43 => 44,\n\
    \        44 => 45,\n        45 => 46,\n        46 => 47,\n        47 => 48,\n\
    \        48 => 49,\n        49 => 50,\n        50 => 51,\n        51 => 52,\n\
    \        52 => 53,\n        53 => 54,\n        54 => 55,\n        55 => 56,\n\
    \        56 => 57,\n        57 => 58,\n        58 => 59,\n        59 => 60,\n\
    \        60 => 61,\n        61 => 62,\n        62 => 63,\n        63 => 64,\n\
    \        64 => 65,\n        65 => 66,\n        66 => 67,\n        67 => 68,\n\
    \        68 => 69,\n        69 => 70,\n        70 => 71,\n        71 => 72,\n\
    \        72 => 73,\n        73 => 74,\n        74 => 75,\n        75 => 76,\n\
    \        76 => 77,\n        77 => \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpojwcebdk.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 100,\n    2\
    \ => 50,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 =>\
    \ 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 => 100,\n    12 =>\
    \ 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16 => 100,\n    17\
    \ => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n    21 => 100,\n  \
    \  22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n    26 => 100,\n\
    \    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n    31 => 100,\n\
    \    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n    36 => 100,\n\
    \    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n    41 => 100,\n\
    \    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n    46 => 100,\n\
    \    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n    51 => 100,\n\
    \    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n    56 => 100,\n\
    \    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n    61 => 100,\n\
    \    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n    66 => 100,\n\
    \    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n    71 => 100,\n\
    \    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n    76 => 100,\n\
    \    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n    81 => 100,\n\
    \    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n    86 => 100,\n\
    \    87 => 100,\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp0fqprwh0.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdkoje_c8.php on line 20

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 100,\n    2\
    \ => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 =>\
    \ 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 => 100,\n    12 =>\
    \ 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16 => 100,\n    17\
    \ => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n    21 => 100,\n  \
    \  22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n    26 => 100,\n\
    \    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n    31 => 100,\n\
    \    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n    36 => 100,\n\
    \    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n    41 => 100,\n\
    \    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n    46 => 100,\n\
    \    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n    51 => 100,\n\
    \    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n    56 => 100,\n\
    \    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n    61 => 100,\n\
    \    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n    66 => 100,\n\
    \    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n    71 => 100,\n\
    \    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n    76 => 100,\n\
    \    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n    81 => 100,\n\
    \    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n    86 => 100,\n\
    \    87 => 100,\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp0xe46wv.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 10,\n    1\
    \ => 5,\n    2 => 8,\n    3 => 7,\n    4 => 1,\n    5 => 2,\n    6 => 3,\n   \
    \ 7 => 4,\n    8 => 5,\n    9 => 6,\n];\n\n$guess = [\n    0 => 10,\n    1 =>\
    \ 5,\n    2 => 8,\n    3 => 7,\n    4 => 1,\n    5 => 2,\n    6 => 3,\n    7 =>\
    \ 4,\n    8 => 5,\n    9 => 6,\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Unfortunately this\
    \ does not work when there are multiple matches. I updated the question to reflect\
    \ this.\n<|/ c |>\n<| c |>\nI updated my answer with a new solution that should\
    \ work for multiple matches.\n<|/ c |>\n<| c |>\nThanks again for your answer.\
    \ Unfortunately this does not work when there are multiple matches. I updated\
    \ the question to reflect this.\n<|/ c |>\n<| c |>\nI updated my answer with a\
    \ new solution that should work for multiple matches.\n<|/ c |>\n<| c |>\nThanks\
    \ again for your answer. Unfortunately this does not work when there are multiple\
    \ matches. I updated the question to reflect this.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbvm42qnr.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        if ($game[$key] == $value) {\n            $result[$key] =\
    \ 0;\n        } else {\n            $result[$key] = abs($game[$key] - $value);\n\
    \        }\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvzxizid9.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n$game = [\n    1 => 100,\n    2 =>\
    \ 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 => 100,\n\
    \    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 => 100,\n    12 => 100,\n\
    \    13 => 100,\n    14 => 100,\n    15 => 100,\n    16 => 100,\n    17 => 100,\n\
    \    18 => 100,\n    19 => 100,\n    20 => 100,\n    21 => 100,\n    22 => 100,\n\
    \    23 => 100,\n    24 => 100,\n    25 => 100,\n    26 => 100,\n    27 => 100,\n\
    \    28 => 100,\n    29 => 100,\n    30 => 100,\n    31 => 100,\n    32 => 100,\n\
    \    33 => 100,\n    34 => 100,\n    35 => 100,\n    36 => 100,\n    37 => 100,\n\
    \    38 => 100,\n    39 => 100,\n    40 => 100,\n    41 => 100,\n    42 => 100,\n\
    \    43 => 100,\n    44 => 100,\n    45 => 100,\n    46 => 100,\n    47 => 100,\n\
    \    48 => 100,\n    49 => 100,\n    50 => 100,\n    51 => 100,\n    52 => 100,\n\
    \    53 => 100,\n    54 => 100,\n    55 => 100,\n    56 => 100,\n    57 => 100,\n\
    \    58 => 100,\n    59 => 100,\n    60 => 100,\n    61 => 100,\n    62 => 100,\n\
    \    63 => 100,\n    64 => 100,\n    65 => 100,\n    66 => 100,\n    67 => 100,\n\
    \    68 => 100,\n    69 => 100,\n    70 => 100,\n    71 => 100,\n    72 => 100,\n\
    \    73 => 100,\n    74 => 100,\n    75 => 100,\n    76 => 100,\n    77 => 100,\n\
    \    78 => 100,\n    79 => 100,\n    80 => 100,\n    81 => 100,\n    82 => 100,\n\
    \    83 => 100,\n    84 => 100,\n    85 => 100,\n    86 => 100,\n    87 => 100,\n\
    \    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8fni78jl.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n\
    \    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n];\n\n\
    $guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$result = compare($game,\
    \ $guess);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThank\
    \ you for your answer. Unfortunately I cannot use foreach loops because I do not\
    \ know how many matches there will be.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to include a solution without foreach loops.\n<|/ c |>\n<| c |>\nThank you for\
    \ your answer. Unfortunately I cannot use foreach loops because I do not know\
    \ how many matches there will be.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution without foreach loops.\n<|/ c |>\n<| c |>\nThank you for your answer.\
    \ Unfortunately I cannot use foreach loops because I do not know how many matches\
    \ there will be.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdl527eie.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $diff = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $diff[$key] = abs($value - $score[$key]);\n    }\n    return $diff;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n        10 => 11,\n        11 => 12,\n\
    \        12 => 13,\n        13 => 14,\n        14 => 15,\n        15 => 16,\n\
    \        16 => 17,\n        17 => 18,\n        18 => 19,\n        19 => 20,\n\
    \        20 => 21,\n        21 => 22,\n        22 => 23,\n        23 => 24,\n\
    \        24 => 25,\n        25 => 26,\n        26 => 27,\n        27 => 28,\n\
    \        28 => 29,\n        29 => 30,\n        30 => 31,\n        31 => 32,\n\
    \        32 => 33,\n        33 => 34,\n        34 => 35,\n        35 => 36,\n\
    \        36 => 37,\n        37 => 38,\n        38 => 39,\n        39 => 40,\n\
    \        40 => 41,\n        41 => 42,\n        42 => 43,\n        43 => 44,\n\
    \        44 => 45,\n        45 => 46,\n        46 => 47,\n        47 => 48,\n\
    \        48 => 49,\n        49 => 50,\n        50 => 51,\n        51 => 52,\n\
    \        52 => 53,\n        53 => 54,\n        54 => 55,\n        55 => 56,\n\
    \        56 => 57,\n        57 => 58,\n        58 => 59,\n        59 => 60,\n\
    \        60 => 61,\n        61 => 62,\n        62 => 63,\n        63 => 64,\n\
    \        64 => 65,\n        65 => 66,\n        66 => 67,\n        67 => 68,\n\
    \        68 => 69,\n        69 => 70,\n        70 => 71,\n        71 => 72,\n\
    \        72 => 73,\n        73 => 74,\n        74 => 75,\n        75 => 76,\n\
    \        76 => 77,\n        77\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp75fcukl6.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n$game = array(\n\
    \    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n\
    \    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 =>\
    \ 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n\
    \    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n \
    \   22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n  \
    \  27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n   \
    \ 32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37\
    \ => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 =>\
    \ 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n\
    \    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n \
    \   53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n  \
    \  58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n   \
    \ 63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68\
    \ => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 =>\
    \ 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpvms3oaeb.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n\
    \    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n    ],\n];\n\n\
    $guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$result = compare($game,\
    \ $guess);\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n      \
    \  2 => 3,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 =>\
    \ 3,\n    ],\n    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n];\n\n$guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$result\
    \ = [];\nforeach ($guess as $key => $value) {\n    $result[$key] = abs($value\
    \ - $game[$key]);\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n      \
    \  2 => 3,\n    ],\n    1 => [\n        0 => 1,\n        1 => 2,\n        2 =>\
    \ 3,\n    ],\n    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n];\n\n$guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$result\
    \ = [];\nforeach ($guess as $key => $value) {\n    $result[$key] = abs($value\
    \ - $game[$key]);\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n      \
    \  2 => 3,\n    ],\n    1 => [\n        0 => 1,\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsop000r9.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($guess - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \    ],\n    1 => [\n        0 => 2,\n        1 => 3,\n        2 => 4,\n    ],\n\
    \    2 => [\n        0 => 3,\n        1 => 4,\n        2 => 5,\n    ],\n];\n\n\
    $guess = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n];\n\n$result = compare($game,\
    \ $guess);\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ for your answer. Unfortunately this does not work as I intended. Your code returns\
    \ an array with two elements: 0 and 1. I need the array to be the same length\
    \ as the number of elements in the $guess array. My code returns an array with\
    \ two elements: 0 and 1. I need the array to be the same length as the number\
    \ of elements in the $guess array. My code returns an array with two elements:\
    \ 0 and 1. I need the array to be the same length as the number of elements in\
    \ the $guess array. My code returns an array with two elements: 0 and 1. I need\
    \ the array to be the same length as the number of elements in the $guess array.\
    \ My code returns an array with two elements: 0 and 1. I need the array to be\
    \ the same length as the number of elements in the $guess array. My code returns\
    \ an array with two elements: 0 and 1. I need the array to be the same length\
    \ as the number of elements in the $guess array. My code returns an array with\
    \ two elements: 0 and 1. I need the array to be the same length as the number\
    \ of elements in the $guess array. My code returns an array with two elements:\
    \ 0 and 1. I need the array to be the same length as the number of elements in\
    \ the $guess array. My code returns an array with two elements: 0 and 1. I need\
    \ the array to be the same length as the number of elements in the $guess array.\
    \ My code returns an array with two elements: 0 and 1. I need the array to be\
    \ the same length as the number of elements in the $guess array. My code returns\
    \ an array with two elements: 0 and 1. I need the array to be the same length\
    \ as the number of elements in the $guess array. My code returns an array with\
    \ two elements: 0 and 1. I need the array to be the same length as the number\
    \ of elements in the $guess array. My code returns an array with two elements:\
    \ 0 and 1. I need the array to be the same length as the number of elements in\
    \ the $guess array. My code returns an array with two elements: 0 and 1. I need\
    \ the \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpa9mo0_g7.php on line 46

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [\n  \
    \      0 => [\n            0 => 0,\n            1 => 0,\n            2 => 0,\n\
    \            3 => 0,\n            4 => 0,\n            5 => 0,\n            6\
    \ => 0,\n            7 => 0,\n            8 => 0,\n            9 => 0,\n     \
    \       10 => 0,\n            11 => 0,\n            12 => 0,\n            13 =>\
    \ 0,\n            14 => 0,\n            15 => 0,\n            16 => 0,\n     \
    \       17 => 0,\n            18 => 0,\n            19 => 0,\n            20 =>\
    \ 0,\n            21 => 0,\n            22 => 0,\n            23 => 0,\n     \
    \       24 => 0,\n            25 => 0,\n            26 => 0,\n            27 =>\
    \ 0,\n            28 => 0,\n            29 => 0,\n            30 => 0,\n     \
    \       31 => 0,\n            32 => 0,\n            33 => 0,\n            34 =>\
    \ 0,\n            35 => 0,\n            36 => 0,\n            37 => 0,\n     \
    \       38 => 0,\n            39 => 0,\n            40 => 0,\n            41 =>\
    \ 0,\n            42 => 0,\n            43 => 0,\n            44 => 0,\n     \
    \       45 => 0,\n            46 => 0,\n            47 => 0,\n            48 =>\
    \ 0,\n            49 => 0,\n            50 => 0,\n            51 => 0,\n     \
    \       52 => 0,\n            53 => 0,\n            54 => 0,\n            55 =>\
    \ 0,\n            56 => 0,\n            57 => 0,\n            58 => 0,\n     \
    \       59 => 0,\n            60 => 0,\n            61 => 0,\n            62 =>\
    \ 0,\n            63 => 0,\n            64 => 0,\n            65 => 0,\n     \
    \       66 => 0,\n            67 => 0,\n            68 => 0,\n            69 =>\
    \ 0,\n            70 => 0,\n            71 => 0,\n            72 => 0,\n     \
    \       73 => 0,\n            74 => 0,\n            75 => 0,\n            76 =>\
    \ 0,\n            77 => 0,\n            78 => 0,\n            79 => 0,\n     \
    \       80 => 0,\n            81 => 0,\n            82 => 0,\n            83 =>\
    \ 0,\n            84 => 0,\n            85 => 0,\n            86 => 0,\n     \
    \       87 => 0,\n            88 => 0,\n            89 => 0,\n            90 =>\
    \ 0,\n            91 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4s5facb2.php on line 105

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        if ($game[$key] == $value) {\n            $result[$key] = 0;\n  \
    \      } else {\n            $result[$key] = abs($game[$key] - $value);\n    \
    \    }\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 => 2,\n \
    \   2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13\
    \ => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 =>\
    \ 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n\
    \    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n \
    \   29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n  \
    \  34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n   \
    \ 39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n    44\
    \ => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n    49 =>\
    \ 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n\
    \    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n \
    \   60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n  \
    \  65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n   \
    \ 70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n    75\
    \ => 76,\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxemnow7z.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 100,\n    1\
    \ => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 =>\
    \ 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 =>\
    \ 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16\
    \ => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n  \
    \  21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n\
    \    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n\
    \    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n\
    \    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n\
    \    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n\
    \    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n\
    \    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n\
    \    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n\
    \    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n\
    \    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n\
    \    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n\
    \    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n\
    \    81 => 100,\n    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n\
    \    86 => 100,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw906i_yu.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        if ($game[$key] == $value) {\n            $result[$key] = 0;\n  \
    \      } else {\n            $result[$key] = abs($game[$key] - $value);\n    \
    \    }\n    }\n    return $result;\n}\n\n$game = [\n    1 => 1,\n    2 => 1,\n\
    \    3 => 1,\n    4 => 1,\n    5 => 1,\n    6 => 1,\n    7 => 1,\n    8 => 1,\n\
    \    9 => 1,\n    10 => 1,\n    11 => 1,\n    12 => 1,\n    13 => 1,\n    14 =>\
    \ 1,\n    15 => 1,\n    16 => 1,\n    17 => 1,\n    18 => 1,\n    19 => 1,\n \
    \   20 => 1,\n    21 => 1,\n    22 => 1,\n    23 => 1,\n    24 => 1,\n    25 =>\
    \ 1,\n    26 => 1,\n    27 => 1,\n    28 => 1,\n    29 => 1,\n    30 => 1,\n \
    \   31 => 1,\n    32 => 1,\n    33 => 1,\n    34 => 1,\n    35 => 1,\n    36 =>\
    \ 1,\n    37 => 1,\n    38 => 1,\n    39 => 1,\n    40 => 1,\n    41 => 1,\n \
    \   42 => 1,\n    43 => 1,\n    44 => 1,\n    45 => 1,\n    46 => 1,\n    47 =>\
    \ 1,\n    48 => 1,\n    49 => 1,\n    50 => 1,\n    51 => 1,\n    52 => 1,\n \
    \   53 => 1,\n    54 => 1,\n    55 => 1,\n    56 => 1,\n    57 => 1,\n    58 =>\
    \ 1,\n    59 => 1,\n    60 => 1,\n    61 => 1,\n    62 => 1,\n    63 => 1,\n \
    \   64 => 1,\n    65 => 1,\n    66 => 1,\n    67 => 1,\n    68 => 1,\n    69 =>\
    \ 1,\n    70 => 1,\n    71 => 1,\n    72 => 1,\n    73 => 1,\n    74 => 1,\n \
    \   75 => 1,\n    76 => 1,\n    77 => 1,\n    78 => 1,\n    79 => 1,\n    80 =>\
    \ 1,\n    81 => 1,\n    82 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzp7d31py.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    1 => [\n        0 => 1,\n\
    \        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5\
    \ => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n\
    \    ],\n];\n\n$guess = [\n    0 => [\n        0 => 1,\n        1 => 2,\n    \
    \    2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 =>\
    \ 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    1 => [\n\
    \        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4\
    \ => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n\
    \        9 => 10,\n    ],\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. Your code\
    \ works perfectly for me, but I cannot understand why my code does not work. Could\
    \ you please explain it to me?\n<|/ c |>\n<| c |>\nI added a comment to my answer,\
    \ hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for me, but I cannot understand why my code does not work. Could you please\
    \ explain it to me?\n<|/ c |>\n<| c |>\nI added a comment to my answer, hope it\
    \ helps.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp79y9bkxe.php on line 76

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10, 20,\
    \ 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7_fpl0o9.php on line 78

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = [\n    1 => 1,\n    2 =>\
    \ 2,\n    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 =>\
    \ 8,\n    9 => 9,\n    10 => 10\n];\n\n$guess = [\n    1 => 1,\n    2 => 2,\n\
    \    3 => 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n\
    \    9 => 9,\n    10 => 10\n];\n\nvar_dump(compare($game, $guess));\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis answer was very helpful to me and I appreciate\
    \ you taking the time to write it out. Thank you!\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcrzh0nsj.php on line 45

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3\
    \ => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n        10 => 11,\n        11 => 12,\n   \
    \     12 => 13,\n        13 => 14,\n        14 => 15,\n        15 => 16,\n   \
    \     16 => 17,\n        17 => 18,\n        18 => 19,\n        19 => 20,\n   \
    \     20 => 21,\n        21 => 22,\n        22 => 23,\n        23 => 24,\n   \
    \     24 => 25,\n        25 => 26,\n        26 => 27,\n        27 => 28,\n   \
    \     28 => 29,\n        29 => 30,\n        30 => 31,\n        31 => 32,\n   \
    \     32 => 33,\n        33 => 34,\n        34 => 35,\n        35 => 36,\n   \
    \     36 => 37,\n        37 => 38,\n        38 => 39,\n        39 => 40,\n   \
    \     40 => 41,\n        41 => 42,\n        42 => 43,\n        43 => 44,\n   \
    \     44 => 45,\n        45 => 46,\n        46 => 47,\n        47 => 48,\n   \
    \     48 => 49,\n        49 => 50,\n        50 => 51,\n        51 => 52,\n   \
    \     52 => 53,\n        53 => 54,\n        54 => 55,\n        55 => 56,\n   \
    \     56 => 57,\n        57 => 58,\n        58 => 59,\n        59 => 60,\n   \
    \     60 => 61,\n        61 => 62,\n        62 => 63,\n        63 => 64,\n   \
    \     64 => 65,\n        65 => 66,\n        66 => 67,\n        67 => 68,\n   \
    \     68 => 69,\n        69 => 70,\n        70 => 71,\n        71 => 72,\n   \
    \     72 => 73,\n        73 => 74,\n        74 => 75,\n        75 => 76,\n   \
    \     76 => 77\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_bohi60c.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n  \
    \  5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n);\n$guess = array(\n\
    \    0 => 1,\n    1 => 3,\n    2 => 4,\n    3 => 5,\n    4 => 6,\n    5 => 7,\n\
    \    6 => 8,\n    7 => 9,\n    8 => 10,\n    9 => 11\n);\n\n$result = compare($game,\
    \ $guess);\nprint_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp2yysdc10.php:16\n\
    Stack trace:\n#0 /tmp/tmp2yysdc10.php(47): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmp2yysdc10.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach($guess as $key => $value)\
    \ {\n        $result[$key] = abs($guess[$key] - $score[$key]);\n    }\n    return\
    \ $result;\n}\n$game = array(\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7,\
    \ 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3,\
    \ 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6,\
    \ 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5, 6, 3, 7, 8),\n    array(5,\
    \ 6, 3, 7, 8),\n    array(5, 6, \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp43zkxw7j.php on line 77

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThank you for the answer, but this doesn't\
    \ seem to work. Could you please explain how this works?\n<|/ c |>\n<| c |>\n\
    I added a brief explanation to the answer.\n<|/ c |>\n<| c |>\nThank you for the\
    \ explanation. I tried the code and it doesn't seem to work. Could you please\
    \ explain how this works?\n<|/ c |>\n<| c |>\nI added a brief explanation to the\
    \ answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnol_7vbs.php on line 21

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        if ($game[$key] == $value) {\n            $result[$key] = 0;\n  \
    \      } else {\n            $result[$key] = abs($game[$key] - $value);\n    \
    \    }\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 => 2,\n\
    \    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10\n];\n\n$guess = [\n    0 => 1,\n    1 => 2,\n    2 =>\
    \ 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 =>\
    \ 9,\n    9 => 10\n];\n\n$result = compare($game, $guess);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. Your solution\
    \ works perfectly for me. Thanks again\n<|/ c |>\n<| c |>\nYou're welcome! Glad\
    \ I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7ga264fa.php on line 52

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 =>\
    \ 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n   \
    \ 11 => 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16\
    \ => 17,\n    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 =>\
    \ 22,\n    22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n\
    \    27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n \
    \   32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n  \
    \  37 => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n   \
    \ 42 => 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47\
    \ => 48,\n    48 => 49,\n    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 =>\
    \ 53,\n    53 => 54,\n    54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n\
    \    58 => 59,\n    59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n \
    \   63 => 64,\n    64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n  \
    \  68 => 69,\n    69 => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n   \
    \ 73 => 74,\n    74 => 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppymarfhl.php on line 101

    '
  timestamp: 1659730795
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $key => $value) {\n        if ($guess == $value) {\n  \
    \          $correct[$key] = 0;\n        } else {\n            $correct[$key] =\
    \ abs($guess - $value);\n        }\n    }\n    return $correct;\n}\n$game = array(\n\
    \    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n\
    \    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 =>\
    \ 12,\n    12 => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n\
    \    17 => 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n \
    \   22 => 23,\n    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n  \
    \  27 => 28,\n    28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n   \
    \ 32 => 33,\n    33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37\
    \ => 38,\n    38 => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 =>\
    \ 43,\n    43 => 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n\
    \    48 => 49,\n    49 => 50,\n    50 => 51\n);\n$guess = array(\n    0 => 1,\n\
    \    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12\
    \ => 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 =>\
    \ 18,\n    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n\
    \    23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n \
    \   28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n  \
    \  33 => 34,\n    \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpeivl91ad.php on line 110

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10, 20,\
    \ 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7_fpl0o9.php on line 78

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n$game = array(\n\
    \    0 => 100,\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n \
    \   5 => 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n  \
    \  10 => 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n\
    \    15 => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n\
    \    20 => 100,\n    21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n\
    \    25 => 100,\n    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n\
    \    30 => 100,\n    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n\
    \    35 => 100,\n    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n\
    \    40 => 100,\n    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n\
    \    45 => 100,\n    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n\
    \    50 => 100,\n    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n\
    \    55 => 100,\n    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n\
    \    60 => 100,\n    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n\
    \    65 => 100,\n    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n\
    \    70 => 100,\n    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n\
    \    75 => 100,\n    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n\
    \    80 => 100,\n    81 => 100,\n    82 => 100,\n    83 => \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmn6xyjjk.php on line 106

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game['score'];\n\
    \    $guess = $game['guess'];\n    $result = array();\n    foreach ($guess as\
    \ $key => $value) {\n        $result[$key] = abs($value - $score[$key]);\n   \
    \ }\n    return $result;\n}\n$game = array(\n    'score' => array(\n        0\
    \ => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n\
    \        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9\
    \ => 10,\n        10 => 11,\n        11 => 12,\n        12 => 13,\n        13\
    \ => 14,\n        14 => 15,\n        15 => 16,\n        16 => 17,\n        17\
    \ => 18,\n        18 => 19,\n        19 => 20,\n        20 => 21,\n        21\
    \ => 22,\n        22 => 23,\n        23 => 24,\n        24 => 25,\n        25\
    \ => 26,\n        26 => 27,\n        27 => 28,\n        28 => 29,\n        29\
    \ => 30,\n        30 => 31,\n        31 => 32,\n        32 => 33,\n        33\
    \ => 34,\n        34 => 35,\n        35 => 36,\n        36 => 37,\n        37\
    \ => 38,\n        38 => 39,\n        39 => 40,\n        40 => 41,\n        41\
    \ => 42,\n        42 => 43,\n        43 => 44,\n        44 => 45,\n        45\
    \ => 46,\n        46 => 47,\n        47 => 48,\n        48 => 49,\n        49\
    \ => 50,\n        50 => 51,\n        51 => 52,\n        52 => 53,\n        53\
    \ => 54,\n        54 => 55,\n        55 => 56,\n        56 => 57,\n        57\
    \ => 58,\n        58 => 59,\n        59 => 60,\n        60 => 61,\n        61\
    \ => 62,\n        62 => 63,\n        63 => 64,\n        64 => 65,\n        65\
    \ => 66,\n        66 => 67,\n        67 => 68,\n        68 => 69,\n        69\
    \ => 70,\n        70 => 71,\n        71 => 72,\n        72 => 73,\n        73\
    \ => 74,\n        74 => 75,\n        75 => 76,\n        76 => \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpiojxvrfq.php on line 98

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10, 20,\
    \ 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpszjaoeuv.php on line 78

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n \
    \   1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10\n);\n$guess = array(\n    0 => 2,\n   \
    \ 1 => 4,\n    2 => 6,\n    3 => 8,\n    4 => 10,\n    5 => 12,\n    6 => 14,\n\
    \    7 => 16,\n    8 => 18,\n    9 => 20\n);\n$result = compare($game, $guess);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpp7_je68k.php:13\n\
    Stack trace:\n#0 /tmp/tmpp7_je68k.php(42): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpp7_je68k.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n\
    \    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n\
    \    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n\
    \    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n\
    \    21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n\
    \    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n\
    \    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n\
    \    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n\
    \    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n\
    \    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n\
    \    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n\
    \    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n\
    \    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n\
    \    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n\
    \    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n\
    \    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n\
    \    81 => 100,\n    82 => 100,\n    83 => 100,\n    84 => 100,\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpe05e2nz3.php on line 107

    '
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $diff = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $diff[$key] = abs($guess[$key] - $score[$key]);\n    }\n    return\
    \ $diff;\n}\n$game = [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n \
    \   4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n\
    ];\n$guess = [\n    0 => 2,\n    1 => 3,\n    2 => 4,\n    3 => 5,\n    4 => 6,\n\
    \    5 => 7,\n    6 => 8,\n    7 => 9,\n    8 => 10,\n    9 => 11\n];\n$diff =\
    \ compare($game, $guess);\nprint_r($diff);\nfunction candidate(...$args) {\n \
    \   return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 1\n    [4]\
    \ => 1\n    [5] => 1\n    [6] => 1\n    [7] => 1\n    [8] => 1\n    [9] => 1\n\
    )\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ array(\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n   \
    \ array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnqwzuecc.php on line 74

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnu2ff5ni.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $correct[$index] = 0;\n        } else {\n            $correct[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $correct;\n}\n\n$game\
    \ = array(\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n \
    \   array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph9eoyciy.php on line 73

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess[$index] == $score)\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess[$index] - $score);\n        }\n    }\n    return $result;\n}\n\n\
    $game = [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 =>\
    \ 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 =>\
    \ 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15\
    \ => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n  \
    \  20 => 100,\n];\n\n$guess = [\n    1 => 100,\n    2 => 100,\n    3 => 100,\n\
    \    4 => 100,\n    5 => 100,\n    6 => 100,\n    7 => 100,\n    8 => 100,\n \
    \   9 => 100,\n    10 => 100,\n    11 => 100,\n    12 => 100,\n    13 => 100,\n\
    \    14 => 100,\n    15 => 100,\n    16 => 100,\n    17 => 100,\n    18 => 100,\n\
    \    19 => 100,\n    20 => 100,\n];\n\nvar_dump(compare($game, $guess));\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you for your answer. Unfortunately, the code\
    \ you provided does not work as intended. As I mentioned in the question, I am\
    \ looking for a way to compare the two arrays and return an array with the difference\
    \ between the two arrays. I do not want to compare the two arrays and then return\
    \ the difference. I am looking for a way to compare the two arrays and return\
    \ the difference between the two arrays. I do not want to compare the two arrays\
    \ and then return the difference. I am looking for a way to compare the two arrays\
    \ and return the difference between the two arrays. I do not want to compare the\
    \ two arrays and then return the difference. I am looking for a way to compare\
    \ the two arrays and return the difference between the two arrays.\n<|/ c |>\n\
    <| c |>\nI edited my answer, I hope it helps you\n<|/ c |>\n<| c |>\nThank you\
    \ for your answer. Unfortunately, the code you provided does not work as intended.\
    \ As I mentioned in the question, I am looking for a way to compare the two arrays\
    \ and return an array with the difference between the two arrays. I do not want\
    \ to compare the two arrays and then return the difference. I am looking for a\
    \ way to compare the two \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr6k_p7ru.php on line 69

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 10,\n    1\
    \ => 5,\n    2 => 5,\n    3 => 10,\n    4 => 5,\n    5 => 10,\n    6 => 5,\n \
    \   7 => 10,\n    8 => 5,\n    9 => 10,\n];\n\n$guess = [\n    0 => 5,\n    1\
    \ => 5,\n    2 => 5,\n    3 => 5,\n    4 => 5,\n    5 => 5,\n    6 => 5,\n   \
    \ 7 => 5,\n    8 => 5,\n    9 => 5,\n];\n\n$result = compare($game, $guess);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpiccfxq5q.php:13\n\
    Stack trace:\n#0 /tmp/tmpiccfxq5q.php(44): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpiccfxq5q.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 3,\n    2 => 5,\n    3 => 7,\n    4 => 9,\n    5 => 11,\n    6 => 13,\n    7\
    \ => 15,\n    8 => 17,\n    9 => 19,\n    10 => 21,\n    11 => 23,\n    12 =>\
    \ 25,\n    13 => 27,\n    14 => 29,\n    15 => 31,\n    16 => 33,\n    17 => 35,\n\
    \    18 => 37,\n    19 => 39,\n    20 => 41,\n    21 => 43,\n    22 => 45,\n \
    \   23 => 47,\n    24 => 49,\n    25 => 51,\n    26 => 53,\n    27 => 55,\n  \
    \  28 => 57,\n    29 => 59,\n    30 => 61,\n    31 => 63,\n    32 => 65,\n   \
    \ 33 => 67,\n    34 => 69,\n    35 => 71,\n    36 => 73,\n    37 => 75,\n    38\
    \ => 77,\n    39 => 79,\n    40 => 81,\n    41 => 83,\n    42 => 85,\n    43 =>\
    \ 87,\n    44 => 89,\n    45 => 91,\n    46 => 93,\n    47 => 95,\n    48 => 97,\n\
    \    49 => 99,\n    50 => 101,\n    51 => 103,\n    52 => 105,\n    53 => 107,\n\
    \    54 => 109,\n    55 => 111,\n    56 => 113,\n    57 => 115,\n    58 => 117,\n\
    \    59 => 119,\n    60 => 121,\n    61 => 123,\n    62 => 125,\n    63 => 127,\n\
    \    64 => 129,\n    65 => 131,\n    66 => 133,\n    67 => 135,\n    68 => 137,\n\
    \    69 => 139,\n    70 => 141,\n    71 => 143,\n    72 => 145,\n    73 => 147,\n\
    \    74 => 149,\n    75 => 151,\n    76 => 153,\n    77 \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp80dg_pdz.php on line 96

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        if ($game[$key] == $value) {\n            $result[$key] =\
    \ 0;\n        } else {\n            $result[$key] = abs($game[$key] - $value);\n\
    \        }\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppezmc8io.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $result[$key] = 0;\n        } else {\n            $result[$key] = abs($guess\
    \ - $score);\n        }\n    }\n    return $result;\n}\n$game = [\n    0 => [\n\
    \        0 => 1,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n        4\
    \ => 1,\n        5 => 1,\n        6 => 1,\n        7 => 1,\n        8 => 1,\n\
    \        9 => 1,\n    ],\n    1 => [\n        0 => 1,\n        1 => 1,\n     \
    \   2 => 1,\n        3 => 1,\n        4 => 1,\n        5 => 1,\n        6 => 1,\n\
    \        7 => 1,\n        8 => 1,\n        9 => 1,\n    ],\n    2 => [\n     \
    \   0 => 1,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n        4 => 1,\n\
    \        5 => 1,\n        6 => 1,\n        7 => 1,\n        8 => 1,\n        9\
    \ => 1,\n    ],\n    3 => [\n        0 => 1,\n        1 => 1,\n        2 => 1,\n\
    \        3 => 1,\n        4 => 1,\n        5 => 1,\n        6 => 1,\n        7\
    \ => 1,\n        8 => 1,\n        9 => 1,\n    ],\n    4 => [\n        0 => 1,\n\
    \        1 => 1,\n        2 => 1,\n        3 => 1,\n        4 => 1,\n        5\
    \ => 1,\n        6 => 1,\n        7 => 1,\n        8 => 1,\n        9 => 1,\n\
    \    ],\n    5 => [\n        0 => 1,\n        1 => 1,\n        2 => 1,\n     \
    \   3 => 1,\n        4 => 1,\n        5 => 1,\n        6 => 1,\n        7 => 1,\n\
    \        8 => 1,\n        9 => 1,\n    ],\n    6 => [\n        0 => 1,\n     \
    \   1 => 1,\n        2 => 1,\n        3 => 1,\n        4 => 1,\n        5 => 1,\n\
    \        6 => 1,\n        7 => 1,\n        8 => 1,\n        9 => 1,\n    ],\n\
    \    7 => [\n        0 => 1,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n\
    \        4 => 1,\n        5 => 1,\n        6 => 1,\n        7 => 1,\n        8\
    \ => 1,\n        9 => 1,\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq8jf2cdw.php on line 117

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n$game = array(\n    0 => 10,\n  \
    \  1 => 20,\n    2 => 30,\n    3 => 40,\n    4 => 50,\n    5 => 60,\n    6 =>\
    \ 70,\n    7 => 80,\n    8 => 90,\n    9 => 100\n);\n$guess = array(\n    0 =>\
    \ 10,\n    1 => 20,\n    2 => 30,\n    3 => 40,\n    4 => 50,\n    5 => 60,\n\
    \    6 => 70,\n    7 => 80,\n    8 => 90,\n    9 => 100\n);\n$result = compare($game,\
    \ $guess);\nprint_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmphidg8v6a.php:13\n\
    Stack trace:\n#0 /tmp/tmphidg8v6a.php(41): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmphidg8v6a.php on line 13\n"
  timestamp: 1659730796
- exit_code: 0
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach($game as $key => $value)\
    \ {\n        $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\n$game = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4\
    \ => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n);\n\
    $guess = array(\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 =>\
    \ 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n);\n$result\
    \ = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n    [3] => 0\n    [4]\
    \ => 0\n    [5] => 0\n    [6] => 0\n    [7] => 0\n    [8] => 0\n    [9] => 0\n\
    )\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n$game = array(\n    0 => 1,\n    1\
    \ => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n   \
    \ 7 => 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 =>\
    \ 13,\n    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n\
    \    18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n \
    \   23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n  \
    \  28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n   \
    \ 33 => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38\
    \ => 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 =>\
    \ 44,\n    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n\
    \    49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n \
    \   54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n  \
    \  59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n   \
    \ 64 => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69\
    \ => 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 =>\
    \ 75,\n    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n\
    \    80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp31hp6lld.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    for($i = 0; $i < count($game); $i++) {\n        $result[$i] = abs($game[$i]\
    \ - $guess[$i]);\n    }\n    return $result;\n}\n\n$game = array(\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9hl8qgz0.php on line 77

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    \n    foreach ($guess as $key =>\
    \ $value) {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    \n\
    \    return $result;\n}\n\n$game = [\n    0 => [\n        0 => 1,\n        1 =>\
    \ 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n    ],\n    1 => [\n\
    \        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4\
    \ => 5,\n    ],\n    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n    ],\n    3 => [\n        0 => 1,\n     \
    \   1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n    ],\n    4\
    \ => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n \
    \       4 => 5,\n    ],\n];\n\n$guess = [\n    0 => [\n        0 => 1,\n     \
    \   1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n    ],\n    1\
    \ => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n \
    \       4 => 5,\n    ],\n    2 => [\n        0 => 1,\n        1 => 2,\n      \
    \  2 => 3,\n        3 => 4,\n        4 => 5,\n    ],\n    3 => [\n        0 =>\
    \ 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n   \
    \ ],\n    4 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n        3\
    \ => 4,\n        4 => 5,\n    ],\n];\n\nvar_dump(compare($game, $guess));\n</code>\n\
    <|/ a |>\n<| c |>\nThanks for your answer. Your solution works perfectly for me.\
    \ I am just wondering why you used `array_map` instead of `foreach`?\n<|/ c |>\n\
    <| c |>\n`array_map` will apply the callback function to each element in the array.\
    \ `foreach` will apply the callback function to each element in the array and\
    \ assign the result to the element in the array. `array_map` will create a new\
    \ array and assign the result to that new array. `foreach` will just assign the\
    \ result to the element in the array.\n<|/ \nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprvs6ffs5.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpf28jd7vv.php:13\n\
    Stack trace:\n#0 /tmp/tmpf28jd7vv.php(18): compare(Array, Array)\n#1 /tmp/tmpf28jd7vv.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmpf28jd7vv.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpf28jd7vv.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    $wrong = array();\n    foreach ($game as $index => $score) {\n        if\
    \ ($guess == $score) {\n            $correct[$index] = 0;\n        } else {\n\
    \            $wrong[$index] = abs($guess - $score);\n        }\n    }\n    return\
    \ array($correct, $wrong);\n}\n\n$game = array(\n    0 => 1,\n    1 => 2,\n  \
    \  2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 => 8,\n\
    \    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n    13\
    \ => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n    18 =>\
    \ 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n    23 => 24,\n\
    \    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n    28 => 29,\n \
    \   29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33 => 34,\n  \
    \  34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 => 39,\n   \
    \ 39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n    44\
    \ => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n    49 =>\
    \ 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n    54 => 55,\n\
    \    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n    59 => 60,\n \
    \   60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64 => 65,\n  \
    \  65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 => 70,\n   \
    \ 70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n    75\
    \ => 76,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfg7tdssw.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    foreach ($guess as $key =>\
    \ $value) {\n        $result[$key] = abs($guess - $score[$key]);\n    }\n    return\
    \ $result;\n}\n$game = array(\n    array(1,2,3,4,5,6,7,8,9,10),\n    array(1,2,3,4,5,6,7,8,9,10)\n\
    );\n$guess = array(\n    array(1,2,3,4,5,6,7,8,9,10),\n    array(1,2,3,4,5,6,7,8,9,10)\n\
    );\n$result = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpl0kzxdb4.php:15\n\
    Stack trace:\n#0 /tmp/tmpl0kzxdb4.php(27): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpl0kzxdb4.php on line 15\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game['score'];\n\
    \    $guess = $guess['score'];\n    $result = array();\n    foreach ($guess as\
    \ $key => $value) {\n        $result[$key] = abs($value - $score);\n    }\n  \
    \  return $result;\n}\n$game = array(\n    'score' => 100,\n    'guesses' => array(\n\
    \        array('score' => 75),\n        array('score' => 50),\n        array('score'\
    \ => 25),\n        array('score' => 10),\n        array('score' => 5),\n     \
    \   array('score' => 1),\n        array('score' => 0)\n    )\n);\n$guess = array(\n\
    \    array('score' => 75),\n    array('score' => 50),\n    array('score' => 25),\n\
    \    array('score' => 10),\n    array('score' => 5),\n    array('score' => 1),\n\
    \    array('score' => 0)\n);\n$result = compare($game, $guess);\nprint_r($result);\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpgwze1blx.php\
    \ on line 14\nArray\n(\n)\n\nWarning: Invalid argument supplied for foreach()\
    \ in /tmp/tmpgwze1blx.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpgwze1blx.php:47\nStack trace:\n#0 /tmp/tmpgwze1blx.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgwze1blx.php on line 47\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpf28jd7vv.php:13\n\
    Stack trace:\n#0 /tmp/tmpf28jd7vv.php(18): compare(Array, Array)\n#1 /tmp/tmpf28jd7vv.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmpf28jd7vv.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpf28jd7vv.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 5,\n    1 =>\
    \ 4,\n    2 => 3,\n    3 => 2,\n    4 => 1,\n    5 => 0\n];\n$guess = [\n    0\
    \ => 2,\n    1 => 4,\n    2 => 1,\n    3 => 3,\n    4 => 5,\n    5 => 0\n];\n\
    $result = compare($game, $guess);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpenin_rlo.php:13\n\
    Stack trace:\n#0 /tmp/tmpenin_rlo.php(34): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpenin_rlo.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach($game as $key => $score) {\n        $correct[$key] = $score - $guess[$key];\n\
    \    }\n    return $correct;\n}\n\n$game = array(\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqkjzai41.php on line 71

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjtmhin6g.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return\
    \ $result;\n}\n$game = array(\n    array(10, 20, 30, 40, 50),\n    array(10, 20,\
    \ 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n\
    \    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10,\
    \ 20, 30, 40, 50),\n    array(10, 20, 30, 40, 50),\n    array(10, 20, 30, 40,\
    \ 50),\n    array(10, 20, 30, 40, 50),\n\nfunction candidate(...$args) {\n   \
    \ return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbhsjtxx6.php on line 71

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game[0];\n\
    \    $guess = $guess[0];\n    $diff = [];\n    foreach ($guess as $key => $value)\
    \ {\n        if ($game[$key] == $value) {\n            $diff[$key] = 0;\n    \
    \    } else {\n            $diff[$key] = abs($value - $game[$key]);\n        }\n\
    \    }\n    return $diff;\n}\n\n$game = [\n    1 => 1,\n    2 => 2,\n    3 =>\
    \ 3,\n    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n    9 =>\
    \ 9,\n    10 => 10,\n    11 => 11,\n    12 => 12,\n    13 => 13,\n    14 => 14,\n\
    \    15 => 15,\n    16 => 16,\n    17 => 17,\n    18 => 18,\n    19 => 19,\n \
    \   20 => 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n    24 => 24,\n  \
    \  25 => 25,\n    26 => 26,\n    27 => 27,\n    28 => 28,\n    29 => 29,\n   \
    \ 30 => 30,\n    31 => 31,\n    32 => 32,\n    33 => 33,\n    34 => 34,\n    35\
    \ => 35,\n    36 => 36,\n    37 => 37,\n    38 => 38,\n    39 => 39,\n    40 =>\
    \ 40,\n    41 => 41,\n    42 => 42,\n    43 => 43,\n    44 => 44,\n    45 => 45,\n\
    \    46 => 46,\n    47 => 47,\n    48 => 48,\n    49 => 49,\n    50 => 50,\n \
    \   51 => 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n    55 => 55,\n  \
    \  56 => 56,\n    57 => 57,\n    58 => 58,\n    59 => 59,\n    60 => 60,\n   \
    \ 61 => 61,\n    62 => 62,\n    63 => 63,\n    64 => 64,\n    65 => 65,\n    66\
    \ => 66,\n    67 => 67,\n    68 => 68,\n    69 => 69,\n    70 => 70,\n    71 =>\
    \ 71,\n    72 => 72,\n    73 => 73,\n    74 => 74,\n    75 => 75,\n    76 => \n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb2g03u30.php on line 101

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $key => $score) {\n        $result[$key] = abs($guess -\
    \ $score);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp9i6vuu4w.php:13\n\
    Stack trace:\n#0 /tmp/tmp9i6vuu4w.php(18): compare(Array, Array)\n#1 /tmp/tmp9i6vuu4w.php(22):\
    \ candidate(Array, Array)\n#2 /tmp/tmp9i6vuu4w.php(28): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp9i6vuu4w.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = array();\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $correct[] = 0;\n        } else {\n            $correct[] = abs($guess\
    \ - $score);\n        }\n    }\n    return $correct;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpvg2z7ps1.php:16\n\
    Stack trace:\n#0 /tmp/tmpvg2z7ps1.php(22): compare(Array, Array)\n#1 /tmp/tmpvg2z7ps1.php(26):\
    \ candidate(Array, Array)\n#2 /tmp/tmpvg2z7ps1.php(32): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpvg2z7ps1.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $result[$key] = 0;\n        } else {\n            $result[$key] = abs($guess\
    \ - $score);\n        }\n    }\n    return $result;\n}\n\n$game = array(\n   \
    \ 0 => 5,\n    1 => 4,\n    2 => 3,\n    3 => 2,\n    4 => 1,\n    5 => 0\n);\n\
    \n$guess = array(\n    0 => 4,\n    1 => 3,\n    2 => 2,\n    3 => 1,\n    4 =>\
    \ 0,\n    5 => 0\n);\n\nprint_r(compare($game, $guess));\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpu43ndvkb.php:16\n\
    Stack trace:\n#0 /tmp/tmpu43ndvkb.php(40): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpu43ndvkb.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThanks for your answer, but this doesn't seem to work. I've tried it\
    \ on both my own test data and the example data provided in the question and I\
    \ get the same results. I've also tried it on other test data and it still doesn't\
    \ work.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it works. I added a link\
    \ to the test data I used.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9 and it\
    \ works. I added a link to the test data I used.\n<|/ c |>\n<| c |>\nI tested\
    \ it on PHP 5.5.9 and it works. I added a link to the test data I used.\n<|/ c\
    \ |>\n<| c |>\nI tested it on PHP 5.5.9 and it works. I added a link to the test\
    \ data I used.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$game = [\n\
    \    0 => [\n        0 => 1,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n\
    \        4 => 1,\n        5 => 1,\n        6 => 1,\n        7 => 1,\n        8\
    \ => 1,\n        9 => 1,\n    ],\n    1 => [\n        0 => 1,\n        1 => 1,\n\
    \        2 => 1,\n        3 => 1,\n        4 => 1,\n        5 => 1,\n        6\
    \ => 1,\n        7 => 1,\n        8 => 1,\n        9 => 1,\n    ],\n    2 => [\n\
    \        0 => 1,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n        4\
    \ => 1,\n        5 => 1,\n        6 => 1,\n        7 => 1,\n        8 => 1,\n\
    \        9 => 1,\n    ],\n    3 => [\n        0 => 1,\n        1 => 1,\n     \
    \   2 => 1,\n        3 => 1,\n        4 => 1,\n        5 => 1,\n        6 => 1,\n\
    \        7 => 1,\n        8 => 1,\n        9 => 1,\n    ],\n    4 => [\n     \
    \   0 => 1,\n        1 => 1,\n        2 => 1,\n        3 => 1,\n        4 => 1,\n\
    \        5 => 1,\n        6 \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpm7q7qcgw.php on line 17

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 5,\n    1 =>\
    \ 3,\n    2 => 2,\n    3 => 1,\n    4 => 4,\n    5 => 0\n];\n\n$guess = [\n  \
    \  0 => 3,\n    1 => 2,\n    2 => 1,\n    3 => 4,\n    4 => 5,\n    5 => 0\n];\n\
    \n$result = compare($game, $guess);\nprint_r($result);\n</code>\n<|/ a |>\n<|\
    \ c |>\nI like your solution, but I believe that your solution does not take into\
    \ account the fact that there may be more than one correct answer. For example,\
    \ if there are two correct answers, your solution will give the wrong answer twice\
    \ in the array.\n<|/ c |>\n<| c |>\nI believe that my solution does take into\
    \ account the fact that there may be more than one correct answer. For example,\
    \ if there are two correct answers, my solution will give the wrong answer twice\
    \ in the array. My solution also does not require the guesses to be sorted. My\
    \ solution also does not require the guesses to be unique.\n<|/ c |>\n<| c |>\n\
    I believe that my solution does take into account the fact that there may be more\
    \ than one correct answer. For example, if there are two correct answers, my solution\
    \ will give the wrong answer twice in the array. My solution also does not require\
    \ the guesses to be sorted. My solution also does not require the guesses to be\
    \ unique.\n<|/ c |>\n<| c |>\nI believe that my solution does take into account\
    \ the fact that there may be more than one correct answer. For example, if there\
    \ are two correct answers, my solution will give the wrong answer twice in the\
    \ array. My solution also does not require the guesses to be sorted. My solution\
    \ also does not require the guesses to be unique.\n<|/ c |>\n<| c |>\nI believe\
    \ that my solution does take into account the fact that there may be more than\
    \ one correct answer. For example, if there are two correct answers, my solution\
    \ will give the wrong answer twice in the array. My solution also does not require\
    \ the guesses to be sorted. My solution also does not require the guesses to be\
    \ unique.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpeyhp0zvv.php on line 38

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $result[$key] = abs($value - $score[$key]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpg2syc9sz.php on line 19

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game['score'];\n\
    \    $guess = $guess['score'];\n    $result = [];\n    foreach ($guess as $key\
    \ => $value) {\n        $result[$key] = abs($value - $score);\n    }\n    return\
    \ $result;\n}\n\n$game = [\n    'score' => 100,\n    'guesses' => [\n        0\
    \ => 100,\n        1 => 80,\n        2 => 60,\n        3 => 40,\n        4 =>\
    \ 30,\n        5 => 20,\n        6 => 10,\n        7 => 5,\n        8 => 3,\n\
    \        9 => 2,\n        10 => 1,\n        11 => 0,\n    ],\n];\n\n$guess = [\n\
    \    'score' => 100,\n    'guesses' => [\n        0 => 100,\n        1 => 80,\n\
    \        2 => 60,\n        3 => 40,\n        4 => 30,\n        5 => 20,\n    \
    \    6 => 10,\n        7 => 5,\n        8 => 3,\n        9 => 2,\n        10 =>\
    \ 1,\n        11 => 0,\n    ],\n];\n\nvar_dump(compare($game, $guess));\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you for your answer. Unfortunately, I cannot\
    \ use any loops, only foreach and if/else statements. I edited my question to\
    \ make it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ without loops.\n<|/ c |>\n<| c |>\nThank you for your answer. Unfortunately,\
    \ I cannot use any loops, only foreach and if/else statements. I edited my question\
    \ to make it more clear.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution\
    \ without loops.\n<|/ c |>\n<| c |>\nThank you for your answer. Unfortunately,\
    \ I cannot use any loops, only foreach and if/else statements. I edited my question\
    \ to make it more clear.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpc3yb_378.php on line 57

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 100,\n    1\
    \ => 100,\n    2 => 100,\n    3 => 100,\n    4 => 100,\n    5 => 100,\n    6 =>\
    \ 100,\n    7 => 100,\n    8 => 100,\n    9 => 100,\n    10 => 100,\n    11 =>\
    \ 100,\n    12 => 100,\n    13 => 100,\n    14 => 100,\n    15 => 100,\n    16\
    \ => 100,\n    17 => 100,\n    18 => 100,\n    19 => 100,\n    20 => 100,\n  \
    \  21 => 100,\n    22 => 100,\n    23 => 100,\n    24 => 100,\n    25 => 100,\n\
    \    26 => 100,\n    27 => 100,\n    28 => 100,\n    29 => 100,\n    30 => 100,\n\
    \    31 => 100,\n    32 => 100,\n    33 => 100,\n    34 => 100,\n    35 => 100,\n\
    \    36 => 100,\n    37 => 100,\n    38 => 100,\n    39 => 100,\n    40 => 100,\n\
    \    41 => 100,\n    42 => 100,\n    43 => 100,\n    44 => 100,\n    45 => 100,\n\
    \    46 => 100,\n    47 => 100,\n    48 => 100,\n    49 => 100,\n    50 => 100,\n\
    \    51 => 100,\n    52 => 100,\n    53 => 100,\n    54 => 100,\n    55 => 100,\n\
    \    56 => 100,\n    57 => 100,\n    58 => 100,\n    59 => 100,\n    60 => 100,\n\
    \    61 => 100,\n    62 => 100,\n    63 => 100,\n    64 => 100,\n    65 => 100,\n\
    \    66 => 100,\n    67 => 100,\n    68 => 100,\n    69 => 100,\n    70 => 100,\n\
    \    71 => 100,\n    72 => 100,\n    73 => 100,\n    74 => 100,\n    75 => 100,\n\
    \    76 => 100,\n    77 => 100,\n    78 => 100,\n    79 => 100,\n    80 => 100,\n\
    \    81 => 100,\n    82 => 100,\n    83 => 100,\n    84 => 100,\n    85 => 100,\n\
    \    86 => 100,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpw906i_yu.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $diff = [];\n    foreach ($guess as $key => $value)\
    \ {\n        $diff[$key] = abs($value - $score[$key]);\n    }\n    return $diff;\n\
    }\n\n$game = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n\
    \        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7\
    \ => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    1 => [\n        0 => 1,\n\
    \        1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5\
    \ => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n\
    \    ],\n];\n\n$guess = [\n    0 => [\n        0 => 1,\n        1 => 2,\n    \
    \    2 => 3,\n        3 => 4,\n        4 => 5,\n        5 => 6,\n        6 =>\
    \ 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n    ],\n    1 => [\n\
    \        0 => 1,\n        1 => 2,\n        2 => 3,\n        3 => 4,\n        4\
    \ => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n\
    \        9 => 10,\n    ],\n];\n\n$diff = compare($game, $guess);\nprint_r($diff);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer. I tried your code,\
    \ but I still get the same result. I am not sure what I am doing wrong. Could\
    \ you please take a look at my code again?\n<|/ c |>\n<| c |>\nI updated my answer,\
    \ I added a working example and some comments. I hope this helps.\n<|/ c |>\n\
    <| c |>\nThank you for your answer. I tried your code, but I still get the same\
    \ result. I am not sure what I am doing wrong. Could you please take a look at\
    \ my code again?\n<|/ c |>\n<| c |>\nI updated my answer, I added a working example\
    \ and some comments. I hope this helps.\n<|/ c |>\n<| c |>\nThank you for your\
    \ answer. I tried your code, but I still get the same result. I am not sure what\
    \ I am doing wrong. Could you please take a look at my code again?\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppq06uad8.php on line 76

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $correct = 0;\n\
    \    foreach ($game as $key => $score) {\n        if ($guess == $score) {\n  \
    \          $correct++;\n        }\n    }\n    return $correct;\n}\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8t1adrt.php:24\n\
    Stack trace:\n#0 /tmp/tmpa8t1adrt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa8t1adrt.php\
    \ on line 24\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\n\n$game =\
    \ [\n    0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 =>\
    \ 6,\n    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n];\n\n$guess = [\n \
    \   0 => 1,\n    1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n\
    \    6 => 7,\n    7 => 8,\n    8 => 9,\n    9 => 10\n];\n\n$result = compare($game,\
    \ $guess);\n\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ for your answer! I appreciate it! I understand what you are saying, but I do\
    \ not understand how to implement it into my code. I am not very good at coding,\
    \ so I apologize for my lack of knowledge.\n<|/ c |>\n<| c |>\nI added a code\
    \ sample to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThank you so much! I\
    \ really appreciate it! I understand it now!\n<|/ c |>\n<| c |>\nGlad I could\
    \ help. Good luck with your coding journey.\n<|/ c |>\n<| a tags=arrays,php |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp860agjhh.php on line 51

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    for($i = 0; $i < count($guess);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return\
    \ $result;\n}\n\n$game = array(\n    array(10, 20, 30, 40),\n    array(10, 20,\
    \ 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10, 20, 30, 40),\n    array(10,\
    \ 20, 30, 40),\n    array(\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpccrlw6u4.php on line 78

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $score = $game;\n\
    \    $guess = $guess;\n    $result = array();\n    for($i = 0; $i < count($game);\
    \ $i++) {\n        $result[$i] = abs($guess[$i] - $score[$i]);\n    }\n    return\
    \ $result;\n}\n\n$game = array(\n    array(10, 5, 7, 8),\n    array(10, 5, 7,\
    \ 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n\
    \    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n \
    \   array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n  \
    \  array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n   \
    \ array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10,\
    \ 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5,\
    \ 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7,\
    \ 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n\
    \    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n \
    \   array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n  \
    \  array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n   \
    \ array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10,\
    \ 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5,\
    \ 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7,\
    \ 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n\
    \    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n \
    \   array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n  \
    \  array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n   \
    \ array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10,\
    \ 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(10, 5, 7, 8),\n    array(\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpomgw87q9.php on line 86

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = array();\n\
    \    foreach ($game as $key => $value) {\n        $result[$key] = abs($guess -\
    \ $value);\n    }\n    return $result;\n}\n\n$game = array(\n    0 => 1,\n   \
    \ 1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n \
    \   7 => 8,\n    8 => 9,\n    9 => 10\n);\n\n$guess = array(\n    0 => 1,\n  \
    \  1 => 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n\
    \    7 => 8,\n    8 => 9,\n    9 => 10\n);\n\n$result = compare($game, $guess);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpk_1dxiya.php:13\n\
    Stack trace:\n#0 /tmp/tmpk_1dxiya.php(44): compare(Array, Array)\n#1 {main}\n\
    \  thrown in /tmp/tmpk_1dxiya.php on line 13\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($guess == $score) {\n\
    \            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($guess - $score);\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp_h6lsn57.php:16\n\
    Stack trace:\n#0 /tmp/tmp_h6lsn57.php(22): compare(Array, Array)\n#1 /tmp/tmp_h6lsn57.php(26):\
    \ candidate(Array, Array)\n#2 /tmp/tmp_h6lsn57.php(32): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp_h6lsn57.php on line 16\n"
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $scores = [];\n\
    \    foreach ($game as $index => $score) {\n        $scores[$index] = abs($guess\
    \ - $score);\n    }\n    return $scores;\n}\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr76jql_d.php on line 99

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $result[$index] = 0;\n        } else {\n            $result[$index]\
    \ = abs($score - $guess[$index]);\n        }\n    }\n    return $result;\n}\n\n\
    $game = [\n    0 => 3,\n    1 => 5,\n    2 => 7,\n    3 => 1,\n    4 => 2,\n \
    \   5 => 4,\n    6 => 5,\n    7 => 3,\n    8 => 4,\n    9 => 5,\n    10 => 6,\n\
    \    11 => 7,\n    12 => 4,\n    13 => 5,\n    14 => 6,\n    15 => 7,\n    16\
    \ => 4,\n    17 => 5,\n    18 => 6,\n    19 => 7,\n    20 => 4,\n    21 => 5,\n\
    \    22 => 6,\n    23 => 7,\n    24 => 4,\n    25 => 5,\n    26 => 6,\n    27\
    \ => 7,\n    28 => 4,\n    29 => 5,\n    30 => 6,\n    31 => 7,\n    32 => 4,\n\
    \    33 => 5,\n    34 => 6,\n    35 => 7,\n    36 => 4,\n    37 => 5,\n    38\
    \ => 6,\n    39 => 7,\n    40 => 4,\n    41 => 5,\n    42 => 6,\n    43 => 7,\n\
    \    44 => 4,\n    45 => 5,\n    46 => 6,\n    47 => 7,\n    48 => 4,\n    49\
    \ => 5,\n    50 => 6,\n    51 => 7,\n    52 => 4,\n    53 => 5,\n    54 => 6,\n\
    \    55 => 7,\n    56 => 4,\n    57 => 5,\n    58 => 6,\n    59 => 7,\n    60\
    \ => 4,\n    61 => 5,\n    62 => 6,\n    63 => 7,\n    64 => 4,\n    65 => 5,\n\
    \    66 => 6,\n    67 => 7,\n    68 => 4,\n    69 => 5,\n    70 => 6,\n    71\
    \ => 7,\n    72 => 4,\n    73 => 5,\n    74 => 6,\n    75 => 7,\n    76 => 4,\n\
    \    77 => 5,\n    78 => 6,\n    79 => 7,\n    80 => 4,\n    81 => 5,\n    82\
    \ => 6,\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2,\
    \ 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp47vitgec.php on line 107

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n\n$game = [\n    0 => 1,\n    1 =>\
    \ 2,\n    2 => 3,\n    3 => 4,\n    4 => 5,\n    5 => 6,\n    6 => 7,\n    7 =>\
    \ 8,\n    8 => 9,\n    9 => 10,\n    10 => 11,\n    11 => 12,\n    12 => 13,\n\
    \    13 => 14,\n    14 => 15,\n    15 => 16,\n    16 => 17,\n    17 => 18,\n \
    \   18 => 19,\n    19 => 20,\n    20 => 21,\n    21 => 22,\n    22 => 23,\n  \
    \  23 => 24,\n    24 => 25,\n    25 => 26,\n    26 => 27,\n    27 => 28,\n   \
    \ 28 => 29,\n    29 => 30,\n    30 => 31,\n    31 => 32,\n    32 => 33,\n    33\
    \ => 34,\n    34 => 35,\n    35 => 36,\n    36 => 37,\n    37 => 38,\n    38 =>\
    \ 39,\n    39 => 40,\n    40 => 41,\n    41 => 42,\n    42 => 43,\n    43 => 44,\n\
    \    44 => 45,\n    45 => 46,\n    46 => 47,\n    47 => 48,\n    48 => 49,\n \
    \   49 => 50,\n    50 => 51,\n    51 => 52,\n    52 => 53,\n    53 => 54,\n  \
    \  54 => 55,\n    55 => 56,\n    56 => 57,\n    57 => 58,\n    58 => 59,\n   \
    \ 59 => 60,\n    60 => 61,\n    61 => 62,\n    62 => 63,\n    63 => 64,\n    64\
    \ => 65,\n    65 => 66,\n    66 => 67,\n    67 => 68,\n    68 => 69,\n    69 =>\
    \ 70,\n    70 => 71,\n    71 => 72,\n    72 => 73,\n    73 => 74,\n    74 => 75,\n\
    \    75 => 76,\n    76 => 77,\n    77 => 78,\n    78 => 79,\n    79 => 80,\n \
    \   80 => 8\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1m_oqhtf.php on line 100

    '
  timestamp: 1659730796
- exit_code: 255
  program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\nfunction compare($game, $guess) {\n    $result = [];\n\
    \    foreach ($game as $index => $score) {\n        $result[$index] = abs($guess\
    \ - $score);\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c\
    \ |>\nI appreciate your efforts, but I cannot use any loops or conditionals. I\
    \ must use only array functions. I added an example to my question to clarify.\n\
    <|/ c |>\n<| c |>\nI added an example to my question to clarify.\n<|/ c |>\n<|\
    \ c |>\nI added an example to my question to clarify.\n<|/ c |>\n<| c |>\nI added\
    \ an example to my question to clarify.\n<|/ c |>\n<| c |>\nI added an example\
    \ to my question to clarify.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$game\
    \ = [\n    0 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    1 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    2 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    3 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n        5 =>\
    \ 6,\n        6 => 7,\n        7 => 8,\n        8 => 9,\n        9 => 10,\n  \
    \  ],\n    4 => [\n        0 => 1,\n        1 => 2,\n        2 => 3,\n       \
    \ 3 => 4,\n        4 => 5,\n        5 => 6,\n        6 => 7,\n        7 => 8,\n\
    \        8 => 9,\n        9 => 10,\n    ],\n    5 => [\n        0 => 1,\n    \
    \    1 => 2,\n        2 => 3,\n        3 => 4,\n        4 => 5,\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8tyikyyd.php on line 17

    '
  timestamp: 1659730796

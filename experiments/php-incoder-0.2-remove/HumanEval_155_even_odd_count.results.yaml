language: php
name: HumanEval_155_even_odd_count
results:
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num * 10; // convert from decimal\
    \ to binary\n    foreach (str_split($num) as $digit) {\n        if ($digit ==\
    \ '1') {\n            $even++;\n        } else {\n            $odd++;\n      \
    \  }\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperpshv1l.php:22\n\
    Stack trace:\n#0 /tmp/tmperpshv1l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmperpshv1l.php\
    \ on line 22\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: -1
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while ($num > 0) {\n\
    \        $num = $num % 10;\n        if ($num % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028468
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $count++;\n            $even++;\n        }\n  \
    \      $num = $num / 10;\n    }\n    return array($count, $even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpbjriz68c.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpbjriz68c.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpbjriz68c.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpsnfm1mor.php:9\nStack trace:\n#0 /tmp/tmpsnfm1mor.php(18): even_odd_count('-78')\n\
    #1 /tmp/tmpsnfm1mor.php(23): candidate(-78)\n#2 /tmp/tmpsnfm1mor.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsnfm1mor.php on line 9\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while($num > 0) {\n\
    \        $remainder = $num % 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)$num /\
    \ 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.7 to int loses precision\
    \ in /tmp/tmpyinl632i.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpyinl632i.php:25\nStack trace:\n#0 /tmp/tmpyinl632i.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyinl632i.php on line 25\n"
  timestamp: 1660028463
- exit_code: -1
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while($num > 0) {\n\
    \        $num = $num % 10;\n        if($num % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028468
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7hntnj8k.php:9\nStack trace:\n#0 /tmp/tmp7hntnj8k.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmp7hntnj8k.php(24): candidate(-78)\n#2 /tmp/tmp7hntnj8k.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7hntnj8k.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if($remainder == 0) {\n            $count++;\n\
    \        }\n        else {\n            $count++;\n            $even++;\n    \
    \    }\n        $num = $num / 10;\n    }\n    return array($count, $even, $odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpwbx5ygl1.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpwbx5ygl1.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpwbx5ygl1.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num != 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmp7sbfzzin.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmp7sbfzzin.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmp7sbfzzin.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmp7sbfzzin.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num * 100;\n    do {\n        $num\
    \ = $num / 10;\n        $even++;\n    } while ($num > 0);\n    do {\n        $num\
    \ = $num / 10;\n        $odd++;\n    } while ($num > 0);\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjlo6ygm.php:24\n\
    Stack trace:\n#0 /tmp/tmpbjlo6ygm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbjlo6ygm.php\
    \ on line 24\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcyzak7cx.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $digit = substr($num, $i, 1);\n\
    \        if ($digit == '0') {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdo3gtglr.php:26\n\
    Stack trace:\n#0 /tmp/tmpdo3gtglr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdo3gtglr.php\
    \ on line 26\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while($num > 0) {\n\
    \        $remainder = $num % 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)$num /\
    \ 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.7 to int loses precision\
    \ in /tmp/tmpyinl632i.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpyinl632i.php:25\nStack trace:\n#0 /tmp/tmpyinl632i.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyinl632i.php on line 25\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    $num_length = strlen($num);\n\
    \    for ($i = 0; $i < $num_length; $i++) {\n        if ($num[$i] % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmptit_y72i.php:10\nStack trace:\n#0 /tmp/tmptit_y72i.php(20): even_odd_count('-78')\n\
    #1 /tmp/tmptit_y72i.php(25): candidate(-78)\n#2 /tmp/tmptit_y72i.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmptit_y72i.php on line 10\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpzqjcowzy.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpzqjcowzy.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpzqjcowzy.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpzqjcowzy.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpjtmlz5xt.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpjtmlz5xt.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcyzak7cx.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num != 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmp7x1u7tlt.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmp7x1u7tlt.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmp7x1u7tlt.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $n = $num;\n    while ($n > 0) {\n       \
    \ if ($n % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $n = $n / 10;\n    }\n    return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmphi70dsay.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmphi70dsay.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmphi70dsay.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmphi70dsay.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $digit = $num[$i];\n        if ($digit\
    \ == '0') {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_tu61rf.php:26\n\
    Stack trace:\n#0 /tmp/tmpx_tu61rf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx_tu61rf.php\
    \ on line 26\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while ($num != 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpyy62ln2m.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while ($num > 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = (int)$num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.7 to int loses precision\
    \ in /tmp/tmpfi_sqq5b.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpfi_sqq5b.php:25\nStack trace:\n#0 /tmp/tmpfi_sqq5b.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfi_sqq5b.php on line 25\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $count++;\n            $even++;\n        }\n  \
    \      $num = $num / 10;\n    }\n    return array($count, $even);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpvwk075e_.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpvwk075e_.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpvwk075e_.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpvwk075e_.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpjtmlz5xt.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpjtmlz5xt.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $even++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($count, $even);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpajb4aif7.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpajb4aif7.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpajb4aif7.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmpz5tu85_2.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmpz5tu85_2.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmpz5tu85_2.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmpz5tu85_2.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while($num != 0) {\n\
    \        if($num % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp9s6j563w.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp9s6j563w.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp9s6j563w.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp9s6j563w.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while ($num != 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpyy62ln2m.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num * 10; // convert number to string\n\
    \    $num_length = strlen($num);\n    for ($i = 0; $i < $num_length; $i++) {\n\
    \        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n  \
    \          $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpzueac9ot.php\
    \ on line 10\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpzueac9ot.php on line 10\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzueac9ot.php:24\nStack trace:\n#0 /tmp/tmpzueac9ot.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzueac9ot.php on line 24\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $digit = substr($num, $i, 1);\n\
    \        if ($digit == '0') {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n    }\n    return array($even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprppflyne.php:25\n\
    Stack trace:\n#0 /tmp/tmprppflyne.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprppflyne.php\
    \ on line 25\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while($num > 0) {\n\
    \        $remainder = $num % 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)$num /\
    \ 10;\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.7 to int loses precision\
    \ in /tmp/tmpdj_7x9wb.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdj_7x9wb.php:24\nStack trace:\n#0 /tmp/tmpdj_7x9wb.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdj_7x9wb.php on line 24\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($num[$i] % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmprmcv2r5k.php:10\nStack trace:\n#0 /tmp/tmprmcv2r5k.php(20): even_odd_count('-78')\n\
    #1 /tmp/tmprmcv2r5k.php(25): candidate(-78)\n#2 /tmp/tmprmcv2r5k.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmprmcv2r5k.php on line 10\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while ($num != 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpyy62ln2m.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while ($num > 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = (int)$num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.7 to int loses precision\
    \ in /tmp/tmpfi_sqq5b.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpfi_sqq5b.php:25\nStack trace:\n#0 /tmp/tmpfi_sqq5b.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfi_sqq5b.php on line 25\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7hntnj8k.php:9\nStack trace:\n#0 /tmp/tmp7hntnj8k.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmp7hntnj8k.php(24): candidate(-78)\n#2 /tmp/tmp7hntnj8k.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7hntnj8k.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num != 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmp7x1u7tlt.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmp7x1u7tlt.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmp7x1u7tlt.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmp7x1u7tlt.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp5xlto2hd.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp5xlto2hd.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp5xlto2hd.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp5xlto2hd.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpdmcvkpyk.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpdmcvkpyk.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpdmcvkpyk.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7hntnj8k.php:9\nStack trace:\n#0 /tmp/tmp7hntnj8k.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmp7hntnj8k.php(24): candidate(-78)\n#2 /tmp/tmp7hntnj8k.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7hntnj8k.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $count++;\n        $num = $num / 10;\n    }\n    while($count > 0) {\n   \
    \     if($num % 2 == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n        $count--;\n        $num = $num / 10;\n    }\n \
    \   return array($even, $odd);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq5r9an2.php:28\n\
    Stack trace:\n#0 /tmp/tmpdq5r9an2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdq5r9an2.php\
    \ on line 28\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            if ($remainder == 1) {\n                $even++;\n\
    \            } else {\n                $odd++;\n            }\n        }\n   \
    \     $num = $num / 10;\n    }\n    return array($even, $odd, $count);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp_ox89wv6.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp_ox89wv6.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp_ox89wv6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp_ox89wv6.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while ($num != 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpyy62ln2m.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpyy62ln2m.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpyy62ln2m.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: -1
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    while($num != 0) {\n\
    \        $num = $num % 10;\n        if($num % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028468
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $even++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($count, $even);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpajb4aif7.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpajb4aif7.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpajb4aif7.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 2;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpkeydq_c3.php
    on line 9


    Deprecated: Implicit conversion from float 0.75 to int loses precision in /tmp/tmpkeydq_c3.php
    on line 9


    Deprecated: Implicit conversion from float 0.375 to int loses precision in /tmp/tmpkeydq_c3.php
    on line 9


    Deprecated: Implicit conversion from float 0.1875 to int loses precision in /tmp/tmpkeydq_c3.php
    on line 9


    Deprecated: Implicit conversion from float 0.09375 to int loses precision in /tmp/tmpkeydq_c3.php
    on line 9


    Deprecated: Implicit conversion from float 0.046875 to int loses precision in
    /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.0234375 to int loses precision in
    /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.01171875 to int loses precision in
    /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.005859375 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.0029296875 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.00146484375 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.000732421875 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.0003662109375 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 0.00018310546875 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 9.1552734375E-5 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 4.57763671875E-5 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 2.288818359375E-5 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: Implicit conversion from float 1.1444091796875E-5 to int loses precision
    in /tmp/tmpkeydq_c3.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: -1
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num >= 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmpy3t6ul8s.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmpy3t6ul8s.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmpy3t6ul8s.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmpy3t6ul8s.php on line 9


    Deprecated: '
  timestamp: 1660028468
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($num[$i] % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmprmcv2r5k.php:10\nStack trace:\n#0 /tmp/tmprmcv2r5k.php(20): even_odd_count('-78')\n\
    #1 /tmp/tmprmcv2r5k.php(25): candidate(-78)\n#2 /tmp/tmprmcv2r5k.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmprmcv2r5k.php on line 10\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $count++;\n            $even++;\n        }\n  \
    \      $num = $num / 10;\n    }\n    return array($count, $even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpbjriz68c.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpbjriz68c.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpbjriz68c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpbjriz68c.php on line'
  timestamp: 1660028463
- exit_code: -1
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    if ($num == 0) {\n\
    \        return array(0, 0);\n    }\n    while ($num != 0) {\n        $num = $num\
    \ % 10;\n        if ($num % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028468
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $count++;\n    }\n    return array($even, $odd, $count);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcnfmyw1c.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcnfmyw1c.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcnfmyw1c.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcyzak7cx.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpjtmlz5xt.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpjtmlz5xt.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpjtmlz5xt.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7hntnj8k.php:9\nStack trace:\n#0 /tmp/tmp7hntnj8k.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmp7hntnj8k.php(24): candidate(-78)\n#2 /tmp/tmp7hntnj8k.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7hntnj8k.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcyzak7cx.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    $len = strlen($num);\n\
    \    for($i = 0; $i < $len; $i++) {\n        $digit = $num[$i];\n        if($digit\
    \ == '0') {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu70f73qq.php:26\n\
    Stack trace:\n#0 /tmp/tmpu70f73qq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu70f73qq.php\
    \ on line 26\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while($num > 0) {\n\
    \        $remainder = $num % 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)$num /\
    \ 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.7 to int loses precision\
    \ in /tmp/tmpyinl632i.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpyinl632i.php:25\nStack trace:\n#0 /tmp/tmpyinl632i.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyinl632i.php on line 25\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $n = $num;\n    while ($n > 0) {\n       \
    \ $remainder = $n % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $n = $n / 10;\n   \
    \ }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n   \
    \ return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp5jamhwdw.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp5jamhwdw.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp5jamhwdw.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp5jamhwdw.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if($remainder == 0) {\n            $count++;\n\
    \        }\n        else {\n            $even++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($count, $even);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpp8mtyvap.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpp8mtyvap.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpp8mtyvap.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpp8mtyvap.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcyzak7cx.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmp0vn9q42c.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmp0vn9q42c.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmp0vn9q42c.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmp0vn9q42c.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $count++;\n        $num = $num / 10;\n        if($num % 2 == 0) {\n      \
    \      $even++;\n        } else {\n            $odd++;\n        }\n    }\n   \
    \ return array($even, $odd, $count);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpogmn0x82.php
    on line 11


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpogmn0x82.php
    on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpogmn0x82.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpogmn'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $count++;\n            $even++;\n        }\n  \
    \      $num = $num / 10;\n    }\n    return array($count, $even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpvzx56r8h.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpvzx56r8h.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpvzx56r8h.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpvzx56r8h.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmprqlr9905.php:9\nStack trace:\n#0 /tmp/tmprqlr9905.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmprqlr9905.php(24): candidate(-78)\n#2 /tmp/tmprqlr9905.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmprqlr9905.php on line 9\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $even++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($count, $even);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpajb4aif7.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpajb4aif7.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpajb4aif7.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpajb4aif7.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpl6q41pj2.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpl6q41pj2.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpl6q41pj2.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            if ($remainder == 2) {\n                $even++;\n\
    \            } else {\n                $odd++;\n            }\n        }\n   \
    \     $num = $num / 10;\n    }\n    return array($even, $odd, $count);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp01nnhis6.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp01nnhis6.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp01nnhis6.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp01nnhis6.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        $count++;\n        if($remainder == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = $num / 10;\n    }\n    return array($even, $odd, $count);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpum7ctcj0.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpum7ctcj0.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpum7ctcj0.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpum7ctcj0.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0) {\n    \
    \    $remainder = $num % 10;\n        if ($remainder == 0) {\n            $count++;\n\
    \        } else {\n            $count++;\n            if ($remainder == 2) {\n\
    \                $even++;\n            } else {\n                $odd++;\n   \
    \         }\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd, $count);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp35ohjr9s.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp35ohjr9s.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp35ohjr9s.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp35ohjr9s.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($num[$i] % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpp8g2inv1.php:10\nStack trace:\n#0 /tmp/tmpp8g2inv1.php(20): even_odd_count('-78')\n\
    #1 /tmp/tmpp8g2inv1.php(25): candidate(-78)\n#2 /tmp/tmpp8g2inv1.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp8g2inv1.php on line 10\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpcyzak7cx.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpcyzak7cx.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpcyzak7cx.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n\
    \        if ($num % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.6 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.06 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.006 to int loses precision in /tmp/tmppt4vodjj.php
    on line 9


    Deprecated: Implicit conversion from float 0.0006000000000000001 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-5 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-6 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-7 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-8 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-9 to int loses precision
    in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-10 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-11 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-12 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-13 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-14 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-15 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-16 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: Implicit conversion from float 6.000000000000001E-17 to int loses
    precision in /tmp/tmppt4vodjj.php on line 9


    Deprecated: '
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmzxwmgba.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmzxwmgba.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmzxwmgba.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while($num > 0) {\n     \
    \   $remainder = $num % 10;\n        $count++;\n        if($remainder == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = $num / 10;\n    }\n    return array($count, $even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplhzixxgl.php
    on line 9


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplhzixxgl.php
    on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplhzixxgl.php on line 9


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplhzixxgl.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpqmtfrrlo.php:9\nStack trace:\n#0 /tmp/tmpqmtfrrlo.php(18): even_odd_count(-78)\n\
    #1 /tmp/tmpqmtfrrlo.php(23): candidate(-78)\n#2 /tmp/tmpqmtfrrlo.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqmtfrrlo.php on line 9\n"
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpmx2zstom.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpmx2zstom.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpmx2zstom.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmplklrsnby.php
    on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmplklrsnby.php on line 8


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmplklrsnby.php on line'
  timestamp: 1660028463
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7hntnj8k.php:9\nStack trace:\n#0 /tmp/tmp7hntnj8k.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmp7hntnj8k.php(24): candidate(-78)\n#2 /tmp/tmp7hntnj8k.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7hntnj8k.php on line 9\n"
  timestamp: 1660028393

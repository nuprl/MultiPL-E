language: php
name: HumanEval_111_histogram
results:
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram('abracadabra');\n\
    print_r($histogram);\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4fy4wjk.php:25\n\
    Stack trace:\n#0 /tmp/tmpp4fy4wjk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp4fy4wjk.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxlowopym.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxlowopym.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram(\"\
    a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b \nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt6dmmhep.php on line 24

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n$histogram = histogram(\"a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfbw4demv.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_0kbczh9.php on line 19

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    arsort($histogram);\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4cnx578.php:24\n\
    Stack trace:\n#0 /tmp/tmpt4cnx578.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt4cnx578.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = array();\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr02vsoh3.php:24\n\
    Stack trace:\n#0 /tmp/tmpr02vsoh3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr02vsoh3.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh377d4i.php:26\n\
    Stack trace:\n#0 /tmp/tmprh377d4i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh377d4i.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxlowopym.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z\");\nprint_r($histogram);\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [ ] => 25\n    [b] => 1\n    [c] => 1\n   \
    \ [d] => 1\n    [e] => 1\n    [f] => 1\n    [g] => 1\n    [h] => 1\n    [i] =>\
    \ 1\n    [j] => 1\n    [k] => 1\n    [l] => 1\n    [m] => 1\n    [n] => 1\n  \
    \  [o] => 1\n    [p] => 1\n    [q] => 1\n    [r] => 1\n    [s] => 1\n    [t] =>\
    \ 1\n    [u] => 1\n    [v] => 1\n    [w] => 1\n    [x] => 1\n    [y] => 1\n  \
    \  [z] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v0y9bus.php:26\n\
    Stack trace:\n#0 /tmp/tmp1v0y9bus.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1v0y9bus.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram(\"\
    a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b \nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpt6dmmhep.php on line 24

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwly3w_c.php:26\n\
    Stack trace:\n#0 /tmp/tmptwly3w_c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptwly3w_c.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram('abracadabra');\n\
    print_r($histogram);\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4fy4wjk.php:25\n\
    Stack trace:\n#0 /tmp/tmpp4fy4wjk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp4fy4wjk.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $highest_count = max($counts);\n\
    \    $highest_letter = array_search($highest_count, $counts);\n    return array($highest_letter\
    \ => $highest_count);\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocpxe87t.php:19\n\
    Stack trace:\n#0 /tmp/tmpocpxe87t.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpocpxe87t.php\
    \ on line 19\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh377d4i.php:26\n\
    Stack trace:\n#0 /tmp/tmprh377d4i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh377d4i.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxlowopym.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh377d4i.php:26\n\
    Stack trace:\n#0 /tmp/tmprh377d4i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh377d4i.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram('a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b \nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp8l3c6pt8.php on line 18

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = array();\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr02vsoh3.php:24\n\
    Stack trace:\n#0 /tmp/tmpr02vsoh3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr02vsoh3.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh377d4i.php:26\n\
    Stack trace:\n#0 /tmp/tmprh377d4i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh377d4i.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"abba\");\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 2\n    [b] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp07lmsx90.php:26\nStack trace:\n#0 /tmp/tmp07lmsx90.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp07lmsx90.php on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxlowopym.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = array();\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr02vsoh3.php:24\n\
    Stack trace:\n#0 /tmp/tmpr02vsoh3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr02vsoh3.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram('abracadabra');\n\
    print_r($histogram);\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4fy4wjk.php:25\n\
    Stack trace:\n#0 /tmp/tmpp4fy4wjk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp4fy4wjk.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n$histogram = histogram(\"a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfbw4demv.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = array();\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr02vsoh3.php:24\n\
    Stack trace:\n#0 /tmp/tmpr02vsoh3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr02vsoh3.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$test = 'abcabc';\n$histogram\
    \ = histogram($test);\nprint_r($histogram);\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 2\n    [b] => 2\n    [c] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo_1q_b8z.php:26\nStack trace:\n#0 /tmp/tmpo_1q_b8z.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo_1q_b8z.php on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z\");\nprint_r($histogram);\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 1\n    [ ] => 25\n    [b] => 1\n    [c] => 1\n   \
    \ [d] => 1\n    [e] => 1\n    [f] => 1\n    [g] => 1\n    [h] => 1\n    [i] =>\
    \ 1\n    [j] => 1\n    [k] => 1\n    [l] => 1\n    [m] => 1\n    [n] => 1\n  \
    \  [o] => 1\n    [p] => 1\n    [q] => 1\n    [r] => 1\n    [s] => 1\n    [t] =>\
    \ 1\n    [u] => 1\n    [v] => 1\n    [w] => 1\n    [x] => 1\n    [y] => 1\n  \
    \  [z] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v0y9bus.php:26\n\
    Stack trace:\n#0 /tmp/tmp1v0y9bus.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1v0y9bus.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram(\"a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b\
    \ c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a\
    \ b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c a b c\
    \ a b c a b c a b c a b c a \nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxlowopym.php on line 25

    '
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = array();\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\n$histogram = histogram('abracadabra');\n\
    print_r($histogram);\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4618cit.php:26\n\
    Stack trace:\n#0 /tmp/tmpm4618cit.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm4618cit.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh377d4i.php:26\n\
    Stack trace:\n#0 /tmp/tmprh377d4i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh377d4i.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    foreach (str_split($test) as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gpdfy3x.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gpdfy3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gpdfy3x.php\
    \ on line 23\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\n$histogram = histogram('abracadabra');\nprint_r($histogram);\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 5\n    [b] => 2\n    [r] => 2\n    [c] => 1\n    [d]\
    \ => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh377d4i.php:26\n\
    Stack trace:\n#0 /tmp/tmprh377d4i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh377d4i.php\
    \ on line 26\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    arsort($histogram);\n\
    \    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzwwxfmc.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzwwxfmc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdzwwxfmc.php\
    \ on line 25\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = array();\n\
    \    $letters = str_split($test);\n    foreach ($letters as $letter) {\n     \
    \   if (isset($histogram[$letter])) {\n            $histogram[$letter]++;\n  \
    \      } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return\
    \ $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknyo4zqp.php:24\n\
    Stack trace:\n#0 /tmp/tmpknyo4zqp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpknyo4zqp.php\
    \ on line 24\n"
  timestamp: 1659730934

name: HumanEval_136_largest_smallest_integers
language: php
prompt: "<?php\n// Create a function that returns a tuple (a, b), where 'a' is\n//\
  \ the largest of negative integers, and 'b' is the smallest\n// of positive integers\
  \ in a list.\n// If there is no negative or positive integers, return them as None.\n\
  // Examples:\nfunction largest_smallest_integers($lst) {\n"
tests: "function candidate(...$args) {\n    return largest_smallest_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4,\
  \ 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7,\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 3,\
  \ 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array()) !== array(null, null)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0)) !== array(null, null)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -3, -5, -6)) !== array(-1,\
  \ null)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3,\
  \ 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($item < $a)\
    \ {\n        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($a === null) {\n        $a = $item;\n   \
    \   } else {\n        $a = max($a, $item);\n      }\n    } else if ($item > 0)\
    \ {\n      if ($b === null) {\n        $b = $item;\n      } else {\n        $b\
    \ = min($b, $item);\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "   \
    \ $max_negative = -1;\n    $min_positive = PHP_INT_MAX;\n    foreach ($lst as\
    \ $value) {\n        if ($value < 0) {\n            if ($max_negative < $value)\
    \ {\n                $max_negative = $value;\n            }\n        } elseif\
    \ ($value > 0) {\n            if ($min_positive > $value) {\n                $min_positive\
    \ = $value;\n            }\n        }\n    }\n    if ($max_negative == -1 && $min_positive\
    \ == PHP_INT_MAX) {\n        return null;\n    }\n    return array($max_negative,\
    \ $min_positive);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n\
    \      } else if ($item < $a) {\n        $a = $item;\n      }\n      if ($b ===\
    \ null) {\n        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null)\
    \ {\n        $a = $item;\n      } else if ($item < $a) {\n        $a = $item;\n\
    \      }\n      if ($b === null) {\n        $b = $item;\n      } else if ($item\
    \ > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $num) {\n    if ($num <\
    \ 0) {\n      if ($a === null) {\n        $a = $num;\n      } else {\n       \
    \ $b = $num;\n      }\n    }\n  }\n  if ($a !== null) {\n    if ($b === null)\
    \ {\n      $b = $a;\n    }\n    return array($a, $b);\n  }\n  return null;\n}\n",
  "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $value) {\n    if ($value\
    \ < $smallest) {\n      $smallest = $value;\n    }\n    if ($value > $largest)\
    \ {\n      $largest = $value;\n    }\n  }\n  return array($smallest, $largest);\n\
    }", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if ($item <\
    \ 0) {\n      if ($a === null) {\n        $a = $item;\n      } else {\n      \
    \  $a = max($a, $item);\n      }\n    } else if ($item > 0) {\n      if ($b ===\
    \ null) {\n        $b = $item;\n      } else {\n        $b = min($b, $item);\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null\
    \ || $item < $a) {\n        $a = $item;\n      }\n      if ($b === null || $item\
    \ > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $largest_integer = null;\n  $smallest_integer = null;\n  foreach ($lst\
    \ as $integer) {\n    if ($integer < 0) {\n      if ($largest_integer === null)\
    \ {\n        $largest_integer = $integer;\n      } else {\n        $largest_integer\
    \ = $largest_integer;\n      }\n    } else if ($integer > 0) {\n      if ($smallest_integer\
    \ === null) {\n        $smallest_integer = $integer;\n      } else {\n       \
    \ $smallest_integer = $smallest_integer;\n      }\n    }\n  }\n  return array($largest_integer,\
    \ $smallest_integer);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($a === null) {\n        $a = $item;\n   \
    \   } else {\n        $a = max($a, $item);\n      }\n    } else if ($item > 0)\
    \ {\n      if ($b === null) {\n        $b = $item;\n      } else {\n        $b\
    \ = min($b, $item);\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $max_negative\
    \ = -1;\n  $min_positive = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($max_negative < $item) {\n        $max_negative = $item;\n\
    \      }\n    } else if ($item > 0) {\n      if ($min_positive > $item) {\n  \
    \      $min_positive = $item;\n      }\n    }\n  }\n  return array($max_negative,\
    \ $min_positive);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      $largest[] = $item;\n   \
    \   $smallest[] = $item;\n    }\n    elseif (is_array($item)) {\n      $largest\
    \ = array_merge($largest, largest_smallest_integers($item));\n      $smallest\
    \ = array_merge($smallest, largest_smallest_integers($item));\n    }\n  }\n  return\
    \ array(max($largest), min($smallest));\n}\n", "    $max_negative = min($lst);\n\
    \    $min_positive = max($lst);\n    if ($max_negative == $min_positive) {\n \
    \       return null;\n    }\n    return array($max_negative, $min_positive);\n\
    }\n", "  $largest_integer = null;\n  $smallest_integer = null;\n  foreach ($lst\
    \ as $item) {\n    if (is_int($item)) {\n      if ($largest_integer === null ||\
    \ $item > $largest_integer) {\n        $largest_integer = $item;\n      }\n  \
    \    if ($smallest_integer === null || $item < $smallest_integer) {\n        $smallest_integer\
    \ = $item;\n      }\n    }\n  }\n  return array($largest_integer, $smallest_integer);\n\
    }\n", "  $largest_integer = null;\n  $smallest_integer = null;\n  foreach ($lst\
    \ as $integer) {\n    if ($integer < 0) {\n      if ($largest_integer === null)\
    \ {\n        $largest_integer = $integer;\n      } else if ($integer > $largest_integer)\
    \ {\n        $largest_integer = $integer;\n      }\n    } else if ($integer >\
    \ 0) {\n      if ($smallest_integer === null) {\n        $smallest_integer = $integer;\n\
    \      } else if ($integer < $smallest_integer) {\n        $smallest_integer =\
    \ $integer;\n      }\n    }\n  }\n  return array($largest_integer, $smallest_integer);\n\
    }\n", "    $smallest = null;\n    $largest = null;\n    foreach ($lst as $num)\
    \ {\n        if ($smallest === null || $num < $smallest) {\n            $smallest\
    \ = $num;\n        }\n        if ($largest === null || $num > $largest) {\n  \
    \          $largest = $num;\n        }\n    }\n    return array($smallest, $largest);\n\
    }\n", "  $max_negative = -1;\n  $max_positive = -1;\n  $min_negative = -1;\n \
    \ $min_positive = -1;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n   \
    \   if ($max_negative < $item) {\n        $max_negative = $item;\n      }\n  \
    \  } else if ($item > 0) {\n      if ($max_positive < $item) {\n        $max_positive\
    \ = $item;\n      }\n    } else {\n      if ($min_negative > $item) {\n      \
    \  $min_negative = $item;\n      }\n      if ($min_positive > $item) {\n     \
    \   $min_positive = $item;\n      }\n    }\n  }\n  return array($max_negative,\
    \ $max_positive, $min_negative, $min_positive);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null)\
    \ {\n        $a = $item;\n      } else if ($item < $a) {\n        $a = $item;\n\
    \      }\n      if ($b === null) {\n        $b = $item;\n      } else if ($item\
    \ > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $max_negative = -1;\n  $min_positive = PHP_INT_MAX;\n  foreach ($lst\
    \ as $value) {\n    if ($value < $min_positive) {\n      $min_positive = $value;\n\
    \    }\n    if ($value > $max_negative) {\n      $max_negative = $value;\n   \
    \ }\n  }\n  return array($max_negative, $min_positive);\n}\n", "  $max_negative\
    \ = array();\n  $min_positive = array();\n  foreach ($lst as $value) {\n    if\
    \ ($value < 0)\n      $max_negative[] = $value;\n    else\n      $min_positive[]\
    \ = $value;\n  }\n  if (count($max_negative) > count($min_positive)) {\n    return\
    \ $max_negative;\n  }\n  else\n    return $min_positive;\n}\n", "    $max_negative\
    \ = min($lst);\n    $min_positive = max($lst);\n    if ($max_negative == $min_positive)\
    \ {\n        return null;\n    }\n    return array($max_negative, $min_positive);\n\
    }\n", "    $largest = array();\n    $smallest = array();\n    foreach ($lst as\
    \ $item) {\n        if (is_int($item)) {\n            if ($item < 0) {\n     \
    \           $largest[] = $item;\n            } else {\n                $smallest[]\
    \ = $item;\n            }\n        }\n    }\n    if (count($largest) > count($smallest))\
    \ {\n        return $largest;\n    } else {\n        return $smallest;\n    }\n\
    }\n", "    $largest = null;\n    $smallest = null;\n    foreach ($lst as $item)\
    \ {\n        if (is_int($item)) {\n            if ($largest === null || $item\
    \ > $largest) {\n                $largest = $item;\n            }\n          \
    \  if ($smallest === null || $item < $smallest) {\n                $smallest =\
    \ $item;\n            }\n        }\n    }\n    return array($largest, $smallest);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($item < $a)\
    \ {\n        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null || $item > $a) {\n      \
    \  $a = $item;\n      }\n      if ($b === null || $item < $b) {\n        $b =\
    \ $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n      if ($a === null)\
    \ {\n        $a = $x;\n      } else {\n        $b = $x;\n      }\n    }\n  }\n\
    \  if ($a !== null) {\n    if ($b === null) {\n      $b = $a;\n    }\n    return\
    \ array($a, $b);\n  }\n  return null;\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null) $a = $item;\n\
    \      else if ($b === null) $b = $item;\n      else if (($a > $item) && ($b <\
    \ $item)) {\n        $a = $item;\n        $b = $item;\n      }\n    }\n  }\n \
    \ return array($a, $b);\n}\n", "    $largest_integer = null;\n    $smallest_integer\
    \ = null;\n    foreach ($lst as $item) {\n        if (is_int($item)) {\n     \
    \       if ($largest_integer === null || $item > $largest_integer) {\n       \
    \         $largest_integer = $item;\n            }\n            if ($smallest_integer\
    \ === null || $item < $smallest_integer) {\n                $smallest_integer\
    \ = $item;\n            }\n        }\n    }\n    return array($largest_integer,\
    \ $smallest_integer);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null || $item < $a) {\n      \
    \  $a = $item;\n      }\n      if ($b === null || $item > $b) {\n        $b =\
    \ $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "    $result = null;\n\
    \    foreach ($lst as $item) {\n        if (is_int($item)) {\n            if ($result\
    \ === null || $item > $result) {\n                $result = $item;\n         \
    \   }\n        } else {\n            $result = null;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach ($lst\
    \ as $item) {\n    if (is_int($item)) {\n      if ($item < 0) {\n        $largest[]\
    \ = $item;\n      } else {\n        $smallest[] = $item;\n      }\n    }\n  }\n\
    \  if (count($largest) > count($smallest)) {\n    return $largest;\n  } else {\n\
    \    return $smallest;\n  }\n}\n", "    $largest = null;\n    $smallest = null;\n\
    \    foreach ($lst as $item) {\n        if (is_int($item)) {\n            if ($largest\
    \ === null || $item > $largest) {\n                $largest = $item;\n       \
    \     }\n            if ($smallest === null || $item < $smallest) {\n        \
    \        $smallest = $item;\n            }\n        }\n    }\n    return array($largest,\
    \ $smallest);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n\
    \    if (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n   \
    \   } else if ($item > $a) {\n        $a = $item;\n      }\n      if ($b === null)\
    \ {\n        $b = $item;\n      } else if ($item < $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null)\
    \ {\n        $a = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null\
    \ || $item < $a) {\n        $a = $item;\n      }\n      if ($b === null || $item\
    \ > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "    $max_int = null;\n    $min_int = null;\n    foreach ($lst as $item)\
    \ {\n        if (is_int($item)) {\n            if ($max_int === null || $item\
    \ > $max_int) {\n                $max_int = $item;\n            }\n          \
    \  if ($min_int === null || $item < $min_int) {\n                $min_int = $item;\n\
    \            }\n        }\n    }\n    return array($max_int, $min_int);\n}\n",
  "  $max_negative = array();\n  $min_positive = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $max_negative[] = $item;\n    } else {\n    \
    \  $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative) > count($min_positive))\
    \ {\n    return $max_negative;\n  } else {\n    return $min_positive;\n  }\n}",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      if ($a === null) {\n        $a = $item;\n      } else {\n        $a = max($a,\
    \ $item);\n      }\n    } else if ($item > 0) {\n      if ($b === null) {\n  \
    \      $b = $item;\n      } else {\n        $b = min($b, $item);\n      }\n  \
    \  }\n  }\n  return array($a, $b);\n}\n", "  $max_negative = min($lst);\n  $min_positive\
    \ = max($lst);\n  return ($max_negative < $min_positive) ? $max_negative : $min_positive;\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null || $item < $a) {\n        $a = $item;\n      }\n  \
    \    if ($b === null || $item > $b) {\n        $b = $item;\n      }\n    }\n \
    \ }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst\
    \ as $item) {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a\
    \ = $item;\n      } else if ($item > $a) {\n        $a = $item;\n      }\n   \
    \   if ($b === null) {\n        $b = $item;\n      } else if ($item < $b) {\n\
    \        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a\
    \ = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($a === null) {\n        $a = $item;\n      } else if ($a > $item) {\n\
    \        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($b < $item) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $largest = PHP_INT_MAX;\n  $smallest = PHP_INT_MIN;\n\
    \  foreach ($lst as $item) {\n    if ($item < $smallest) {\n      $smallest =\
    \ $item;\n    } else if ($item > $largest) {\n      $largest = $item;\n    }\n\
    \  }\n  return array($smallest, $largest);\n}\n", "    $max_negative = -1;\n \
    \   $min_positive = PHP_INT_MAX;\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            if ($max_negative < $item) {\n                $max_negative\
    \ = $item;\n            }\n        } else {\n            if ($min_positive > $item)\
    \ {\n                $min_positive = $item;\n            }\n        }\n    }\n\
    \    if ($max_negative == -1 && $min_positive == PHP_INT_MAX) {\n        return\
    \ null;\n    }\n    return array($max_negative, $min_positive);\n}\n", "    $max_negative\
    \ = array();\n    $min_positive = array();\n    foreach ($lst as $item) {\n  \
    \      if ($item < 0) {\n            $max_negative[] = $item;\n        } else\
    \ {\n            $min_positive[] = $item;\n        }\n    }\n    if (count($max_negative)\
    \ > count($min_positive)) {\n        return $max_negative;\n    } else {\n   \
    \     return $min_positive;\n    }\n}", "    $largest_integer = null;\n    $smallest_integer\
    \ = null;\n    foreach ($lst as $integer) {\n        if ($integer < 0) {\n   \
    \         if ($largest_integer === null) {\n                $largest_integer =\
    \ $integer;\n            } else {\n                $largest_integer = max($largest_integer,\
    \ $integer);\n            }\n        } else if ($integer > 0) {\n            if\
    \ ($smallest_integer === null) {\n                $smallest_integer = $integer;\n\
    \            } else {\n                $smallest_integer = min($smallest_integer,\
    \ $integer);\n            }\n        }\n    }\n    return array($largest_integer,\
    \ $smallest_integer);\n}\n", "  $largest = array();\n  $smallest = array();\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      $largest[] = $item;\n\
    \      $smallest[] = $item;\n    } elseif (is_null($item)) {\n      $largest[]\
    \ = null;\n      $smallest[] = null;\n    } else {\n      $largest[] = null;\n\
    \      $smallest[] = null;\n    }\n  }\n  foreach ($largest as $key => $value)\
    \ {\n    if ($value < $smallest[$key]) {\n      $smallest[$key] = $value;\n  \
    \  }\n  }\n  return array($smallest, $largest);\n}\n", "    $max_negative = array();\n\
    \    $min_positive = array();\n    foreach ($lst as $value) {\n        if ($value\
    \ < 0) {\n            $max_negative[] = $value;\n        } else {\n          \
    \  $min_positive[] = $value;\n        }\n    }\n    if (count($max_negative) >\
    \ count($min_positive)) {\n        return $max_negative;\n    } else {\n     \
    \   return $min_positive;\n    }\n}\n", "    $max_negative = array();\n    $min_positive\
    \ = array();\n    foreach ($lst as $item) {\n        if ($item < 0) {\n      \
    \      $max_negative[] = $item;\n        } else {\n            $min_positive[]\
    \ = $item;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "    $max_negative = array();\n    $min_positive = array();\n  \
    \  foreach ($lst as $item) {\n        if ($item < 0) {\n            $max_negative[]\
    \ = $item;\n        } else {\n            $min_positive[] = $item;\n        }\n\
    \    }\n    if (count($max_negative) > count($min_positive)) {\n        return\
    \ $max_negative;\n    } else {\n        return $min_positive;\n    }\n}\n", " \
    \ $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($a > $item)\
    \ {\n        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($b < $item) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $largest = null;\n    $smallest = null;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item)) {\n            if ($largest ===\
    \ null || $item > $largest) {\n                $largest = $item;\n           \
    \ }\n            if ($smallest === null || $item < $smallest) {\n            \
    \    $smallest = $item;\n            }\n        } else {\n            return null;\n\
    \        }\n    }\n    return array($largest, $smallest);\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n      if ($a === null)\
    \ {\n        $a = $x;\n      } else {\n        $b = $x;\n      }\n    }\n  }\n\
    \  if ($a !== null) {\n    return array($a, $b);\n  }\n  foreach ($lst as $x)\
    \ {\n    if ($x > 0) {\n      if ($a === null) {\n        $a = $x;\n      } else\
    \ {\n        $b = $x;\n      }\n    }\n  }\n  return array($a, $b);\n}\n$lst =\
    \ array(10, -5, -4, -7, -9, -10, -6, -3);\nlist($a, $b) = largest_smallest_integers($lst);\n\
    echo \"$a is the largest negative integer, $b is the smallest positive integer.\\\
    n\";", "  $max_negative = array();\n  $min_positive = array();\n  foreach ($lst\
    \ as $item) {\n    if ($item < 0) {\n      $max_negative[] = $item;\n    } else\
    \ {\n      $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative) >\
    \ count($min_positive)) {\n    return $max_negative;\n  } else {\n    return $min_positive;\n\
    \  }\n}", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($item > $b)\
    \ {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($item < $a)\
    \ {\n        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($a === null) {\n        $a = $item;\n   \
    \   }\n      else {\n        $a = max($a, $item);\n      }\n    }\n    else {\n\
    \      if ($b === null) {\n        $b = $item;\n      }\n      else {\n      \
    \  $b = min($b, $item);\n      }\n    }\n  }\n  return array($a, $b);\n}\n", " \
    \   $max = -INF;\n    $min = INF;\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            $max = -$item;\n        } elseif ($item > 0) {\n       \
    \     $min = $item;\n        }\n    }\n    return ($max > $min) ? array('max'\
    \ => $max, 'min' => $min) : array();\n}\n", "  $largest_integer = null;\n  $smallest_integer\
    \ = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest_integer\
    \ === null || $item > $largest_integer) {\n        $largest_integer = $item;\n\
    \      }\n      if ($smallest_integer === null || $item < $smallest_integer) {\n\
    \        $smallest_integer = $item;\n      }\n    }\n  }\n  return array($largest_integer,\
    \ $smallest_integer);\n}\n", "    $max_negative = array();\n    $min_positive\
    \ = array();\n    foreach ($lst as $value) {\n        if ($value < 0) {\n    \
    \        $max_negative[] = $value;\n        } else {\n            $min_positive[]\
    \ = $value;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $num) {\n    if\
    \ ($num < 0) {\n      if ($a === null) {\n        $a = $num;\n      } else {\n\
    \        $a = max($a, $num);\n      }\n    } else if ($num > 0) {\n      if ($b\
    \ === null) {\n        $b = $num;\n      } else {\n        $b = min($b, $num);\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n$result = largest_smallest_integers(array(-3,\
    \ -2, -1, 1, 2, 3));\necho \"Largest negative integer: $result[0]\\n\";\necho\
    \ \"Smallest positive integer: $result[1]\\n\";", "    $max_negative = array();\n\
    \    $min_positive = array();\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            $max_negative[] = $item;\n        } else {\n           \
    \ $min_positive[] = $item;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "  $max_int = null;\n  $min_int = null;\n  foreach ($lst as $int)\
    \ {\n    if ($max_int === null || $int > $max_int) {\n      $max_int = $int;\n\
    \    }\n    if ($min_int === null || $int < $min_int) {\n      $min_int = $int;\n\
    \    }\n  }\n  return array($max_int, $min_int);\n}\n", "  $largest = array();\n\
    \  $smallest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      $largest[] = $item;\n      $smallest[] = $item;\n    } elseif (is_array($item))\
    \ {\n      $largest = array_merge($largest, largest_smallest_integers($item));\n\
    \      $smallest = array_merge($smallest, largest_smallest_integers($item));\n\
    \    }\n  }\n  return array(max($largest), min($smallest));\n}\n", "  $largest_integer\
    \ = null;\n  $smallest_integer = null;\n  foreach ($lst as $integer) {\n    if\
    \ ($integer < 0) {\n      if ($largest_integer === null) {\n        $largest_integer\
    \ = $integer;\n      } else if ($integer > $largest_integer) {\n        $largest_integer\
    \ = $integer;\n      }\n    }\n    if ($integer > 0) {\n      if ($smallest_integer\
    \ === null) {\n        $smallest_integer = $integer;\n      } else if ($integer\
    \ < $smallest_integer) {\n        $smallest_integer = $integer;\n      }\n   \
    \ }\n  }\n  return array($largest_integer, $smallest_integer);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $value) {\n    if ($value <\
    \ 0 && $largest === null) {\n      $largest = $value;\n    } else if ($value >\
    \ 0 && $smallest === null) {\n      $smallest = $value;\n    }\n  }\n  return\
    \ array($largest, $smallest);\n}\n", "    $max_negative = array();\n    $min_positive\
    \ = array();\n    foreach ($lst as $item) {\n        if ($item < 0) {\n      \
    \      $max_negative[] = $item;\n        } else {\n            $min_positive[]\
    \ = $item;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n      } else\
    \ if ($item > $b) {\n        $b = $item;\n      }\n    } else if (is_null($item))\
    \ {\n      if ($a !== null) {\n        $b = $a;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($a === null) {\n        $a = $item;\n   \
    \   } else {\n        $a = max($a, $item);\n      }\n    } else {\n      if ($b\
    \ === null) {\n        $b = $item;\n      } else {\n        $b = min($b, $item);\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $largest = array();\n\
    \  $smallest = array();\n  foreach ($lst as $value) {\n    if ($value < 0)\n \
    \     $largest[] = $value;\n    else\n      $smallest[] = $value;\n  }\n  if (count($largest)\
    \ > count($smallest))\n    return $largest;\n  else\n    return $smallest;\n}",
  "    $largest = null;\n    $smallest = null;\n    foreach ($lst as $item) {\n  \
    \      if ($item < 0) {\n            if ($largest === null) {\n              \
    \  $largest = $item;\n            } else {\n                $largest = max($largest,\
    \ $item);\n            }\n        } elseif ($item > 0) {\n            if ($smallest\
    \ === null) {\n                $smallest = $item;\n            } else {\n    \
    \            $smallest = min($smallest, $item);\n            }\n        }\n  \
    \  }\n    return array($largest, $smallest);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null)\
    \ $a = $item;\n      else if ($b === null) $b = $item;\n      else if ($item >\
    \ $a && $item < $b) $b = $item;\n      else if ($item < $a && $item > $b) $a =\
    \ $item;\n    }\n  }\n  return array($a, $b);\n}\n", "  $largest = array();\n\
    \  $smallest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      $largest[] = $item;\n    } else {\n      $smallest[] = $item;\n    }\n\
    \  }\n  if (count($largest) > count($smallest)) {\n    $largest = array_reverse($largest);\n\
    \  }\n  return array($largest, $smallest);\n}\n", "    $max_negative = array();\n\
    \    $min_positive = array();\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            $max_negative[] = $item;\n        } else {\n           \
    \ $min_positive[] = $item;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "  $max_negative = array();\n  $min_positive = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $max_negative[] = $item;\n  \
    \  } else {\n      $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null || $item < $a) {\n      \
    \  $a = $item;\n      }\n      if ($b === null || $item > $b) {\n        $b =\
    \ $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "    $a = null;\n\
    \    $b = null;\n    foreach ($lst as $v) {\n        if (is_int($v)) {\n     \
    \       if ($a === null || $v < $a) {\n                $a = $v;\n            }\n\
    \            if ($b === null || $b > $v) {\n                $b = $v;\n       \
    \     }\n        }\n    }\n    return array($a, $b);\n}\n", "  $max_negative =\
    \ min($lst);\n  $min_positive = max($lst);\n  return ($max_negative > $min_positive)\
    \ ? $max_negative : $min_positive;\n}\n", "  $largest = array();\n  $smallest\
    \ = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      $largest[]\
    \ = $item;\n      $smallest[] = $item;\n    } else {\n      if (count($largest)\
    \ < count($smallest)) {\n        $largest = $item;\n      } else {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($largest, $smallest);\n}\n", " \
    \ $largest = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($largest === null || $item > $largest) {\n        $largest = $item;\n\
    \      }\n      if ($smallest === null || $item < $smallest) {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($largest, $smallest);\n}\n", " \
    \ $max_negative = min($lst);\n  $min_positive = max($lst);\n  return ($max_negative\
    \ < $min_positive) ? $max_negative : $min_positive;\n}\n", "    $max_negative\
    \ = array();\n    $max_positive = array();\n    foreach ($lst as $item) {\n  \
    \      if ($item < 0) {\n            $max_negative[] = $item;\n        } else\
    \ {\n            $max_positive[] = $item;\n        }\n    }\n    if (count($max_negative)\
    \ > count($max_positive)) {\n        return $max_negative;\n    } else {\n   \
    \     return $max_positive;\n    }\n}\n", "    $smallest = null;\n    $largest\
    \ = null;\n    foreach ($lst as $item) {\n        if (is_int($item)) {\n     \
    \       if ($smallest === null || $item < $smallest) {\n                $smallest\
    \ = $item;\n            }\n            if ($largest === null || $item > $largest)\
    \ {\n                $largest = $item;\n            }\n        }\n    }\n    return\
    \ array($smallest, $largest);\n}\n", "  $max_negative = -1;\n  $min_positive =\
    \ PHP_INT_MAX;\n  foreach ($lst as $value) {\n    if ($value < 0) {\n      if\
    \ ($max_negative < $value) {\n        $max_negative = $value;\n      }\n    }\
    \ else if ($value > 0) {\n      if ($min_positive > $value) {\n        $min_positive\
    \ = $value;\n      }\n    }\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $v) {\n    if ($v < 0) {\n\
    \      if ($a === null) {\n        $a = $v;\n      } else {\n        $b = $v;\n\
    \      }\n    } else if ($v > 0) {\n      if ($a === null) {\n        $a = $v;\n\
    \      } else if ($b === null) {\n        $b = $v;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $max_negative = array();\n    $min_positive = array();\n\
    \    foreach ($lst as $value) {\n        if ($value < 0) {\n            $max_negative[]\
    \ = $value;\n        } else {\n            $min_positive[] = $value;\n       \
    \ }\n    }\n    if (count($max_negative) > count($min_positive)) {\n        return\
    \ $max_negative;\n    } else {\n        return $min_positive;\n    }\n}", "  $max_negative\
    \ = -1;\n  $min_positive = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item\
    \ < 0) {\n      if ($max_negative < $item) {\n        $max_negative = $item;\n\
    \      }\n    } else {\n      if ($min_positive > $item) {\n        $min_positive\
    \ = $item;\n      }\n    }\n  }\n  return array($max_negative, $min_positive);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null || $item < $a) {\n        $a = $item;\n      }\n  \
    \    if ($b === null || $item > $b) {\n        $b = $item;\n      }\n    }\n \
    \ }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst\
    \ as $item) {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a\
    \ = $item;\n      } else if ($item < $a) {\n        $a = $item;\n      }\n   \
    \   if ($b === null) {\n        $b = $item;\n      } else if ($item > $b) {\n\
    \        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  \
    \  $largest = null;\n    $smallest = null;\n    foreach ($lst as $item) {\n  \
    \      if (is_int($item)) {\n            if ($largest === null || $item > $largest)\
    \ {\n                $largest = $item;\n            }\n            if ($smallest\
    \ === null || $item < $smallest) {\n                $smallest = $item;\n     \
    \       }\n        }\n    }\n    return array($largest, $smallest);\n}\n", " \
    \ $max_negative = array();\n  $min_positive = array();\n  foreach ($lst as $value)\
    \ {\n    if ($value < 0) {\n      $max_negative[] = $value;\n    } else {\n  \
    \    $min_positive[] = $value;\n    }\n  }\n  if (count($max_negative) > count($min_positive))\
    \ {\n    return $max_negative;\n  } else {\n    return $min_positive;\n  }\n}\n",
  "    $max_negative = -1;\n    $min_positive = 1;\n    foreach ($lst as $item) {\n\
    \        if ($item < 0) {\n            if ($max_negative < $item) {\n        \
    \        $max_negative = $item;\n            }\n        } else if ($item > 0)\
    \ {\n            if ($min_positive > $item) {\n                $min_positive =\
    \ $item;\n            }\n        }\n    }\n    return array($max_negative, $min_positive);\n\
    }\n", "  $max_int = null;\n  $min_int = null;\n  foreach ($lst as $int) {\n  \
    \  if ($max_int === null || $int > $max_int) {\n      $max_int = $int;\n    }\n\
    \    if ($min_int === null || $int < $min_int) {\n      $min_int = $int;\n   \
    \ }\n  }\n  return array($max_int, $min_int);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null\
    \ || $item > $a) {\n        $a = $item;\n      }\n      if ($b === null || $item\
    \ < $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($a > $item)\
    \ {\n        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($b < $item) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach ($lst\
    \ as $item) {\n    if ($largest === null || $item < $largest) {\n      $largest\
    \ = $item;\n    }\n    if ($smallest === null || $item > $smallest) {\n      $smallest\
    \ = $item;\n    }\n  }\n  return array($largest, $smallest);\n}\n", "    $largest\
    \ = null;\n    $smallest = null;\n    foreach ($lst as $item) {\n        if (is_int($item))\
    \ {\n            if ($largest === null || $item > $largest) {\n              \
    \  $largest = $item;\n            }\n            if ($smallest === null || $item\
    \ < $smallest) {\n                $smallest = $item;\n            }\n        }\n\
    \    }\n    return array($largest, $smallest);\n}\n", "    $max_int = null;\n\
    \    $min_int = null;\n    foreach ($lst as $int) {\n        if ($max_int ===\
    \ null || $int > $max_int) {\n            $max_int = $int;\n        }\n      \
    \  if ($min_int === null || $int < $min_int) {\n            $min_int = $int;\n\
    \        }\n    }\n    return array($max_int, $min_int);\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if\
    \ ($a === null) {\n        $a = $item;\n      } else if ($item < $a) {\n     \
    \   $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n    \
    \  } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $largest = PHP_INT_MAX;\n    $smallest = PHP_INT_MIN;\n\
    \    foreach ($lst as $item) {\n        if ($item < $smallest) {\n           \
    \ $smallest = $item;\n        } else if ($item > $largest) {\n            $largest\
    \ = $item;\n        }\n    }\n    return array($smallest, $largest);\n}\n", " \
    \ $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null || $item < $a) {\n        $a = $item;\n      }\n  \
    \    if ($b === null || $item > $b) {\n        $b = $item;\n      }\n    }\n \
    \ }\n  return array($a, $b);\n}", "  $max_negative = array();\n  $min_positive\
    \ = array();\n  foreach ($lst as $value) {\n    if ($value < 0) {\n      $max_negative[]\
    \ = $value;\n    } else {\n      $min_positive[] = $value;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n\
    \      } else if ($item < $a) {\n        $a = $item;\n      }\n      if ($b ===\
    \ null) {\n        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $max_negative = -1;\n\
    \  $min_positive = PHP_INT_MAX;\n  foreach ($lst as $item) {\n    if ($item <\
    \ 0) {\n      if ($max_negative < $item) {\n        $max_negative = $item;\n \
    \     }\n    } else if ($item > $min_positive) {\n      $min_positive = $item;\n\
    \    }\n  }\n  return array($max_negative, $min_positive);\n}\n", "    $largest_integer\
    \ = null;\n    $smallest_integer = null;\n    foreach ($lst as $integer) {\n \
    \       if (is_int($integer)) {\n            if ($largest_integer === null ||\
    \ $integer > $largest_integer) {\n                $largest_integer = $integer;\n\
    \            }\n            if ($smallest_integer === null || $integer < $smallest_integer)\
    \ {\n                $smallest_integer = $integer;\n            }\n        }\n\
    \    }\n    return array($largest_integer, $smallest_integer);\n}\n", "  $a =\
    \ null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($a === null) {\n        $a = $item;\n      } else if ($item < $a) {\n\
    \        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $largest_integer = null;\n  $smallest_integer = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest_integer\
    \ === null || $item > $largest_integer) {\n        $largest_integer = $item;\n\
    \      }\n      if ($smallest_integer === null || $item < $smallest_integer) {\n\
    \        $smallest_integer = $item;\n      }\n    }\n  }\n  return array($largest_integer,\
    \ $smallest_integer);\n}\n", "    $smallest = null;\n    $largest = null;\n  \
    \  foreach ($lst as $item) {\n        if (is_int($item)) {\n            if ($smallest\
    \ === null || $item < $smallest) {\n                $smallest = $item;\n     \
    \       }\n            if ($largest === null || $item > $largest) {\n        \
    \        $largest = $item;\n            }\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n", "  $max_negative = -1;\n  $max_positive = -1;\n  $min_negative\
    \ = -1;\n  $min_positive = -1;\n  foreach ($lst as $item) {\n    if ($item < 0)\
    \ {\n      if ($max_negative < $item) {\n        $max_negative = $item;\n    \
    \  }\n    } else if ($item > 0) {\n      if ($max_positive < $item) {\n      \
    \  $max_positive = $item;\n      }\n    } else {\n      if ($min_negative > $item)\
    \ {\n        $min_negative = $item;\n      }\n      if ($min_positive > $item)\
    \ {\n        $min_positive = $item;\n      }\n    }\n  }\n  return array($max_negative,\
    \ $max_positive, $min_negative, $min_positive);\n}\n", "  $max_negative = array();\n\
    \  $min_positive = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      $max_negative[] = $item;\n    } else {\n      $min_positive[] = $item;\n\
    \    }\n  }\n  if (count($max_negative) > count($min_positive)) {\n    return\
    \ $max_negative;\n  } else {\n    return $min_positive;\n  }\n}", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n      if ($a === null)\
    \ {\n        $a = $x;\n      }\n      else {\n        $b = $x;\n      }\n    }\n\
    \    else {\n      if ($a === null) {\n        $b = $x;\n      }\n      else {\n\
    \        $a = $x;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "    $max_negative\
    \ = -1;\n    $min_positive = PHP_INT_MAX;\n    foreach ($lst as $item) {\n   \
    \     if ($item < 0) {\n            if ($max_negative < $item) {\n           \
    \     $max_negative = $item;\n            }\n        } elseif ($item > $min_positive)\
    \ {\n            $min_positive = $item;\n        }\n    }\n    return array($max_negative,\
    \ $min_positive);\n}\n", "    $smallest = null;\n    $largest = null;\n    foreach\
    \ ($lst as $item) {\n        if ($smallest === null || $item < $smallest) {\n\
    \            $smallest = $item;\n        }\n        if ($largest === null || $item\
    \ > $largest) {\n            $largest = $item;\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach\
    \ ($lst as $value) {\n    if (is_int($value)) {\n      $largest[] = $value;\n\
    \      $smallest[] = $value;\n    } elseif (is_null($value)) {\n      $largest[]\
    \ = null;\n      $smallest[] = null;\n    } else {\n      $largest[] = null;\n\
    \      $smallest[] = null;\n    }\n  }\n  foreach ($largest as $key => $value)\
    \ {\n    if ($value < $smallest[$key]) {\n      $smallest[$key] = $value;\n  \
    \  }\n  }\n  return array($smallest, $largest);\n}", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null)\
    \ {\n        $a = $item;\n      } else if ($b === null) {\n        $b = $item;\n\
    \      } else if ($a > $b) {\n        $a = $item;\n      } else if ($a < $b) {\n\
    \        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  \
    \  $max_negative = array();\n    $min_positive = array();\n    foreach ($lst as\
    \ $item) {\n        if ($item < 0) {\n            $max_negative[] = $item;\n \
    \       } else {\n            $min_positive[] = $item;\n        }\n    }\n   \
    \ if (count($max_negative) > count($min_positive)) {\n        return $max_negative;\n\
    \    } else {\n        return $min_positive;\n    }\n}\n", "    $smallest = null;\n\
    \    $largest = null;\n    foreach ($lst as $item) {\n        if (is_int($item))\
    \ {\n            if ($smallest === null || $item < $smallest) {\n            \
    \    $smallest = $item;\n            }\n            if ($largest === null || $item\
    \ > $largest) {\n                $largest = $item;\n            }\n        }\n\
    \    }\n    return array($smallest, $largest);\n}", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null\
    \ || $item < $a) {\n        $a = $item;\n      }\n      if ($b === null || $item\
    \ > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n$result = largest_smallest_integers(array(3, -5, 7, -9, 4));\nvar_dump($result);",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $x) {\n    if (is_int($x)) {\n \
    \     if ($a === null || $x < $a) {\n        $a = $x;\n      }\n      if ($b ===\
    \ null || $x > $b) {\n        $b = $x;\n      }\n    }\n  }\n  return array($a,\
    \ $b);\n}\n", "    $max_negative = array();\n    $min_positive = array();\n  \
    \  foreach ($lst as $item) {\n        if ($item < 0) {\n            $max_negative[]\
    \ = $item;\n        } else {\n            $min_positive[] = $item;\n        }\n\
    \    }\n    if (count($max_negative) > count($min_positive)) {\n        return\
    \ $max_negative;\n    } else {\n        return $min_positive;\n    }\n}\n", " \
    \ $largest = array();\n  $smallest = array();\n  foreach ($lst as $item) {\n \
    \   if (is_int($item)) {\n      if ($item < 0) {\n        $largest[] = $item;\n\
    \      } else {\n        $smallest[] = $item;\n      }\n    }\n  }\n  if (count($largest)\
    \ > count($smallest)) {\n    return $largest;\n  } else {\n    return $smallest;\n\
    \  }\n}\n", "    $max_negative = array();\n    $min_positive = array();\n    foreach\
    \ ($lst as $item) {\n        if ($item < 0) {\n            $max_negative[] = $item;\n\
    \        } else {\n            $min_positive[] = $item;\n        }\n    }\n  \
    \  if (count($max_negative) > count($min_positive)) {\n        return $max_negative;\n\
    \    } else {\n        return $min_positive;\n    }\n}", "  $a = null;\n  $b =\
    \ null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a ===\
    \ null) {\n        $a = $item;\n        $b = $item;\n      } else if ($item <\
    \ $b) {\n        $a = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $max_negative = array();\n\
    \  $min_positive = array();\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      $max_negative[] = $item;\n    } else {\n      $min_positive[] = $item;\n\
    \    }\n  }\n  if (count($max_negative) > count($min_positive)) {\n    return\
    \ $max_negative;\n  } else {\n    return $min_positive;\n  }\n}\n", "    $largest_integer\
    \ = null;\n    $smallest_integer = null;\n    foreach ($lst as $integer) {\n \
    \       if ($integer < 0) {\n            if ($largest_integer === null) {\n  \
    \              $largest_integer = $integer;\n            } else {\n          \
    \      $largest_integer = $largest_integer;\n            }\n        } else if\
    \ ($integer > 0) {\n            if ($smallest_integer === null) {\n          \
    \      $smallest_integer = $integer;\n            } else {\n                $smallest_integer\
    \ = $smallest_integer;\n            }\n        }\n    }\n    return array($largest_integer,\
    \ $smallest_integer);\n}\n", "  $max_negative = -1;\n  $min_positive = PHP_INT_MAX;\n\
    \  foreach ($lst as $value) {\n    if ($value < 0) {\n      if ($max_negative\
    \ < $value) {\n        $max_negative = $value;\n      }\n    } else if ($value\
    \ > 0) {\n      if ($min_positive > $value) {\n        $min_positive = $value;\n\
    \      }\n    }\n  }\n  return array($max_negative, $min_positive);\n}\n", " \
    \ $a = null;\n  $b = null;\n  foreach ($lst as $x) {\n    if ($x < 0) {\n    \
    \  if ($a === null) {\n        $a = $x;\n      } else {\n        $a = max($a,\
    \ $x);\n      }\n    }\n    if ($x > 0) {\n      if ($b === null) {\n        $b\
    \ = $x;\n      } else {\n        $b = min($b, $x);\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $largest = array();\n  $smallest = array();\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($item < 0) {\n      \
    \  $largest[] = $item;\n      } else {\n        $smallest[] = $item;\n      }\n\
    \    }\n  }\n  return array($largest, $smallest);\n}\n", "    $smallest = null;\n\
    \    $largest = null;\n    foreach ($lst as $item) {\n        if ($smallest ===\
    \ null || $item < $smallest) {\n            $smallest = $item;\n        }\n  \
    \      if ($largest === null || $item > $largest) {\n            $largest = $item;\n\
    \        }\n    }\n    return array($smallest, $largest);\n}\n", "  $max_negative\
    \ = array();\n  $min_positive = array();\n  foreach ($lst as $item) {\n    if\
    \ ($item < 0) {\n      $max_negative[] = $item;\n    } else {\n      $min_positive[]\
    \ = $item;\n    }\n  }\n  if (count($max_negative) > count($min_positive)) {\n\
    \    return $max_negative;\n  } else {\n    return $min_positive;\n  }\n}\n",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      if ($a === null) {\n        $a = $item;\n      } else {\n        $a = max($a,\
    \ $item);\n      }\n    } else if ($item > 0) {\n      if ($b === null) {\n  \
    \      $b = $item;\n      } else {\n        $b = min($b, $item);\n      }\n  \
    \  }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null) {\n    \
    \    $a = $item;\n      } else if ($b === null) {\n        $b = $item;\n     \
    \ } else if ($a > $b) {\n        $a = $item;\n      } else if ($a < $b) {\n  \
    \      $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "    $max_negative\
    \ = min($lst);\n    $min_positive = max($lst);\n    if ($max_negative === $min_positive)\
    \ {\n        return null;\n    }\n    return array($max_negative, $min_positive);\n\
    }\n", "  $max_negative = array();\n  $min_positive = array();\n  foreach ($lst\
    \ as $value) {\n    if ($value < 0) {\n      $max_negative[] = $value;\n    }\
    \ else {\n      $min_positive[] = $value;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}\n", "  $largest = null;\n  $smallest = null;\n  foreach\
    \ ($lst as $value) {\n    if ($value < $smallest) {\n      $smallest = $value;\n\
    \    }\n    if ($value > $largest) {\n      $largest = $value;\n    }\n  }\n \
    \ return array($largest, $smallest);\n}\n", "  $max_negative = array();\n  $min_positive\
    \ = array();\n  foreach ($lst as $value) {\n    if ($value < 0) {\n      $max_negative[]\
    \ = $value;\n    } else {\n      $min_positive[] = $value;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}\n", "    $max_negative = array();\n    $min_positive\
    \ = array();\n    foreach ($lst as $value) {\n        if ($value < 0) {\n    \
    \        $max_negative[] = $value;\n        } else {\n            $min_positive[]\
    \ = $value;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}", "  $max_negative = array();\n  $min_positive = array();\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      $max_negative[] = $item;\n  \
    \  } else {\n      $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n\
    \      } else if ($item < $a) {\n        $a = $item;\n      }\n      if ($b ===\
    \ null) {\n        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "    $max_negative = array();\n\
    \    $min_positive = array();\n    foreach ($lst as $item) {\n        if ($item\
    \ < 0) {\n            $max_negative[] = $item;\n        } else {\n           \
    \ $min_positive[] = $item;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "  $max_negative = -1;\n  $min_positive = PHP_INT_MAX;\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      if ($max_negative < $item) {\n\
    \        $max_negative = $item;\n      }\n    } else if ($item > 0) {\n      if\
    \ ($min_positive > $item) {\n        $min_positive = $item;\n      }\n    }\n\
    \  }\n  return array($max_negative, $min_positive);\n}\n", "  $largest = null;\n\
    \  $smallest = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($largest === null || $item > $largest) {\n        $largest = $item;\n\
    \      }\n      if ($smallest === null || $item < $smallest) {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($largest, $smallest);\n}\n", " \
    \   $max_negative = array();\n    $min_positive = array();\n    foreach ($lst\
    \ as $item) {\n        if ($item < 0) {\n            $max_negative[] = $item;\n\
    \        } else {\n            $min_positive[] = $item;\n        }\n    }\n  \
    \  if (count($max_negative) > count($min_positive)) {\n        return $max_negative;\n\
    \    } else {\n        return $min_positive;\n    }\n}\n", "    $max = -PHP_INT_MAX;\n\
    \    $min = PHP_INT_MAX;\n    foreach ($lst as $val) {\n        if ($val < $min)\
    \ {\n            $min = $val;\n        } elseif ($val > $max) {\n            $max\
    \ = $val;\n        }\n    }\n    return array($max, $min);\n}\n", "  $largest\
    \ = null;\n  $smallest = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($largest === null || $item > $largest) {\n        $largest = $item;\n\
    \      }\n      if ($smallest === null || $item < $smallest) {\n        $smallest\
    \ = $item;\n      }\n    }\n  }\n  return array($largest, $smallest);\n}\n", " \
    \ $max_negative = array();\n  $min_positive = array();\n  foreach ($lst as $value)\
    \ {\n    if ($value < 0) {\n      $max_negative[] = $value;\n    } else {\n  \
    \    $min_positive[] = $value;\n    }\n  }\n  if (count($max_negative) > count($min_positive))\
    \ {\n    return $max_negative;\n  } else {\n    return $min_positive;\n  }\n}\n",
  "    $largest = array();\n    $smallest = array();\n    foreach ($lst as $value)\
    \ {\n        if (is_int($value)) {\n            if ($value < $smallest[0]) {\n\
    \                $smallest[0] = $value;\n            }\n            if ($value\
    \ > $largest[0]) {\n                $largest[0] = $value;\n            }\n   \
    \     } else {\n            $smallest[0] = $value;\n            $largest[0] =\
    \ $value;\n        }\n    }\n    return array($smallest[0], $largest[0]);\n}\n",
  "    $largest = null;\n    $smallest = null;\n    foreach ($lst as $item) {\n  \
    \      if ($item < 0) {\n            if ($largest === null) $largest = $item;\n\
    \            else if ($item > $largest) $largest = $item;\n        } else if ($item\
    \ > 0) {\n            if ($smallest === null) $smallest = $item;\n           \
    \ else if ($item < $smallest) $smallest = $item;\n        }\n    }\n    return\
    \ array($largest, $smallest);\n}", "    $a = null;\n    $b = null;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item)) {\n            if ($a === null)\
    \ {\n                $a = $item;\n            } else {\n                if ($item\
    \ > $b) {\n                    $b = $item;\n                }\n            }\n\
    \        }\n    }\n    return array($a, $b);\n}\n", "    $max_negative = min($lst);\n\
    \    $min_positive = max($lst);\n    if ($max_negative == $min_positive) {\n \
    \       return null;\n    }\n    return array($max_negative, $min_positive);\n\
    }\n", "  $largest_integer = null;\n  $smallest_integer = null;\n  foreach ($lst\
    \ as $item) {\n    if (is_int($item)) {\n      if ($largest_integer === null ||\
    \ $item > $largest_integer) {\n        $largest_integer = $item;\n      }\n  \
    \    if ($smallest_integer === null || $item < $smallest_integer) {\n        $smallest_integer\
    \ = $item;\n      }\n    }\n  }\n  return array($largest_integer, $smallest_integer);\n\
    }\n", "    $max_negative = -1;\n    $min_positive = PHP_INT_MAX;\n    foreach\
    \ ($lst as $item) {\n        if ($item < 0) {\n            if ($max_negative <\
    \ $item) {\n                $max_negative = $item;\n            }\n        } else\
    \ if ($item > $min_positive) {\n            $min_positive = $item;\n        }\n\
    \    }\n    if ($max_negative == -1 && $min_positive == PHP_INT_MAX) {\n     \
    \   return null;\n    }\n    return array($max_negative, $min_positive);\n}",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($item < $a)\
    \ {\n        $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n\
    \      } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $a = null;\n    $b = null;\n    foreach ($lst as\
    \ $item) {\n        if (is_int($item)) {\n            if ($a === null) {\n   \
    \             $a = $item;\n            } else {\n                if ($item > $b)\
    \ {\n                    $b = $item;\n                }\n            }\n     \
    \   }\n    }\n    return array($a, $b);\n}\n", "    $largest = array();\n    $smallest\
    \ = array();\n    foreach ($lst as $value) {\n        if (is_int($value)) {\n\
    \            if ($value < $smallest[0]) {\n                $smallest[0] = $value;\n\
    \            }\n            if ($value > $largest[0]) {\n                $largest[0]\
    \ = $value;\n            }\n        } else {\n            $smallest[0] = null;\n\
    \            $largest[0] = null;\n        }\n    }\n    return array($smallest[0],\
    \ $largest[0]);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $num) {\n\
    \    if ($num < 0) {\n      if ($a === null) {\n        $a = $num;\n      } else\
    \ {\n        $b = $num;\n      }\n    } else if ($num > 0) {\n      if ($a ===\
    \ null) {\n        $a = $num;\n      } else if ($b === null) {\n        $b = $num;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null\
    \ || $item < $a) {\n        $a = $item;\n      }\n      if ($b === null || $item\
    \ > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n$result = largest_smallest_integers(array(-3, -2, -1, 1, 2, 3));\nvar_dump($result);",
  "  $max_negative = array();\n  $min_positive = array();\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      $max_negative[] = $item;\n    } else {\n    \
    \  $min_positive[] = $item;\n    }\n  }\n  if (count($max_negative) > count($min_positive))\
    \ {\n    return $max_negative;\n  } else {\n    return $min_positive;\n  }\n}\n",
  "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null) {\n        $a = $item;\n      } else if ($b === null)\
    \ {\n        $b = $item;\n      } else if ($a > $b) {\n        $a = $item;\n \
    \     } else if ($a < $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $max_negative = array();\n  $min_positive = array();\n\
    \  foreach ($lst as $value) {\n    if ($value < 0) {\n      $max_negative[] =\
    \ $value;\n    } else {\n      $min_positive[] = $value;\n    }\n  }\n  if (count($max_negative)\
    \ > count($min_positive)) {\n    return $max_negative;\n  } else {\n    return\
    \ $min_positive;\n  }\n}", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n\
    \      } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $max_negative = min($lst);\n    $min_positive = max($lst);\n\
    \    if ($max_negative == $min_positive) {\n        return null;\n    }\n    return\
    \ array($max_negative, $min_positive);\n}\n", "    $a = null;\n    $b = null;\n\
    \    foreach ($lst as $item) {\n        if (is_int($item)) {\n            if ($a\
    \ === null) {\n                $a = $item;\n            } else {\n           \
    \     if ($item > $b) {\n                    $b = $item;\n                }\n\
    \            }\n        } else {\n            if ($a === null) {\n           \
    \     $a = null;\n            } else {\n                if ($item < $b) {\n  \
    \                  $b = null;\n                }\n            }\n        }\n \
    \   }\n    return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null) {\n    \
    \    $a = $item;\n        $b = $item;\n      } else if ($a > $item) {\n      \
    \  $a = $item;\n      } else if ($b < $item) {\n        $b = $item;\n      }\n\
    \    }\n  }\n  return array($a, $b);\n}\n", "  $max_negative = min($lst);\n  $min_positive\
    \ = max($lst);\n  if ($max_negative == $min_positive) {\n    return null;\n  }\n\
    \  return array($max_negative, $min_positive);\n}\n", "    $largest_integer =\
    \ null;\n    $smallest_integer = null;\n    foreach ($lst as $integer) {\n   \
    \     if (is_int($integer)) {\n            if ($largest_integer === null || $integer\
    \ > $largest_integer) {\n                $largest_integer = $integer;\n      \
    \      }\n            if ($smallest_integer === null || $integer < $smallest_integer)\
    \ {\n                $smallest_integer = $integer;\n            }\n        }\n\
    \    }\n    return array($largest_integer, $smallest_integer);\n}\n", "  $a =\
    \ null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      if ($a === null || $item < $a) {\n        $a = $item;\n      }\n      if\
    \ ($b === null || $item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $smallest = NULL;\n    $largest = NULL;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item)) {\n            if ($smallest ===\
    \ NULL) {\n                $smallest = $item;\n                $largest = $item;\n\
    \            } else {\n                if ($item < $smallest) {\n            \
    \        $smallest = $item;\n                }\n                if ($item > $largest)\
    \ {\n                    $largest = $item;\n                }\n            }\n\
    \        }\n    }\n    return array($smallest, $largest);\n}", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if\
    \ ($a === null) {\n        $a = $item;\n      } else if ($item < $a) {\n     \
    \   $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n    \
    \  } else if ($item > $b) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if ($item < 0) {\n      if ($a === null) {\n        $a = $item;\n   \
    \   } else {\n        $a = max($a, $item);\n      }\n    } else {\n      if ($b\
    \ === null) {\n        $b = $item;\n      } else {\n        $b = min($b, $item);\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}", "    $largest = array();\n\
    \    $smallest = array();\n    foreach ($lst as $item) {\n        if (is_int($item))\
    \ {\n            if ($item > $largest[0]) {\n                $largest = array($item);\n\
    \            } else if ($item < $smallest[0]) {\n                $smallest = array($item);\n\
    \            } else {\n                $largest[] = $item;\n                $smallest[]\
    \ = $item;\n            }\n        } else {\n            $largest = array($item);\n\
    \            $smallest = array($item);\n        }\n    }\n    if (count($largest)\
    \ == 0) {\n        return null;\n    } else if (count($smallest) == 0) {\n   \
    \     return null;\n    } else {\n        return array($largest, $smallest);\n\
    \    }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n      } else\
    \ if ($item < $a) {\n        $a = $item;\n      }\n      if ($b === null) {\n\
    \        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n  \
    \    }\n    }\n  }\n  return array($a, $b);\n}\n$result = largest_smallest_integers(array(-2,\
    \ -4, -6, -10, -12, -14, -16, -18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40,\
    \ 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78,\
    \ 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114,\
    \ 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146,\
    \ 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178,\
    \ 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210,\
    \ 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242,\
    \ 244, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274,\
    \ 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306,\
    \ 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338,\
    \ 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370,\
    \ 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402,\
    \ 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434,\
    \ 436, 438, 440, 442, 444, 446, 448, 450, 452, 4", "    $smallest = null;\n  \
    \  $largest = null;\n    foreach ($lst as $item) {\n        if (is_int($item))\
    \ {\n            if ($smallest === null || $smallest > $item) {\n            \
    \    $smallest = $item;\n            }\n            if ($largest === null || $largest\
    \ < $item) {\n                $largest = $item;\n            }\n        }\n  \
    \  }\n    return array($smallest, $largest);\n}\n", "    $result = null;\n   \
    \ foreach ($lst as $item) {\n        if (is_int($item)) {\n            if ($result\
    \ === null || $item > $result) {\n                $result = $item;\n         \
    \   }\n        } elseif (is_null($result)) {\n            $result = $item;\n \
    \       }\n    }\n    return $result;\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null) {\n    \
    \    $a = $item;\n      } else if ($item > $b) {\n        $b = $item;\n      }\n\
    \    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if (is_int($item)) {\n      if ($a === null) {\n    \
    \    $a = $item;\n      } else if ($item < $a) {\n        $a = $item;\n      }\n\
    \      if ($b === null) {\n        $b = $item;\n      } else if ($item > $b) {\n\
    \        $b = $item;\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  \
    \  $largest = array();\n    $smallest = array();\n    foreach ($lst as $item)\
    \ {\n        if (is_int($item)) {\n            if ($item < 0) {\n            \
    \    $largest[] = $item;\n            } else {\n                $smallest[] =\
    \ $item;\n            }\n        }\n    }\n    if (count($largest) > count($smallest))\
    \ {\n        return $largest;\n    } else {\n        return $smallest;\n    }\n\
    }\n", "    $max_negative = array();\n    $min_positive = array();\n    foreach\
    \ ($lst as $item) {\n        if ($item < 0) {\n            $max_negative[] = $item;\n\
    \        } else {\n            $min_positive[] = $item;\n        }\n    }\n  \
    \  if (count($max_negative) > count($min_positive)) {\n        return $max_negative;\n\
    \    } else {\n        return $min_positive;\n    }\n}\n", "    $max_negative\
    \ = array();\n    $min_positive = array();\n    foreach ($lst as $value) {\n \
    \       if ($value < 0) {\n            $max_negative[] = $value;\n        } else\
    \ {\n            $min_positive[] = $value;\n        }\n    }\n    if (count($max_negative)\
    \ > count($min_positive)) {\n        return $max_negative;\n    } else {\n   \
    \     return $min_positive;\n    }\n}\n", "    $max_negative = array();\n    $min_positive\
    \ = array();\n    foreach ($lst as $value) {\n        if ($value < 0) {\n    \
    \        $max_negative[] = $value;\n        } else {\n            $min_positive[]\
    \ = $value;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "    $largest_integer = null;\n    $smallest_integer = null;\n \
    \   foreach ($lst as $integer) {\n        if ($integer < 0) {\n            if\
    \ ($largest_integer === null) {\n                $largest_integer = $integer;\n\
    \            } else {\n                $largest_integer = max($largest_integer,\
    \ $integer);\n            }\n        } else {\n            if ($smallest_integer\
    \ === null) {\n                $smallest_integer = $integer;\n            } else\
    \ {\n                $smallest_integer = min($smallest_integer, $integer);\n \
    \           }\n        }\n    }\n    return array($largest_integer, $smallest_integer);\n\
    }\n", "  $smallest = NULL;\n  $largest = NULL;\n  foreach ($lst as $item) {\n\
    \    if ($item < 0) {\n      if ($smallest === NULL) {\n        $smallest = $item;\n\
    \      } else {\n        $smallest = $smallest > $item ? $smallest : $item;\n\
    \      }\n    }\n    if ($item > 0) {\n      if ($largest === NULL) {\n      \
    \  $largest = $item;\n      } else {\n        $largest = $largest < $item ? $largest\
    \ : $item;\n      }\n    }\n  }\n  return array($smallest, $largest);\n}\n", " \
    \ $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item))\
    \ {\n      if ($a === null || $item < $a) {\n        $a = $item;\n      }\n  \
    \    if ($b === null || $item > $b) {\n        $b = $item;\n      }\n    }\n \
    \ }\n  return array($a, $b);\n}\n", "    $max_negative = array();\n    $min_positive\
    \ = array();\n    foreach ($lst as $item) {\n        if ($item < 0) {\n      \
    \      $max_negative[] = $item;\n        } else {\n            $min_positive[]\
    \ = $item;\n        }\n    }\n    if (count($max_negative) > count($min_positive))\
    \ {\n        return $max_negative;\n    } else {\n        return $min_positive;\n\
    \    }\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n      } else\
    \ if ($item < $a) {\n        $a = $item;\n      }\n      if ($b === null) {\n\
    \        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n  \
    \    }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n\
    \  foreach ($lst as $x) {\n    if ($x < 0) {\n      $a = $x;\n    } else if ($x\
    \ > 0) {\n      $b = $x;\n    }\n  }\n  return array($a, $b);\n}", "  $max_negative\
    \ = min($lst);\n  $min_positive = max($lst);\n  return ($max_negative < $min_positive)\
    \ ? $max_negative : $min_positive;\n}\n", "    $largest_integer = null;\n    $smallest_integer\
    \ = null;\n    foreach ($lst as $integer) {\n        if (is_int($integer)) {\n\
    \            if ($integer > $largest_integer) {\n                $largest_integer\
    \ = $integer;\n            }\n            if ($integer < $smallest_integer) {\n\
    \                $smallest_integer = $integer;\n            }\n        }\n   \
    \ }\n    return array($largest_integer, $smallest_integer);\n}\n", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $num) {\n    if ($num < 0) {\n      if ($a ===\
    \ null) {\n        $a = $num;\n      } else {\n        $b = $num;\n      }\n \
    \   } else if ($num >= 0) {\n      if ($a === null) {\n        $a = $num;\n  \
    \    } else if ($b === null) {\n        $b = $num;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "    $max = -INF;\n    $min = INF;\n    foreach ($lst\
    \ as $item) {\n        if ($item < 0) {\n            if ($max < -$item) {\n  \
    \              $max = -$item;\n            }\n        } else {\n            if\
    \ ($min > $item) {\n                $min = $item;\n            }\n        }\n\
    \    }\n    return array($max, $min);\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $v) {\n    if ($v < 0) {\n      if ($a === null) {\n        $a = $v;\n\
    \      } else {\n        $b = $v;\n      }\n    }\n  }\n  return array($a, $b);\n\
    }\n", "  $max_negative = min($lst);\n  $min_positive = max($lst);\n  return ($max_negative\
    \ < $min_positive) ? $max_negative : $min_positive;\n}\n", "  $largest = array();\n\
    \  $smallest = array();\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n\
    \      $largest[] = $item;\n    } else {\n      $smallest[] = $item;\n    }\n\
    \  }\n  if (count($largest) > count($smallest)) {\n    return $largest;\n  } else\
    \ {\n    return $smallest;\n  }\n}\n", "  $a = null;\n  $b = null;\n  foreach\
    \ ($lst as $item) {\n    if ($item < 0) {\n      if ($a === null) {\n        $a\
    \ = $item;\n      } else {\n        $a = max($a, $item);\n      }\n    } else\
    \ {\n      if ($b === null) {\n        $b = $item;\n      } else {\n        $b\
    \ = min($b, $item);\n      }\n    }\n  }\n  return array($a, $b);\n}\n", "  $a\
    \ = null;\n  $b = null;\n  foreach ($lst as $i) {\n    if ($i < 0) {\n      $a\
    \ = $i;\n    }\n    if ($i > 0) {\n      $b = $i;\n    }\n  }\n  return array($a,\
    \ $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item) {\n    if\
    \ (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n      } else\
    \ if ($item < $a) {\n        $a = $item;\n      }\n      if ($b === null) {\n\
    \        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n  \
    \    }\n    }\n  }\n  return array($a, $b);\n}\n", "  $largest = null;\n  $smallest\
    \ = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if ($largest\
    \ === null || $item > $largest) {\n        $largest = $item;\n      }\n      if\
    \ ($smallest === null || $item < $smallest) {\n        $smallest = $item;\n  \
    \    }\n    }\n  }\n  return array($smallest, $largest);\n}", "  $a = null;\n\
    \  $b = null;\n  foreach ($lst as $item) {\n    if (is_int($item)) {\n      if\
    \ ($a === null) {\n        $a = $item;\n      } else if ($a > $item) {\n     \
    \   $a = $item;\n      }\n      if ($b === null) {\n        $b = $item;\n    \
    \  } else if ($b < $item) {\n        $b = $item;\n      }\n    }\n  }\n  return\
    \ array($a, $b);\n}\n", "  $a = null;\n  $b = null;\n  foreach ($lst as $item)\
    \ {\n    if (is_int($item)) {\n      if ($a === null) {\n        $a = $item;\n\
    \      } else if ($item < $a) {\n        $a = $item;\n      }\n      if ($b ===\
    \ null) {\n        $b = $item;\n      } else if ($item > $b) {\n        $b = $item;\n\
    \      }\n    }\n  }\n  return array($a, $b);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

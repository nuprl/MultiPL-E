language: php
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) use ($mean) {\n        return $number - $mean;\n    }, $numbers);\n\
    \    return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8sgl7pf.php:20\n\
    Stack trace:\n#0 /tmp/tmpa8sgl7pf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa8sgl7pf.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvozhzivv.php:20\n\
    Stack trace:\n#0 /tmp/tmpvozhzivv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvozhzivv.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squareDiffs = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squareDiffs) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wbgwxu2.php:20\n\
    Stack trace:\n#0 /tmp/tmp1wbgwxu2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1wbgwxu2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuwey38c.php:20\n\
    Stack trace:\n#0 /tmp/tmpbuwey38c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbuwey38c.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp91dtdih.php:20\n\
    Stack trace:\n#0 /tmp/tmpp91dtdih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp91dtdih.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuwey38c.php:20\n\
    Stack trace:\n#0 /tmp/tmpbuwey38c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbuwey38c.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $square_sum += pow($n - $mean,2);\n  }\n  return sqrt($square_sum\
    \ / count($numbers));\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldc4r_v.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldc4r_v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsldc4r_v.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,\
    \ 2);\n  }\n  return sqrt($squared_diff / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifewkyag.php:22\n\
    Stack trace:\n#0 /tmp/tmpifewkyag.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifewkyag.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjj106jjm.php:19\n\
    Stack trace:\n#0 /tmp/tmpjj106jjm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjj106jjm.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $means = array_map(function($x) { return $x->mean(); }, $numbers);\n  $mads\
    \ = array_map(function($x, $mean) { return abs($x - $mean); }, $numbers, $means);\n\
    \  return array_sum($mads) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to a member function mean() on float\
    \ in /tmp/tmpjjbzp1tw.php:8\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpjjbzp1tw.php(8): array_map(Object(Closure), Array)\n#2 /tmp/tmpjjbzp1tw.php(14):\
    \ mean_absolute_deviation(Array)\n#3 /tmp/tmpjjbzp1tw.php(18): candidate(Array)\n\
    #4 /tmp/tmpjjbzp1tw.php(23): test()\n#5 {main}\n  thrown in /tmp/tmpjjbzp1tw.php\
    \ on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyflg2t46.php:19\n\
    Stack trace:\n#0 /tmp/tmpyflg2t46.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyflg2t46.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean    = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ { return abs($number - $mean); }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbjpftw5.php:18\n\
    Stack trace:\n#0 /tmp/tmpfbjpftw5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfbjpftw5.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhbb9cwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpzhbb9cwy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhbb9cwy.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_mean = array_sum(array_map(function\
    \ ($x) {\n    return pow($x, 2);\n  }, $numbers)) / count($numbers);\n  return\
    \ sqrt($squared_mean - pow($mean, 2));\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogitp5k7.php:21\n\
    Stack trace:\n#0 /tmp/tmpogitp5k7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpogitp5k7.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $squareDiffs = array_map(function\
    \ ($num) use ($mean) {\n        return $num - $mean;\n    }, $numbers);\n    return\
    \ array_sum($squareDiffs) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwolihmr.php:20\n\
    Stack trace:\n#0 /tmp/tmpmwolihmr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmwolihmr.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,2);\n\
    \  }\n  return sqrt($squared_diff / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_s3l5giu.php:22\n\
    Stack trace:\n#0 /tmp/tmp_s3l5giu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_s3l5giu.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    return array_sum(abs($numbers\
    \ - $mean)) / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp4rzb5fl6.php:9\n\
    Stack trace:\n#0 /tmp/tmp4rzb5fl6.php(13): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4rzb5fl6.php(17): candidate(Array)\n#2 /tmp/tmp4rzb5fl6.php(22): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4rzb5fl6.php on line 9\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,\
    \ 2);\n  }\n  return sqrt($squared_diff / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifewkyag.php:22\n\
    Stack trace:\n#0 /tmp/tmpifewkyag.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifewkyag.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  for ($i = 0; $i < $n; ++$i) {\n\
    \    $mean += abs($numbers[$i] - $mean);\n  }\n  return $mean / $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp490o9ndy.php:21\n\
    Stack trace:\n#0 /tmp/tmp490o9ndy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp490o9ndy.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = get_mean($numbers);\n  $mad = 0;\n  foreach ($numbers as $number)\
    \ {\n    $mad_current = abs($number - $mean);\n    $mad_total += $mad_current;\n\
    \    $mad_total += $mad_current;\n  }\n  return $mad_total / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_mean() in\
    \ /tmp/tmpaqooox6a.php:8\nStack trace:\n#0 /tmp/tmpaqooox6a.php(19): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmpaqooox6a.php(23): candidate(Array)\n#2 /tmp/tmpaqooox6a.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpaqooox6a.php on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function($number)\
    \ { return abs($number - $mean); }, $numbers);\n    return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7i8rr4at.php:18\n\
    Stack trace:\n#0 /tmp/tmp7i8rr4at.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7i8rr4at.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyflg2t46.php:19\n\
    Stack trace:\n#0 /tmp/tmpyflg2t46.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyflg2t46.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squareDiffs = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squareDiffs) / count($numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdl7smm9.php:19\n\
    Stack trace:\n#0 /tmp/tmpxdl7smm9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxdl7smm9.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqecnofo8.php:20\n\
    Stack trace:\n#0 /tmp/tmpqecnofo8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqecnofo8.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = get_mean($numbers);\n  $mad = 0;\n  foreach ($numbers as $n) {\n\
    \    $mad += abs($n - $mean);\n  }\n  return $mad / count($numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_mean() in\
    \ /tmp/tmp0zto4q20.php:8\nStack trace:\n#0 /tmp/tmp0zto4q20.php(17): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmp0zto4q20.php(21): candidate(Array)\n#2 /tmp/tmp0zto4q20.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0zto4q20.php on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhbb9cwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpzhbb9cwy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhbb9cwy.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hy3m2ue.php:19\n\
    Stack trace:\n#0 /tmp/tmp1hy3m2ue.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1hy3m2ue.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,2);\n\
    \  }\n  return sqrt($squared_diff/count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkf73tkm.php:22\n\
    Stack trace:\n#0 /tmp/tmpmkf73tkm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmkf73tkm.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqecnofo8.php:20\n\
    Stack trace:\n#0 /tmp/tmpqecnofo8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqecnofo8.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += pow($n - $mean,2);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cd8lwgx.php:21\n\
    Stack trace:\n#0 /tmp/tmp5cd8lwgx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5cd8lwgx.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $square_sum += pow($n - $mean,2);\n  }\n  return sqrt($square_sum\
    \ / count($numbers));\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldc4r_v.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldc4r_v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsldc4r_v.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ { return $number - $mean; }, $numbers);\n  return array_sum($deviations) / count($deviations);\n\
    }\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyjemugp.php:17\n\
    Stack trace:\n#0 /tmp/tmpiyjemugp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpiyjemugp.php\
    \ on line 17\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp91dtdih.php:20\n\
    Stack trace:\n#0 /tmp/tmpp91dtdih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp91dtdih.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqecnofo8.php:20\n\
    Stack trace:\n#0 /tmp/tmpqecnofo8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqecnofo8.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp91dtdih.php:20\n\
    Stack trace:\n#0 /tmp/tmpp91dtdih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp91dtdih.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $mad = 0;\n  foreach ($numbers as $number) {\n    $mean +=\
    \ $number;\n  }\n  $mean /= count($numbers);\n  foreach ($numbers as $number)\
    \ {\n    $mad += abs($number - $mean);\n  }\n  return $mad / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = get_mean($numbers);\n  $mad = 0;\n  foreach ($numbers as $n) {\n\
    \    $mad += abs($n - $mean);\n  }\n  return $mad / count($numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_mean() in\
    \ /tmp/tmp0zto4q20.php:8\nStack trace:\n#0 /tmp/tmp0zto4q20.php(17): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmp0zto4q20.php(21): candidate(Array)\n#2 /tmp/tmp0zto4q20.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0zto4q20.php on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $sum = 0;\n  foreach ($numbers as $n) {\n    $sum += $n;\n\
    \    $mean += $n;\n  }\n  return $sum / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0rcp0_b.php:22\n\
    Stack trace:\n#0 /tmp/tmpb0rcp0_b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb0rcp0_b.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxpc2i7v.php:19\n\
    Stack trace:\n#0 /tmp/tmpaxpc2i7v.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpaxpc2i7v.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function($number)\
    \ {\n        return $number - $mean;\n    }, $numbers);\n    return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37_nuy4i.php:20\n\
    Stack trace:\n#0 /tmp/tmp37_nuy4i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp37_nuy4i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $squareDiffs = array_map(function\
    \ ($num) use ($mean) {\n        return $num - $mean;\n    }, $numbers);\n    return\
    \ array_sum($squareDiffs) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwolihmr.php:20\n\
    Stack trace:\n#0 /tmp/tmpmwolihmr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmwolihmr.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squareDiffs = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squareDiffs) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wbgwxu2.php:20\n\
    Stack trace:\n#0 /tmp/tmp1wbgwxu2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1wbgwxu2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_mean = array_sum(array_map(function\
    \ ($number) {\n    return pow($number, 2);\n  }, $numbers)) / count($numbers);\n\
    \  return sqrt($squared_mean - pow($mean, 2));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyv0dqpu.php:21\n\
    Stack trace:\n#0 /tmp/tmpqyv0dqpu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqyv0dqpu.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ { return abs($number - $mean); }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt6hhcuk.php:17\n\
    Stack trace:\n#0 /tmp/tmpdt6hhcuk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdt6hhcuk.php\
    \ on line 17\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,2);\n\
    \  }\n  return sqrt($squared_diff/count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkf73tkm.php:22\n\
    Stack trace:\n#0 /tmp/tmpmkf73tkm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmkf73tkm.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = get_mean($numbers);\n  $mad = 0;\n  foreach ($numbers as $number)\
    \ {\n    $mad += abs($number - $mean);\n  }\n  return $mad / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_mean() in\
    \ /tmp/tmpn54qji9z.php:8\nStack trace:\n#0 /tmp/tmpn54qji9z.php(17): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmpn54qji9z.php(21): candidate(Array)\n#2 /tmp/tmpn54qji9z.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn54qji9z.php on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhbb9cwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpzhbb9cwy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhbb9cwy.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  foreach ($numbers as $n) {\n   \
    \ $mean += $n;\n  }\n  return $mean / $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8e91fts.php:21\n\
    Stack trace:\n#0 /tmp/tmpx8e91fts.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx8e91fts.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqecnofo8.php:20\n\
    Stack trace:\n#0 /tmp/tmpqecnofo8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqecnofo8.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  foreach ($numbers as $n) {\n   \
    \ $mean += $n;\n  }\n  return $mean / $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8e91fts.php:21\n\
    Stack trace:\n#0 /tmp/tmpx8e91fts.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx8e91fts.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,2);\n\
    \  }\n  return sqrt($squared_diff/count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkf73tkm.php:22\n\
    Stack trace:\n#0 /tmp/tmpmkf73tkm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmkf73tkm.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = $numbers[0];\n  $sum = 0;\n  foreach ($numbers as $number) {\n\
    \    $sum += abs($number - $mean);\n  }\n  return $sum / count($numbers);\n}\n\
    \nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl42e8bv.php:22\n\
    Stack trace:\n#0 /tmp/tmpvl42e8bv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvl42e8bv.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprr8qn5a6.php:19\n\
    Stack trace:\n#0 /tmp/tmprr8qn5a6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprr8qn5a6.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return abs($number - $mean);\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycvy2ur5.php:20\n\
    Stack trace:\n#0 /tmp/tmpycvy2ur5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpycvy2ur5.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_mean = array_sum(array_map(function\
    \ ($number) {\n    return $number * $number;\n  }, $numbers)) / count($numbers);\n\
    \  return abs($squared_mean - $mean);\n}\n\nfunction candidate(...$args) {\n \
    \   return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqc822r9c.php:20\n\
    Stack trace:\n#0 /tmp/tmpqc822r9c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqc822r9c.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,\
    \ 2);\n  }\n  return sqrt($squared_diff / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifewkyag.php:22\n\
    Stack trace:\n#0 /tmp/tmpifewkyag.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifewkyag.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  for ($i = 0; $i < $n; ++$i) {\n\
    \    $mean += abs($numbers[$i] - $mean);\n  }\n  return $mean / $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp490o9ndy.php:21\n\
    Stack trace:\n#0 /tmp/tmp490o9ndy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp490o9ndy.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) { return pow($number - $mean, 2); }, $numbers);\n  return array_sum($squares)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxynerzgs.php:18\n\
    Stack trace:\n#0 /tmp/tmpxynerzgs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxynerzgs.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp91dtdih.php:20\n\
    Stack trace:\n#0 /tmp/tmpp91dtdih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp91dtdih.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $means = array_map(function($x) { return $x->mean(); }, $numbers);\n  $mads\
    \ = array_map(function($x, $mean) { return abs($x - $mean); }, $numbers, $means);\n\
    \  return array_sum($mads) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to a member function mean() on float\
    \ in /tmp/tmpjjbzp1tw.php:8\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpjjbzp1tw.php(8): array_map(Object(Closure), Array)\n#2 /tmp/tmpjjbzp1tw.php(14):\
    \ mean_absolute_deviation(Array)\n#3 /tmp/tmpjjbzp1tw.php(18): candidate(Array)\n\
    #4 /tmp/tmpjjbzp1tw.php(23): test()\n#5 {main}\n  thrown in /tmp/tmpjjbzp1tw.php\
    \ on line 8\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_mean = array_sum(array_map(function\
    \ ($number) {\n    return pow($number, 2);\n  }, $numbers)) / count($numbers);\n\
    \  return sqrt($squared_mean - pow($mean, 2));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyv0dqpu.php:21\n\
    Stack trace:\n#0 /tmp/tmpqyv0dqpu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqyv0dqpu.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprr8qn5a6.php:19\n\
    Stack trace:\n#0 /tmp/tmprr8qn5a6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprr8qn5a6.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvozhzivv.php:20\n\
    Stack trace:\n#0 /tmp/tmpvozhzivv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvozhzivv.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  foreach ($numbers as $n) {\n   \
    \ $mean += $n;\n  }\n  return $mean / $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8e91fts.php:21\n\
    Stack trace:\n#0 /tmp/tmpx8e91fts.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx8e91fts.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_mean = array_sum(array_map(function\
    \ ($number) {\n    return pow($number, 2);\n  }, $numbers)) / count($numbers);\n\
    \  return sqrt($squared_mean - pow($mean, 2));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyv0dqpu.php:21\n\
    Stack trace:\n#0 /tmp/tmpqyv0dqpu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqyv0dqpu.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function($number)\
    \ use ($mean) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxthcqhir.php:20\n\
    Stack trace:\n#0 /tmp/tmpxthcqhir.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxthcqhir.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    return array_sum(abs($numbers\
    \ - $mean)) / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp4rzb5fl6.php:9\n\
    Stack trace:\n#0 /tmp/tmp4rzb5fl6.php(13): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4rzb5fl6.php(17): candidate(Array)\n#2 /tmp/tmp4rzb5fl6.php(22): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4rzb5fl6.php on line 9\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvozhzivv.php:20\n\
    Stack trace:\n#0 /tmp/tmpvozhzivv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvozhzivv.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp91dtdih.php:20\n\
    Stack trace:\n#0 /tmp/tmpp91dtdih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp91dtdih.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuwey38c.php:20\n\
    Stack trace:\n#0 /tmp/tmpbuwey38c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbuwey38c.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ { return $number - $mean; }, $numbers);\n  return array_sum($deviations) / count($deviations);\n\
    }\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyjemugp.php:17\n\
    Stack trace:\n#0 /tmp/tmpiyjemugp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpiyjemugp.php\
    \ on line 17\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return abs($number - $mean);\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wdnpoig.php:20\n\
    Stack trace:\n#0 /tmp/tmp3wdnpoig.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3wdnpoig.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjj106jjm.php:19\n\
    Stack trace:\n#0 /tmp/tmpjj106jjm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjj106jjm.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,\
    \ 2);\n  }\n  return sqrt($squared_diff / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifewkyag.php:22\n\
    Stack trace:\n#0 /tmp/tmpifewkyag.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifewkyag.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbxpd5ey.php:19\n\
    Stack trace:\n#0 /tmp/tmpvbxpd5ey.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvbxpd5ey.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsoec5yhk.php:20\n\
    Stack trace:\n#0 /tmp/tmpsoec5yhk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsoec5yhk.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,2);\n\
    \  }\n  return sqrt($squared_diff/count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkf73tkm.php:22\n\
    Stack trace:\n#0 /tmp/tmpmkf73tkm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmkf73tkm.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyflg2t46.php:19\n\
    Stack trace:\n#0 /tmp/tmpyflg2t46.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyflg2t46.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $mad = 0;\n  foreach\
    \ ($numbers as $n) {\n    $mad = ($mad + abs($n - $mean)) / (count($numbers) +\
    \ 1);\n  }\n  return $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hahadnu.php:21\n\
    Stack trace:\n#0 /tmp/tmp0hahadnu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0hahadnu.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhbb9cwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpzhbb9cwy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhbb9cwy.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zgqtp0n.php:21\n\
    Stack trace:\n#0 /tmp/tmp3zgqtp0n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3zgqtp0n.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $mad = 0;\n  foreach ($numbers as $number) {\n    $mean +=\
    \ $number;\n  }\n  $mean /= count($numbers);\n  foreach ($numbers as $number)\
    \ {\n    $mad += abs($number - $mean);\n  }\n  return $mad / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $mad = 0;\n  foreach\
    \ ($numbers as $n) {\n    $md += abs($n - $mean);\n  }\n  return $md / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = get_mean($numbers);\n  $mad = 0;\n  foreach ($numbers as $number)\
    \ {\n    $mad_temp = $number - $mean;\n    $mad = $mad + $mad_temp;\n  }\n  return\
    \ $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_mean() in\
    \ /tmp/tmpufb3xszp.php:8\nStack trace:\n#0 /tmp/tmpufb3xszp.php(18): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmpufb3xszp.php(22): candidate(Array)\n#2 /tmp/tmpufb3xszp.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpufb3xszp.php on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyflg2t46.php:19\n\
    Stack trace:\n#0 /tmp/tmpyflg2t46.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyflg2t46.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return abs($number - $mean);\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wdnpoig.php:20\n\
    Stack trace:\n#0 /tmp/tmp3wdnpoig.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3wdnpoig.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function($number)\
    \ { return $number - $mean; }, $numbers);\n    return array_sum($deviations) /\
    \ count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh_xi5qp.php:18\n\
    Stack trace:\n#0 /tmp/tmpxh_xi5qp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxh_xi5qp.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxpc2i7v.php:19\n\
    Stack trace:\n#0 /tmp/tmpaxpc2i7v.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpaxpc2i7v.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  foreach ($numbers as $n) {\n   \
    \ $mean += $n;\n  }\n  return $mean / $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8e91fts.php:21\n\
    Stack trace:\n#0 /tmp/tmpx8e91fts.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx8e91fts.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp91dtdih.php:20\n\
    Stack trace:\n#0 /tmp/tmpp91dtdih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp91dtdih.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function($x)\
    \ {\n    return pow($x, 2);\n  }, $numbers);\n  return array_sum($squares) / count($numbers)\
    \ - ($mean * $mean);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprur1b29p.php:20\n\
    Stack trace:\n#0 /tmp/tmprur1b29p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprur1b29p.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkc7_m7ma.php:19\n\
    Stack trace:\n#0 /tmp/tmpkc7_m7ma.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkc7_m7ma.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return abs($number - $mean);\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wdnpoig.php:20\n\
    Stack trace:\n#0 /tmp/tmp3wdnpoig.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3wdnpoig.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhbb9cwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpzhbb9cwy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhbb9cwy.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsoec5yhk.php:20\n\
    Stack trace:\n#0 /tmp/tmpsoec5yhk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsoec5yhk.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqecnofo8.php:20\n\
    Stack trace:\n#0 /tmp/tmpqecnofo8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqecnofo8.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $n) {\n    $squared_diff += pow($n - $mean,2);\n  }\n\
    \  return sqrt($squared_diff/count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp192vztps.php:22\n\
    Stack trace:\n#0 /tmp/tmp192vztps.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp192vztps.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean     = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3pjf7gt5.php:20\n\
    Stack trace:\n#0 /tmp/tmp3pjf7gt5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3pjf7gt5.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $number) {\n    $square_sum += pow($number - $mean, 2);\n  }\n\
    \  return sqrt($square_sum / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhbb9cwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpzhbb9cwy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzhbb9cwy.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) { return pow($number - $mean, 2); }, $numbers);\n  return array_sum($squares)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxynerzgs.php:18\n\
    Stack trace:\n#0 /tmp/tmpxynerzgs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxynerzgs.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprr8qn5a6.php:19\n\
    Stack trace:\n#0 /tmp/tmprr8qn5a6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprr8qn5a6.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $n = count($numbers);\n  foreach ($numbers as $n) {\n   \
    \ $mean += $n;\n  }\n  return $mean / $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8e91fts.php:21\n\
    Stack trace:\n#0 /tmp/tmpx8e91fts.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx8e91fts.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    return array_sum(abs($numbers\
    \ - $mean)) / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp4rzb5fl6.php:9\n\
    Stack trace:\n#0 /tmp/tmp4rzb5fl6.php(13): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4rzb5fl6.php(17): candidate(Array)\n#2 /tmp/tmp4rzb5fl6.php(22): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4rzb5fl6.php on line 9\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function($number)\
    \ {\n        return abs($number - $mean);\n    }, $numbers);\n    return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjnlzqwa.php:20\n\
    Stack trace:\n#0 /tmp/tmptjnlzqwa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptjnlzqwa.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $means = array_map(function($number) {\n    return $number[0];\n  }, $numbers);\n\
    \  $means = array_sum($means) / count($numbers);\n  return array_map(function($number)\
    \ {\n    return abs($number - $means);\n  }, $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzz22k2a.php:22\n\
    Stack trace:\n#0 /tmp/tmpkzz22k2a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkzz22k2a.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) use ($mean) {\n        return $number - $mean;\n    }, $numbers);\n\
    \    return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8sgl7pf.php:20\n\
    Stack trace:\n#0 /tmp/tmpa8sgl7pf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa8sgl7pf.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squareDiffs = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squareDiffs) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wbgwxu2.php:20\n\
    Stack trace:\n#0 /tmp/tmp1wbgwxu2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1wbgwxu2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    return array_sum(abs($numbers\
    \ - $mean)) / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp4rzb5fl6.php:9\n\
    Stack trace:\n#0 /tmp/tmp4rzb5fl6.php(13): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp4rzb5fl6.php(17): candidate(Array)\n#2 /tmp/tmp4rzb5fl6.php(22): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4rzb5fl6.php on line 9\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyflg2t46.php:19\n\
    Stack trace:\n#0 /tmp/tmpyflg2t46.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyflg2t46.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = 0;\n  $mad = 0;\n  foreach ($numbers as $number) {\n    $mean +=\
    \ $number;\n  }\n  $mean /= count($numbers);\n  foreach ($numbers as $number)\
    \ {\n    $mad += abs($number - $mean);\n  }\n  return $mad / count($numbers);\n\
    }\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsoec5yhk.php:20\n\
    Stack trace:\n#0 /tmp/tmpsoec5yhk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsoec5yhk.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzn0b_qq.php:20\n\
    Stack trace:\n#0 /tmp/tmpuzn0b_qq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzn0b_qq.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvozhzivv.php:20\n\
    Stack trace:\n#0 /tmp/tmpvozhzivv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvozhzivv.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $means = array_map(function($number) { return $number->mean(); }, $numbers);\n\
    \  $mads = array_map(function($number) { return abs($number->mean() - $mean);\
    \ }, $numbers);\n  return array_sum($mads) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to a member function mean() on float\
    \ in /tmp/tmpvpo3yi_s.php:8\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmpvpo3yi_s.php(8): array_map(Object(Closure), Array)\n#2 /tmp/tmpvpo3yi_s.php(14):\
    \ mean_absolute_deviation(Array)\n#3 /tmp/tmpvpo3yi_s.php(18): candidate(Array)\n\
    #4 /tmp/tmpvpo3yi_s.php(23): test()\n#5 {main}\n  thrown in /tmp/tmpvpo3yi_s.php\
    \ on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += pow(($n - $mean), 2);\n  }\n  return $sum /\
    \ count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9rl54uf.php:21\n\
    Stack trace:\n#0 /tmp/tmpz9rl54uf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz9rl54uf.php\
    \ on line 21\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean    = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ { return abs($number - $mean); }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbjpftw5.php:18\n\
    Stack trace:\n#0 /tmp/tmpfbjpftw5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfbjpftw5.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) { return pow($number - $mean, 2); }, $numbers);\n  return array_sum($squares)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxynerzgs.php:18\n\
    Stack trace:\n#0 /tmp/tmpxynerzgs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxynerzgs.php\
    \ on line 18\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $means = array_map(function($number) { return $number->mean(); }, $numbers);\n\
    \  return array_reduce($numbers, function($sum, $number) { return $sum + abs($number->mean()\
    \ - $mean); }, 0);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to a member function mean() on float\
    \ in /tmp/tmp9z3xc6eu.php:8\nStack trace:\n#0 [internal function]: {closure}(1)\n\
    #1 /tmp/tmp9z3xc6eu.php(8): array_map(Object(Closure), Array)\n#2 /tmp/tmp9z3xc6eu.php(13):\
    \ mean_absolute_deviation(Array)\n#3 /tmp/tmp9z3xc6eu.php(17): candidate(Array)\n\
    #4 /tmp/tmp9z3xc6eu.php(22): test()\n#5 {main}\n  thrown in /tmp/tmp9z3xc6eu.php\
    \ on line 8\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return $number - $mean;\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnagry3at.php:20\n\
    Stack trace:\n#0 /tmp/tmpnagry3at.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnagry3at.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $number) {\n    $squared_diff += pow($number - $mean,\
    \ 2);\n  }\n  return sqrt($squared_diff / count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifewkyag.php:22\n\
    Stack trace:\n#0 /tmp/tmpifewkyag.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifewkyag.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $sum = 0;\n    foreach\
    \ ($numbers as $n) {\n        $sum += abs($n - $mean);\n    }\n    return $sum\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function($number)\
    \ {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsoec5yhk.php:20\n\
    Stack trace:\n#0 /tmp/tmpsoec5yhk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsoec5yhk.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function\
    \ ($number) {\n        return abs($number - $mean);\n    }, $numbers);\n    return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycvy2ur5.php:20\n\
    Stack trace:\n#0 /tmp/tmpycvy2ur5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpycvy2ur5.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyflg2t46.php:19\n\
    Stack trace:\n#0 /tmp/tmpyflg2t46.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyflg2t46.php\
    \ on line 19\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squares = array_map(function\
    \ ($number) {\n    return pow($number - $mean, 2);\n  }, $numbers);\n  return\
    \ array_sum($squares) / count($numbers);\n}\n\nfunction candidate(...$args) {\n\
    \    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqecnofo8.php:20\n\
    Stack trace:\n#0 /tmp/tmpqecnofo8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqecnofo8.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $mad = 0;\n  foreach\
    \ ($numbers as $n) {\n    $md += abs($n - $mean);\n  }\n  return $md / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($numbers);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0aljbf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpf0aljbf2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf0aljbf2.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $squared_diff = 0;\n\
    \  foreach ($numbers as $n) {\n    $squared_diff += pow($n - $mean,2);\n  }\n\
    \  return sqrt($squared_diff/count($numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp192vztps.php:22\n\
    Stack trace:\n#0 /tmp/tmp192vztps.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp192vztps.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return abs($number - $mean);\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee93un6i.php:20\n\
    Stack trace:\n#0 /tmp/tmpee93un6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpee93un6i.php\
    \ on line 20\n"
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $sum += abs($n - $mean);\n  }\n  return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $mad = 0;\n  foreach\
    \ ($numbers as $n) {\n    $md += abs($n - $mean);\n  }\n  return $md / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $square_sum = 0;\n  foreach\
    \ ($numbers as $n) {\n    $square_sum += pow($n - $mean,2);\n  }\n  return sqrt($square_sum\
    \ / count($numbers));\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldc4r_v.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldc4r_v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsldc4r_v.php\
    \ on line 22\n"
  timestamp: 1659730739
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array_map(function\
    \ ($number) {\n    return $number - $mean;\n  }, $numbers);\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuwey38c.php:20\n\
    Stack trace:\n#0 /tmp/tmpbuwey38c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbuwey38c.php\
    \ on line 20\n"
  timestamp: 1659730739

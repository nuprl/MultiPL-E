name: HumanEval_103_rounded_avg
language: php
prompt: "<?php\n// You are given two positive integers n and m, and your task is to\
  \ compute the\n// average of the integers from n through m (including n and m).\
  \ \n// Round the answer to the nearest integer and convert that to binary.\n// If\
  \ n is greater than m, return -1.\n// Example:\nfunction rounded_avg($n, $m) {\n"
tests: "function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"\
  0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
  \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
  \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350,\
  \ 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n\
    \n$n = $_POST['n'];\n$m = $_POST['m'];\n$result = rounded_avg($n, $m);\n$bin =\
    \ decbin($result);\n$bin = substr($bin, 0, strlen($bin)-1);\necho $bin;", "  \
    \  $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n\n$n = $argv[1];\n\
    $m = $argv[2];\n$avg = rounded_avg($n, $m);\n$bin = decbin($avg);\n$bin = substr($bin,\
    \ 0, strlen($bin) - 1);\necho $bin;", "    $avg = round(($n + $m) / 2);\n    return\
    \ $avg;\n}", "    if ($n > $m) {\n        return -1;\n    }\n    return round($n\
    \ / $m) * $m;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ round($sum / $m) * pow(2, $m);\n}", "    if ($n < $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $m) * pow(2, $m);\n}\n", "    $sum = 0;\n    $count\
    \ = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    return ($n + $m) / 2;\n}", "    if ($n >= $m) {\n        return -1;\n\
    \    }\n    return round($n / $m) * $m;\n}\n", "    $sum = 0;\n    $count = 0;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    return round($n / $m) * $m;\n}", "    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n\n\
    $n = 4; $m = 5; \n$avg = rounded_avg($n, $m);\necho \"$avg \\n\";", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum\
    \ = 0;\n    $counter = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum +=\
    \ $i;\n        $counter++;\n    }\n    if($counter > 0) {\n        return $sum\
    \ / $counter;\n    } else {\n        return -1;\n    }\n}\n", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    return $sum / $count;\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $n, 2);\n}", "    $sum =\
    \ 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    if($count > 0) {\n        return $sum / $count;\n\
    \    } else {\n        return -1;\n    }\n}\n\n$n = $argv[1];\n$m = $argv[2];\n\
    $avg = rounded_avg($n, $m);\necho sprintf(\"%b\\n\", $avg);", "    $avg = round(($n\
    \ + $m) / 2);\n    $bin = decbin($avg);\n    $bin = substr($bin, 0, strlen($bin)\
    \ - 1);\n    return $bin;\n}\n\n$n = 4; $m = 5; $bin = rounded_avg($n, $m);\n\
    echo $bin;", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n}", "    $avg = ($n + $m) /\
    \ 2;\n    return $avg;\n}", "    $sum = 0;\n    $count = 0;\n    for($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return\
    \ $sum / $count;\n}\n", "    if ($n <= $m) {\n        return -1;\n    }\n    return\
    \ round($n / $m) * $m;\n}", "    if ($n > $m) {\n        return -1;\n    }\n \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return round($sum / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n}\n", " \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return round($sum / $m, 0);\n}", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $n, 2);\n}\n", "    $sum = 0;\n    $count = 0;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    if($count > 0) {\n        return $sum / $count;\n    }\n    return\
    \ -1;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $n, 2);\n}", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n   \
    \     return round($sum / $count);\n    }\n    return -1;\n}\n", "    $sum = 0;\n\
    \    $counter = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $counter++;\n    }\n    return $sum / $counter;\n}", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}", "    if ($n < $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $n;\n}", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    return round($n / $m) * $m;\n}\n", "    $sum\
    \ = 0;\n    $i = $n;\n    $j = $m;\n    while($i <= $j) {\n        $sum += $i;\n\
    \        $i++;\n    }\n    return $sum / $j;\n}\n\n$n = $argv[1];\n$m = $argv[2];\n\
    \n$avg = rounded_avg($n, $m);\n\n$bin = base_convert($avg, 10, 2);\n\necho \"\
    $bin\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n\n$n = 4; // 4\n$m = 10; // 10\n$result = rounded_avg($n, $m);\necho\
    \ \"$result\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    return\
    \ round($n / $m) * $m;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    return round($n / $m) * $m;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $n;\n}", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n\n$n = $argv[1];\n$m\
    \ = $argv[2];\n$avg = rounded_avg($n, $m);\n$bin = decbin($avg);\n$bin = substr($bin,\
    \ 0, strlen($bin)-1);\necho $bin;", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n\
    }\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $m) * pow(10, ceil(log10($sum / $m)));\n}\n",
  "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    return round($n / $m) * $m;\n}", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n", "    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n\
    }\n\n$n = $argv[1];\n$m = $argv[2];\n\n$avg = rounded_avg($n, $m);\n$bin = decbin($avg);\n\
    $bin = substr($bin, 0, strlen($bin)-1);\necho $bin;", "    $sum = 0;\n    $count\
    \ = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return round($sum / $count, -4);\n}\n", "    if ($n > $m) {\n    \
    \    return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n \
    \       $sum += $i;\n    }\n    return $sum / $m;\n}", "    if ($n > $m) {\n \
    \       return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $m) * pow(2, $m);\n}", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum / $m) *\
    \ pow(10, strlen($m) - strlen($n));\n}\n</code>\n<|/ a tags=php,algorithm |>\n\
    <| c |>\nThis doesn't work if $n is greater than $m\n<|/ c |>\n<| c |>\nIt works,\
    \ you just need to change the return statement to `return round($sum / $m) * pow(10,\
    \ strlen($m) - strlen($n));`\n<|/ c |>\n<| c |>\nIt doesn't work if $n is greater\
    \ than $m\n<|/ c |>\n<| c |>\nIt works, you just need to change the return statement\
    \ to `return round($sum / $m) * pow(10, strlen($m) - strlen($n));`\n<|/ c |>\n\
    <| c |>\nIt doesn't work if $n is greater than $m\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum\
    \ / $count;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n\
    }", "    if ($n >= $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum /\
    \ $m) * pow(2, ceil(log($sum / $m) / log(2)));\n}", "    $sum = 0;\n    $count\
    \ = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n", "    if ($n < $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $m) * pow(2, ceil(log($sum / $m, 2)));\n}", " \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return round($sum / $m) * pow(2, ceil(log($sum / $m, 2)));\n}", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    return round($n / $m) * $m;\n}\n", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    return round($n / $m) * $m;\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    return round($n / $m)\
    \ * $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n\
    }\n", "    $avg = round(($n + $m) / 2);\n    return $avg;\n}\n", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    return $sum / $count;\n}\n", "    $sum = 0;\n   \
    \ for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n\n$n = 4; $m = 5; \n$avg = rounded_avg($n, $m);\necho \"$avg\\n\";",
  "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n\n$n = 4; $m = 10;\
    \ \n$avg = rounded_avg($n, $m);\necho \"$avg converted to binary: $avg converted\
    \ to binary\\n\";", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    return $sum / $m;\n}", "    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n\
    }", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $m) * pow(2, ceil(log($sum / $m, 2)));\n}", " \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $n;\n}\n\n$n = $argv[1];\n$m = $argv[2];\n\n$avg = rounded_avg($n,\
    \ $m);\n$bin = sprintf(\"%b\", $avg);\necho \"$n $m $avg = $bin\\n\";", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count ? round($sum / $count) : -1;\n\
    }", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 0) {\n        return $sum / $count;\n    } else {\n        return\
    \ -1;\n    }\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m) * pow(2, $m);\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    return round($n / $m) * $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ return $sum / $count;\n}", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    return $sum / $count;\n}\n", "    if ($n >= $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $m) * pow(2, $m);\n}", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum / $m) *\
    \ pow(2, ceil(log($sum / $m) / log(2)));\n}", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m) * pow(2, ceil(log($sum, $m)));\n}",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum / $m) *\
    \ pow(10, floor(log($sum / $m) / log(10)));\n}", "    $sum = 0;\n    $count =\
    \ 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n\n$n = 42;\n$m = 47;\n$avg = rounded_avg($n,\
    \ $m);\necho \"The average of $n through $m is $avg.\";", "    $sum = 0;\n   \
    \ for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n", "    $avg = round(($n + $m) / 2);\n    $bin = base_convert($avg,\
    \ 10, 2);\n    return $bin;\n}\n", "    $sum = 0;\n    $counter = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $counter++;\n    }\n \
    \   if($counter == 0) {\n        return -1;\n    }\n    return round($sum / $counter);\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum /\
    \ $m) * pow(2, ceil(log($sum / $m) / log(2)));\n}\n", "    if ($n < $m) {\n  \
    \      return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $n, 2);\n}\n", "    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n\
    }", "    if ($n >= $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum /\
    \ $n, 2);\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m) * pow(2, ceil(log($sum / $m, 2)));\n}", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    return round(($n + $m) / 2);\n}\n", "    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum /\
    \ $m) * pow(2, ceil(log($sum, $m)));\n}", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m);\n}\n", "    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $m);\n}", "    $avg = round(($n\
    \ + $m) / 2);\n    return $avg ? bin2dec($avg) : -1;\n}", "    $sum = 0;\n   \
    \ $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n     \
    \   $count++;\n    }\n    if($count > 0) {\n        return $sum / $count;\n  \
    \  } else {\n        return -1;\n    }\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n\
    }", "    $avg = round(($n + $m) / 2);\n    return $avg ? bin2hex($avg) : -1;\n\
    }", "    $avg = round(($n+$m)/2, 0);\n    return $avg;\n}", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return round($sum / $m) * pow(10, strlen($m)\
    \ - 1);\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m);\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $n;\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m) * pow(10, floor(log($sum / $m) / log(10)));\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $m) * pow(10, strlen($m)\
    \ - strlen($n));\n}\n\n$n = 16;\n$m = 20;\necho rounded_avg($n, $m); // output:\
    \ 10", "    if ($n >= $m) {\n        return -1;\n    }\n    return round($n /\
    \ $m) * $m;\n}\n\n$n = $m = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num\
    \ = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum\
    \ = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n\
    $n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num\
    \ = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum\
    \ = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n\
    $n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num\
    \ = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum\
    \ = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n\
    $n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num\
    \ = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum\
    \ = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n\
    $n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num\
    \ = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum\
    \ = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n\
    $n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num\
    \ = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum\
    \ = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n$n = $num = $sum = 0;\n\
    $n = $num = $sum = 0;\n$n = $num = $", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return round($sum / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n\
    }\n", "    $avg = round(($n+$m)/2);\n    return $avg;\n}\n", "    $avg = round(($n\
    \ + $m) / 2);\n    $bin = base_convert($avg, 10, 2);\n    return $bin;\n}", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum / $m) *\
    \ pow(2, ceil(log($sum / $m) / log(2)));\n}", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n\
    }\n\n$n = $argv[1];\n$m = $argv[2];\n$avg = rounded_avg($n, $m);\necho \"$avg\\\
    n\";", "    if ($n > $m) {\n        return -1;\n    }\n    return round($n / $m)\
    \ * $m;\n}", "    if ($n > $m) {\n        return -1;\n    }\n    return ($n +\
    \ $m) / 2;\n}", "    if ($n < $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m) * pow(10, strlen($m) - 1);\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    return round(($n + $m) / 2);\n}\n", "    $sum = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    if($count == 0) {\n        return\
    \ -1;\n    }\n    return round($sum / $count, $precision = 1);\n}\n", "    $sum\
    \ = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $avg = round(($n\
    \ + $m) / 2);\n    $bin = base_convert($avg, 10, 2);\n    return $bin;\n}", " \
    \   $avg = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $avg += $i;\n    }\n\
    \    return round($avg / $n, 0);\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 0) {\n        return round($sum / $count);\n    } else {\n     \
    \   return -1;\n    }\n}", "    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $n;\n}", "    if ($n >= $m) {\n        return -1;\n    }\n    return round($n\
    \ / $m) * $m;\n}", "    $sum = 0;\n    $i = $n;\n    $j = $m;\n    while($i <=\
    \ $j) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum / $j;\n}\n\
    \n$n = $_POST['n'];\n$m = $_POST['m'];\n$result = rounded_avg($n, $m);\n$bin =\
    \ decbin($result);\n$bin = substr($bin, 0, strlen($bin)-1);\necho $bin;", "  \
    \  if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum / $n, 2);\n\
    }", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}", " \
    \   $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n\n$n = $argv[1];\n\
    $m = $argv[2];\n\n$avg = rounded_avg($n, $m);\n\n$bin = base_convert($avg, 10,\
    \ 2);\necho $bin;", "    if ($n > $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $n;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ round($sum / $m) * pow(2, ceil(log($sum / $m) / log(2)));\n}", "    if ($n >\
    \ $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    if($count > 0) {\n        return round($sum / $count);\n\
    \    }\n    return -1;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return $sum / $n;\n}\n", "    if ($n > $m) {\n        return -1;\n  \
    \  }\n    return round($n / $m) * $m;\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m);\n}\n", "    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $m;\n}\n\n$n = $argv[1];\n$m = $argv[2];\n$avg = rounded_avg($n, $m);\n\
    $bin = decbin($avg);\n$bin = substr($bin, 0, strlen($bin)-1);\necho $bin;", " \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $n;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return $sum / $n;\n}", "    $sum = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return round($sum / $m) * pow(2, ceil(log($sum\
    \ / $m, 2)));\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n\
    \        return $sum / $count;\n    } else {\n        return -1;\n    }\n}", " \
    \   $sum = 0;\n    $n = $n + $m;\n    for($i = $n; $i <= $m; $i++) {\n       \
    \ $sum += $i;\n    }\n    return $sum / $n;\n}", "    if ($n > $m) {\n       \
    \ return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    return round($sum / $m) * pow(2, $m);\n}\n", "  \
    \  $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n", "    $avg\
    \ = round($n / $m);\n    return $avg;\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $n;\n}", "    $sum = 0;\n    $n = $n - 1;\n\
    \    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n \
    \   }\n    return $sum / $n;\n}", "    $sum = 0;\n    $i = $n;\n    $j = $m;\n\
    \    while ($i <= $j) {\n        $sum += $i;\n        $i++;\n    }\n    return\
    \ $sum / $j;\n}", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n      \
    \  $sum += $i;\n    }\n    return round($sum / $m) * pow(2, $m);\n}\n\n$n = $argv[1];\n\
    $m = $argv[2];\n$avg = rounded_avg($n, $m);\n$bin = decbin($avg);\necho $bin;",
  "    $avg = round(($n + $m) / 2);\n    return $avg ? bin2hex($avg) : -1;\n}", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    return round($n / $m) * $m;\n\
    }\n", "    if ($n > $m) {\n        return -1;\n    }\n    return round($n / $m)\
    \ * $m;\n}\n\n$n = $m = $sum = 0;\n$arr = array();\n$n = getInput();\n$m = getInput();\n\
    $sum = $n + ($m * $m);\n$arr = array();\nfor ($i = 0; $i < $sum; $i++) {\n   \
    \ $arr[] = rounded_avg($i, $sum);\n}\n$arr = array_reverse($arr);\n$sum = 0;\n\
    foreach ($arr as $value) {\n    $sum += $value;\n}\n$avg = round($sum / $sum);\n\
    echo \"$avg\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $n;\n}\n", "    $avg = ($n + $m) / 2;\n    return $avg;\n}\n\n$n = 4;\
    \ $m = 10; \n$avg = rounded_avg($n, $m);\necho \"$avg\\n\";", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return round($sum / $m, 0);\n}\n", "    $sum\
    \ = 0;\n    $counter = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum +=\
    \ $i;\n        $counter++;\n    }\n    return $sum / $counter;\n}\n", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum / $n, 2);\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    return round($n / $m)\
    \ * $m;\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $n;\n}\n", "    if ($n < $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return round($sum\
    \ / $m);\n}", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    return ($n + $m) / 2;\n}\n", "    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n",
  "    $sum = 0;\n    $i = $n;\n    $j = $m;\n    while($i <= $j) {\n        $sum\
    \ += $i;\n        $i++;\n    }\n    $avg = round($sum / $j);\n    return $avg;\n\
    }", "    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}", "    if ($n < $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $m) * pow(2, ceil(log($sum\
    \ / $m) / log(2)));\n}\n", "    $avg = ($n + $m) / 2;\n    return $avg;\n}\n",
  "    $avg = round(($n + $m) / 2);\n    return $avg;\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    return round($n / $m) * $m;\n}", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    return $sum / $count;\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n\n$n = 12;\n$m = 20;\n\
    $avg = rounded_avg($n, $m);\necho $avg;", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m) * pow(2, $m);\n}\n", "    $sum =\
    \ 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return round($sum / $m) * pow(2, ceil(log($sum\
    \ / $m, 2)));\n}", "    if ($n > $m) {\n        return -1;\n    }\n    return\
    \ round($n / $m) * $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $avg = round(($n\
    \ + $m) / 2, 0);\n    return $avg;\n}", "    $sum = 0;\n    $n = $n - 1;\n   \
    \ $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $n;\n}", "    if ($n <= $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return round($sum / $m, 0);\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return round($sum / $m) * pow(10, strlen($m) - strlen($n));\n\
    }\n\n$n = 42;\n$m = 47;\n$avg = rounded_avg($n, $m);\necho $avg;", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    return round($n / $m) * $m;\n}\n", " \
    \   $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}", "    if ($n\
    \ <= $m) {\n        return -1;\n    }\n    return round($n / $m) * $m;\n}\n",
  "    if ($n > $m) {\n        return -1;\n    }\n    return ($n + $m) / 2;\n}\n",
  "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}", "    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $avg = round(($n\
    \ + $m) / 2, 0);\n    return $avg;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_114_minSubArraySum
results:
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $max = $nums[0];\n    foreach ($nums as $num) {\n    \
    \    if ($min > $num) {\n            $min = $num;\n        }\n        if ($max\
    \ < $num) {\n            $max = $num;\n        }\n    }\n    return $min + $max;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj56pxkeq.php:23\n\
    Stack trace:\n#0 /tmp/tmpj56pxkeq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj56pxkeq.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $minSum);\n        $minSumIndex\
    \ = max($minSumIndex, $i);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92xjbw9r.php:20\n\
    Stack trace:\n#0 /tmp/tmp92xjbw9r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp92xjbw9r.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dt4wzr5.php:18\n\
    Stack trace:\n#0 /tmp/tmp1dt4wzr5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1dt4wzr5.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $index => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum\
    \ + $num, $minSum);\n            $minSumIndex = $index;\n        }\n    }\n  \
    \  return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5ub0q8z.php:22\n\
    Stack trace:\n#0 /tmp/tmpi5ub0q8z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi5ub0q8z.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    $minSumValue = 0;\n\
    \    foreach ($nums as $i => $num) {\n        if ($num > 0) {\n            $minSum\
    \ = $num + minSubArraySum($nums);\n            $minSumIndex = $i;\n          \
    \  $minSumValue = $minSum;\n        }\n    }\n    return $minSumValue;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpj6nsnrzr.php on line 9

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $minSum);\n        if ($minSum\
    \ < 0) {\n            $minSum = $minSum + $num;\n            $minSumIndex = $i;\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7pxguhn.php:23\n\
    Stack trace:\n#0 /tmp/tmpq7pxguhn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq7pxguhn.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $minSum = 0;\n    foreach ($nums as $num) {\n\
    \        $minSum = max($minSum, $num + $min);\n        $min = min($min, $num);\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwthxbje.php:20\n\
    Stack trace:\n#0 /tmp/tmpiwthxbje.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiwthxbje.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum, $num);\n\
    \            $minSumIndex = $i;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphec2raoc.php:23\n\
    Stack trace:\n#0 /tmp/tmphec2raoc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphec2raoc.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    foreach ($nums as $num) {\n        $min = min($min, $num);\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gy1qspi.php:18\n\
    Stack trace:\n#0 /tmp/tmp9gy1qspi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9gy1qspi.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    foreach ($nums as $num) {\n        $min = min($min, $num);\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gy1qspi.php:18\n\
    Stack trace:\n#0 /tmp/tmp9gy1qspi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9gy1qspi.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n\
    \        $sum += $num;\n        if ($sum < $minSum) {\n            $minSum = $sum;\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y_ea8q9.php:22\n\
    Stack trace:\n#0 /tmp/tmp6y_ea8q9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6y_ea8q9.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\n$nums = array(\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n\
    \    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n\
    \    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n\
    \    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n\
    \    35,\n    36,\n    37,\n    38,\n    39,\n    40\n);\n\n$minSum = minSubArraySum($nums);\n\
    echo \"Minimum sum is $minSum\\n\";\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmped3uvj9w.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qmulskm.php:21\n\
    Stack trace:\n#0 /tmp/tmp9qmulskm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9qmulskm.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n\
    \        $sum += $num;\n        if ($sum < $minSum) {\n            $minSum = $sum;\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y_ea8q9.php:22\n\
    Stack trace:\n#0 /tmp/tmp6y_ea8q9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6y_ea8q9.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\n$nums = array(\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n\
    \    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n\
    \    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n\
    \    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n\
    \    35,\n    36,\n    37,\n    38,\n    39,\n    40\n);\n\n$minSubArraySum =\
    \ minSubArraySum($nums);\necho \"Minimum subarray sum is $minSubArraySum\\n\"\
    ;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpxyhtryt8.php on line 7

    '
  timestamp: 1659731109
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    $numsSize = count($nums);\n\
    \    for ($i = 0; $i < $numsSize; $i++) {\n        $sum = 0;\n        for ($j\
    \ = $i; $j < $numsSize; $j++) {\n            $sum += $nums[$j];\n            if\
    \ ($sum < $minSum) {\n                $minSum = $sum;\n                $minSumIndex\
    \ = $i;\n            }\n        }\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfw84pz9.php:18\n\
    Stack trace:\n#0 /tmp/tmpdfw84pz9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdfw84pz9.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $minSum);\n        if ($minSum\
    \ < 0) {\n            $minSumIndex = $i;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb83gy7_k.php:22\n\
    Stack trace:\n#0 /tmp/tmpb83gy7_k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb83gy7_k.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n   \
    \     $sum += $n;\n        if ($sum < $min) {\n            $min = $sum;\n    \
    \    }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6tthg75.php:22\n\
    Stack trace:\n#0 /tmp/tmpv6tthg75.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv6tthg75.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n   \
    \     $sum += $n;\n        if ($sum < $min) {\n            $min = $sum;\n    \
    \    }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6tthg75.php:22\n\
    Stack trace:\n#0 /tmp/tmpv6tthg75.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv6tthg75.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpf1fu99xs.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $minSum = 0;\n    foreach ($nums as $num) {\n\
    \        if ($num > 0) {\n            $minSum = max($minSum, $num + $min);\n \
    \           $min = $num + $min;\n        }\n    }\n    return $minSum;\n}\n\n\
    $nums = array(\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n\
    \    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n\
    \    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n\
    \    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n\
    \    36,\n    37,\n    38,\n    39,\n    40\n);\n\n$result = minSubArraySum($nums);\n\
    echo \"Minimum sum is: \" . $result;\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Minimum sum is: 9.2233720368548E+18\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpoauj0j7u.php:67\nStack trace:\n#0 /tmp/tmpoauj0j7u.php(81):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoauj0j7u.php on line 67\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj62ko28z.php:22\n\
    Stack trace:\n#0 /tmp/tmpj62ko28z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj62ko28z.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj62ko28z.php:22\n\
    Stack trace:\n#0 /tmp/tmpj62ko28z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj62ko28z.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $max = 0;\n    foreach ($nums as $num) {\n        if ($min\
    \ > $num) {\n            $min = $num;\n        }\n        if ($max < $num) {\n\
    \            $max = $num;\n        }\n    }\n    return $min + $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1youspoy.php:24\n\
    Stack trace:\n#0 /tmp/tmp1youspoy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1youspoy.php\
    \ on line 24\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $num) {\n        $currentSum = 0;\n        for ($i = $minSumIndex; $i < count($nums);\
    \ $i++) {\n            $currentSum += $nums[$i];\n            if ($currentSum\
    \ < $minSum) {\n                $minSum = $currentSum;\n                $minSumIndex\
    \ = $i;\n            }\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgdopj8p.php:26\n\
    Stack trace:\n#0 /tmp/tmpdgdopj8p.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdgdopj8p.php\
    \ on line 26\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\n$nums = array(\n    1,\n    2,\n    3,\n\
    \    4,\n    5,\n    6,\n    7,\n    8,\n    9\n);\n$result = minSubArraySum($nums);\n\
    echo $result;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpinv8y1os.php:32\n\
    Stack trace:\n#0 /tmp/tmpinv8y1os.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpinv8y1os.php\
    \ on line 32\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $sum = $num + $minSum;\n        if ($sum < $minSum) {\n\
    \            $minSum = $sum;\n            $minSumIndex = $i;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrrfgovz.php:23\n\
    Stack trace:\n#0 /tmp/tmpbrrfgovz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbrrfgovz.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum +\
    \ $nums[$i], $minSum);\n            $minSumIndex = max($i, $minSumIndex);\n  \
    \      }\n    }\n    return $minSum;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr78g7vcq.php:21\n\
    Stack trace:\n#0 /tmp/tmpr78g7vcq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr78g7vcq.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $minSum);\n        if ($minSum\
    \ > $num) {\n            $minSum = $num;\n            $minSumIndex = $i;\n   \
    \     }\n    }\n    return $minSum;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3__zshmd.php:24\n\
    Stack trace:\n#0 /tmp/tmp3__zshmd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3__zshmd.php\
    \ on line 24\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum +\
    \ $num, $nums[$i]);\n            $minSumIndex = $i;\n        }\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzih85nf5.php:22\n\
    Stack trace:\n#0 /tmp/tmpzih85nf5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzih85nf5.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $index => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum\
    \ + $nums[$index], $minSum);\n            $minSumIndex = max($minSumIndex, $index);\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphs6_d1hf.php:22\n\
    Stack trace:\n#0 /tmp/tmphs6_d1hf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphs6_d1hf.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $minSum);\n        if ($minSum\
    \ > $num) {\n            $minSum = $num;\n            $minSumIndex = $i;\n   \
    \     }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppupslaai.php:25\n\
    Stack trace:\n#0 /tmp/tmppupslaai.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppupslaai.php\
    \ on line 25\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\n$nums = array(\n    1,\n    2,\n    3,\n\
    \    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n \
    \   13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n\
    \    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n\
    \    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n\
    \    40\n);\n\n$result = minSubArraySum($nums);\necho \"The minimum sum is $result\\\
    n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The minimum sum is 1\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qi12dxz.php:64\nStack trace:\n#0 /tmp/tmp6qi12dxz.php(77): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qi12dxz.php on line 64\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        $min = min($min,\
    \ $n);\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpig2nytxj.php:18\n\
    Stack trace:\n#0 /tmp/tmpig2nytxj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpig2nytxj.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacq0u9p4.php:17\n\
    Stack trace:\n#0 /tmp/tmpacq0u9p4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpacq0u9p4.php\
    \ on line 17\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n\
    \        $sum += $num;\n        if ($sum < $minSum) {\n            $minSum = $sum;\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y_ea8q9.php:22\n\
    Stack trace:\n#0 /tmp/tmp6y_ea8q9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6y_ea8q9.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpush_44qg.php:21\n\
    Stack trace:\n#0 /tmp/tmpush_44qg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpush_44qg.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \n$nums = array(4, 6, 8, 10, 12);\n$min = minSubArraySum($nums);\necho $min;\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzpbm2s6.php:24\n\
    Stack trace:\n#0 /tmp/tmpfzpbm2s6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfzpbm2s6.php\
    \ on line 24\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $minSum = 0;\n    foreach ($nums as $num) {\n\
    \        $minSum = max($minSum, $num + $min);\n        $min = min($min, $num);\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwthxbje.php:20\n\
    Stack trace:\n#0 /tmp/tmpiwthxbje.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiwthxbje.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    foreach ($nums as $num) {\n        $min = max($min, $num\
    \ + minSubArraySum($nums));\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpslsx51qf.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, array_sum($nums));\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwurk66j1.php:17\n\
    Stack trace:\n#0 /tmp/tmpwurk66j1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwurk66j1.php\
    \ on line 17\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk5rtwao.php:17\n\
    Stack trace:\n#0 /tmp/tmpzk5rtwao.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzk5rtwao.php\
    \ on line 17\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfw84pz9.php:18\n\
    Stack trace:\n#0 /tmp/tmpdfw84pz9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdfw84pz9.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\n$nums = array(2, 5, 8, 10, 1, 3);\n$result\
    \ = minSubArraySum($nums);\necho \"Minimum sum of any non-empty sub-array of $nums\
    \ is $result.\\n\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Minimum sum of any non-empty sub-array of Array is 1.\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpx8iu5uhr.php:22\nStack trace:\n#0 /tmp/tmpx8iu5uhr.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx8iu5uhr.php on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpf1fu99xs.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum +\
    \ $nums[$i], $minSum);\n            $minSumIndex = max($minSumIndex, $i);\n  \
    \      }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnckrzan.php:22\n\
    Stack trace:\n#0 /tmp/tmpvnckrzan.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvnckrzan.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj62ko28z.php:22\n\
    Stack trace:\n#0 /tmp/tmpj62ko28z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj62ko28z.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        $min = min($n,\
    \ $min);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs4zwzol.php:19\n\
    Stack trace:\n#0 /tmp/tmpgs4zwzol.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgs4zwzol.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj62ko28z.php:22\n\
    Stack trace:\n#0 /tmp/tmpj62ko28z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj62ko28z.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $sum = 0;\n    foreach ($nums as $n) {\n        $sum +=\
    \ $n;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n    }\n\
    \    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt6p_sny.php:22\n\
    Stack trace:\n#0 /tmp/tmpdt6p_sny.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdt6p_sny.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    $numsLength = count($nums);\n\
    \    for ($i = 0; $i < $numsLength; ++$i) {\n        $sum = 0;\n        for ($j\
    \ = $i; $j < $numsLength; ++$j) {\n            $sum += $nums[$j];\n          \
    \  if ($sum < $minSum) {\n                $minSum = $sum;\n                $minSumIndex\
    \ = $i;\n            }\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $currentSum = 0;\n        foreach ($nums as $j => $num)\
    \ {\n            if ($j > $i) {\n                $currentSum += $num;\n      \
    \      }\n        }\n        if ($currentSum < $minSum) {\n            $minSum\
    \ = $currentSum;\n            $minSumIndex = $i;\n        }\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9wcxi1o.php:28\n\
    Stack trace:\n#0 /tmp/tmpe9wcxi1o.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpe9wcxi1o.php\
    \ on line 28\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $sum = $num + $minSum;\n        if ($sum < $minSum) {\n\
    \            $minSum = $sum;\n            $minSumIndex = $i;\n        }\n    }\n\
    \    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrrfgovz.php:23\n\
    Stack trace:\n#0 /tmp/tmpbrrfgovz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbrrfgovz.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum, $num);\n\
    \            $minSumIndex = $i;\n        }\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphec2raoc.php:23\n\
    Stack trace:\n#0 /tmp/tmphec2raoc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphec2raoc.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpush_44qg.php:21\n\
    Stack trace:\n#0 /tmp/tmpush_44qg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpush_44qg.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $max = $nums[0];\n    foreach ($nums as $num) {\n    \
    \    if ($min > $max) {\n            $min = $max;\n        }\n        $min +=\
    \ $num;\n        $max = $min;\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6_udhlc.php:23\n\
    Stack trace:\n#0 /tmp/tmpl6_udhlc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl6_udhlc.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum\
    \ += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj62ko28z.php:22\n\
    Stack trace:\n#0 /tmp/tmpj62ko28z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj62ko28z.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpush_44qg.php:21\n\
    Stack trace:\n#0 /tmp/tmpush_44qg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpush_44qg.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\n$nums = array(\n    1,\n    2,\n    3,\n\
    \    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n \
    \   13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n\
    \    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n\
    \    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n\
    \    40\n);\n$result = minSubArraySum($nums);\necho \"Minimum sum of any non-empty\
    \ sub-array of $nums is $result\\n\";\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Minimum sum of any non-empty sub-array of Array is 1\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6ghsm6tr.php:63\nStack trace:\n#0 /tmp/tmp6ghsm6tr.php(76):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6ghsm6tr.php on line 63\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        $min = min($min,\
    \ $n);\n    }\n    return $min;\n}\n\n$nums = array(\n    1,\n    2,\n    3,\n\
    \    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n \
    \   13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n\
    \    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n\
    \    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n\
    \    40\n);\n\n$result = minSubArraySum($nums);\necho \"Minimum sum of any non-empty\
    \ sub-array of $nums is $result\\n\";\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Minimum sum of any non-empty sub-array of Array is 1\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpchylnlzr.php:64\nStack trace:\n#0 /tmp/tmpchylnlzr.php(77):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpchylnlzr.php on line 64\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dt4wzr5.php:18\n\
    Stack trace:\n#0 /tmp/tmp1dt4wzr5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1dt4wzr5.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dt4wzr5.php:18\n\
    Stack trace:\n#0 /tmp/tmp1dt4wzr5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1dt4wzr5.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n   \
    \     if ($n > 0) {\n            $sum += $n;\n            if ($sum < $min) {\n\
    \                $min = $sum;\n            }\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmua36sk4.php:24\n\
    Stack trace:\n#0 /tmp/tmpmua36sk4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmua36sk4.php\
    \ on line 24\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpush_44qg.php:21\n\
    Stack trace:\n#0 /tmp/tmpush_44qg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpush_44qg.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        $min = min($min,\
    \ $n);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpriqt834u.php:19\n\
    Stack trace:\n#0 /tmp/tmpriqt834u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpriqt834u.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n   \
    \     if ($n >= 0) {\n            $sum += $n;\n            if ($sum < $min) {\n\
    \                $min = $sum;\n            }\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_o0xwgk.php:24\n\
    Stack trace:\n#0 /tmp/tmp9_o0xwgk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9_o0xwgk.php\
    \ on line 24\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $num) {\n        $currentSum = 0;\n        for ($i = 0; $i < count($nums); $i++)\
    \ {\n            $currentSum += $nums[$i];\n            if ($currentSum < $minSum)\
    \ {\n                $minSum = $currentSum;\n                $minSumIndex = $i;\n\
    \            }\n        }\n    }\n    return $minSum;\n}\n\n$nums = array(\n \
    \   1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n\
    \    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n\
    \    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n\
    \    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n\
    \    38,\n    39,\n    40\n);\n\n$minSum = minSubArraySum($nums);\necho \"Minimum\
    \ sum is $minSum\";\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Minimum sum is 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphi3wfll3.php:71\n\
    Stack trace:\n#0 /tmp/tmphi3wfll3.php(85): test()\n#1 {main}\n  thrown in /tmp/tmphi3wfll3.php\
    \ on line 71\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n\
    \        $sum += $num;\n        if ($sum < $minSum) {\n            $minSum = $sum;\n\
    \        }\n    }\n    return $minSum;\n}\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnndf24ma.php:21\n\
    Stack trace:\n#0 /tmp/tmpnndf24ma.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnndf24ma.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $minSum = 0;\n    foreach ($nums as $num) {\n\
    \        $minSum = max($minSum, $num + $min);\n        $min = min($min, $num);\n\
    \    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwthxbje.php:20\n\
    Stack trace:\n#0 /tmp/tmpiwthxbje.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiwthxbje.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        if ($n < $min)\
    \ {\n            $min = $n;\n        }\n    }\n    return $min;\n}\n\n$nums =\
    \ array(3, 1, 2, 5, 8);\n$result = minSubArraySum($nums);\necho \"Minimum sum\
    \ of any non-empty sub-array of $nums is $result.\\n\";\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Minimum sum of any non-empty sub-array of Array is 1.\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpuxocwtwl.php:24\nStack trace:\n#0 /tmp/tmpuxocwtwl.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuxocwtwl.php on line 24\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacq0u9p4.php:17\n\
    Stack trace:\n#0 /tmp/tmpacq0u9p4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpacq0u9p4.php\
    \ on line 17\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, array_sum($nums));\n    }\n    return $minSum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wl5rd7n.php:18\n\
    Stack trace:\n#0 /tmp/tmp7wl5rd7n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7wl5rd7n.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpush_44qg.php:21\n\
    Stack trace:\n#0 /tmp/tmpush_44qg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpush_44qg.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        if ($num > 0) {\n            $minSum = min($minSum +\
    \ $nums[$i], $minSum);\n            $minSumIndex = $i;\n        }\n    }\n   \
    \ return $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvdic8te.php:22\n\
    Stack trace:\n#0 /tmp/tmpyvdic8te.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyvdic8te.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn83272d.php:20\n\
    Stack trace:\n#0 /tmp/tmpkn83272d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkn83272d.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + $minSum);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjgrju3o.php:18\n\
    Stack trace:\n#0 /tmp/tmpbjgrju3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbjgrju3o.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $n) {\n        $min = min($min,\
    \ $n);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpriqt834u.php:19\n\
    Stack trace:\n#0 /tmp/tmpriqt834u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpriqt834u.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    \nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpush_44qg.php:21\n\
    Stack trace:\n#0 /tmp/tmpush_44qg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpush_44qg.php\
    \ on line 21\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $nums[$i]);\n        $minSumIndex\
    \ = max($minSumIndex, $i);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqjersc7.php:20\n\
    Stack trace:\n#0 /tmp/tmpyqjersc7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyqjersc7.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\n$nums = array(\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n\
    \    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n\
    \    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n\
    \    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n\
    \    35,\n    36,\n    37,\n    38,\n    39,\n    40\n);\n\necho minSubArraySum($nums);\
    \ // 30\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpb5344_ol.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpf1fu99xs.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = 0;\n    foreach ($nums as $num) {\n        $min = min($min, $num);\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gy1qspi.php:18\n\
    Stack trace:\n#0 /tmp/tmp9gy1qspi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9gy1qspi.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5wk5t7m.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5wk5t7m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf5wk5t7m.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $currentSum = $num + $minSum;\n        if ($currentSum\
    \ < $minSum) {\n            $minSum = $currentSum;\n            $minSumIndex =\
    \ $i;\n        }\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpij4uccao.php:22\n\
    Stack trace:\n#0 /tmp/tmpij4uccao.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpij4uccao.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp5xjk9u9e.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $sum = $num + $minSum;\n        if ($sum < $minSum) {\n\
    \            $minSum = $sum;\n            $minSumIndex = $i;\n        }\n    }\n\
    \    return $minSum;\n}\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdskcc1u_.php:22\n\
    Stack trace:\n#0 /tmp/tmpdskcc1u_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdskcc1u_.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $minSum = min($minSum + $num, $minSum);\n        if ($minSum\
    \ < 0) {\n            $minSumIndex = $i;\n        }\n    }\n    return $nums[$minSumIndex];\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_0i1rzy.php:22\n\
    Stack trace:\n#0 /tmp/tmp1_0i1rzy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1_0i1rzy.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n\
    \        $sum += $num;\n        if ($sum < $minSum) {\n            $minSum = $sum;\n\
    \        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y_ea8q9.php:22\n\
    Stack trace:\n#0 /tmp/tmp6y_ea8q9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6y_ea8q9.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    return $min;\n}\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn83272d.php:20\n\
    Stack trace:\n#0 /tmp/tmpkn83272d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkn83272d.php\
    \ on line 20\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num);\n    }\n    return $minSum;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfw84pz9.php:18\n\
    Stack trace:\n#0 /tmp/tmpdfw84pz9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdfw84pz9.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $n) {\n   \
    \     $sum += $n;\n        if ($sum < $min) {\n            $min = $sum;\n    \
    \    }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6tthg75.php:22\n\
    Stack trace:\n#0 /tmp/tmpv6tthg75.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv6tthg75.php\
    \ on line 22\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $min = min($min,\
    \ $num);\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct48vs27.php:19\n\
    Stack trace:\n#0 /tmp/tmpct48vs27.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpct48vs27.php\
    \ on line 19\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $minSumIndex = 0;\n    foreach ($nums as\
    \ $i => $num) {\n        $currentSum = $num + $minSum;\n        if ($currentSum\
    \ < $minSum) {\n            $minSum = $currentSum;\n            $minSumIndex =\
    \ $i;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72zu3xpl.php:23\n\
    Stack trace:\n#0 /tmp/tmp72zu3xpl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp72zu3xpl.php\
    \ on line 23\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    foreach ($nums as $num) {\n        $sum += $num;\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbt9nt91.php:18\n\
    Stack trace:\n#0 /tmp/tmpqbt9nt91.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqbt9nt91.php\
    \ on line 18\n"
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $minSum\
    \ = min($minSum, $num + minSubArraySum($nums));\n    }\n    return $minSum;\n\
    }\n\n$nums = array(\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n\
    \    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n\
    \    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n\
    \    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n\
    \    35,\n    36,\n    37,\n    38,\n    39,\n    40\n);\n\necho \"Minimum sum\
    \ of any non-empty sub-array of $nums is \" . minSubArraySum($nums) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !==\
    \ -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpm8wq2xxa.php on line 7

    '
  timestamp: 1659731109
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    foreach ($nums as $num) {\n \
    \       $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n\
    \        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajba_gv.php:22\n\
    Stack trace:\n#0 /tmp/tmpxajba_gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxajba_gv.php\
    \ on line 22\n"
  timestamp: 1659731109

language: php
name: HumanEval_61_correct_bracketing
results:
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  $brackets = array_map('trim', $brackets);\n\
    \  foreach ($brackets as $bracket) {\n    if ($bracket == '(' || $bracket == ')')\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7j0lzb6x.php:24\n\
    Stack trace:\n#0 /tmp/tmp7j0lzb6x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7j0lzb6x.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket != $brackets[$i - 1]) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp_dgza9.php:19\n\
    Stack trace:\n#0 /tmp/tmpfp_dgza9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfp_dgza9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), '', $brackets);\n  $brackets =\
    \ explode(')', $brackets);\n  foreach ($brackets as $i => $bracket) {\n    if\
    \ ($bracket == '') {\n      unset($brackets[$i]);\n    }\n  }\n  return count($brackets)\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zt3b19y.php:24\n\
    Stack trace:\n#0 /tmp/tmp0zt3b19y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0zt3b19y.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket != $brackets[$i - 1]) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp_dgza9.php:19\n\
    Stack trace:\n#0 /tmp/tmpfp_dgza9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfp_dgza9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  return !empty($brackets);\n}\n\nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6bcsaxe.php:22\n\
    Stack trace:\n#0 /tmp/tmps6bcsaxe.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps6bcsaxe.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    foreach\
    \ ($brackets as $bracket) {\n        if ($bracket != \"\") {\n            $bracket\
    \ = str_replace(\"(\", \"\", $bracket);\n            $bracket = str_replace(\"\
    )\", \"\", $bracket);\n            $bracket = explode(\",\", $bracket);\n    \
    \        foreach ($bracket as $b) {\n                if ($b != \"\") {\n     \
    \               $b = str_replace(\"(\", \"\", $b);\n                    $b = str_replace(\"\
    )\", \"\", $b);\n                    $b = explode(\",\", $b);\n              \
    \      foreach ($b as $bb) {\n                        if ($bb != \"\") {\n   \
    \                         $bb = str_replace(\"(\", \"\", $bb);\n             \
    \               $bb = str_replace(\")\", \"\", $bb);\n                       \
    \     $bb = explode(\",\", $bb);\n                            foreach ($bb as\
    \ $bbb) {\n                                if ($bbb != \"\") {\n             \
    \                       $bbb = str_replace(\"(\", \"\", $bbb);\n             \
    \                       $bbb = str_replace(\")\", \"\", $bbb);\n             \
    \                       $bbb = explode(\",\", $bbb);\n                       \
    \             foreach ($bbb as $bbbb) {\n                                    \
    \    if ($bbbb != \"\") {\n                                            $bbbb =\
    \ str_replace(\"(\", \"\", $bbbb);\n                                         \
    \   $bbbb = str_replace(\")\", \"\", $bbbb);\n                               \
    \             $bbbb = explode(\",\", $bbbb);\n                               \
    \             foreach ($bbbb as $bbbbb) {\n                                  \
    \              if ($bbbbb != \"\") {\n                                       \
    \             $bbbbb = str_replace(\"(\", \"\", $bbbbb);\n                   \
    \                                 $bbbbb = str_replace(\")\", \"\", $bbbbb);\n\
    \                                                    $bbbbb = explode(\",\", $bbbbb);\n\
    \                                                    foreach ($bbbbb as $bbbbbb)\
    \ {\n                                                        if ($bbbbbb != \"\
    \") {\n                                                            $bbbbbb = str_replace(\"\
    (\", \"\", $bbbbbb);\n                                                       \
    \     $bbbbbb = str_replace(\")\", \"\", $bbbbbb);\n                         \
    \                                   $bbbbbb = explode(\",\", $bbbbbb);\n     \
    \                                                       foreach ($bbbbbb as $bbbbbbb)\
    \ {\n                                                                if ($bbbbbbb\
    \ != \"\") {\n                                                               \
    \     $bbbbbbb = str_replace(\"(\", \"\", $bbbbbbb);\n                       \
    \                                             $bbbbbbb = str_replace(\")\", \"\
    \", $bbbbbbb);\n                                                             \
    \       $bbbbbbb = explode(\",\", $bbbbbbb);\n                               \
    \                                     foreach ($bbbbbbb\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpx6jnerce.php on line 49

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $b) {\n \
    \   if ($b !== ')') {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4c_gdc_a.php:19\n\
    Stack trace:\n#0 /tmp/tmp4c_gdc_a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4c_gdc_a.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $i => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$i] ==\
    \ \"\") {\n        unset($brackets[$i]);\n      }\n    }\n  }\n  return $brackets;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu61j68f_.php:23\n\
    Stack trace:\n#0 /tmp/tmpu61j68f_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu61j68f_.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map(function($x)\
    \ {\n        return str_replace(\" \", \"\", $x);\n    }, $brackets);\n    return\
    \ count($brackets) == count(array_unique($brackets));\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4d5z6vlg.php:26\n\
    Stack trace:\n#0 /tmp/tmp4d5z6vlg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4d5z6vlg.php\
    \ on line 26\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != '(' && $bracket != ')') {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9fpiq9.php:19\n\
    Stack trace:\n#0 /tmp/tmpzk9fpiq9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzk9fpiq9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  return !empty($brackets);\n}\n\nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6bcsaxe.php:22\n\
    Stack trace:\n#0 /tmp/tmps6bcsaxe.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps6bcsaxe.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = array();\n    $closing_brackets = array();\n    foreach\
    \ ($brackets as $bracket) {\n        if ($bracket == '(') {\n            $opening_brackets[]\
    \ = $bracket;\n        } else {\n            $closing_brackets[] = $bracket;\n\
    \        }\n    }\n    return count($opening_brackets) == count($closing_brackets);\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpbbvnc7g0.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpbbvnc7g0.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpbbvnc7g0.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpbbvnc7g0.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpbbvnc7g0.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbvnc7g0.php:26\n\
    Stack trace:\n#0 /tmp/tmpbbvnc7g0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbbvnc7g0.php\
    \ on line 26\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\\\\(\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\\\\)\", $brackets);\n  $brackets = str_replace(\"\\\\(\", \"(\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\)\", \")\", $brackets);\n  $brackets = str_replace(\"\
    \\\\[\", \"[\", $brackets);\n  $brackets = str_replace(\"\\\\]\", \"]\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\{\", \"{\", $brackets);\n  $brackets = str_replace(\"\
    \\\\}\", \"}\", $brackets);\n  $brackets = str_replace(\"\\\\t\", \"\\t\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\v\", \"\\v\", $brackets);\n  $brackets = str_replace(\"\
    \\\\f\", \"\\f\", $brackets);\n  $brackets = str_replace(\"\\\\r\", \"\\r\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\e\", \"\\033\", $brackets);\n  $brackets = str_replace(\"\
    \\\\\\\"\", \"\\\"\", str_replace(\"\\\\\\\"\", \"\\\\\\\"\", str_replace(\"\\\
    \\\\\"\", \"\\\\\\\"\", $brackets)));\n  $brackets = str_replace(\"\\\\'\", \"\
    '\", str_replace(\"\\\\'\", \"\\\\'\", str_replace(\"\\\\'\", \"\\\\'\", $brackets)));\n\
    \  $brackets = str_replace(\"\\\\\\\\\", \"\\\\\", $brackets);\n  $brackets =\
    \ str_replace(\"\\\\\\\"\", \"\", $brackets);\n  $brackets = str_replace(\"\\\\\
    t\", \"\", $brackets);\n  $brackets = str_replace(\"\\\\v\", \"\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\f\", \"\", $brackets);\n  $brackets = str_replace(\"\
    \\\\r\", \"\", $brackets);\n  $brackets = str_replace(\"\\\\e\", \"\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\\\\"\", \"\\\\\", $brackets);\n  $brackets =\
    \ str_replace(\"\\\\'\", \"'\", $brackets);\n  $brackets = str_replace(\"\\\\\\\
    \\\", \"\\\\\", $brackets);\n  $brackets = str_replace(\"\\\\\\\"\", \"\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\t\", \"\", $brackets);\n  $brackets = str_replace(\"\
    \\\\v\", \"\", $brackets);\n  $brackets = str_replace(\"\\\\f\", \"\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\r\", \"\", $brackets);\n  $brackets = str_replace(\"\
    \\\\e\", \"\", $brackets);\n  $brackets = str_replace(\"\\\\\\\"\", \"\\\\\",\
    \ $brackets);\n  $brackets = str_replace(\"\\\\'\", \"'\", $brackets);\n  $brackets\
    \ = str_replace(\"\\\\\\\\\", \"\\\\\", $brackets);\n  $bracket\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsuchjmbq.php on line 40

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = str_replace(\",\", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \" \", $brackets);\n  $brackets = str_replace(\"\
    \  \", \" \", $brackets);\n  $brackets = str_replace(\"  \", \" \", $brackets);\n\
    \  $brackets = str_replace(\"  \", \nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_3wf62b0.php on line 42

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != \"(\") {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqjmsc26.php:19\n\
    Stack trace:\n#0 /tmp/tmpxqjmsc26.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxqjmsc26.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\"{\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"}\", \"\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"\", $brackets);\n    $brackets = str_replace(\"]\", \"\", $brackets);\n\
    \    $brackets = str_replace(\",\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \"\", $brackets);\n    $brackets = str_replace(\"=\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"!\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ?\", \"\", $brackets);\n    $brackets = str_replace(\"%\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"$\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ^\", \"\", $brackets);\n    $brackets = str_replace(\"&\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"*\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\")\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"{\", \"\", $brackets);\n    $brackets = str_replace(\"\
    }\", \"\", $brackets);\n    $brackets = str_replace(\"[\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ,\", \"\", $brackets);\n    $brackets = str_replace(\";\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"=\", \"\", $brackets);\n    $brackets = str_replace(\"\
    !\", \"\", $brackets);\n    $brackets = str_replace(\"?\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"%\", \"\", $brackets);\n    $brackets = str_replace(\"\
    $\", \"\", $brackets);\n    $brackets = str_replace(\"^\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"&\", \"\", $brackets);\n    $brackets = str_replace(\"\
    *\", \"\", $brackets);\n    $brackets = str_replace(\"(\", \"\", $brackets);\n\
    \    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    {\", \"\", $brackets);\n    $brackets = str_replace(\"}\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \"\", $brackets);\n    $brackets = str_replace(\",\", \"\", $brackets);\n\
    \    $brackets = str_replace(\";\", \"\", $brackets);\n    $brackets = str_replace(\"\
    =\", \"\", $brackets);\n    $brackets = str_replace(\"!\", \"\", $brackets);\n\
    \    $bracket\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpplv7qrsb.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if (strpos($bracket, \"]\"\
    ) === false) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_kn4rmx.php:27\n\
    Stack trace:\n#0 /tmp/tmpx_kn4rmx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx_kn4rmx.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"[\") !== false) {\n      if (strpos($bracket,\
    \ \"]\") !== false) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf28b4wb1.php:23\n\
    Stack trace:\n#0 /tmp/tmpf28b4wb1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf28b4wb1.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets !== \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwefjuwov.php:15\n\
    Stack trace:\n#0 /tmp/tmpwefjuwov.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwefjuwov.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != \"(\") {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqjmsc26.php:19\n\
    Stack trace:\n#0 /tmp/tmpxqjmsc26.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxqjmsc26.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[count($brackets)\
    \ - 1] == $bracket) {\n        $brackets[count($brackets) - 1] = \"\";\n     \
    \ }\n    }\n  }\n  return $brackets;\n}\n\nfunction candidate(...$args) {\n  \
    \  return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclldssp4.php:23\n\
    Stack trace:\n#0 /tmp/tmpclldssp4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpclldssp4.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  return !empty($brackets);\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2ahuohq.php:21\n\
    Stack trace:\n#0 /tmp/tmpy2ahuohq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpy2ahuohq.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket == '(') {\n      if ($brackets[$i + 1] != '(') {\n     \
    \   return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbni7wgzg.php:21\n\
    Stack trace:\n#0 /tmp/tmpbni7wgzg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbni7wgzg.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket != '(') return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi024vef.php:17\n\
    Stack trace:\n#0 /tmp/tmpwi024vef.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwi024vef.php\
    \ on line 17\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = explode(\"(\", $brackets);\n    $closing_brackets\
    \ = explode(\")\", $brackets);\n    $opening_brackets_count = count($opening_brackets);\n\
    \    $closing_brackets_count = count($closing_brackets);\n    for ($i = 0; $i\
    \ < $opening_brackets_count; $i++) {\n        if ($opening_brackets[$i] == $closing_brackets[$i])\
    \ {\n            $opening_brackets_count -= 1;\n            $closing_brackets_count\
    \ -= 1;\n        }\n    }\n    return $opening_brackets_count == $closing_brackets_count;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3pw1l1k.php:28\n\
    Stack trace:\n#0 /tmp/tmpq3pw1l1k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq3pw1l1k.php\
    \ on line 28\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$key\
    \ + 1] == \"\") {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9ue3n0k.php:27\n\
    Stack trace:\n#0 /tmp/tmpa9ue3n0k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa9ue3n0k.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = str_replace(\",\", \"|\", $brackets);\n\
    \  $brackets = str_replace(\"|\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n  $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |\", \"|(\", $brackets);\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n\
    \  $brackets = str_replace(\")\", \"]\", $brackets);\n  $brackets = str_replace(\"\
    ,\", \"|\", $brackets);\n  $brackets = str_replace(\"|\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"[\", \"(\", $brackets);\n  $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|\", \"|(\", $brackets);\n  $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n  $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |\", \"|(\", $brackets);\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n\
    \  $brackets = str_replace(\")\", \"]\", $brackets);\n  $brackets = str_replace(\"\
    ,\", \"|\", $brackets);\n  $brackets = str_replace(\"|\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"[\", \"(\", $brackets);\n  $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|\", \"|(\", $brackets);\n  $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n  $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |\", \"|(\", $brackets);\n  $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \  $brackets = str_replace(\"]\", \")\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|\", \"|(\", $brackets);\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkecexp40.php on line 60

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\"[\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \"\", $brackets);\n    $brackets = str_replace(\"\
    {\", \"\", $brackets);\n    $brackets = str_replace(\"}\", \"\", $brackets);\n\
    \    $brackets = str_replace(\",\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \"\", $brackets);\n    $brackets = str_replace(\":\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"=\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ?\", \"\", $brackets);\n    $brackets = str_replace(\"!\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"$\", \"\", $brackets);\n    $brackets = str_replace(\"\
    %\", \"\", $brackets);\n    $brackets = str_replace(\"^\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"&\", \"\", $brackets);\n    $brackets = str_replace(\"\
    *\", \"\", $brackets);\n    $brackets = str_replace(\"(\", \"\", $brackets);\n\
    \    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"\", $brackets);\n    $brackets = str_replace(\"]\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"{\", \"\", $brackets);\n    $brackets = str_replace(\"\
    }\", \"\", $brackets);\n    $brackets = str_replace(\",\", \"\", $brackets);\n\
    \    $brackets = str_replace(\";\", \"\", $brackets);\n    $brackets = str_replace(\"\
    :\", \"\", $brackets);\n    $brackets = str_replace(\"=\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"?\", \"\", $brackets);\n    $brackets = str_replace(\"\
    !\", \"\", $brackets);\n    $brackets = str_replace(\"$\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"%\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ^\", \"\", $brackets);\n    $brackets = str_replace(\"&\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"*\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\")\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \"\", $brackets);\n    $brackets = str_replace(\"{\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"}\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ,\", \"\", $brackets);\n    $brackets = str_replace(\";\", \"\", $brackets);\n\
    \    $brackets = \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4bgpcrrr.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (substr($bracket, 0, 1) != substr($bracket, -1, 1)) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbpw265i.php:21\n\
    Stack trace:\n#0 /tmp/tmprbpw265i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprbpw265i.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = explode('(', $brackets);\n  $closing_brackets = explode(')',\
    \ $brackets);\n  foreach ($opening_brackets as $opening_bracket) {\n    if (in_array($opening_bracket,\
    \ $closing_brackets)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw0ii6cb.php:20\n\
    Stack trace:\n#0 /tmp/tmphw0ii6cb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphw0ii6cb.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  return !empty($brackets);\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2ahuohq.php:21\n\
    Stack trace:\n#0 /tmp/tmpy2ahuohq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpy2ahuohq.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \")\", $brackets);\n    $brackets = str_replace(\"\
    {\", \"(\", $brackets);\n    $brackets = str_replace(\"}\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"(\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n\
    \    $brackets = str_replace(\")\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n    $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \    $brackets = str_replace(\"{\", \"(\", $brackets);\n    $brackets = str_replace(\"\
    }\", \"(\", $brackets);\n    $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \")\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"[\", $brackets);\n    $brackets = str_replace(\")\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"(\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n    $brackets = str_replace(\"{\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"}\", \"(\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n    $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \")\", $brackets);\n    $brackets = str_replace(\"\
    {\", \"(\", $brackets);\n    $brackets = str_replace(\"}\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"(\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n\
    \    $brackets = str_replace(\")\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n    $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \    $brackets = str_replace(\"{\", \"(\", $brackets);\n    $brackets = str_replace(\"\
    }\", \"(\", $brackets);\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxgsw8d3s.php on line 62

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"[\") !== false || strpos($bracket,\
    \ \"]\") !== false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqtl5wbe.php:21\n\
    Stack trace:\n#0 /tmp/tmpxqtl5wbe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxqtl5wbe.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != ')' && $bracket != '(') return false;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10zv5sbq.php:17\n\
    Stack trace:\n#0 /tmp/tmp10zv5sbq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp10zv5sbq.php\
    \ on line 17\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$key\
    \ + 1] == \"\") {\n        $brackets[$key + 1] = $bracket;\n      }\n    }\n \
    \ }\n  $brackets = implode(\",\", $brackets);\n  return $brackets;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpge0gv1s7.php:24\n\
    Stack trace:\n#0 /tmp/tmpge0gv1s7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpge0gv1s7.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  foreach ($brackets as $bracket) {\n   \
    \ if ($bracket != \"\") {\n      if ($brackets[$bracket-1] != \"\") {\n      \
    \  return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp51bza4yj.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmp51bza4yj.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmp51bza4yj.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmp51bza4yj.php on line\
    \ 11\n\nWarning: A non-numeric value encountered in /tmp/tmp51bza4yj.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51bza4yj.php:28\n\
    Stack trace:\n#0 /tmp/tmp51bza4yj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp51bza4yj.php\
    \ on line 28\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  $brackets = array_map('trim', $brackets);\n\
    \  $brackets = array_filter($brackets);\n  foreach ($brackets as $bracket) {\n\
    \    if ($bracket == '(') {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynpj7rk0.php:21\n\
    Stack trace:\n#0 /tmp/tmpynpj7rk0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpynpj7rk0.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpceg9m51s.php:15\n\
    Stack trace:\n#0 /tmp/tmpceg9m51s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpceg9m51s.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"strtolower\"\
    , $brackets);\n    $brackets = array_filter($brackets);\n    return count($brackets)\
    \ == count(array_unique($brackets));\n}\n\nfunction candidate(...$args) {\n  \
    \  return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp265yhjx_.php:23\n\
    Stack trace:\n#0 /tmp/tmp265yhjx_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp265yhjx_.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $key => $value) {\n    if ($value != \"\") {\n      if ($brackets[$key -\
    \ 1] != $value) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy26b2b1g.php:27\n\
    Stack trace:\n#0 /tmp/tmpy26b2b1g.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy26b2b1g.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$key\
    \ + 1] == \"\") {\n        $brackets[$key + 1] = $bracket;\n      }\n    }\n \
    \ }\n  return $brackets;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmj47hql.php:23\n\
    Stack trace:\n#0 /tmp/tmpxmj47hql.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxmj47hql.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvm20si4.php:19\n\
    Stack trace:\n#0 /tmp/tmpxvm20si4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxvm20si4.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets !== \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwefjuwov.php:15\n\
    Stack trace:\n#0 /tmp/tmpwefjuwov.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwefjuwov.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $key => $bracket)\
    \ {\n    if ($bracket != $brackets[$key - 1]) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4yu86jxn.php:19\n\
    Stack trace:\n#0 /tmp/tmp4yu86jxn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4yu86jxn.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  $brackets = array_reverse($brackets);\n\
    \  foreach ($brackets as $i => $bracket) {\n    if ($bracket == '(') {\n     \
    \ if ($brackets[$i - 1] != '(') {\n        return false;\n      }\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp578nw2cx.php:22\n\
    Stack trace:\n#0 /tmp/tmp578nw2cx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp578nw2cx.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  $brackets = array_map(\"trim\"\
    , $brackets);\n  $brackets = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  foreach ($brackets as $bracket) {\n    if ($bracket != \"\") {\n      if ($bracket\
    \ == \"(\") {\n        if (count($brackets) == 1) {\n          return false;\n\
    \        }\n      }\n      if ($bracket == \")\") {\n        if (count($brackets)\
    \ == 1) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a7u8vcf.php:35\n\
    Stack trace:\n#0 /tmp/tmp2a7u8vcf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2a7u8vcf.php\
    \ on line 35\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = array();\n  $closing_brackets = array();\n  foreach\
    \ ($brackets as $bracket) {\n    if ($bracket == '(') {\n      $opening_brackets[]\
    \ = $bracket;\n    }\n    if ($bracket == ')') {\n      $closing_brackets[] =\
    \ $bracket;\n    }\n  }\n  return count(array_diff($opening_brackets, $closing_brackets))\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmp_czpbuj1.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp_czpbuj1.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp_czpbuj1.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp_czpbuj1.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp_czpbuj1.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_czpbuj1.php:27\n\
    Stack trace:\n#0 /tmp/tmp_czpbuj1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_czpbuj1.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $b) {\n    if ($b != \"\") {\n      if ($b != \"(\") {\n        if ($b !=\
    \ \")\") {\n          return false;\n        }\n      }\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c9bpk49.php:29\n\
    Stack trace:\n#0 /tmp/tmp5c9bpk49.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5c9bpk49.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$key\
    \ - 1] == $bracket) {\n        unset($brackets[$key]);\n      }\n    }\n  }\n\
    \  return $brackets;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhezqrlo.php:23\n\
    Stack trace:\n#0 /tmp/tmpvhezqrlo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvhezqrlo.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  $opening_brackets = array();\n\
    \  $closing_brackets = array();\n  foreach ($brackets as $bracket) {\n    if (strpos($bracket,\
    \ \"(\") !== FALSE) {\n      $opening_brackets[] = $bracket;\n    }\n    if (strpos($bracket,\
    \ \")\") !== FALSE) {\n      $closing_brackets[] = $bracket;\n    }\n  }\n  return\
    \ count(array_diff($opening_brackets, $closing_brackets)) == 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzpe82oa.php:28\n\
    Stack trace:\n#0 /tmp/tmpmzpe82oa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmzpe82oa.php\
    \ on line 28\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  $brackets = array_map('trim',\
    \ $brackets);\n  foreach ($brackets as $bracket) {\n    if ($bracket != \"\")\
    \ {\n      if ($bracket == \"(\") {\n        $brackets[] = \")\";\n      }\n \
    \     if ($bracket == \")\") {\n        $brackets[] = \"(\";\n      }\n    }\n\
    \  }\n  return count(array_unique($brackets)) == count($brackets);\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsu1bjzyi.php:29\n\
    Stack trace:\n#0 /tmp/tmpsu1bjzyi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsu1bjzyi.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket != '(' && $bracket != ')') {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo__q01pp.php:19\n\
    Stack trace:\n#0 /tmp/tmpo__q01pp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo__q01pp.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), array('{', '}'), $brackets);\n\
    \  $brackets = explode('{', $brackets);\n  foreach ($brackets as $key => $bracket)\
    \ {\n    if ($bracket != '') {\n      $brackets[$key] = '{' . $bracket . '}';\n\
    \    }\n  }\n  $brackets = implode('{', $brackets);\n  return $brackets == $brackets;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9atd_5z.php:25\n\
    Stack trace:\n#0 /tmp/tmpz9atd_5z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz9atd_5z.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  $opening_brackets = array();\n\
    \  foreach ($brackets as $bracket) {\n    if ($bracket == '(') {\n      $opening_brackets[]\
    \ = $bracket;\n    }\n  }\n  foreach ($opening_brackets as $opening_bracket) {\n\
    \    if (!in_array($opening_bracket, $brackets)) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqnha09x.php:29\n\
    Stack trace:\n#0 /tmp/tmpuqnha09x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuqnha09x.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = explode(\"(\", $brackets);\n    $closing_brackets\
    \ = explode(\")\", $brackets);\n    foreach ($opening_brackets as $opening_bracket)\
    \ {\n        if (in_array($opening_bracket, $closing_brackets)) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeenez302.php:20\n\
    Stack trace:\n#0 /tmp/tmpeenez302.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeenez302.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"[\") !== false) {\n      $bracket\
    \ = str_replace(\"[\", \"(\", $bracket);\n      $bracket = str_replace(\"]\",\
    \ \")\", $bracket);\n    }\n  }\n  return $brackets;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl1sparw.php:22\n\
    Stack trace:\n#0 /tmp/tmpfl1sparw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfl1sparw.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \  $brackets = str_replace(\"]\", \")\", $brackets);\n  $brackets = str_replace(\"\
    ,\", \"|\", $brackets);\n  $brackets = str_replace(\"|\", \"|\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpid42txho.php on line 38

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array(\"(\", \")\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"{\", \"}\"), array(\"(\", \")\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"(\", \")\"), $brackets);\n\
    \  $brackets = str_replace(array(\"(\", \")\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"{\", \"}\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"(\", \")\"), array(\"(\", \")\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"{\", \"}\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"(\", \")\"), array(\"(\", \")\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"{\", \"}\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"(\", \")\"), array(\"(\", \")\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"{\", \"}\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"(\", \")\"), array(\"(\", \")\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(array(\"{\", \"}\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = str_replace(array(\"[\", \"]\"), array(\"[\", \"]\"), $brackets);\n\
    \  $brackets = str_replace(\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpilqfiehi.php on line 29

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"{\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"}\", $brackets);\n    $brackets = str_replace(\"{\", \"(\", $brackets);\n\
    \    $brackets = str_replace(\"}\", \"}\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"]\", $brackets);\n    $brackets = str_replace(\"]\", \"[\", $brackets);\n\
    \    $brackets = str_replace(\",\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \",\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \";\", $brackets);\n    $brackets = str_replace(\";\", \";\", $brackets);\n\
    \    $brackets = str_replace(\";\", \";\", $\nfunction candidate(...$args) {\n\
    \    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsc08ztdl.php on line 42

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket == '(') {\n      if ($brackets[$i - 1] != '(') return false;\n\
    \    } else {\n      if ($bracket != ')') return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhecefvs.php:21\n\
    Stack trace:\n#0 /tmp/tmpnhecefvs.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnhecefvs.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), '', $brackets);\n  return $brackets\
    \ === '()';\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jbrcg33.php:14\n\
    Stack trace:\n#0 /tmp/tmp0jbrcg33.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0jbrcg33.php\
    \ on line 14\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$key\
    \ - 1] == \"\") {\n        $brackets[$key - 1] = $bracket;\n      }\n      if\
    \ ($brackets[$key + 1] == \"\") {\n        $brackets[$key + 1] = $bracket;\n \
    \     }\n    }\n  }\n  $brackets = array_unique($brackets);\n  sort($brackets);\n\
    \  $brackets = implode(\",\", $brackets);\n  return $brackets;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw8pq0s6.php:29\n\
    Stack trace:\n#0 /tmp/tmpmw8pq0s6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmw8pq0s6.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if (strpos($bracket, \"(\"\
    ) !== false) {\n        if (strpos($bracket, \")\") === false) {\n          return\
    \ false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfm4m8ch.php:29\n\
    Stack trace:\n#0 /tmp/tmpjfm4m8ch.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjfm4m8ch.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^\\]]*\\]/', '', $brackets);\n  $brackets = preg_replace('/\\\
    [[^\\]]*\\]/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppee4lur5.php on line 55

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  $brackets = array_map('trim', $brackets);\n\
    \  $brackets = array_filter($brackets);\n  $brackets = array_unique($brackets);\n\
    \  foreach ($brackets as $bracket) {\n    if ($bracket != ')') {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiq86krig.php:22\n\
    Stack trace:\n#0 /tmp/tmpiq86krig.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiq86krig.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^]]*\\]/', '', $brackets);\n  $brackets = preg_replace('/\\\
    [[^]]*\\]/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpyv7i4zl7.php on line 55

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  $brackets\
    \ = array_reverse($brackets);\n  $brackets = array_filter($brackets);\n  return\
    \ count($brackets) == 0;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoltyvlb_.php:18\n\
    Stack trace:\n#0 /tmp/tmpoltyvlb_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpoltyvlb_.php\
    \ on line 18\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets =\
    \ preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\\
    )/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/',\
    \ '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    [[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\\
    ]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\\
    )/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets =\
    \ preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\\
    )/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/',\
    \ '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    [[^\\]]*\\]\\([^\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp7vb0itd.php on line 30

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\"[\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \"\", $brackets);\n    $brackets = str_replace(\"\
    {\", \"\", $brackets);\n    $brackets = str_replace(\"}\", \"\", $brackets);\n\
    \    $brackets = str_replace(\",\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \"\", $brackets);\n    $brackets = str_replace(\":\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"=\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ?\", \"\", $brackets);\n    $brackets = str_replace(\"!\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"$\", \"\", $brackets);\n    $brackets = str_replace(\"\
    %\", \"\", $brackets);\n    $brackets = str_replace(\"^\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"&\", \"\", $brackets);\n    $brackets = str_replace(\"\
    *\", \"\", $brackets);\n    $brackets = str_replace(\"(\", \"\", $brackets);\n\
    \    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"\", $brackets);\n    $brackets = str_replace(\"]\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"{\", \"\", $brackets);\n    $brackets = str_replace(\"\
    }\", \"\", $brackets);\n    $brackets = str_replace(\",\", \"\", $brackets);\n\
    \    $brackets = str_replace(\";\", \"\", $brackets);\n    $brackets = str_replace(\"\
    :\", \"\", $brackets);\n    $brackets = str_replace(\"=\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"?\", \"\", $brackets);\n    $brackets = str_replace(\"\
    !\", \"\", $brackets);\n    $brackets = str_replace(\"$\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"%\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ^\", \"\", $brackets);\n    $brackets = str_replace(\"&\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"*\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\")\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \"\", $brackets);\n    $brackets = str_replace(\"{\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"}\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ,\", \"\", $brackets);\n    $brackets = str_replace(\";\", \"\", $brackets);\n\
    \    $brackets = \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4bgpcrrr.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$key\
    \ - 1] != \"\") {\n        if ($brackets[$key - 1] != $bracket) {\n          return\
    \ false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3j5mlda.php:29\n\
    Stack trace:\n#0 /tmp/tmpm3j5mlda.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm3j5mlda.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket == '(') {\n      $brackets[$i] = ')';\n    }\n  }\n  return\
    \ $brackets == array_reverse($brackets);\n}\n\nfunction candidate(...$args) {\n\
    \    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuev78pb7.php:19\n\
    Stack trace:\n#0 /tmp/tmpuev78pb7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuev78pb7.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  $brackets = array_unique($brackets);\n  return count($brackets) == count(array_unique($brackets));\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2ohahny.php:23\n\
    Stack trace:\n#0 /tmp/tmpo2ohahny.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo2ohahny.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if (strpos($brackets, $bracket)\
    \ === false) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: strpos() expects parameter 1 to be string, array given in /tmp/tmph4b8vbgr.php\
    \ on line 10\n\nWarning: strpos() expects parameter 1 to be string, array given\
    \ in /tmp/tmph4b8vbgr.php on line 10\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmph4b8vbgr.php on line 10\n\nWarning: strpos()\
    \ expects parameter 1 to be string, array given in /tmp/tmph4b8vbgr.php on line\
    \ 10\n\nWarning: strpos() expects parameter 1 to be string, array given in /tmp/tmph4b8vbgr.php\
    \ on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4b8vbgr.php:27\n\
    Stack trace:\n#0 /tmp/tmph4b8vbgr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmph4b8vbgr.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = explode('(', $brackets);\n    $closing_brackets =\
    \ explode(')', $brackets);\n    foreach ($opening_brackets as $i => $opening_bracket)\
    \ {\n        if ($opening_bracket != $closing_brackets[$i]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmwn9dqe.php:20\n\
    Stack trace:\n#0 /tmp/tmpcmwn9dqe.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcmwn9dqe.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  return $brackets\
    \ !== '';\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w8kaj4u.php:14\n\
    Stack trace:\n#0 /tmp/tmp4w8kaj4u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4w8kaj4u.php\
    \ on line 14\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    foreach\
    \ ($brackets as $bracket) {\n        if (strpos($bracket, \"[\") !== false) {\n\
    \            $bracket = str_replace(\"[\", \"(\", $bracket);\n            $bracket\
    \ = str_replace(\"]\", \")\", $bracket);\n        }\n    }\n    return count($brackets)\
    \ == count(array_unique($brackets));\n}\n\nfunction candidate(...$args) {\n  \
    \  return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfx7328u.php:26\n\
    Stack trace:\n#0 /tmp/tmprfx7328u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprfx7328u.php\
    \ on line 26\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($bracket != \"(\") {\n\
    \        $brackets[$bracket] = \"\";\n      }\n      if ($bracket != \")\") {\n\
    \        $brackets[$bracket] = \"\";\n      }\n    }\n  }\n  $brackets = implode(\"\
    ,\", $brackets);\n  return $brackets == \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_oxk332o.php:31\n\
    Stack trace:\n#0 /tmp/tmp_oxk332o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_oxk332o.php\
    \ on line 31\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    return count($brackets) == count($brackets[0]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp0a5y3b8e.php on line 12\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp0a5y3b8e.php\
    \ on line 12\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp0a5y3b8e.php on line 12\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp0a5y3b8e.php\
    \ on line 12\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp0a5y3b8e.php on line 12\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0a5y3b8e.php:24\nStack trace:\n#0 /tmp/tmp0a5y3b8e.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0a5y3b8e.php on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets\
    \ = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\\
    (([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/',\
    \ '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n\
    \  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets\
    \ = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\\
    (([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/',\
    \ '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n\
    \  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets\
    \ = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\\
    (([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/',\
    \ '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n\
    \  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets\
    \ = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\\
    (([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/',\
    \ '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n\
    \  $brackets = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets\
    \ = preg_replace('/\\(([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\\
    (([^)]+)\\)/', '\\1', $brackets);\n  $brackets = preg_replace('/\\(([^)]+)\\)/',\
    \ '\\1', $brackets);\n  $brackets = preg_replace('/\\\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpezpotv5s.php on line 29

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  $brackets\
    \ = array_reverse($brackets);\n  $brackets = array_unique($brackets);\n  foreach\
    \ ($brackets as $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$bracket-1]\
    \ != $bracket) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmphig0jns3.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphig0jns3.php:25\n\
    Stack trace:\n#0 /tmp/tmphig0jns3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphig0jns3.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = array();\n    $closing_brackets = array();\n    $opening_brackets_count\
    \ = count($brackets);\n    for ($i = 0; $i < $opening_brackets_count; $i++) {\n\
    \        $opening_brackets[$i] = substr($brackets, $i, 1);\n        $closing_brackets[$i]\
    \ = substr($brackets, $i + 1, 1);\n    }\n    $opening_brackets_count = count($opening_brackets);\n\
    \    $closing_brackets_count = count($closing_brackets);\n    for ($i = 0; $i\
    \ < $opening_brackets_count; $i++) {\n        if ($opening_brackets[$i] != '(')\
    \ {\n            return false;\n        }\n    }\n    for ($i = 0; $i < $closing_brackets_count;\
    \ $i++) {\n        if ($closing_brackets[$i] != ')') {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwahx49b8.php on line 7\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmpwahx49b8.php on\
    \ line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwahx49b8.php:33\n\
    Stack trace:\n#0 /tmp/tmpwahx49b8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwahx49b8.php\
    \ on line 33\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = explode(\",\", $brackets);\n    $opening_brackets = array();\n\
    \    $closing_brackets = array();\n    foreach ($brackets as $bracket) {\n   \
    \     $bracket = trim($bracket);\n        if ($bracket == \"\") {\n          \
    \  continue;\n        }\n        if ($bracket == \"(\") {\n            $opening_brackets[]\
    \ = $bracket;\n        } else {\n            $closing_brackets[] = $bracket;\n\
    \        }\n    }\n    if (count($opening_brackets) != count($closing_brackets))\
    \ {\n        return false;\n    }\n    $opening_brackets = array_unique($opening_brackets);\n\
    \    $closing_brackets = array_unique($closing_brackets);\n    foreach ($opening_brackets\
    \ as $opening_bracket) {\n        if (in_array($opening_bracket, $closing_brackets))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xm0bxb0.php:37\n\
    Stack trace:\n#0 /tmp/tmp4xm0bxb0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp4xm0bxb0.php\
    \ on line 37\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tk5x94x.php:15\n\
    Stack trace:\n#0 /tmp/tmp6tk5x94x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6tk5x94x.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\\\\(\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\\\\)\", $brackets);\n  $brackets = str_replace(\"\\\\(\", \"(\", $brackets);\n\
    \  $brackets = str_replace(\"\\\\)\", \")\", $brackets);\n  $brackets = preg_replace(\"\
    /\\\\\\)/\", \"\\\\)\", $brackets);\n  $brackets = preg_replace(\"/\\\\\\(/\"\
    , \"\\\\(\", $brackets);\n  return preg_match(\"/\\)/\", $brackets);\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: preg_replace(): Compilation failed: unmatched closing parenthesis\
    \ at offset 2 in /tmp/tmpsrg0v0ar.php on line 9\n\nWarning: preg_replace(): Compilation\
    \ failed: missing closing parenthesis at offset 3 in /tmp/tmpsrg0v0ar.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrg0v0ar.php:19\n\
    Stack trace:\n#0 /tmp/tmpsrg0v0ar.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsrg0v0ar.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[count($brackets)\
    \ - 1] == $bracket) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgyvrlxp.php:23\n\
    Stack trace:\n#0 /tmp/tmptgyvrlxp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptgyvrlxp.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets =\
    \ preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\\
    )/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/',\
    \ '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    [[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\\
    ]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\\
    )/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets =\
    \ preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\\
    )/', '', $brackets);\n  $brackets = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/',\
    \ '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n\
    \  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    [[^\\]]*\\]\\([^\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp7vb0itd.php on line 30

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"strtolower\"\
    , $brackets);\n    $brackets = array_filter($brackets);\n    return count($brackets)\
    \ == count(array_unique($brackets));\n}\n\nfunction candidate(...$args) {\n  \
    \  return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp265yhjx_.php:23\n\
    Stack trace:\n#0 /tmp/tmp265yhjx_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp265yhjx_.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  foreach ($brackets as $bracket) {\n    if ($bracket\
    \ != \"\") {\n      if ($brackets[count($brackets) - 1] == $bracket) {\n     \
    \   return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0jah55s.php:24\n\
    Stack trace:\n#0 /tmp/tmpw0jah55s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw0jah55s.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if (strpos($bracket, \"(\") !== false) {\n      $brackets[$bracket] =\
    \ \")\";\n    }\n    if (strpos($bracket, \")\") !== false) {\n      $brackets[$bracket]\
    \ = \"(\";\n    }\n  }\n  return $brackets;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp806alzkr.php:22\n\
    Stack trace:\n#0 /tmp/tmp806alzkr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp806alzkr.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  $brackets = array_unique($brackets);\n  return count($brackets) == count($brackets[0]);\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp2f3gvq3s.php on line 11\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp2f3gvq3s.php\
    \ on line 11\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp2f3gvq3s.php on line 11\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp2f3gvq3s.php\
    \ on line 11\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp2f3gvq3s.php on line 11\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2f3gvq3s.php:23\nStack trace:\n#0 /tmp/tmp2f3gvq3s.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2f3gvq3s.php on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  return count($brackets) == count(array_unique($brackets));\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2pwaasb.php:19\n\
    Stack trace:\n#0 /tmp/tmpt2pwaasb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt2pwaasb.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != '(' && $bracket != ')') {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9fpiq9.php:19\n\
    Stack trace:\n#0 /tmp/tmpzk9fpiq9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzk9fpiq9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  return count($brackets) == count(array_unique($brackets));\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbshd7md.php:22\n\
    Stack trace:\n#0 /tmp/tmpkbshd7md.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkbshd7md.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != \"(\") {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqjmsc26.php:19\n\
    Stack trace:\n#0 /tmp/tmpxqjmsc26.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxqjmsc26.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  $brackets = array_reverse($brackets);\n\
    \  foreach ($brackets as $bracket) {\n    if ($bracket != ')') {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebp8ii4e.php:20\n\
    Stack trace:\n#0 /tmp/tmpebp8ii4e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpebp8ii4e.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($bracket == \"(\") {\n\
    \        if ($brackets[count($brackets) - 1] != \")\") {\n          return false;\n\
    \        }\n      }\n      else if ($bracket == \")\") {\n        if ($brackets[count($brackets)\
    \ - 1] != \"(\") {\n          return false;\n        }\n      }\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67g3q9v1.php:34\n\
    Stack trace:\n#0 /tmp/tmp67g3q9v1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp67g3q9v1.php\
    \ on line 34\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), '', $brackets);\n  $brackets =\
    \ explode(')', $brackets);\n  foreach ($brackets as $i => $bracket) {\n    if\
    \ ($bracket != '') {\n      if ($brackets[$i-1] == '') {\n        return true;\n\
    \      }\n      if ($brackets[$i+1] == '') {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxcuy3n5x.php:25\n\
    Stack trace:\n#0 /tmp/tmpxcuy3n5x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxcuy3n5x.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = array();\n  $closing_brackets = array();\n  foreach\
    \ ($brackets as $bracket) {\n    if ($bracket == '(') {\n      $opening_brackets[]\
    \ = $bracket;\n    } else if ($bracket == ')') {\n      $closing_brackets[] =\
    \ $bracket;\n    }\n  }\n  return count($opening_brackets) == count($closing_brackets);\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpqo_ws85s.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpqo_ws85s.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpqo_ws85s.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpqo_ws85s.php\
    \ on line 7\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpqo_ws85s.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqo_ws85s.php:26\n\
    Stack trace:\n#0 /tmp/tmpqo_ws85s.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqo_ws85s.php\
    \ on line 26\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != '(' && $bracket != ')') {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9fpiq9.php:19\n\
    Stack trace:\n#0 /tmp/tmpzk9fpiq9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzk9fpiq9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  return count($brackets) == count(array_unique($brackets));\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbshd7md.php:22\n\
    Stack trace:\n#0 /tmp/tmpkbshd7md.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkbshd7md.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = explode(\"(\", $brackets);\n  $closing_brackets = explode(\"\
    )\", $brackets);\n  foreach ($opening_brackets as $key => $value) {\n    if ($value\
    \ !== $closing_brackets[$key]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahwunq4g.php:20\n\
    Stack trace:\n#0 /tmp/tmpahwunq4g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpahwunq4g.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if (strpos($bracket, \"]\"\
    ) === false) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_kn4rmx.php:27\n\
    Stack trace:\n#0 /tmp/tmpx_kn4rmx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx_kn4rmx.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = explode('(', $brackets);\n  $closing_brackets = explode(')',\
    \ $brackets);\n  foreach ($opening_brackets as $opening_bracket) {\n    if (empty($closing_brackets[$opening_bracket]))\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8al1m3r7.php:20\n\
    Stack trace:\n#0 /tmp/tmp8al1m3r7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8al1m3r7.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != '(' && $bracket != ')') {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9fpiq9.php:19\n\
    Stack trace:\n#0 /tmp/tmpzk9fpiq9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzk9fpiq9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket == \"(\") {\n      $brackets[] = \")\";\n    }\n  }\n  return\
    \ count(array_diff($brackets, array(\"(\", \")\"))) == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjql983a.php:19\n\
    Stack trace:\n#0 /tmp/tmpdjql983a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdjql983a.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[count($brackets)\
    \ - 1] == $bracket) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgyvrlxp.php:23\n\
    Stack trace:\n#0 /tmp/tmptgyvrlxp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptgyvrlxp.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket == \"(\") {\n      if ($brackets[$bracket+1] != \")\") {\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq81lmxee.php:25\n\
    Stack trace:\n#0 /tmp/tmpq81lmxee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq81lmxee.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  $brackets = array_filter($brackets);\n\
    \  return count($brackets) == count(array_unique($brackets));\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbshd7md.php:22\n\
    Stack trace:\n#0 /tmp/tmpkbshd7md.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkbshd7md.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), '', $brackets);\n  return $brackets\
    \ !== '';\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp050vm0fc.php:14\n\
    Stack trace:\n#0 /tmp/tmp050vm0fc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp050vm0fc.php\
    \ on line 14\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = explode('(', $brackets);\n  $closing_brackets = explode(')',\
    \ $brackets);\n  $opening_brackets_count = count($opening_brackets);\n  $closing_brackets_count\
    \ = count($closing_brackets);\n  for ($i = 0; $i < $opening_brackets_count; $i++)\
    \ {\n    if ($opening_brackets[$i] != $closing_brackets[$i]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8w5u1o8i.php:22\n\
    Stack trace:\n#0 /tmp/tmp8w5u1o8i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8w5u1o8i.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = explode(\"(\", $brackets);\n  $closing_brackets = explode(\"\
    )\", $brackets);\n  foreach ($opening_brackets as $key => $value) {\n    if ($closing_brackets[$key]\
    \ != $value) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3byfpcjz.php:20\n\
    Stack trace:\n#0 /tmp/tmp3byfpcjz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3byfpcjz.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_filter($brackets);\n    return count($brackets) == count($brackets[0]);\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp3xuiwhjc.php on line 11\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp3xuiwhjc.php\
    \ on line 11\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp3xuiwhjc.php on line 11\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp3xuiwhjc.php\
    \ on line 11\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp3xuiwhjc.php on line 11\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3xuiwhjc.php:23\nStack trace:\n#0 /tmp/tmp3xuiwhjc.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3xuiwhjc.php on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($brackets[$bracket-1]\
    \ != \"\") {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0zywblpi.php on line\
    \ 10\n\nWarning: A non-numeric value encountered in /tmp/tmp0zywblpi.php on line\
    \ 10\n\nWarning: A non-numeric value encountered in /tmp/tmp0zywblpi.php on line\
    \ 10\n\nWarning: A non-numeric value encountered in /tmp/tmp0zywblpi.php on line\
    \ 10\n\nWarning: A non-numeric value encountered in /tmp/tmp0zywblpi.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zywblpi.php:27\n\
    Stack trace:\n#0 /tmp/tmp0zywblpi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0zywblpi.php\
    \ on line 27\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = explode(',', $brackets);\n    $brackets = array_map('trim',\
    \ $brackets);\n    foreach ($brackets as $bracket) {\n        if ($bracket ==\
    \ '(') {\n            $brackets[] = ')';\n        }\n        if ($bracket == ')')\
    \ {\n            $brackets[] = '(';\n        }\n    }\n    return $brackets;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgzxf8eg.php:23\n\
    Stack trace:\n#0 /tmp/tmpvgzxf8eg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvgzxf8eg.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = explode('(', $brackets);\n  $closing_brackets = explode(')',\
    \ $brackets);\n  foreach ($opening_brackets as $key => $value) {\n    if ($value\
    \ !== $closing_brackets[$key]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xn1haiy.php:20\n\
    Stack trace:\n#0 /tmp/tmp0xn1haiy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0xn1haiy.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_filter($brackets);\n    foreach ($brackets as $bracket) {\n        if\
    \ ($bracket != \"\") {\n            $bracket = str_replace(\")\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"(\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ;\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    =\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    =\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    =\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    =\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    =\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\n            $bracket = str_replace(\"\
    =\", \"\", $bracket);\n            $bracket = str_replace(\"=\", \"\", $bracket);\n\
    \            $bracket = str_replace(\"=\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\"=\", \"\", $bracket);\nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpn9j6j4zp.php on line 65

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  foreach ($brackets as $bracket) {\n    if ($bracket\
    \ != \"\") {\n      if ($bracket != \"(\") {\n        if ($bracket != \")\") {\n\
    \          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9gwtezd.php:30\n\
    Stack trace:\n#0 /tmp/tmpt9gwtezd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt9gwtezd.php\
    \ on line 30\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = explode('(', $brackets);\n    $closing_brackets =\
    \ explode(')', $brackets);\n    $opening_brackets_count = count($opening_brackets);\n\
    \    $closing_brackets_count = count($closing_brackets);\n    $correct_brackets\
    \ = false;\n    for ($i = 0; $i < $opening_brackets_count; $i++) {\n        if\
    \ ($opening_brackets[$i] == $closing_brackets[$i]) {\n            $correct_brackets\
    \ = true;\n        }\n    }\n    return $correct_brackets;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgnjs8mv.php:23\n\
    Stack trace:\n#0 /tmp/tmpzgnjs8mv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzgnjs8mv.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  $opening_brackets = array_filter($brackets,\
    \ function($bracket) {\n    return substr($bracket, 0, 1) === '(';\n  });\n  return\
    \ count($opening_brackets) === count(array_filter($brackets, function($bracket)\
    \ {\n    return substr($bracket, 0, 1) === ')';\n  }));\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdrcu1bh7.php:19\n\
    Stack trace:\n#0 /tmp/tmpdrcu1bh7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdrcu1bh7.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = explode('(', $brackets);\n    $closing_brackets =\
    \ explode(')', $brackets);\n    $correct_brackets = array_diff($opening_brackets,\
    \ $closing_brackets);\n    return count($correct_brackets) == 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfy4ku8y.php:16\n\
    Stack trace:\n#0 /tmp/tmpvfy4ku8y.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvfy4ku8y.php\
    \ on line 16\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), '', $brackets);\n  $brackets =\
    \ explode(')', $brackets);\n  foreach ($brackets as $key => $bracket) {\n    if\
    \ ($bracket != '') {\n      if ($brackets[$key-1] != '') {\n        if ($brackets[$key+1]\
    \ != '') {\n          return false;\n        }\n      }\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_s0vuhzr.php:28\n\
    Stack trace:\n#0 /tmp/tmp_s0vuhzr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_s0vuhzr.php\
    \ on line 28\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_map(\"trim\", $brackets);\n  foreach ($brackets as $key => $value) {\n\
    \    if ($value[0] != $value[strlen($value) - 1]) {\n      return false;\n   \
    \ }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkzwxb0a.php:22\n\
    Stack trace:\n#0 /tmp/tmpgkzwxb0a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgkzwxb0a.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      $bracket = str_replace(\"\
    [\", \"\", $bracket);\n      $bracket = str_replace(\"]\", \"\", $bracket);\n\
    \      if ($bracket != \"\") {\n        if ($brackets[$bracket-1] == $bracket)\
    \ {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp14691mv.php:31\n\
    Stack trace:\n#0 /tmp/tmpp14691mv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpp14691mv.php\
    \ on line 31\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    foreach\
    \ ($brackets as $key => $value) {\n        if ($value[0] != \"[\") {\n       \
    \     $brackets[$key] = \"[\".$value;\n        }\n        if ($value[strlen($value)-1]\
    \ != \"]\") {\n            $brackets[$key] = $value.\"]\";\n        }\n    }\n\
    \    $brackets = implode(\",\", $brackets);\n    $brackets = str_replace(\",]\"\
    , \"]\", $brackets);\n    $brackets = str_replace(\",[\", \"[\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,[\", \"[\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\", $brackets);\n    $brackets = str_replace(\"\
    ,]\", \"]\", $brackets);\n    $brackets = str_replace(\",]\", \"]\", $brackets);\n\
    \    $brackets = str_replace(\",]\", \"]\nfunction candidate(...$args) {\n   \
    \ return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpm5bbgsk6.php on line 49

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = explode(\",\", $brackets);\n    foreach ($brackets as $bracket)\
    \ {\n        if ($bracket != \"(\") {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w387lf1.php:19\n\
    Stack trace:\n#0 /tmp/tmp1w387lf1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1w387lf1.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($bracket != \"(\") {\n\
    \        if ($bracket != \")\") {\n          return false;\n        }\n      }\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dseqc_3.php:29\n\
    Stack trace:\n#0 /tmp/tmp5dseqc_3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5dseqc_3.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array('(', ')'), '', $brackets);\n  return $brackets\
    \ !== '';\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp050vm0fc.php:14\n\
    Stack trace:\n#0 /tmp/tmp050vm0fc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp050vm0fc.php\
    \ on line 14\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = str_replace(\",\", \"|\", $brackets);\n\
    \  $brackets = str_replace(\"|\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n  $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |\", \"|(\", $brackets);\n  $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \  $brackets = str_replace(\"]\", \")\", $brackets);\n  $brackets = str_replace(\"\
    ]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|\", \"|(\", $brackets);\n  $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n  $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \  $brackets = str_replace(\"]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|\", \"|(\", $brackets);\n\
    \  $brackets = str_replace(\"[\", \"(\", $brackets);\n  $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n  $brackets = str_replace(\"]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |\", \"|(\", $brackets);\n  $brackets = str_replace(\"[\", \"(\", $brackets);\n\
    \  $brackets = str_replace(\"]\", \")\", $brackets);\n  $brackets = str_replace(\"\
    ]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|]\", \"|]\", $brackets);\n\
    \  $brackets = str_replace(\"|\", \"|(\", $brackets);\n  $brackets = str_replace(\"\
    [\", \"(\", $brackets);\n  $brackets = str_replace(\"]\", \")\", $brackets);\n\
    \  $brackets = str_replace(\"]\", \"|]\", $brackets);\n  $brackets = str_replace(\"\
    |]\", \"|]\", $brackets);\n  $brackets = str_replace(\"|\", \"|(\", $brackets);\n\
    \  $brackets = str_replace(\"[\", \"(\", $brackets);\n  $brackets = str_replace(\"\
    ]\", \")\", $brackets);\n  $brackets = str_replace(\"]\", \"|]\", \nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnbxxyois.php on line 41

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  return count($brackets) == count(array_unique($brackets));\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv05ve2f.php:21\n\
    Stack trace:\n#0 /tmp/tmpnv05ve2f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnv05ve2f.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\"[\", $brackets);\n    $brackets\
    \ = array_reverse($brackets);\n    $brackets = array_filter($brackets);\n    $brackets\
    \ = array_unique($brackets);\n    return count($brackets) == count($brackets[0]);\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp2arf2z3b.php on line 11\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp2arf2z3b.php\
    \ on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2arf2z3b.php:20\n\
    Stack trace:\n#0 /tmp/tmp2arf2z3b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2arf2z3b.php\
    \ on line 20\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"[\") !== false) {\n      $bracket\
    \ = str_replace(\"[\", \"(\", $bracket);\n      $bracket = str_replace(\"]\",\
    \ \")\", $bracket);\n    }\n  }\n  return $brackets;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl1sparw.php:22\n\
    Stack trace:\n#0 /tmp/tmpfl1sparw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfl1sparw.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != \"\") {\n      $opening = strpos($bracket, \"(\");\n\
    \      $closing = strpos($bracket, \")\");\n      if ($opening !== false && $closing\
    \ !== false) {\n        if ($opening < $closing) {\n          return false;\n\
    \        }\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcolzw8hb.php:25\n\
    Stack trace:\n#0 /tmp/tmpcolzw8hb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcolzw8hb.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = array();\n    $closing_brackets = array();\n    $opening_brackets_length\
    \ = strlen($brackets);\n    $closing_brackets_length = strlen($brackets) - $opening_brackets_length;\n\
    \    for ($i = 0; $i < $opening_brackets_length; $i++) {\n        $opening_brackets[]\
    \ = $brackets[$i];\n    }\n    for ($i = 0; $i < $closing_brackets_length; $i++)\
    \ {\n        $closing_brackets[] = $brackets[$i + $opening_brackets_length];\n\
    \    }\n    return $opening_brackets === $closing_brackets;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1nwm06j.php:23\n\
    Stack trace:\n#0 /tmp/tmpx1nwm06j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx1nwm06j.php\
    \ on line 23\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets\
    \ = preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets =\
    \ preg_replace('/\\[[^\\]]*\\]\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n \
    \ $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\\
    ([^)]*\\)/', '', $brackets);\n  $brackets = preg_replace('/\\([^)]*\\)/', '',\
    \ $brackets);\n  $brackets = preg_replace('/\nfunction candidate(...$args) {\n\
    \    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_qbm4asl.php on line 34

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = preg_replace('/\\([^)]*\\)/', '', $brackets);\n  return $brackets\
    \ !== '';\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4w8kaj4u.php:14\n\
    Stack trace:\n#0 /tmp/tmp4w8kaj4u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4w8kaj4u.php\
    \ on line 14\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"]\") === false) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4u09592.php:25\n\
    Stack trace:\n#0 /tmp/tmpe4u09592.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpe4u09592.php\
    \ on line 25\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $b) {\n    if ($b == \"\") {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjue4rfg.php:21\n\
    Stack trace:\n#0 /tmp/tmphjue4rfg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphjue4rfg.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if ($bracket != \"\") {\n      if ($bracket == \"(\") {\n\
    \        if ($brackets[count($brackets) - 1] != \"\") {\n          return false;\n\
    \        }\n      } else if ($bracket == \")\") {\n        if ($brackets[count($brackets)\
    \ - 1] != \"\") {\n          return false;\n        }\n      }\n    }\n  }\n \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqtqhntl.php:33\n\
    Stack trace:\n#0 /tmp/tmpyqtqhntl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyqtqhntl.php\
    \ on line 33\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array(\"(\", \")\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = explode(\"}\", $brackets);\n  foreach ($brackets as $key => $bracket)\
    \ {\n    if ($bracket != \"\") {\n      if ($key > 0) {\n        if ($brackets[$key\
    \ - 1] != $bracket) {\n          return false;\n        }\n      }\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffbe4sro.php:25\n\
    Stack trace:\n#0 /tmp/tmpffbe4sro.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpffbe4sro.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $b) {\n\
    \    if ($b !== \"(\") {\n      return false;\n    }\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon6jrc7p.php:19\n\
    Stack trace:\n#0 /tmp/tmpon6jrc7p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpon6jrc7p.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  $brackets\
    \ = array_filter($brackets);\n  foreach ($brackets as $key => $bracket) {\n  \
    \  if ($bracket != \"\") {\n      if ($brackets[$key - 1] == $bracket) {\n   \
    \     unset($brackets[$key - 1]);\n      }\n    }\n  }\n  return count($brackets)\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqhsyyyb.php:24\n\
    Stack trace:\n#0 /tmp/tmpeqhsyyyb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeqhsyyyb.php\
    \ on line 24\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\"[\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"]\", \"\", $brackets);\n    $brackets = str_replace(\"\
    {\", \"\", $brackets);\n    $brackets = str_replace(\"}\", \"\", $brackets);\n\
    \    $brackets = str_replace(\",\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ;\", \"\", $brackets);\n    $brackets = str_replace(\"=\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"?\", \"\", $brackets);\n    $brackets = str_replace(\"\
    !\", \"\", $brackets);\n    $brackets = str_replace(\"$\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"%\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ^\", \"\", $brackets);\n    $brackets = str_replace(\"&\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"*\", \"\", $brackets);\n    $brackets = str_replace(\"\
    (\", \"\", $brackets);\n    $brackets = str_replace(\")\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"[\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ]\", \"\", $brackets);\n    $brackets = str_replace(\"{\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"}\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ,\", \"\", $brackets);\n    $brackets = str_replace(\";\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"=\", \"\", $brackets);\n    $brackets = str_replace(\"\
    ?\", \"\", $brackets);\n    $brackets = str_replace(\"!\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"$\", \"\", $brackets);\n    $brackets = str_replace(\"\
    %\", \"\", $brackets);\n    $brackets = str_replace(\"^\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"&\", \"\", $brackets);\n    $brackets = str_replace(\"\
    *\", \"\", $brackets);\n    $brackets = str_replace(\"(\", \"\", $brackets);\n\
    \    $brackets = str_replace(\")\", \"\", $brackets);\n    $brackets = str_replace(\"\
    [\", \"\", $brackets);\n    $brackets = str_replace(\"]\", \"\", $brackets);\n\
    \    $brackets = str_replace(\"{\", \"\", $brackets);\n    $brackets = str_replace(\"\
    }\", \"\", $brackets);\n    $brackets = str_replace(\",\", \"\", $brackets);\n\
    \    $brackets = str_replace(\";\", \"\", $brackets);\n    $brackets = str_replace(\"\
    =\", \"\", $brackets);\n    $brackets = str_replace(\"?\", \"\", $brackets);\n\
    \    $bracket\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppfu_buye.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != \"\") {\n      $opening = strpos($bracket, \"(\");\n\
    \      $closing = strpos($bracket, \")\");\n      if ($opening !== false && $closing\
    \ !== false) {\n        if ($opening < $closing) {\n          return false;\n\
    \        }\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcolzw8hb.php:25\n\
    Stack trace:\n#0 /tmp/tmpcolzw8hb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcolzw8hb.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\"[\", $brackets);\n  foreach ($brackets\
    \ as $key => $value) {\n    if ($value[0] != $value[1]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lyyynny.php:21\n\
    Stack trace:\n#0 /tmp/tmp1lyyynny.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1lyyynny.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $opening_brackets = explode(\"(\", $brackets);\n    $closing_brackets\
    \ = explode(\")\", $brackets);\n    foreach ($opening_brackets as $opening_bracket)\
    \ {\n        if (in_array($opening_bracket, $closing_brackets)) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeenez302.php:20\n\
    Stack trace:\n#0 /tmp/tmpeenez302.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeenez302.php\
    \ on line 20\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(array(\"(\", \")\"), array(\"{\", \"}\"), $brackets);\n\
    \  $brackets = explode(\"}\", $brackets);\n  foreach ($brackets as $key => $value)\
    \ {\n    if ($key > 0) {\n      if ($brackets[$key - 1] != $value) {\n       \
    \ return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfw48g2ln.php:22\n\
    Stack trace:\n#0 /tmp/tmpfw48g2ln.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfw48g2ln.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_filter($brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n    $brackets\
    \ = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"trim\", $brackets);\n\
    \    $brackets = array_map(\"trim\", $brackets);\n    $brackets = array_map(\"\
    trim\", $brackets);\n    $brackets = array_map(\"trim\", $bracket\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp02vfn8an.php on line 48

    '
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $opening_brackets = array();\n  $closing_brackets = array();\n  $brackets_count\
    \ = count($brackets);\n  for ($i = 0; $i < $brackets_count; $i++) {\n    $opening_brackets[$i]\
    \ = $brackets[$i][0];\n    $closing_brackets[$i] = $brackets[$i][1];\n  }\n  for\
    \ ($i = 0; $i < $brackets_count; $i++) {\n    if ($opening_brackets[$i] != $closing_brackets[$i])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpx8otetef.php on line 7\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpx8otetef.php:25\nStack trace:\n#0 /tmp/tmpx8otetef.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx8otetef.php on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket == '(') {\n      if ($brackets[$bracket+1] != '(') return\
    \ false;\n    } else if ($bracket == ')') {\n      if ($brackets[$bracket-1] !=\
    \ '(') return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphv4c6ij9.php:25\n\
    Stack trace:\n#0 /tmp/tmphv4c6ij9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphv4c6ij9.php\
    \ on line 25\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  $opening_brackets = array();\n\
    \  foreach ($brackets as $bracket) {\n    if ($bracket == '(') {\n      $opening_brackets[]\
    \ = $bracket;\n    }\n  }\n  foreach ($opening_brackets as $bracket) {\n    if\
    \ ($bracket != ')') {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3kxyy0x.php:29\n\
    Stack trace:\n#0 /tmp/tmpp3kxyy0x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp3kxyy0x.php\
    \ on line 29\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(')', $brackets);\n  foreach ($brackets as $i => $bracket)\
    \ {\n    if ($bracket == '(') {\n      $brackets[$i] = ')';\n    }\n  }\n  return\
    \ implode(')', $brackets) == $brackets;\n}\n\nfunction candidate(...$args) {\n\
    \    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hw0uwhi.php:19\n\
    Stack trace:\n#0 /tmp/tmp4hw0uwhi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4hw0uwhi.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"[\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    foreach\
    \ ($brackets as $i => $bracket) {\n        if ($bracket != \"\") {\n         \
    \   $brackets[$i] = str_replace(\"[\", \"\", $bracket);\n            $brackets[$i]\
    \ = str_replace(\"]\", \"\", $brackets[$i]);\n        }\n    }\n    return count(array_diff($brackets,\
    \ array())) == 0;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7hzbq1_.php:22\n\
    Stack trace:\n#0 /tmp/tmpy7hzbq1_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy7hzbq1_.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    return $brackets !== \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_p97yd6.php:15\n\
    Stack trace:\n#0 /tmp/tmpj_p97yd6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpj_p97yd6.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket != '(' && $bracket != ')') {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9fpiq9.php:19\n\
    Stack trace:\n#0 /tmp/tmpzk9fpiq9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzk9fpiq9.php\
    \ on line 19\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"[\") !== false || strpos($bracket,\
    \ \"]\") !== false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqtl5wbe.php:21\n\
    Stack trace:\n#0 /tmp/tmpxqtl5wbe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxqtl5wbe.php\
    \ on line 21\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = explode(',', $brackets);\n    $brackets = array_map('trim',\
    \ $brackets);\n    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $brackets);\n    $brackets = array_filter($brackets);\n\
    \    $brackets = array_unique($brackets);\n    $brackets = array_map('trim', $brackets);\n\
    \    $brackets = array_filter($brackets);\n    $brackets = array_unique($brackets);\n\
    \    $brackets = array_map('trim', $\nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpcdvuyzom.php on line 58

    '
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = str_replace(\"(\", \"\", $brackets);\n    $brackets = str_replace(\"\
    )\", \"\", $brackets);\n    $brackets = explode(\",\", $brackets);\n    $brackets\
    \ = array_filter($brackets);\n    foreach ($brackets as $bracket) {\n        if\
    \ ($bracket != \"\") {\n            $bracket = str_replace(\"(\", \"\", $bracket);\n\
    \            $bracket = str_replace(\")\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    '\", \"\", $bracket);\n            $bracket = str_replace(\"\\\"\", \"'\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\";\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = str_replace(\",\", \"\", $bracket);\n            $bracket\
    \ = str_replace(\",\", \"\", $bracket);\n            $bracket = str_replace(\"\
    ,\", \"\", $bracket);\n            $bracket = str_replace(\",\", \"\", $bracket);\n\
    \            $bracket = \nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdulwwgj0.php on line 49

    '
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  $brackets = array_map('trim',\
    \ $brackets);\n  $brackets = array_filter($brackets);\n  $brackets = array_unique($brackets);\n\
    \  $brackets = array_map('trim', $brackets);\n  $brackets = array_filter($brackets);\n\
    \  $brackets = array_unique($brackets);\n  $brackets = array_map('trim', $brackets);\n\
    \  $brackets = array_filter($brackets);\n  return count($brackets) == count(array_unique($brackets));\n\
    }\n\nfunction candidate(...$args) {\n    return correct_bracketing(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppe75ugzz.php:26\n\
    Stack trace:\n#0 /tmp/tmppe75ugzz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppe75ugzz.php\
    \ on line 26\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $bracket) {\n    if (strpos($bracket, \"[\") !== false) {\n      $bracket\
    \ = str_replace(\"[\", \"(\", $bracket);\n      $bracket = str_replace(\"]\",\
    \ \")\", $bracket);\n    }\n  }\n  return $brackets;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl1sparw.php:22\n\
    Stack trace:\n#0 /tmp/tmpfl1sparw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfl1sparw.php\
    \ on line 22\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $b) {\n \
    \   if ($b == '(') {\n      unset($brackets[array_search($b, $brackets)]);\n \
    \   }\n  }\n  return $brackets == array('(', ')');\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jn5j_oq.php:19\n\
    Stack trace:\n#0 /tmp/tmp2jn5j_oq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2jn5j_oq.php\
    \ on line 19\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(',', $brackets);\n  foreach ($brackets as $b) {\n \
    \   if ($b == '(') {\n      if ($brackets[count($brackets) - 1] != ')') {\n  \
    \      return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhd29lbx.php:25\n\
    Stack trace:\n#0 /tmp/tmpmhd29lbx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmhd29lbx.php\
    \ on line 25\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"[\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"]\", $brackets);\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets\
    \ as $key => $bracket) {\n    if ($bracket != \"\") {\n      $brackets[$key] =\
    \ str_replace(\"]\", \"\", $bracket);\n    }\n  }\n  return $brackets;\n}\n\n\
    function candidate(...$args) {\n    return correct_bracketing(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"()\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())()\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )(()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6eof9nk.php:21\n\
    Stack trace:\n#0 /tmp/tmpw6eof9nk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw6eof9nk.php\
    \ on line 21\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\")\", \"\", $brackets);\n  $brackets = str_replace(\"\
    (\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1ofbau.php:15\n\
    Stack trace:\n#0 /tmp/tmpaf1ofbau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaf1ofbau.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n    $brackets = explode(\",\", $brackets);\n    foreach ($brackets as $b)\
    \ {\n        if ($b != \"(\" && $b != \")\") {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ correct_bracketing(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    ()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()())\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())()\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()((()()())())(()()(()))\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"((()())))\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\")(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"((((\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\")\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"(()\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"()()(()())())(()\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"()()(()())()))()\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzgjcqhl.php:19\n\
    Stack trace:\n#0 /tmp/tmpfzgjcqhl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfzgjcqhl.php\
    \ on line 19\n"
  timestamp: 1659730690
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = str_replace(\"(\", \"\", $brackets);\n  $brackets = str_replace(\"\
    )\", \"\", $brackets);\n  return $brackets == \"()\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsaqnyfj.php:15\n\
    Stack trace:\n#0 /tmp/tmplsaqnyfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsaqnyfj.php\
    \ on line 15\n"
  timestamp: 1659730689
- exit_code: 255
  program: "<?php\n// brackets is a string of \"(\" and \")\".\n// return True if\
    \ every opening bracket has a corresponding closing bracket.\nfunction correct_bracketing($brackets)\
    \ {\n  $brackets = explode(\",\", $brackets);\n  foreach ($brackets as $bracket)\
    \ {\n    if ($bracket == \"(\") {\n      if ($brackets[$bracket+1] != \")\") {\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return correct_bracketing(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"()\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"(()())\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"()()(()())()\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"()()((()()())())(()()(()))\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"((()())))\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\")(()\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ((((\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    )\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    (()\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ()()(()())())(()\") !== false) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"()()(()())()))()\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq81lmxee.php:25\n\
    Stack trace:\n#0 /tmp/tmpq81lmxee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq81lmxee.php\
    \ on line 25\n"
  timestamp: 1659730689

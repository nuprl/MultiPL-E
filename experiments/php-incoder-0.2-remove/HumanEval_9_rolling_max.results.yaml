language: php
name: HumanEval_9_rolling_max
results:
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max < $number) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dbbjxiy.php:23\n\
    Stack trace:\n#0 /tmp/tmp4dbbjxiy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4dbbjxiy.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \          $current = $number;\n        } else {\n            $current = max($number,\
    \ $current);\n        }\n    }\n    $result[] = $current;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mudh4s3.php:24\n\
    Stack trace:\n#0 /tmp/tmp4mudh4s3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4mudh4s3.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehg6aivn.php:21\n\
    Stack trace:\n#0 /tmp/tmpehg6aivn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpehg6aivn.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    foreach ($numbers\
    \ as $index => $number) {\n        if ($max_element == null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $index;\n\
    \        }\n    }\n    return $max_element_index;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2thcsg14.php:21\n\
    Stack trace:\n#0 /tmp/tmp2thcsg14.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2thcsg14.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_number_index = 0;\n    $max_number_found =\
    \ false;\n    foreach ($numbers as $number) {\n        if ($number > $max_number)\
    \ {\n            $max_number = $number;\n            $max_number_index = $i;\n\
    \            $max_number_found = true;\n        }\n        $i++;\n    }\n    if\
    \ (!$max_number_found) {\n        return null;\n    }\n    return $max_number;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpree_6hco.php:27\n\
    Stack trace:\n#0 /tmp/tmpree_6hco.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpree_6hco.php\
    \ on line 27\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    $max_number = max($numbers);\n\
    \    $max_index = array_search($max_number, $numbers);\n    $numbers[$max_index]\
    \ = $max_number;\n    $numbers = array_reverse($numbers);\n    $numbers = array_slice($numbers,\
    \ 0, $max_index);\n    return $numbers;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: max(): Array must contain at least one element in /tmp/tmpf4v5qpt9.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4v5qpt9.php:21\n\
    Stack trace:\n#0 /tmp/tmpf4v5qpt9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf4v5qpt9.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_count\
    \ = 0;\n    $max_element_counts = array();\n    $max_element_counts_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_element) {\n\
    \            $max_element = $number;\n            $max_element_index = $max_element_count;\n\
    \        }\n        $max_element_counts[$max_element_counts_index] = $max_element;\n\
    \        $max_element_counts_index++;\n        if ($max_element_counts_index >=\
    \ count($max_element_counts)) {\n            $max_element_counts_index = 0;\n\
    \        }\n    }\n    return $max_element_counts;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1ywr_qm.php:30\n\
    Stack trace:\n#0 /tmp/tmpb1ywr_qm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpb1ywr_qm.php\
    \ on line 30\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    foreach ($numbers\
    \ as $index => $number) {\n        if ($max_element === null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $index;\n\
    \        }\n    }\n    return $max_element_index;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zql1awk.php:21\n\
    Stack trace:\n#0 /tmp/tmp4zql1awk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4zql1awk.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($max_element == null\
    \ || $number > $max_element_value) {\n            $max_element = $number;\n  \
    \          $max_element_index = $i;\n            $max_element_value = $number;\n\
    \        }\n        $i++;\n    }\n    return array($max_element, $max_element_index,\
    \ $max_element_value);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8273xu20.php:24\n\
    Stack trace:\n#0 /tmp/tmp8273xu20.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8273xu20.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array($max_value, $max_index);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzfogdmr.php:22\n\
    Stack trace:\n#0 /tmp/tmppzfogdmr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppzfogdmr.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element === null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrs03dkw.php:21\n\
    Stack trace:\n#0 /tmp/tmplrs03dkw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplrs03dkw.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    foreach ($numbers as $key => $value) {\n        if ($value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_element_index = $key;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5rr0dfr.php:22\n\
    Stack trace:\n#0 /tmp/tmpe5rr0dfr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe5rr0dfr.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value === null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgazfsh_k.php:22\n\
    Stack trace:\n#0 /tmp/tmpgazfsh_k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgazfsh_k.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn9w0cwx.php:21\n\
    Stack trace:\n#0 /tmp/tmpdn9w0cwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdn9w0cwx.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v043euw.php:21\n\
    Stack trace:\n#0 /tmp/tmp1v043euw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1v043euw.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ === null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        } else {\n            $max_element_value = max($max_element_value, $value);\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5nkazoi.php:25\n\
    Stack trace:\n#0 /tmp/tmpj5nkazoi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpj5nkazoi.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = 0;\n    $index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ array($max, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tha7t2q.php:23\n\
    Stack trace:\n#0 /tmp/tmp6tha7t2q.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6tha7t2q.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value === null\
    \ || $value > $max_value) {\n            $max_element = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41dnfaad.php:23\n\
    Stack trace:\n#0 /tmp/tmp41dnfaad.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp41dnfaad.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element === null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrs03dkw.php:21\n\
    Stack trace:\n#0 /tmp/tmplrs03dkw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplrs03dkw.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    foreach ($numbers\
    \ as $key => $value) {\n        if ($max_element == null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_element_index = $key;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpofe_6s11.php:21\n\
    Stack trace:\n#0 /tmp/tmpofe_6s11.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpofe_6s11.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8c5mqmv.php:22\n\
    Stack trace:\n#0 /tmp/tmpf8c5mqmv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf8c5mqmv.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n\
    \    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjih16_d.php:23\n\
    Stack trace:\n#0 /tmp/tmpsjih16_d.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsjih16_d.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7psy28r4.php:21\n\
    Stack trace:\n#0 /tmp/tmp7psy28r4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7psy28r4.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $max_element;\n            $max_element_count\
    \ = 1;\n        } else {\n            $max_element_count++;\n        }\n    }\n\
    \    return array($max_element_index, $max_element_value, $max_element_count);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbsl4zipz.php:27\n\
    Stack trace:\n#0 /tmp/tmpbsl4zipz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbsl4zipz.php\
    \ on line 27\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling_max = 0;\n    $max_rolling_max_index = 0;\n    $max_rolling_max_index2\
    \ = 0;\n    $max_rolling_max_index3 = 0;\n    $max_rolling_max_index4 = 0;\n \
    \   $max_rolling_max_index5 = 0;\n    $max_rolling_max_index6 = 0;\n    $max_rolling_max_index7\
    \ = 0;\n    $max_rolling_max_index8 = 0;\n    $max_rolling_max_index9 = 0;\n \
    \   $max_rolling_max_index10 = 0;\n    $max_rolling_max_index11 = 0;\n    $max_rolling_max_index12\
    \ = 0;\n    $max_rolling_max_index13 = 0;\n    $max_rolling_max_index14 = 0;\n\
    \    $max_rolling_max_index15 = 0;\n    $max_rolling_max_index16 = 0;\n    $max_rolling_max_index17\
    \ = 0;\n    $max_rolling_max_index18 = 0;\n    $max_rolling_max_index19 = 0;\n\
    \    $max_rolling_max_index20 = 0;\n    $max_rolling_max_index21 = 0;\n    $max_rolling_max_index22\
    \ = 0;\n    $max_rolling_max_index23 = 0;\n    $max_rolling_max_index24 = 0;\n\
    \    $max_rolling_max_index25 = 0;\n    $max_rolling_max_index26 = 0;\n    $max_rolling_max_index27\
    \ = 0;\n    $max_rolling_max_index28 = 0;\n    $max_rolling_max_index29 = 0;\n\
    \    $max_rolling_max_index30 = 0;\n    $max_rolling_max_index31 = 0;\n    $max_rolling_max_index32\
    \ = 0;\n    $max_rolling_max_index33 = 0;\n    $max_rolling_max_index34 = 0;\n\
    \    $max_rolling_max_index35 = 0;\n    $max_rolling_max_index36 = 0;\n    $max_rolling_max_index37\
    \ = 0;\n    $max_rolling_max_index38 = 0;\n    $max_rolling_max_index39 = 0;\n\
    \    $max_rolling_max_index40 = 0;\n    $max_rolling_max_index41 = 0;\n    $max_rolling_max_index42\
    \ = 0;\n    $max_rolling_max_index43 = 0;\n    $max_rolling_max_index44 = 0;\n\
    \    $max_rolling_max_index45 = 0;\n    $max_rolling_max_index46 = 0;\n    $max_rolling_max_index47\
    \ = 0;\n    $max_rolling_max_index48 = 0;\n    $max_rolling_max_index49 = 0;\n\
    \    $max_rolling_max_index50 = 0;\n    $max_rolling_max_index51 = 0;\n    $max_rolling_max_index52\
    \ = 0;\n    $max_rolling_max_index53 = 0;\n    $max_rolling_max_index54 = 0;\n\
    \    $max_rolling_max_index55 = 0;\n    $max_rolling_max_index56 = 0;\n    $max_rolling_max_index\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpo7726iqc.php on line 63

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11ufwryc.php:21\n\
    Stack trace:\n#0 /tmp/tmp11ufwryc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp11ufwryc.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array($max_value, $max_index);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6cg4y9f.php:21\n\
    Stack trace:\n#0 /tmp/tmpj6cg4y9f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj6cg4y9f.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        }\n        if ($number == $max) {\n            $max_index++;\n\
    \        }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpqzsqns.php:24\n\
    Stack trace:\n#0 /tmp/tmphpqzsqns.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphpqzsqns.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0grd90l.php:23\n\
    Stack trace:\n#0 /tmp/tmp_0grd90l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_0grd90l.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ == null || $max_element > $value) {\n            $max_element = $value;\n  \
    \          $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return array($max_element_index, $max_element_value);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_s67ozh.php:23\n\
    Stack trace:\n#0 /tmp/tmpu_s67ozh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu_s67ozh.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjn6be4d.php:22\n\
    Stack trace:\n#0 /tmp/tmpgjn6be4d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgjn6be4d.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $key\
    \ => $value) {\n        if ($value > $max_element) {\n            $max_element\
    \ = $value;\n            $max_index = $key;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfw09ptf.php:21\n\
    Stack trace:\n#0 /tmp/tmpnfw09ptf.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnfw09ptf.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $value) {\n        if ($value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $i;\n        }\n        $i++;\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7hmk8j7.php:22\n\
    Stack trace:\n#0 /tmp/tmpu7hmk8j7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu7hmk8j7.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldgc1l4.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldgc1l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsldgc1l4.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \            $max_index = $numbers[$number];\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmkuxfbb.php:21\n\
    Stack trace:\n#0 /tmp/tmpzmkuxfbb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzmkuxfbb.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_element = $numbers[$i];\n            $max_index = $i;\n\
    \            $max_value = $numbers[$i];\n        } else {\n            $max_value\
    \ = max($max_value, $numbers[$i]);\n        }\n    }\n    return array($max_element,\
    \ $max_index, $max_value);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9qaa2hw.php:25\n\
    Stack trace:\n#0 /tmp/tmpd9qaa2hw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd9qaa2hw.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element === null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrs03dkw.php:21\n\
    Stack trace:\n#0 /tmp/tmplrs03dkw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplrs03dkw.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = -1;\n    foreach ($numbers as $index =>\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \         $max_index = $index;\n        }\n    }\n    return $max_index;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzfdc_d_q.php:21\n\
    Stack trace:\n#0 /tmp/tmpzfdc_d_q.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzfdc_d_q.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \            $max_index = $i;\n        }\n        $i++;\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp195ik7_t.php:22\n\
    Stack trace:\n#0 /tmp/tmp195ik7_t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp195ik7_t.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxyg6mh_i.php:22\n\
    Stack trace:\n#0 /tmp/tmpxyg6mh_i.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxyg6mh_i.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvh7afsy.php:20\n\
    Stack trace:\n#0 /tmp/tmpgvh7afsy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgvh7afsy.php\
    \ on line 20\n"
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array($max, $max_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie450mta.php:21\n\
    Stack trace:\n#0 /tmp/tmpie450mta.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpie450mta.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling_number\
    \ = $number;\n            $max_rolling = $number;\n        }\n    }\n    return\
    \ $max_rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17i2e045.php:21\n\
    Stack trace:\n#0 /tmp/tmp17i2e045.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp17i2e045.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = null;\n    foreach ($numbers as $key => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $key;\n        }\n    }\n    return $max_value;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1qs_58o.php:23\n\
    Stack trace:\n#0 /tmp/tmpb1qs_58o.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb1qs_58o.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7psy28r4.php:21\n\
    Stack trace:\n#0 /tmp/tmp7psy28r4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7psy28r4.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $i;\n        }\n        $i++;\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7uklhkx.php:22\n\
    Stack trace:\n#0 /tmp/tmpg7uklhkx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg7uklhkx.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($max_element === null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_index = $index;\n \
    \       }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyz8k0bm3.php:21\n\
    Stack trace:\n#0 /tmp/tmpyz8k0bm3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyz8k0bm3.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $number;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7lon9u6.php:22\n\
    Stack trace:\n#0 /tmp/tmpp7lon9u6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp7lon9u6.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n  \
    \  return $max_value;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5rqhx9x.php:22\n\
    Stack trace:\n#0 /tmp/tmpn5rqhx9x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn5rqhx9x.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = 0;\n    foreach ($numbers as $i => $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $i;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg95ke1k7.php:21\n\
    Stack trace:\n#0 /tmp/tmpg95ke1k7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpg95ke1k7.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0grd90l.php:23\n\
    Stack trace:\n#0 /tmp/tmp_0grd90l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_0grd90l.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n  \
    \  return $max_value;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5rqhx9x.php:22\n\
    Stack trace:\n#0 /tmp/tmpn5rqhx9x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn5rqhx9x.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ === null || $max_element > $value) {\n            $max_element = $value;\n \
    \           $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        } else {\n            $max_element = $max_element > $value ? $max_element\
    \ : $value;\n        }\n    }\n    return array($max_element_index, $max_element_value);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkow2zq6i.php:25\n\
    Stack trace:\n#0 /tmp/tmpkow2zq6i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkow2zq6i.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array($max_value, $max_index, $max_element);\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62gxtt5j.php:22\n\
    Stack trace:\n#0 /tmp/tmp62gxtt5j.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp62gxtt5j.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $value) {\n        if ($max_element == null || $value > $max_element)\
    \ {\n            $max_element = $value;\n            $max_index = $index;\n  \
    \      }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45vx__s6.php:21\n\
    Stack trace:\n#0 /tmp/tmp45vx__s6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp45vx__s6.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max_element_value) {\n            $max_element_value =\
    \ $number;\n            $max_element_index = $max_element_count;\n        }\n\
    \        $max_element_count++;\n    }\n    return array($max_element_index, $max_element_value);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76g95gvk.php:24\n\
    Stack trace:\n#0 /tmp/tmp76g95gvk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp76g95gvk.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n\
    \    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9aexum2f.php:22\n\
    Stack trace:\n#0 /tmp/tmp9aexum2f.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9aexum2f.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_num = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max_rolling_num) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_num = $number;\n        } else {\n    \
    \        $max_rolling = $max_rolling > $number ? $max_rolling : $number;\n   \
    \         $max_rolling_num = $max_rolling_num > $number ? $max_rolling_num : $number;\n\
    \        }\n    }\n    return $max_rolling;\n}\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0r6uyg7n.php:23\n\
    Stack trace:\n#0 /tmp/tmp0r6uyg7n.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0r6uyg7n.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvh7afsy.php:20\n\
    Stack trace:\n#0 /tmp/tmpgvh7afsy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgvh7afsy.php\
    \ on line 20\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk4tqtng.php:21\n\
    Stack trace:\n#0 /tmp/tmpmk4tqtng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk4tqtng.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn9w0cwx.php:21\n\
    Stack trace:\n#0 /tmp/tmpdn9w0cwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdn9w0cwx.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return array($max_value, $max_index);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzfogdmr.php:22\n\
    Stack trace:\n#0 /tmp/tmppzfogdmr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppzfogdmr.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10im5l65.php:21\n\
    Stack trace:\n#0 /tmp/tmp10im5l65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10im5l65.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    $max_number = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_number) {\n            $max_number = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return array($max_number, $max_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01dyxed6.php:24\n\
    Stack trace:\n#0 /tmp/tmp01dyxed6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp01dyxed6.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk4tqtng.php:21\n\
    Stack trace:\n#0 /tmp/tmpmk4tqtng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk4tqtng.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ === null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51vnz7vo.php:23\n\
    Stack trace:\n#0 /tmp/tmp51vnz7vo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp51vnz7vo.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7psy28r4.php:21\n\
    Stack trace:\n#0 /tmp/tmp7psy28r4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7psy28r4.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    $max_number = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_number) {\n            $max_number = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return array($max_number, $max_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01dyxed6.php:24\n\
    Stack trace:\n#0 /tmp/tmp01dyxed6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp01dyxed6.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_element) {\n   \
    \         $max_element = $numbers[$i];\n            $max_index = $i;\n       \
    \ }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n  \
    \  return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpdvzhbb.php:21\n\
    Stack trace:\n#0 /tmp/tmpdpdvzhbb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdpdvzhbb.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max_value) {\n            $max_value = $number;\n\
    \        }\n    }\n    $result[] = $max_value;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1ezx03d.php:21\n\
    Stack trace:\n#0 /tmp/tmpf1ezx03d.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf1ezx03d.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null || $value > $max)\
    \ {\n            $max = $value;\n            $max_index = $index;\n          \
    \  $max_value = $value;\n        } else {\n            $max = $max * $value +\
    \ $value;\n        }\n    }\n    return array($max_index, $max_value);\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6is6n7ld.php:25\n\
    Stack trace:\n#0 /tmp/tmp6is6n7ld.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6is6n7ld.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ == null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return array($max_element, $max_element_index, $max_element_value);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd7gjp9a.php:23\n\
    Stack trace:\n#0 /tmp/tmpcd7gjp9a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcd7gjp9a.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $max_value;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkltb1sh.php:23\n\
    Stack trace:\n#0 /tmp/tmphkltb1sh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphkltb1sh.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuxdncd4.php:23\n\
    Stack trace:\n#0 /tmp/tmppuxdncd4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppuxdncd4.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    $rolling_max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $rolling_max) {\n \
    \           $rolling_max = $number;\n            $rolling_max_index = 0;\n   \
    \     }\n        if ($number == $rolling_max) {\n            $rolling_max_index++;\n\
    \        }\n        if ($rolling_max_index > 0) {\n            $result[$rolling_max_index]\
    \ = $rolling_max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nceps_n.php:29\n\
    Stack trace:\n#0 /tmp/tmp5nceps_n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5nceps_n.php\
    \ on line 29\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max_element_value) {\n            $max_element_value =\
    \ $number;\n            $max_element_index = $max_element_count;\n        }\n\
    \        $max_element_count++;\n    }\n    return array($max_element_index, $max_element_value);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphe19kr7b.php:24\n\
    Stack trace:\n#0 /tmp/tmphe19kr7b.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphe19kr7b.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ === null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51vnz7vo.php:23\n\
    Stack trace:\n#0 /tmp/tmp51vnz7vo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp51vnz7vo.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($rolling_max === null) {\n \
    \           $rolling_max = $number;\n            $rolling_max_index = 0;\n   \
    \     } else {\n            if ($number > $rolling_max) {\n                $rolling_max\
    \ = $number;\n                $rolling_max_index = 0;\n            } else {\n\
    \                $rolling_max_index++;\n            }\n        }\n        $result[]\
    \ = $rolling_max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array($max, $max_index);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie450mta.php:21\n\
    Stack trace:\n#0 /tmp/tmpie450mta.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpie450mta.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn9w0cwx.php:21\n\
    Stack trace:\n#0 /tmp/tmpdn9w0cwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdn9w0cwx.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($max_element === null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_index = $index;\n \
    \       }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyz8k0bm3.php:21\n\
    Stack trace:\n#0 /tmp/tmpyz8k0bm3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyz8k0bm3.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_count\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $max_element_count;\n\
    \        }\n        $max_element_count++;\n    }\n    return array($max_element,\
    \ $max_element_index, $max_element_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gddpqpb.php:23\n\
    Stack trace:\n#0 /tmp/tmp8gddpqpb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8gddpqpb.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    $result[] = $max_index;\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku7jtna9.php:24\n\
    Stack trace:\n#0 /tmp/tmpku7jtna9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpku7jtna9.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewjqxp40.php:21\n\
    Stack trace:\n#0 /tmp/tmpewjqxp40.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpewjqxp40.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($current_max === null || $number > $current_max) {\n        \
    \    $current_max = $number;\n            $result[] = $current_max;\n        }\
    \ else {\n            $result[] = $current_max;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldgc1l4.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldgc1l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsldgc1l4.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        $rolling_max = $rolling_max > $number ? $rolling_max : $number;\n\
    \        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldgc1l4.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldgc1l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsldgc1l4.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling_max = 0;\n    $max_rolling_max_index = 0;\n    $max_rolling_max_value\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_rolling_max_value) {\n            $max_rolling_max_value = $numbers[$i];\n\
    \            $max_rolling_max_index = $i;\n        }\n    }\n    return array($max_rolling_max_index,\
    \ $max_rolling_max_value);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhppx_de.php:22\n\
    Stack trace:\n#0 /tmp/tmpwhppx_de.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwhppx_de.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    foreach ($numbers as $number) {\n   \
    \     if ($number > $result[$i]) {\n            $result[$i] = $number;\n     \
    \   }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikka47ks.php:23\n\
    Stack trace:\n#0 /tmp/tmpikka47ks.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpikka47ks.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk4tqtng.php:21\n\
    Stack trace:\n#0 /tmp/tmpmk4tqtng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk4tqtng.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldgc1l4.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldgc1l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsldgc1l4.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = 0;\n        }\n        if ($number == $max_element)\
    \ {\n            $max_index++;\n        }\n    }\n    return $max_element;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c41fhmq.php:24\n\
    Stack trace:\n#0 /tmp/tmp1c41fhmq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1c41fhmq.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($max_element == null || $value > $max_element) {\n\
    \            $max_element = $value;\n            $max_index = $index;\n      \
    \  }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n   \
    \ return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pr8ltlq.php:21\n\
    Stack trace:\n#0 /tmp/tmp2pr8ltlq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2pr8ltlq.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max_element_value) {\n            $max_element_value =\
    \ $number;\n            $max_element_index = $max_element_count;\n        }\n\
    \        $max_element_count++;\n    }\n    return array($max_element_value, $max_element_index,\
    \ $max_element_count);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpim90zwm5.php:24\n\
    Stack trace:\n#0 /tmp/tmpim90zwm5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpim90zwm5.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $value;\n            $max_element_count = 1;\n\
    \        } else {\n            $max_element_count++;\n        }\n    }\n    return\
    \ array($max_element, $max_element_index, $max_element_value, $max_element_count);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps14a4mn8.php:27\n\
    Stack trace:\n#0 /tmp/tmps14a4mn8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps14a4mn8.php\
    \ on line 27\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxyg6mh_i.php:22\n\
    Stack trace:\n#0 /tmp/tmpxyg6mh_i.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxyg6mh_i.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_element_index = $number;\n        }\n    }\n  \
    \  return $max_element_index;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_o7lmy86.php:21\n\
    Stack trace:\n#0 /tmp/tmp_o7lmy86.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_o7lmy86.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element_value == null || $value > $max_element_value) {\n\
    \            $max_element_value = $value;\n            $max_element_count = $index;\n\
    \            $max_element_index = $index;\n        }\n    }\n    return array($max_element_value,\
    \ $max_element_index, $max_element_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp_3t1oq.php:24\n\
    Stack trace:\n#0 /tmp/tmprp_3t1oq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprp_3t1oq.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = 0;\n    foreach ($numbers as $index =>\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \         $max_index = $index;\n        }\n    }\n    return $max_index;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp198hfkne.php:21\n\
    Stack trace:\n#0 /tmp/tmp198hfkne.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp198hfkne.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element_value == null || $value > $max_element_value) {\n\
    \            $max_element_value = $value;\n            $max_element_index = $index;\n\
    \        }\n        if ($max_element_count < $index) {\n            $max_element_count\
    \ = $index;\n        }\n    }\n    return array($max_element_index, $max_element_value,\
    \ $max_element_count);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mwpf43y.php:26\n\
    Stack trace:\n#0 /tmp/tmp8mwpf43y.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8mwpf43y.php\
    \ on line 26\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk4tqtng.php:21\n\
    Stack trace:\n#0 /tmp/tmpmk4tqtng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk4tqtng.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_element) {\n   \
    \         $max_element = $numbers[$i];\n            $max_index = $i;\n       \
    \ }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7onub04g.php:21\n\
    Stack trace:\n#0 /tmp/tmp7onub04g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7onub04g.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_index = 0;\n    $max_element_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max_element == null || $value\
    \ > $max_element_value) {\n            $max_element = $value;\n            $max_element_index\
    \ = $index;\n            $max_element_value = $value;\n        }\n    }\n    return\
    \ array($max_element, $max_element_index, $max_element_value);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpep52vy6b.php:25\n\
    Stack trace:\n#0 /tmp/tmpep52vy6b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpep52vy6b.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_index\
    \ = 0;\n    $max_element_value = null;\n    $max_element_value = $numbers[0];\n\
    \    foreach ($numbers as $key => $value) {\n        if ($value > $max_element_value)\
    \ {\n            $max_element_value = $value;\n            $max_element_index\
    \ = $key;\n        }\n    }\n    return $max_element_value;\n}\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr534pwyq.php:23\n\
    Stack trace:\n#0 /tmp/tmpr534pwyq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr534pwyq.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldgc1l4.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldgc1l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsldgc1l4.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n       \
    \ if ($numbers[$i] > $max_value) {\n            $max_value = $numbers[$i];\n \
    \           $max_index = $i;\n        }\n    }\n    return $max_value;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbie_5an3.php:23\n\
    Stack trace:\n#0 /tmp/tmpbie_5an3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbie_5an3.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_elements = array();\n    $max_elements_index = 0;\n    $max_elements_value\
    \ = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ > $max_elements_value) {\n            $max_elements[$max_elements_index] = $numbers[$i];\n\
    \            $max_elements_index++;\n        }\n    }\n    return $max_elements;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9o4piok.php:23\n\
    Stack trace:\n#0 /tmp/tmpq9o4piok.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpq9o4piok.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element_value == null || $value > $max_element_value) {\n\
    \            $max_element_value = $value;\n            $max_element_index = $index;\n\
    \        }\n        $max_element_count++;\n    }\n\n    if ($max_element_count\
    \ > 0) {\n        $max_element = array(\n            'index' => $max_element_index,\n\
    \            'value' => $max_element_value,\n            'count' => $max_element_count\n\
    \        );\n    }\n\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpze4qfdyn.php:34\n\
    Stack trace:\n#0 /tmp/tmpze4qfdyn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpze4qfdyn.php\
    \ on line 34\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v043euw.php:21\n\
    Stack trace:\n#0 /tmp/tmp1v043euw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1v043euw.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -PHP_INT_MAX;\n    $max_count = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_count\
    \ = 1;\n        } elseif ($number == $max) {\n            $max_count++;\n    \
    \    }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_7pr_bw.php:23\n\
    Stack trace:\n#0 /tmp/tmpo_7pr_bw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo_7pr_bw.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -PHP_INT_MAX;\n    $max_pos = -1;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_pos\
    \ = 0;\n        } else if ($number == $max) {\n            $max_pos++;\n     \
    \   }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25i6wtne.php:23\n\
    Stack trace:\n#0 /tmp/tmp25i6wtne.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp25i6wtne.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10im5l65.php:21\n\
    Stack trace:\n#0 /tmp/tmp10im5l65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10im5l65.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewjqxp40.php:21\n\
    Stack trace:\n#0 /tmp/tmpewjqxp40.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpewjqxp40.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26b0um0o.php:19\n\
    Stack trace:\n#0 /tmp/tmp26b0um0o.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp26b0um0o.php\
    \ on line 19\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $element) {\n        if ($element > $max_element) {\n         \
    \   $max_element = $element;\n            $max_index = $index;\n        }\n  \
    \  }\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6vkceud.php:21\n\
    Stack trace:\n#0 /tmp/tmpb6vkceud.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb6vkceud.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0grd90l.php:23\n\
    Stack trace:\n#0 /tmp/tmp_0grd90l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_0grd90l.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element_value == null || $value > $max_element_value) {\n\
    \            $max_element_value = $value;\n            $max_element_index = $index;\n\
    \        }\n        if ($max_element_count < $index) {\n            $max_element_count\
    \ = $index;\n        }\n    }\n    return array($max_element_index, $max_element_value,\
    \ $max_element_count);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mwpf43y.php:26\n\
    Stack trace:\n#0 /tmp/tmp8mwpf43y.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8mwpf43y.php\
    \ on line 26\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_count\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $max_element_count;\n\
    \        }\n        $max_element_count++;\n    }\n    return array($max_element,\
    \ $max_element_index, $max_element_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8gddpqpb.php:23\n\
    Stack trace:\n#0 /tmp/tmp8gddpqpb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8gddpqpb.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $max_value < $value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_j0ywx8.php:23\n\
    Stack trace:\n#0 /tmp/tmp6_j0ywx8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6_j0ywx8.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $number;\n\
    \        }\n    }\n    return $max_element_index;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqz_guer.php:22\n\
    Stack trace:\n#0 /tmp/tmpzqz_guer.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzqz_guer.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_element_index = 0;\n        }\n        if ($number\
    \ == $max_element) {\n            $max_element_index++;\n        }\n    }\n  \
    \  return $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9mbd_55.php:24\n\
    Stack trace:\n#0 /tmp/tmpq9mbd_55.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq9mbd_55.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value === null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgazfsh_k.php:22\n\
    Stack trace:\n#0 /tmp/tmpgazfsh_k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgazfsh_k.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsldgc1l4.php:22\n\
    Stack trace:\n#0 /tmp/tmpsldgc1l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsldgc1l4.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_element = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2e9_lj_.php:23\n\
    Stack trace:\n#0 /tmp/tmpk2e9_lj_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk2e9_lj_.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5so8c63v.php on line 91

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10im5l65.php:21\n\
    Stack trace:\n#0 /tmp/tmp10im5l65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10im5l65.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null || $value > $max)\
    \ {\n            $max = $value;\n            $max_index = $index;\n          \
    \  $max_value = $value;\n        } else {\n            $max = $max * $max_value;\n\
    \        }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt4amvuo.php:25\n\
    Stack trace:\n#0 /tmp/tmprt4amvuo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprt4amvuo.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $number) {\n        if ($number > $max_element_value)\
    \ {\n            $max_element_value = $number;\n            $max_element_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return array($max_element_value,\
    \ $max_element_index);\n}\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxt2qvmcx.php:22\n\
    Stack trace:\n#0 /tmp/tmpxt2qvmcx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxt2qvmcx.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_elements = array();\n    $max_elements_index = -1;\n    $current_index\
    \ = -1;\n    $current_value = -1;\n    $current_max_value = -1;\n    $current_max_index\
    \ = -1;\n    $current_max_index = -1;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($current_index != -1) {\n            if ($current_index != $index)\
    \ {\n                $max_elements[$current_max_index] = $current_max_value;\n\
    \                $current_max_value = $current_max_index;\n                $current_max_index\
    \ = $current_index;\n            }\n        }\n        $current_index = $index;\n\
    \        $current_value = $value;\n        if ($current_max_value == -1) {\n \
    \           $current_max_value = $current_value;\n            $current_max_index\
    \ = $index;\n        }\n        if ($current_value == $current_max_value) {\n\
    \            $current_max_index = $index;\n        }\n    }\n    $max_elements[$current_max_index]\
    \ = $current_max_value;\n    return $max_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkml55bqw.php:39\n\
    Stack trace:\n#0 /tmp/tmpkml55bqw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkml55bqw.php\
    \ on line 39\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdn9w0cwx.php:21\n\
    Stack trace:\n#0 /tmp/tmpdn9w0cwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdn9w0cwx.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk4tqtng.php:21\n\
    Stack trace:\n#0 /tmp/tmpmk4tqtng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk4tqtng.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0grd90l.php:23\n\
    Stack trace:\n#0 /tmp/tmp_0grd90l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_0grd90l.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($value > $max_element) {\n            $max_element\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zlav8n9.php:21\n\
    Stack trace:\n#0 /tmp/tmp9zlav8n9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9zlav8n9.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($max_element == null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_index = $index;\n \
    \       }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbb_kj_sx.php:21\n\
    Stack trace:\n#0 /tmp/tmpbb_kj_sx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbb_kj_sx.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl58ot48l.php:23\n\
    Stack trace:\n#0 /tmp/tmpl58ot48l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl58ot48l.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk4tqtng.php:21\n\
    Stack trace:\n#0 /tmp/tmpmk4tqtng.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmk4tqtng.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = -INF;\n    $max_index = 0;\n    foreach ($numbers as $index =>\
    \ $number) {\n        if ($number > $max) {\n            $max = $number;\n   \
    \         $max_index = $index;\n        }\n    }\n    return $max_index;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp198hfkne.php:21\n\
    Stack trace:\n#0 /tmp/tmp198hfkne.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp198hfkne.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $max_value;\n     \
    \   }\n    }\n    $max_elements[] = $max_value;\n    $max_indexs[] = $max_index;\n\
    \    return $max_elements;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputhphvt0.php:24\n\
    Stack trace:\n#0 /tmp/tmputhphvt0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmputhphvt0.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp892tfqzt.php:21\n\
    Stack trace:\n#0 /tmp/tmp892tfqzt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp892tfqzt.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_index2 = 0;\n    $max_index3\
    \ = 0;\n    $max_index4 = 0;\n    $max_index5 = 0;\n    $max_index6 = 0;\n   \
    \ $max_index7 = 0;\n    $max_index8 = 0;\n    $max_index9 = 0;\n    $max_index10\
    \ = 0;\n    $max_index11 = 0;\n    $max_index12 = 0;\n    $max_index13 = 0;\n\
    \    $max_index14 = 0;\n    $max_index15 = 0;\n    $max_index16 = 0;\n    $max_index17\
    \ = 0;\n    $max_index18 = 0;\n    $max_index19 = 0;\n    $max_index20 = 0;\n\
    \    $max_index21 = 0;\n    $max_index22 = 0;\n    $max_index23 = 0;\n    $max_index24\
    \ = 0;\n    $max_index25 = 0;\n    $max_index26 = 0;\n    $max_index27 = 0;\n\
    \    $max_index28 = 0;\n    $max_index29 = 0;\n    $max_index30 = 0;\n    $max_index31\
    \ = 0;\n    $max_index32 = 0;\n    $max_index33 = 0;\n    $max_index34 = 0;\n\
    \    $max_index35 = 0;\n    $max_index36 = 0;\n    $max_index37 = 0;\n    $max_index38\
    \ = 0;\n    $max_index39 = 0;\n    $max_index40 = 0;\n    $max_index41 = 0;\n\
    \    $max_index42 = 0;\n    $max_index43 = 0;\n    $max_index44 = 0;\n    $max_index45\
    \ = 0;\n    $max_index46 = 0;\n    $max_index47 = 0;\n    $max_index48 = 0;\n\
    \    $max_index49 = 0;\n    $max_index50 = 0;\n    $max_index51 = 0;\n    $max_index52\
    \ = 0;\n    $max_index53 = 0;\n    $max_index54 = 0;\n    $max_index55 = 0;\n\
    \    $max_index56 = 0;\n    $max_index57 = 0;\n    $max_index58 = 0;\n    $max_index59\
    \ = 0;\n    $max_index60 = 0;\n    $max_index61 = 0;\n    $max_index62 = 0;\n\
    \    $max_index63 = 0;\n    $max_index64 = 0;\n    $max_index65 = 0;\n    $max_index66\
    \ = 0;\n    $max_index67 = 0;\n    $max_index68 = 0;\n    $max_index69 = 0;\n\
    \    $max_index70 = 0;\n    $max_index71 = 0;\n    $max_index72 = 0;\n    $max_index73\
    \ = 0;\n    $max_index74 = 0;\n    $max_index75 = 0;\n    $max_index76 = 0;\n\
    \    $max_index77 = 0;\n    $max_index78 = 0;\n    $max_index79 = 0;\n    $max_index80\
    \ = 0;\n    $max_index81 = 0;\n    $max_index82 = 0;\n    $max_index83 = 0;\n\
    \    $max_index84 = 0;\n    $max_index85 = 0;\n    $max_\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpft43cf85.php on line 92

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp892tfqzt.php:21\n\
    Stack trace:\n#0 /tmp/tmp892tfqzt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp892tfqzt.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index2\
    \ = 0;\n    $max_element_index3 = 0;\n    $max_element_index4 = 0;\n    $max_element_index5\
    \ = 0;\n    $max_element_index6 = 0;\n    $max_element_index7 = 0;\n    $max_element_index8\
    \ = 0;\n    $max_element_index9 = 0;\n    $max_element_index10 = 0;\n    $max_element_index11\
    \ = 0;\n    $max_element_index12 = 0;\n    $max_element_index13 = 0;\n    $max_element_index14\
    \ = 0;\n    $max_element_index15 = 0;\n    $max_element_index16 = 0;\n    $max_element_index17\
    \ = 0;\n    $max_element_index18 = 0;\n    $max_element_index19 = 0;\n    $max_element_index20\
    \ = 0;\n    $max_element_index21 = 0;\n    $max_element_index22 = 0;\n    $max_element_index23\
    \ = 0;\n    $max_element_index24 = 0;\n    $max_element_index25 = 0;\n    $max_element_index26\
    \ = 0;\n    $max_element_index27 = 0;\n    $max_element_index28 = 0;\n    $max_element_index29\
    \ = 0;\n    $max_element_index30 = 0;\n    $max_element_index31 = 0;\n    $max_element_index32\
    \ = 0;\n    $max_element_index33 = 0;\n    $max_element_index34 = 0;\n    $max_element_index35\
    \ = 0;\n    $max_element_index36 = 0;\n    $max_element_index37 = 0;\n    $max_element_index38\
    \ = 0;\n    $max_element_index39 = 0;\n    $max_element_index40 = 0;\n    $max_element_index41\
    \ = 0;\n    $max_element_index42 = 0;\n    $max_element_index43 = 0;\n    $max_element_index44\
    \ = 0;\n    $max_element_index45 = 0;\n    $max_element_index46 = 0;\n    $max_element_index47\
    \ = 0;\n    $max_element_index48 = 0;\n    $max_element_index49 = 0;\n    $max_element_index50\
    \ = 0;\n    $max_element_index51 = 0;\n    $max_element_index52 = 0;\n    $max_element_index53\
    \ = 0;\n    $max_element_index54 = 0;\n    $max_element_index55 = 0;\n    $max_element_index56\
    \ = 0;\n    $max_element_index57 = 0;\n    $max_element_index58 = 0;\n    $max_element_index59\
    \ = 0;\n    $max_element_index60 = 0;\n    $max_element_index61 = 0;\n    $max_element_index62\
    \ = 0;\n    $max_element_index63 = 0;\n    $max_element_index64 = 0;\n    $max_element_index65\
    \ = 0;\n    $max_element_index66 = 0;\n    $max_element_index67 = 0;\n    $max_element_index68\
    \ = 0;\n    $max_element_index69 = 0;\n    $max_element_index70 = 0;\n    $max_element_index71\
    \ = 0;\n    $max_element_index72 = 0;\n    $max_element_index73 = 0;\n    $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpixxe3swx.php on line 80

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[0] = $numbers[0];\n    $max[1] = $numbers[1];\n\
    \    $max[2] = $numbers[2];\n    $max[3] = $numbers[3];\n    $max[4] = $numbers[4];\n\
    \    $max[5] = $numbers[5];\n    $max[6] = $numbers[6];\n    $max[7] = $numbers[7];\n\
    \    $max[8] = $numbers[8];\n    $max[9] = $numbers[9];\n    $max[10] = $numbers[10];\n\
    \    $max[11] = $numbers[11];\n    $max[12] = $numbers[12];\n    $max[13] = $numbers[13];\n\
    \    $max[14] = $numbers[14];\n    $max[15] = $numbers[15];\n    $max[16] = $numbers[16];\n\
    \    $max[17] = $numbers[17];\n    $max[18] = $numbers[18];\n    $max[19] = $numbers[19];\n\
    \    $max[20] = $numbers[20];\n    $max[21] = $numbers[21];\n    $max[22] = $numbers[22];\n\
    \    $max[23] = $numbers[23];\n    $max[24] = $numbers[24];\n    $max[25] = $numbers[25];\n\
    \    $max[26] = $numbers[26];\n    $max[27] = $numbers[27];\n    $max[28] = $numbers[28];\n\
    \    $max[29] = $numbers[29];\n    $max[30] = $numbers[30];\n    $max[31] = $numbers[31];\n\
    \    $max[32] = $numbers[32];\n    $max[33] = $numbers[33];\n    $max[34] = $numbers[34];\n\
    \    $max[35] = $numbers[35];\n    $max[36] = $numbers[36];\n    $max[37] = $numbers[37];\n\
    \    $max[38] = $numbers[38];\n    $max[39] = $numbers[39];\n    $max[40] = $numbers[40];\n\
    \    $max[41] = $numbers[41];\n    $max[42] = $numbers[42];\n    $max[43] = $numbers[43];\n\
    \    $max[44] = $numbers[44];\n    $max[45] = $numbers[45];\n    $max[46] = $numbers[46];\n\
    \    $max[47] = $numbers[47];\n    $max[48] = \nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpnlaa98b2.php on line 55

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10im5l65.php:21\n\
    Stack trace:\n#0 /tmp/tmp10im5l65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10im5l65.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dbbjxiy.php:23\n\
    Stack trace:\n#0 /tmp/tmp4dbbjxiy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4dbbjxiy.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_index\
    \ = 0;\n    foreach ($numbers as $index => $number) {\n        if ($number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $index;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw__25c9h.php:22\n\
    Stack trace:\n#0 /tmp/tmpw__25c9h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw__25c9h.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_element = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45wscx1v.php:23\n\
    Stack trace:\n#0 /tmp/tmp45wscx1v.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp45wscx1v.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10im5l65.php:21\n\
    Stack trace:\n#0 /tmp/tmp10im5l65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10im5l65.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $value;\n            $max_element_count = 1;\n\
    \        } else {\n            $max_element_count++;\n        }\n    }\n    return\
    \ array($max_element, $max_element_index, $max_element_value, $max_element_count);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimip_dou.php:27\n\
    Stack trace:\n#0 /tmp/tmpimip_dou.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpimip_dou.php\
    \ on line 27\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_number = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbffldhf.php:22\n\
    Stack trace:\n#0 /tmp/tmptbffldhf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptbffldhf.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_element_index = $i;\n\
    \        }\n        $i++;\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4b2bd78v.php:23\n\
    Stack trace:\n#0 /tmp/tmp4b2bd78v.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4b2bd78v.php\
    \ on line 23\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_element_index = $i;\n        }\n        $i++;\n\
    \    }\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploa1rnfo.php:22\n\
    Stack trace:\n#0 /tmp/tmploa1rnfo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmploa1rnfo.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ === null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gorg4b9.php:23\n\
    Stack trace:\n#0 /tmp/tmp2gorg4b9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2gorg4b9.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = 0;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ === null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return $max_element;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51vnz7vo.php:23\n\
    Stack trace:\n#0 /tmp/tmp51vnz7vo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp51vnz7vo.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $result[$index] = $max;\n        }\n        $index++;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk452ty7.php:25\n\
    Stack trace:\n#0 /tmp/tmpdk452ty7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdk452ty7.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7psy28r4.php:21\n\
    Stack trace:\n#0 /tmp/tmp7psy28r4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7psy28r4.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    foreach ($numbers as $number) {\n\
    \        $result[$index] = $number;\n        $index++;\n    }\n    $index = 0;\n\
    \    $max_index = 0;\n    $max_value = $numbers[0];\n    foreach ($numbers as\
    \ $number) {\n        if ($number > $max_value) {\n            $max_value = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    $result[$max_index]\
    \ = $max_value;\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvepql94.php:30\n\
    Stack trace:\n#0 /tmp/tmpfvepql94.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfvepql94.php\
    \ on line 30\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewjqxp40.php:21\n\
    Stack trace:\n#0 /tmp/tmpewjqxp40.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpewjqxp40.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0grd90l.php:23\n\
    Stack trace:\n#0 /tmp/tmp_0grd90l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_0grd90l.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_elements = array();\n    $max_elements_index = 0;\n    $max_elements_value\
    \ = $numbers[0];\n    $max_elements_index++;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_elements_value) {\n            $max_elements[$max_elements_index]\
    \ = $max_elements_value;\n            $max_elements_value = $number;\n       \
    \     $max_elements_index++;\n        }\n    }\n    $max_elements[$max_elements_index]\
    \ = $max_elements_value;\n    return $max_elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz34nov6z.php:25\n\
    Stack trace:\n#0 /tmp/tmpz34nov6z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz34nov6z.php\
    \ on line 25\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = 0;\n    foreach ($numbers as $key => $value)\
    \ {\n        if ($max_element_value == null || $max_element_value > $value) {\n\
    \            $max_element_value = $value;\n            $max_element_index = $key;\n\
    \        }\n        if ($max_element_count == 0 || $max_element_count > $key -\
    \ $max_element_index) {\n            $max_element_count = $key - $max_element_index;\n\
    \            $max_element = $max_element_value;\n        }\n    }\n    return\
    \ array($max_element, $max_element_index, $max_element_count);\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| c |>\nThis code doesn't work. Try it on [this array](http://sandbox.onlinephpfunctions.com/code/9f6bddb0d577a70cff7a99a57b54d69f18b88c68)\n\
    <|/ c |>\n<| c |>\nI tested it on that array and it works. What is the problem?\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it on [this array](http://sandbox.onlinephpfunctions.com/code/9f6bddb0d577a70cff7a99a57b54d69f18b88c68)\n\
    <|/ c |>\n<| c |>\nI tested it on that array and it works. What is the problem?\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it on [this array](http://sandbox.onlinephpfunctions.com/code/9f6bddb0d577a70cff7a99a57b54d69f18b88c68)\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,9\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7mp4q49j.php on line 21

    '
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling_max = 0;\n    $max_rolling_max_index = 0;\n    $max_rolling_max_value\
    \ = 0;\n    foreach ($numbers as $key => $value) {\n        if ($value > $max_rolling_max_value)\
    \ {\n            $max_rolling_max_value = $value;\n            $max_rolling_max_index\
    \ = $key;\n        }\n    }\n    return $max_rolling_max_value;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0r_cakf.php:22\n\
    Stack trace:\n#0 /tmp/tmpv0r_cakf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpv0r_cakf.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = -INF;\n    $max_index = 0;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($value > $max_value) {\n     \
    \       $max_value = $value;\n            $max_index = $index;\n        }\n  \
    \  }\n    $result[] = $max_value;\n    $result[] = $max_index;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86xi25o_.php:24\n\
    Stack trace:\n#0 /tmp/tmp86xi25o_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp86xi25o_.php\
    \ on line 24\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_index = 0;\n    foreach ($numbers as $index => $value)\
    \ {\n        if ($max_element == null || $value > $max_element_value) {\n    \
    \        $max_element = $value;\n            $max_element_index = $index;\n  \
    \          $max_element_value = $value;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgantt6xk.php:24\n\
    Stack trace:\n#0 /tmp/tmpgantt6xk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgantt6xk.php\
    \ on line 24\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling_max = 0;\n    $max_rolling_max_index = 0;\n    foreach ($numbers\
    \ as $key => $value) {\n        if ($max_rolling_max < $value) {\n           \
    \ $max_rolling_max = $value;\n            $max_rolling_max_index = $key;\n   \
    \     }\n    }\n    return $max_rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafwt8yk1.php:21\n\
    Stack trace:\n#0 /tmp/tmpafwt8yk1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpafwt8yk1.php\
    \ on line 21\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    foreach ($numbers as $index => $value) {\n        if ($max_element\
    \ == null || $value > $max_element_value) {\n            $max_element = $value;\n\
    \            $max_element_index = $index;\n            $max_element_value = $value;\n\
    \        }\n    }\n    return array($max_element, $max_element_index, $max_element_value);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd7gjp9a.php:23\n\
    Stack trace:\n#0 /tmp/tmpcd7gjp9a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcd7gjp9a.php\
    \ on line 23\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_element_index = null;\n    $max_element_value\
    \ = null;\n    $max_element_count = null;\n    foreach ($numbers as $index =>\
    \ $value) {\n        if ($max_element == null || $max_element_value < $value)\
    \ {\n            $max_element = $value;\n            $max_element_index = $index;\n\
    \            $max_element_value = $value;\n            $max_element_count = 1;\n\
    \        } else {\n            $max_element_count++;\n        }\n    }\n    return\
    \ array($max_element, $max_element_index, $max_element_value, $max_element_count);\n\
    }\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_jy_qmn.php:26\n\
    Stack trace:\n#0 /tmp/tmpb_jy_qmn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb_jy_qmn.php\
    \ on line 26\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_element_index = $i;\n        }\n        $i++;\n\
    \    }\n    return $max_element;\n}\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeblnofl_.php:21\n\
    Stack trace:\n#0 /tmp/tmpeblnofl_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeblnofl_.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    foreach ($numbers as\
    \ $index => $number) {\n        if ($max_element == null || $number > $max_element)\
    \ {\n            $max_element = $number;\n            $max_index = $index;\n \
    \       }\n    }\n    return $max_index;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbb_kj_sx.php:21\n\
    Stack trace:\n#0 /tmp/tmpbb_kj_sx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbb_kj_sx.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7psy28r4.php:21\n\
    Stack trace:\n#0 /tmp/tmp7psy28r4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7psy28r4.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $value) {\n        if ($value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $i;\n        }\n        $i++;\n    }\n    return $max_value;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7hmk8j7.php:22\n\
    Stack trace:\n#0 /tmp/tmpu7hmk8j7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu7hmk8j7.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_g0e7cy.php:22\n\
    Stack trace:\n#0 /tmp/tmpn_g0e7cy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn_g0e7cy.php\
    \ on line 22\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_index = 0;\n    $max_element_index\
    \ = 0;\n    $max_element_index = 0;\n    $max_element_\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpha7li49z.php on line 91

    '
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqdhucgc.php:26\n\
    Stack trace:\n#0 /tmp/tmpaqdhucgc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpaqdhucgc.php\
    \ on line 26\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_element) {\n            $max_element = $number;\n\
    \            $max_index = $number;\n        }\n    }\n    return $max_index;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10im5l65.php:21\n\
    Stack trace:\n#0 /tmp/tmp10im5l65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp10im5l65.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnl_4hyt.php:21\n\
    Stack trace:\n#0 /tmp/tmpvnl_4hyt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvnl_4hyt.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling_number\
    \ = $number;\n            $max_rolling = $number;\n        }\n    }\n    return\
    \ $max_rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17i2e045.php:21\n\
    Stack trace:\n#0 /tmp/tmp17i2e045.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp17i2e045.php\
    \ on line 21\n"
  timestamp: 1659730680
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_elements = array();\n    $max_elements[] = $numbers[0];\n    $max_elements[]\
    \ = $numbers[1];\n    $max_elements[] = $numbers[2];\n    $max_elements[] = $numbers[3];\n\
    \    $max_elements[] = $numbers[4];\n    $max_elements[] = $numbers[5];\n    $max_elements[]\
    \ = $numbers[6];\n    $max_elements[] = $numbers[7];\n    $max_elements[] = $numbers[8];\n\
    \    $max_elements[] = $numbers[9];\n    $max_elements[] = $numbers[10];\n   \
    \ $max_elements[] = $numbers[11];\n    $max_elements[] = $numbers[12];\n    $max_elements[]\
    \ = $numbers[13];\n    $max_elements[] = $numbers[14];\n    $max_elements[] =\
    \ $numbers[15];\n    $max_elements[] = $numbers[16];\n    $max_elements[] = $numbers[17];\n\
    \    $max_elements[] = $numbers[18];\n    $max_elements[] = $numbers[19];\n  \
    \  $max_elements[] = $numbers[20];\n    $max_elements[] = $numbers[21];\n    $max_elements[]\
    \ = $numbers[22];\n    $max_elements[] = $numbers[23];\n    $max_elements[] =\
    \ $numbers[24];\n    $max_elements[] = $numbers[25];\n    $max_elements[] = $numbers[26];\n\
    \    $max_elements[] = $numbers[27];\n    $max_elements[] = $numbers[28];\n  \
    \  $max_elements[] = $numbers[29];\n    $max_elements[] = $numbers[30];\n    $max_elements[]\
    \ = $numbers[31];\n    $max_elements[] = $numbers[32];\n    $max_elements[] =\
    \ $numbers[33];\n    $max_elements[] = $numbers[34];\n    $max_elements[] = $numbers[35];\n\
    \    $max_elements[] = $numbers[36];\n    $max_elements[] = $numbers[37];\n  \
    \  $max_elements[] = $numbers[38];\n    $max_elements[] = $numbers[39];\n    $max_elements[]\
    \ = $numbers[40];\n    $max_elements[] = $numbers[41];\n    $max_elements[] =\
    \ $numbers[42];\n    $max_elements[] = $numbers[43];\n    $max_elements[] = $numbers[44];\n\
    \    $max_elements[] = $numbers[45];\n    $max_elements[\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpwhmqaqti.php on line 53

    '
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_element = 0;\n    $max_index = 0;\n    $max_value = $numbers[0];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxyg6mh_i.php:22\n\
    Stack trace:\n#0 /tmp/tmpxyg6mh_i.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxyg6mh_i.php\
    \ on line 22\n"
  timestamp: 1659730680

name: HumanEval_145_order_by_points
language: php
prompt: "<?php\n// Write a function which sorts the given list of integers\n// in\
  \ ascending order according to the sum of their digits.\n// Note: if there are several\
  \ items with similar sum of their digits,\n// order them based on their index in\
  \ original list.\n// For example:\nfunction order_by_points($nums) {\n"
tests: "function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
  \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3,\
  \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !==\
  \ array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10,\
  \ 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6))\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sums = array_sum($nums);\n    arsort($nums);\n    foreach ($nums\
    \ as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n    return\
    \ $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  return $nums;\n\
    }", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i\
    \ => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach\
    \ ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n\
    \    return $nums;\n}", "    $sums = array_sum($nums);\n    asort($nums);\n  \
    \  foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n \
    \   }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $nums = array_map(function($num)\
    \ use ($sums) {\n        return $sums - $num;\n    }, $nums);\n    asort($nums);\n\
    \    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted = [];\n\
    \    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n   \
    \ asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i] - $num;\n    }\n    return $sorted;\n}\n$nums = [1, 5, 3, 6, 2,\
    \ 8, 4, 7, 9, 10, 11, 12];\n$nums = order_by_points($nums);\nprint_r($nums);",
  "    $sums = array_sum($nums);\n    $order = array_keys($nums, $sums);\n    return\
    \ array_intersect_key($nums, $order);\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}", "    $sorted = array();\n    $sums\
    \ = array();\n    foreach ($nums as $num) {\n        $sums[$num] = array_sum(str_split($num));\n\
    \    }\n    arsort($sums);\n    foreach ($sums as $num => $sum) {\n        $sorted[]\
    \ = $nums[$sum];\n    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    return array_intersect_key($nums,\
    \ $order);\n}\n", "    $sums = array_sum($nums);\n    usort($nums, function($a,\
    \ $b) use ($sums) {\n        return $sums - $sums[$a] - $sums[$b];\n    });\n\
    \    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($sums);\n  return\
    \ array_map(function($num) use ($sums) {\n    return $nums[$num];\n  }, $sums);\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    arsort($nums);\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    return array_intersect_key($nums, array_flip($order));\n}", " \
    \   $sorted = array();\n    foreach ($nums as $i => $num) {\n        $sum = 0;\n\
    \        for ($j = 0; $j < strlen($num); $j++) {\n            $sum += $num[$j];\n\
    \        }\n        $sorted[$i] = $sum;\n    }\n    asort($sorted);\n    return\
    \ $sorted;\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    array_multisort($order, $nums);\n    return $nums;\n}\n", "  $sums\
    \ = array_sum($nums);\n  arsort($nums);\n  foreach ($nums as $i => $num) {\n \
    \   $nums[$i] = $nums[$i] - $sums[$i];\n  }\n  return $nums;\n}\n", "    $sums\
    \ = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num) {\n\
    \        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n}\n", " \
    \ $sums = array_sum($nums);\n  arsort($sums);\n  return array_map(function($n)\
    \ use ($sums) {\n    return $sums[$n];\n  }, $nums);\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    $sorted = array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i]\
    \ = $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n\
    \        $sorted[$i] = $nums[$i];\n    }\n    return $sorted;\n}\n", "    $sorted\
    \ = array();\n    $sums = array();\n    foreach ($nums as $num) {\n        $sums[$num]\
    \ = 0;\n    }\n    foreach ($sums as $num => $sum) {\n        $sorted[] = $num;\n\
    \    }\n    foreach ($sums as $num => $sum) {\n        $sorted[$num] = $sum;\n\
    \    }\n    asort($sorted);\n    return $sorted;\n}", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}", "    $sorted = [];\n    foreach ($nums\
    \ as $i => $num) {\n        $sum = 0;\n        for ($j = 0; $j < strlen($num);\
    \ $j++) {\n            $sum += $num[$j];\n        }\n        $sorted[$i] = $sum;\n\
    \    }\n    asort($sorted);\n    return $sorted;\n}\n\n$nums = [\n    1 => [\n\
    \        'name' => 'one',\n        'points' => [\n            0 => 1,\n      \
    \      1 => 2,\n            2 => 3,\n            3 => 4,\n            4 => 5,\n\
    \            5 => 6,\n            6 => 7,\n            7 => 8,\n            8\
    \ => 9,\n            9 => 10,\n            10 => 11,\n            11 => 12,\n\
    \            12 => 13,\n            13 => 14,\n            14 => 15,\n       \
    \     15 => 16,\n            16 => 17,\n            17 => 18,\n            18\
    \ => 19,\n            19 => 20,\n            20 => 21,\n            21 => 22,\n\
    \            22 => 23,\n            23 => 24,\n            24 => 25,\n       \
    \     25 => 26,\n            26 => 27,\n            27 => 28,\n            28\
    \ => 29,\n            29 => 30,\n            30 => 31,\n            31 => 32,\n\
    \            32 => 33,\n            33 => 34,\n            34 => 35,\n       \
    \     35 => 36,\n            36 => 37,\n            37 => 38,\n            38\
    \ => 39,\n            39 => 40,\n            40 => 41,\n            41 => 42,\n\
    \            42 => 43,\n            43 => 44,\n            44 => 45,\n       \
    \     45 => 46,\n            46 => 47,\n            47 => 48,\n            48\
    \ => 49,\n            49 => 50,\n            50 => 51,\n            51 => 52,\n\
    \            52 => 53,\n            53 => 54,\n            54 => 55,\n       \
    \     55 => 56,\n            56 => 57,\n            57 => 58,\n            58\
    \ => 59,\n            59 => 60,\n            60 => 61,\n            61 => 62,\n\
    \            62 => 63,\n            63 => 64,\n            64 => 65,\n       \
    \     65 => 66,\n            66 => 67,\n            67 => 68,\n            68\
    \ => 69,\n            69 => 70,\n            70 => 71,\n            71 => 72,\n\
    \            72 ", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach\
    \ ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n   \
    \ return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n   \
    \ foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}", "    $sorted = array();\n    $sums = array();\n\
    \    foreach ($nums as $num) {\n        $sums[$num] = 0;\n    }\n    foreach ($sums\
    \ as $num => $sum) {\n        $sorted[] = $num;\n    }\n    foreach ($nums as\
    \ $num) {\n        $sums[$num] += $num;\n    }\n    foreach ($sums as $num =>\
    \ $sum) {\n        $sorted[] = $num;\n    }\n    return $sorted;\n}", "    $sums\
    \ = array_sum($nums);\n    $sorted = array();\n    foreach ($nums as $i => $num)\
    \ {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n    $sorted = array_merge($sorted,\
    \ array_slice($sorted, 0, array_search($sums, $sorted)));\n    return $sorted;\n\
    }", "  $sums = array_sum($nums);\n  arsort($nums);\n  foreach ($nums as $i =>\
    \ $num) {\n    if ($sums[$i] == $sum) {\n      $nums[$i] = $i;\n    }\n  }\n \
    \ return $nums;\n}", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach\
    \ ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n   \
    \ return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($sums);\n  return\
    \ array_map(function($num) use ($sums) {\n    return $nums[$num];\n  }, $sums);\n\
    }\n", "    $sums = array_sum($nums);\n    $sorted = array();\n    foreach ($nums\
    \ as $i => $num) {\n        $sorted[$i] = $num;\n        $sorted[$i] += $sums\
    \ - $sums[$i];\n    }\n    return $sorted;\n}\n", "  $sums = array_sum($nums);\n\
    \  arsort($nums);\n  $nums = array_map(function($num) use ($sums) {\n    return\
    \ $sums - $num;\n  }, $nums);\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  foreach ($nums as $i => $num) {\n    if ($sums[$i] == $sum) {\n      $nums[$i]\
    \ = $i;\n    }\n  }\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   $result = array();\n    foreach ($nums as $i => $num) {\n        $result[$i]\
    \ = $num;\n    }\n    asort($result);\n    foreach ($result as $i => $num) {\n\
    \        $result[$i] = $sums[$i] - $num;\n    }\n    return $result;\n}\n", " \
    \   $sums = array_sum($nums);\n    $result = array();\n    foreach ($nums as $i\
    \ => $num) {\n        $result[$i] = $num;\n    }\n    asort($result);\n    foreach\
    \ ($result as $i => $num) {\n        $result[$i] = $sums[$i] - $num;\n    }\n\
    \    return $result;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}\n\n$nums = array(\n    1 => 1,\n    2 => 1,\n   \
    \ 3 => 1,\n    4 => 1,\n    5 => 1,\n    6 => 1,\n    7 => 1,\n    8 => 1,\n \
    \   9 => 1,\n    10 => 1,\n    11 => 1,\n    12 => 1,\n    13 => 1,\n    14 =>\
    \ 1,\n    15 => 1,\n    16 => 1,\n    17 => 1,\n    18 => 1,\n    19 => 1,\n \
    \   20 => 1,\n    21 => 1,\n    22 => 1,\n    23 => 1,\n    24 => 1,\n    25 =>\
    \ 1,\n    26 => 1,\n    27 => 1,\n    28 => 1,\n    29 => 1,\n    30 => 1,\n \
    \   31 => 1,\n    32 => 1,\n    33 => 1,\n    34 => 1,\n    35 => 1,\n    36 =>\
    \ 1,\n    37 => 1,\n    38 => 1,\n    39 => 1,\n    40 => 1,\n    41 => 1,\n \
    \   42 => 1,\n    43 => 1,\n    44 => 1,\n    45 => 1,\n    46 => 1,\n    47 =>\
    \ 1,\n    48 => 1,\n    49 => 1,\n    50 => 1,\n    51 => 1,\n    52 => 1,\n \
    \   53 => 1,\n    54 => 1,\n    55 => 1,\n    56 => 1,\n    57 => 1,\n    58 =>\
    \ 1,\n    59 => 1,\n    60 => 1,\n    61 => 1,\n    62 => 1,\n    63 => 1,\n \
    \   64 => 1,\n    65 => 1,\n    66 => 1,\n    67 => 1,\n    68 => 1,\n    69 =>\
    \ 1,\n    70 => 1,\n    71 => 1,\n    72 => 1,\n    73 => 1,\n    74 => 1,\n \
    \   75 => 1,\n    76 => 1,\n    77 => 1,\n    78 => 1,\n    79 => 1,\n    80 =>\
    \ 1,\n    81 => 1,\n    82 => 1,\n    83 => 1,\n    84 => ", "    $sums = array_sum($nums);\n\
    \    $nums = array_map(function($num) use ($sums) {\n        return $num / $sums;\n\
    \    }, $nums);\n    array_multisort($nums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  foreach ($nums as $i =>\
    \ $num) {\n    if ($sums[$i] == $sum) {\n      $nums[$i] = $i;\n    }\n  }\n \
    \ return $nums;\n}\n", "    $sums = array_sum($nums);\n    usort($nums, function($a,\
    \ $b) use ($sums) {\n        return $sums - $a - $b;\n    });\n    return $nums;\n\
    }", "  $sums = array_sum($nums);\n  arsort($sums);\n  $nums = array_map(function($num)\
    \ use ($sums) {\n    return $sums - $num;\n  }, $nums);\n  return $nums;\n}\n",
  "  $sums = array_sum($nums);\n  arsort($nums);\n  return $nums;\n}\n", "    $sums\
    \ = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num) {\n\
    \        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n}\n\n$nums\
    \ = array(\n    1, 4, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6,\
    \ 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8,\
    \ 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4,\
    \ 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6,\
    \ 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8,\
    \ 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4,\
    \ 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6,\
    \ 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8,\
    \ 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4,\
    \ 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6,\
    \ 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8,\
    \ 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4,\
    \ 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6,\
    \ 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8,\
    \ 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4,\
    \ 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6,\
    \ 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8,\
    \ 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, 8, 6, 4, ", "  $sums = array_sum($nums);\n\
    \  arsort($nums);\n  foreach ($nums as $i => $num) {\n    $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n  }\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   $sorted = [];\n    foreach ($nums as $i => $num) {\n        $sorted[$i] =\
    \ $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n \
    \       $sorted[$i] = $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums\
    \ = array_sum($nums);\n    $order = array();\n    foreach ($nums as $i => $num)\
    \ {\n        $order[$i] = $i;\n    }\n    array_multisort($sums, $order, $nums);\n\
    \    return $order;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    usort($nums,\
    \ function($a, $b) use ($sums) {\n        return $sums - $sums[$a] - $sums[$b];\n\
    \    });\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted\
    \ = array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n\
    \    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i] - $num;\n    }\n    return $sorted;\n}", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   $sorted = [];\n    foreach ($nums as $i => $num) {\n        $sorted[$i] =\
    \ $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n \
    \       $sorted[$i] = $nums[$i];\n    }\n    return $sorted;\n}\n", "    $sums\
    \ = array_sum($nums);\n    $nums = array_map(function($n) use ($sums) {\n    \
    \    return $sums - $n;\n    }, $nums);\n    return $nums;\n}\n", "    $sorted\
    \ = array();\n    $sums = array();\n    foreach ($nums as $num) {\n        $sums[$num]\
    \ = array_sum(str_split($num));\n        $sorted[] = $num;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $num => $sum) {\n        $sorted[$num] = $nums[$sum];\n\
    \    }\n    return $sorted;\n}", "  $sums = array_sum($nums);\n  arsort($sums);\n\
    \  return array_map(function($n) use ($nums) {\n    return $nums[$n];\n  }, $sums);\n\
    }\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  $nums = array_map(function($num)\
    \ use ($sums) {\n    return $sums - $num;\n  }, $nums);\n  return $nums;\n}\n\n\
    $nums = array(\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n\
    \  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n\
    \  22,\n  23,\n  24,\n  25,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n\
    \  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n\
    \  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n\
    \  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n\
    \  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n\
    \  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n\
    \  88,\n  89,\n  90,\n  91,\n  92,\n  93,\n  94,\n  95,\n  96,\n  97,\n  98,\n\
    \  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n\
    \  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n\
    \  119,\n  120,\n  121,\n  122,\n  123,\n  124,\n  125,\n  126,", "    $sorted\
    \ = array();\n    $sums = array();\n    foreach ($nums as $num) {\n        $sums[$num]\
    \ = 0;\n    }\n    foreach ($sums as $num => $sum) {\n        $sorted[] = $num;\n\
    \    }\n    foreach ($nums as $num) {\n        $sums[$num] += $num;\n    }\n \
    \   foreach ($sums as $num => $sum) {\n        $sorted[] = $num;\n    }\n    return\
    \ $sorted;\n}", "    $sorted = array();\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        for ($i = 0; $i < strlen($num); $i++) {\n        \
    \    $sum += $num[$i];\n        }\n        $sorted[$key] = $nums[$key];\n    \
    \    $sorted[$key]['sum'] = $sum;\n    }\n    asort($sorted);\n    return $sorted;\n\
    }\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  return $nums;\n}\n", " \
    \   $sorted = array();\n    foreach ($nums as $i => $num) {\n        $sum = 0;\n\
    \        for ($j = 0; $j < strlen($num); $j++) {\n            $sum += $num[$j];\n\
    \        }\n        $sorted[$i] = $sum;\n    }\n    asort($sorted);\n    return\
    \ $sorted;\n}\n\n$nums = array(\n    1 => 1,\n    2 => 2,\n    3 => 3,\n    4\
    \ => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n   \
    \ 10 => 10,\n    11 => 11,\n    12 => 12,\n    13 => 13,\n    14 => 14,\n    15\
    \ => 15,\n    16 => 16,\n    17 => 17,\n    18 => 18,\n    19 => 19,\n    20 =>\
    \ 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n    24 => 24,\n    25 => 25,\n\
    \    26 => 26,\n    27 => 27,\n    28 => 28,\n    29 => 29,\n    30 => 30,\n \
    \   31 => 31,\n    32 => 32,\n    33 => 33,\n    34 => 34,\n    35 => 35,\n  \
    \  36 => 36,\n    37 => 37,\n    38 => 38,\n    39 => 39,\n    40 => 40,\n   \
    \ 41 => 41,\n    42 => 42,\n    43 => 43,\n    44 => 44,\n    45 => 45,\n    46\
    \ => 46,\n    47 => 47,\n    48 => 48,\n    49 => 49,\n    50 => 50,\n    51 =>\
    \ 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n    55 => 55,\n    56 => 56,\n\
    \    57 => 57,\n    58 => 58,\n    59 => 59,\n    60 => 60,\n    61 => 61,\n \
    \   62 => 62,\n    63 => 63,\n    64 => 64,\n    65 => 65,\n    66 => 66,\n  \
    \  67 => 67,\n    68 => 68,\n    69 => 69,\n    70 => 70,\n    71 => 71,\n   \
    \ 72 => 72,\n    73 => 73,\n    74 => 74,\n    75 => 75,\n    76 ", "    $sums\
    \ = array_sum($nums);\n    $sorted = [];\n    foreach ($nums as $i => $num) {\n\
    \        $sorted[$i] = $num;\n    }\n    asort($sorted);\n    foreach ($sorted\
    \ as $i => $num) {\n        $sorted[$i] = $sums[$i];\n    }\n    return $sorted;\n\
    }\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  $nums = array_map(function($num)\
    \ use ($sums) {\n    return $nums[$num] - $sums;\n  }, $nums);\n  return $nums;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "    $sorted = array();\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        for ($i = 0; $i < strlen($num); $i++) {\n        \
    \    $sum += $num[$i];\n        }\n        $sorted[$key] = $nums[$key];\n    }\n\
    \    asort($sorted);\n    return $sorted;\n}\n", "  $sums = array_sum($nums);\n\
    \  arsort($sums);\n  return $sums;\n}\n", "    $sums = array_sum($nums);\n   \
    \ $sorted = array_map(function($n) use ($sums) {\n        return $sums - $n;\n\
    \    }, $nums);\n    asort($sorted);\n    return $sorted;\n}\n", "    $sums =\
    \ array_sum($nums);\n    $order = array_keys($nums, $sums);\n    asort($order);\n\
    \    return $order;\n}\n", "    $sums = array_sum($nums);\n    $sorted = array();\n\
    \    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n   \
    \ asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    $sorted = [];\n    foreach ($nums as $i => $num) {\n        $sorted[$i] =\
    \ $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n \
    \       $sorted[$i] = $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums\
    \ = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num) {\n\
    \        $nums[$i] = $nums[$i] / $sums;\n    }\n    return $nums;\n}\n", "   \
    \ $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num)\
    \ {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n}\n",
  "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num)\
    \ {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n    return $nums;\n}", " \
    \   $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i =>\
    \ $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach\
    \ ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n\
    \    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  foreach ($nums as $i => $num) {\n    $nums[$i] = $nums[$i] - $sums[$i];\n \
    \ }\n  return $nums;\n}\n", "    $sorted = array();\n    $sums = array();\n  \
    \  foreach ($nums as $i => $num) {\n        $sums[$i] = array_sum(str_split($num));\n\
    \        $sorted[$i] = $num;\n    }\n    asort($sums);\n    foreach ($sums as\
    \ $i => $sum) {\n        $sorted[$i] = $sorted[$i];\n    }\n    return $sorted;\n\
    }", "    $sums = array_sum($nums);\n    arsort($nums);\n    return $nums;\n}\n",
  "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num)\
    \ {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n}\n",
  "    $sorted = array();\n    $sums = array();\n    foreach ($nums as $num) {\n \
    \       $sums[$num] = array_sum(str_split($num));\n        $sorted[$num] = $num;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $num => $sum) {\n        $sorted[$num]\
    \ = $sorted[$num];\n    }\n    return $sorted;\n}\n", "    $sorted = array();\n\
    \    $sums = array();\n    foreach ($nums as $num) {\n        $sums[$num] = array_sum(str_split($num));\n\
    \        $sorted[] = $num;\n    }\n    asort($sums);\n    foreach ($sums as $num\
    \ => $sum) {\n        $sorted[$num] = $sorted[$num];\n    }\n    return $sorted;\n\
    }\n", "    $sums = array_sum($nums);\n    usort($nums, function($a, $b) use ($sums)\
    \ {\n        return $sums - $a + $b;\n    });\n    return $nums;\n}", "    $sums\
    \ = array_sum($nums);\n    $order = array_keys($nums, $sums);\n    asort($order);\n\
    \    return $order;\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    array_multisort($order, $nums);\n    return $nums;\n}", "  $sums\
    \ = array_sum($nums);\n  arsort($nums);\n  return $nums;\n}\n", "    $sorted =\
    \ array();\n    $sums = array();\n    foreach ($nums as $num) {\n        $sums[$num]\
    \ = array_sum(str_split($num));\n        $sorted[] = $num;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $num => $sum) {\n        $sorted[$num] = $sorted[$num];\n\
    \    }\n    return $sorted;\n}", "    $sorted = array();\n    $sums = array();\n\
    \    foreach ($nums as $i => $num) {\n        $sums[$i] = array_sum(str_split($num));\n\
    \        $sorted[$i] = $num;\n    }\n    asort($sums);\n    foreach ($sums as\
    \ $i => $sum) {\n        $sorted[$i] = $sorted[$i];\n    }\n    return $sorted;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums\
    \ as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted = array();\n    foreach\
    \ ($nums as $i => $num) {\n        $sorted[$i] = $num;\n        $sorted[$i] +=\
    \ $sums - $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n\
    \  arsort($sums);\n  return array_map(function($n) use ($nums, $sums) {\n    return\
    \ $nums[$n];\n  }, array_keys($sums));\n}\n", "    $sums = array_sum($nums);\n\
    \    usort($nums, function($a, $b) use ($sums) {\n        return $sums - $a +\
    \ $b;\n    });\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  $nums = array_map(function($n) use ($sums) {\n    return $sums - $n;\n  },\
    \ $nums);\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n    $order =\
    \ array_keys($nums, $sums);\n    return array_intersect_key($nums, array_flip($order));\n\
    }\n", "    $sums = array_sum($nums);\n    $sorted = [];\n    foreach ($nums as\
    \ $i => $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n   \
    \ foreach ($sorted as $i => $num) {\n        $sorted[$i] = $nums[$i];\n    }\n\
    \    return $sorted;\n}\n", "    $sums = array_sum($nums);\n    arsort($nums);\n\
    \    return array_map(function($num) use ($sums) {\n        return $nums[$num]\
    \ - $sums;\n    }, $nums);\n}\n", "    $sums = array_sum($nums);\n    arsort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  return array_map(function($n) use ($sums) {\n    return $sums - $n;\n  }, $nums);\n\
    }\n", "    $sums = array_sum($nums);\n    usort($nums, function($a, $b) use ($sums)\
    \ {\n        return $sums - $a - $b;\n    });\n    return $nums;\n}\n", "    $sorted\
    \ = array();\n    foreach ($nums as $i => $num) {\n        $sum = 0;\n       \
    \ for ($j = 0; $j < strlen($num); $j++) {\n            $sum += $num[$j];\n   \
    \     }\n        $sorted[$i] = $sum;\n    }\n    asort($sorted);\n    return $sorted;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach\
    \ ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n\
    \    return $nums;\n}\n", "    $sums = array_sum($nums);\n    usort($nums, function($a,\
    \ $b) use ($sums) {\n        return $sums - $a - $b;\n    });\n    return $nums;\n\
    }\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  return $nums;\n}\n", " \
    \   $sums = array_sum($nums);\n    $sorted = [];\n    foreach ($nums as $i =>\
    \ $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n    foreach\
    \ ($sorted as $i => $num) {\n        $sorted[$i] = $sums[$i] - $num;\n    }\n\
    \    return $sorted;\n}\n", "    $sums = array_sum($nums);\n    $order = array();\n\
    \    foreach ($nums as $i => $num) {\n        $order[$i] = $i;\n    }\n    asort($order);\n\
    \    foreach ($order as $i => $j) {\n        $sums[$i] = $sums[$i] - $nums[$j];\n\
    \    }\n    return $sums;\n}\n", "    $sums = array_sum($nums);\n    $order =\
    \ array_keys($nums, $sums);\n    return array_intersect_key($nums, $order);\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n    return $nums;\n\
    }\n", "    $sorted = array();\n    foreach ($nums as $num) {\n        $digits\
    \ = str_split($num);\n        $sum = array_sum($digits);\n        $sorted[$sum][]\
    \ = $num;\n    }\n    foreach ($sorted as $sum => $nums) {\n        sort($nums);\n\
    \    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n    $sorted\
    \ = array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n\
    \    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  return $nums;\n}", "    $sums = array_sum($nums);\n    $sorted = array();\n\
    \    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n   \
    \ asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $nums[$i];\n    }\n    return $sorted;\n}\n", "  $sums = array_sum($nums);\n\
    \  arsort($nums);\n  foreach ($nums as $i => $num) {\n    if ($sums[$i] == $sum)\
    \ {\n      $nums[$i] = $i;\n    }\n  }\n  return $nums;\n}", "    $sums = array_sum($nums);\n\
    \    $sorted = [];\n    foreach ($nums as $i => $num) {\n        $sorted[$i] =\
    \ $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n \
    \       $sorted[$i] = $sums[$i] - $num;\n    }\n    return $sorted;\n}\n", " \
    \   $sums = array_sum($nums);\n    $order = array_keys($nums, $sums);\n    return\
    \ array_intersect_key($nums, array_flip($order));\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums * $sums;\n    }\n    return $nums;\n}", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   $order = array_keys($nums, $sums);\n    return array_intersect_key($nums,\
    \ $order);\n}\n", "    $sums = array_sum($nums);\n    $sorted = array();\n   \
    \ foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n\
    \    foreach ($sorted as $i => $num) {\n        $sorted[$i] = $sums[$i];\n   \
    \ }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    usort($nums,\
    \ function($a, $b) use ($sums) {\n        return $sums - $a - $b;\n    });\n \
    \   return $nums;\n}\n", "    $sorted = array();\n    foreach ($nums as $i =>\
    \ $num) {\n        $sum = 0;\n        for ($j = 0; $j < strlen($num); $j++) {\n\
    \            $sum += $num[$j];\n        }\n        $sorted[$i] = $sum;\n    }\n\
    \    asort($sorted);\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    usort($nums, function($a, $b) use ($sums) {\n        return $sums - $sums[$a]\
    \ - $sums[$b];\n    });\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n\
    \  arsort($nums);\n  foreach ($nums as $i => $num) {\n    if ($sums[$i] == $sum)\
    \ {\n      $nums[$i] = $i;\n    }\n  }\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n\n$nums = array(\n    123,\n    456,\n\
    \    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n\
    \    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n\
    \    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n\
    \    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n\
    \    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n\
    \    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n\
    \    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n\
    \    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n\
    \    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n\
    \    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n\
    \    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n\
    \    901,\n    456,\n    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n\
    \    789,\n    101,\n    345,\n    678,\n    901,\n    456,\n    789,\n    101,\n\
    \    345,\n    678,\n    901,\n    ", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $order =\
    \ array_keys($nums, $sums);\n    array_multisort($order, $nums);\n    return $nums;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums\
    \ as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n  return $nums;\n\
    }\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums, $sums);\n\
    \    return array_intersect_key($nums, $order);\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    usort($nums, function($a, $b) use ($sums) {\n        return $sums - $sums[$a]\
    \ - $sums[$b];\n    });\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    $order = array();\n    foreach ($nums as $i => $num) {\n        $order[$i]\
    \ = $i;\n    }\n    asort($order);\n    $order = array_flip($order);\n    return\
    \ array_map(function ($i) use ($sums, $order) {\n        return $sums - $order[$i];\n\
    \    }, $order);\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n  \
    \  foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n \
    \   }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}\n", "  $sorted = array();\n  foreach ($nums as $key\
    \ => $num) {\n    $sum = 0;\n    foreach (str_split($num) as $digit) {\n     \
    \ $sum += $digit;\n    }\n    $sorted[$key] = $num;\n    $sorted[$key]['sum']\
    \ = $sum;\n  }\n  usort($sorted, 'sort_by_sum');\n  return $sorted;\n}\n", " \
    \ $sums = array_sum($nums);\n  arsort($sums);\n  return array_intersect_key($nums,\
    \ array_flip($sums));\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  foreach ($nums as $i => $num) {\n    if ($sums[$i] == $sum) {\n      $nums[$i]\
    \ = $i;\n    }\n  }\n  return $nums;\n}", "    $sums = array_sum($nums);\n   \
    \ asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ / $sums;\n    }\n    return $nums;\n}", "    $sums = array_sum($nums);\n   \
    \ $nums = array_map(function($n) use ($sums) {\n        return $sums - $n;\n \
    \   }, $nums);\n    asort($nums);\n    return $nums;\n}\n\n$nums = [1, 3, 6, 4,\
    \ 8, 2, 5, 7, 9];\n$nums = order_by_points($nums);\nprint_r($nums);", "    $sums\
    \ = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num) {\n\
    \        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n}", " \
    \   $sums = array_sum($nums);\n    $result = array();\n    foreach ($nums as $i\
    \ => $num) {\n        $result[$i] = $num;\n    }\n    asort($result);\n    foreach\
    \ ($result as $i => $num) {\n        $result[$i] = $nums[$i];\n    }\n    return\
    \ $result;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach\
    \ ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n\
    \    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $result = array();\n\
    \    foreach ($nums as $i => $num) {\n        $result[$i] = $num;\n        if\
    \ ($sums[$i]) {\n            $result[$i] += $sums[$i];\n        }\n    }\n   \
    \ return $result;\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    array_multisort($order, $nums);\n    return $nums;\n}\n", "   \
    \ $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num)\
    \ {\n        $nums[$i] = $nums[$i] / $sums;\n    }\n    return $nums;\n}\n", " \
    \   $sums = array_sum($nums);\n    $order = array_keys($nums, $sums);\n    array_multisort($order,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    usort($nums,\
    \ function($a, $b) use ($sums) {\n        return $sums - $sums[$a] - $sums[$b];\n\
    \    });\n    return $nums;\n}\n", "  $sums = array_sum($nums);\n  arsort($nums);\n\
    \  return $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted = [];\n  \
    \  foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n\
    \    foreach ($sorted as $i => $num) {\n        $sorted[$i] = $nums[$i];\n   \
    \ }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted =\
    \ array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n\
    \    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $nums[$i];\n    }\n    return $sorted;\n}", "  $sums = array_sum($nums);\n\
    \  arsort($nums);\n  foreach ($nums as $i => $num) {\n    if ($sums == $num) {\n\
    \      $nums[$i] = $i;\n    }\n  }\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    return array_map(function($n) use ($sums) {\n        return\
    \ $sums - $n;\n    }, $nums);\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n\
    \    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n\
    \    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted =\
    \ [];\n    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n\
    \    asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i] - $num;\n    }\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    return array_intersect_key($nums,\
    \ array_flip($order));\n}\n", "    $sums = array_sum($nums);\n    $sorted = [];\n\
    \    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n   \
    \ asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i] - $num;\n    }\n    return $sorted;\n}", "    $sums = array_sum($nums);\n\
    \    $nums = array_map(function($num) use ($sums) {\n        return $num / $sums;\n\
    \    }, $nums);\n    return array_map(function($num) use ($nums) {\n        return\
    \ array_search($num, $nums);\n    }, $nums);\n}\n", "    $sums = array_sum($nums);\n\
    \    asort($nums);\n    foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i]\
    \ - $sums[$i];\n    }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    $sorted = array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i]\
    \ = $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n\
    \        $sorted[$i] = $sums[$i];\n    }\n    return $sorted;\n}\n", "    $sums\
    \ = array_sum($nums);\n    asort($nums);\n    foreach ($nums as $i => $num) {\n\
    \        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return $nums;\n}", " \
    \   $sums = array_sum($nums);\n    $order = array();\n    foreach ($nums as $i\
    \ => $num) {\n        $order[$i] = $sums - $num;\n    }\n    return $order;\n\
    }\n", "    $sums = array_sum($nums);\n    asort($nums);\n    foreach ($nums as\
    \ $i => $num) {\n        $nums[$i] = $nums[$i] - $sums[$i];\n    }\n    return\
    \ $nums;\n}\n", "    $sums = array_sum($nums);\n    $order = array();\n    foreach\
    \ ($nums as $i => $num) {\n        $order[$i] = $i;\n    }\n    array_multisort($sums,\
    \ $order, $nums);\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n \
    \   $order = array();\n    foreach ($nums as $i => $num) {\n        $order[$i]\
    \ = $sums - $num;\n    }\n    return $order;\n}\n", "  $sums = array_sum($nums);\n\
    \  arsort($nums);\n  $nums = array_intersect_key($nums, array_flip(array_keys($sums)));\n\
    \  return $nums;\n}\n", "    $sums = array_sum($nums);\n    asort($nums);\n  \
    \  foreach ($nums as $i => $num) {\n        $nums[$i] = $nums[$i] / $sums;\n \
    \   }\n    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    array_multisort($order, $nums);\n    return $nums;\n}\n", "   \
    \ $sums = array_sum($nums);\n    $sorted = array();\n    foreach ($nums as $i\
    \ => $num) {\n        $sorted[$i] = $num;\n        $sorted[$i] += $sums[$i];\n\
    \    }\n    asort($sorted);\n    return $sorted;\n}\n", "    $sorted = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sum = 0;\n        foreach (str_split($num)\
    \ as $digit) {\n            $sum += $digit;\n        }\n        $sorted[$key]\
    \ = $num;\n        $sorted[$key]['sum'] = $sum;\n    }\n    array_multisort($sorted['sum'],\
    \ SORT_DESC, $sorted);\n    return $sorted;\n}\n", "    $sums = array_sum($nums);\n\
    \    $sorted = [];\n    foreach ($nums as $i => $num) {\n        $sorted[$i] =\
    \ $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n \
    \       $sorted[$i] = $nums[$i];\n    }\n    return $sorted;\n}\n", "  $sums =\
    \ array_sum($nums);\n  arsort($nums);\n  return $nums;\n}\n", "    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    array_multisort($order, $nums);\n\
    \    return $nums;\n}\n", "    $sums = array_sum($nums);\n    $sorted = [];\n\
    \    foreach ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n   \
    \ asort($sorted);\n    foreach ($sorted as $i => $num) {\n        $sorted[$i]\
    \ = $sums[$i];\n    }\n    return $sorted;\n}", "    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    return array_intersect_key($nums,\
    \ $order);\n}\n", "    $sums = array_sum($nums);\n    $sorted = [];\n    foreach\
    \ ($nums as $i => $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n\
    \    foreach ($sorted as $i => $num) {\n        $sorted[$i] = $nums[$i];\n   \
    \ }\n    return $sorted;\n}\n\n$nums = [1, 6, 4, 8, 10, 2, 3];\n$nums = order_by_points($nums);\n\
    print_r($nums);", "    $sums = array_sum($nums);\n    $order = array_keys($nums,\
    \ $sums);\n    return array_intersect_key($nums, array_flip($order));\n}\n", " \
    \   $sorted = [];\n    $sums = array_sum($nums);\n    foreach ($nums as $i =>\
    \ $num) {\n        $sorted[$i] = $num;\n    }\n    asort($sorted);\n    foreach\
    \ ($sorted as $i => $num) {\n        $sorted[$i] = $sums - $num;\n    }\n    return\
    \ $sorted;\n}\n", "    $sums = array_sum($nums);\n    $sorted = array_map(function($num)\
    \ use ($sums) {\n        return $num + $sums;\n    }, $nums);\n    asort($sorted);\n\
    \    return $sorted;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

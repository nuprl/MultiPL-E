name: HumanEval_24_largest_divisor
language: php
prompt: "<?php\n// For a given number n, find the largest number that divides n evenly,\
  \ smaller than n\nfunction largest_divisor($n) {\n"
tests: "function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        $divisor = $n / $i;\n        if($divisor != $max_divisor)\
    \ {\n            $max_divisor = $divisor;\n            $max_divisor_p = $i;\n\
    \        }\n    }\n    return $max_divisor_p;\n}\n", "    $divisors = range(1,\
    \ $n);\n    sort($divisors);\n    return $divisors[count($divisors) - 1];\n}\n",
  "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n      \
    \      $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_pp = 1;\n\
    \    $max_divisor_ppp = 1;\n    $max_divisor_pppp = 1;\n    $max_divisor_ppppp\
    \ = 1;\n    $max_divisor_pppppp = 1;\n    $max_divisor_ppppppp = 1;\n    $max_divisor_ppppppp\
    \ = 1;\n    $max_divisor_pppppppp = 1;\n    $max_divisor_ppppppppp = 1;\n    $max_divisor_ppppppppp\
    \ = 1;\n    $max_divisor_pppppppppp = 1;\n    $max_divisor_ppppppppppp = 1;\n\
    \    $max_divisor_ppppppppppp = 1;\n    $max_divisor_pppppppppppp = 1;\n    $max_divisor_ppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppp = 1;\n    $max_divisor_ppppppppppppp =\
    \ 1;\n    $max_divisor_pppppppppppppp = 1;\n    $max_divisor_ppppppppppppppp =\
    \ 1;\n    $max_divisor_pppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppppppppp",
  "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n\
    \        if($n % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n\
    \    return max($divisors);\n}\n", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor_p = $i;\n            $max_divisor = $i;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors) - 1];\n}\n", "    $max_divisor = 1;\n \
    \   $max_divisor_ind = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_ind =\
    \ $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n\
    \    $max_divisor_value = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_value\
    \ = $n;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <= $n; $i++) {\n      \
    \  if($n % $i == 0) {\n            $max_divisor_value = $i;\n            $max_divisor\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $divisors = range(1,\
    \ $n);\n    sort($divisors);\n    return $divisors[count($divisors) - 1];\n}\n",
  "    $divisors = range(1, $n);\n    $largest = array_reduce($divisors, function\
    \ ($largest, $divisor) {\n        return $divisor > $largest ? $divisor : $largest;\n\
    \    });\n    return $largest;\n}\n", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors) - 1];\n}\n", "    $max_divisor = 1;\n \
    \   $max_divisor_ind = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n %\
    \ $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_ind = $i;\n\
    \        }\n    }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor_value = $i;\n            $max_divisor = $i;\n        }\n \
    \   }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    $max_divisor_p2 = 1;\n    $max_divisor_p3 = 1;\n    $max_divisor_p4\
    \ = 1;\n    $max_divisor_p5 = 1;\n    $max_divisor_p6 = 1;\n    $max_divisor_p7\
    \ = 1;\n    $max_divisor_p8 = 1;\n    $max_divisor_p9 = 1;\n    $max_divisor_p10\
    \ = 1;\n    $max_divisor_p11 = 1;\n    $max_divisor_p12 = 1;\n    $max_divisor_p13\
    \ = 1;\n    $max_divisor_p14 = 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16\
    \ = 1;\n    $max_divisor_p17 = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19\
    \ = 1;\n    $max_divisor_p20 = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22\
    \ = 1;\n    $max_divisor_p23 = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25\
    \ = 1;\n    $max_divisor_p26 = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28\
    \ = 1;\n    $max_divisor_p29 = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31\
    \ = 1;\n    $max_divisor_p32 = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34\
    \ = 1;\n    $max_divisor_p35 = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37\
    \ = 1;\n    $max_divisor_p38 = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40\
    \ = 1;\n    $max_divisor_p41 = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43\
    \ = 1;\n    $max_divisor_p44 = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46\
    \ = 1;\n    $max_divisor_p47 = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49\
    \ = 1;\n    $max_divisor_p50 = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52\
    \ = 1;\n    $max_divisor_p53 = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55\
    \ = 1;\n    $max_divisor_p56 = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58\
    \ = 1;\n    $max_divisor_p59 = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61\
    \ = 1;\n    $max_divisor_p62 = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64\
    \ = 1;\n    $max_divisor_p65 = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67\
    \ = 1;\n    $max_divisor_p68 = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70\
    \ = 1;\n    $max_divisor_p71 = 1;\n    $max_divisor_p72 = 1;", "    $max_divisor\
    \ = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor\
    \ = $n / $i;\n        if($divisor == $max_divisor) {\n            $max_divisor_p\
    \ = $i;\n        }\n    }\n    return $max_divisor_p;\n}\n", "    $max_divisor\
    \ = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i <= $n; $i++) {\n     \
    \   $divisor = $n / $i;\n        if($divisor == $max_divisor) {\n            $max_divisor_value\
    \ = $i;\n        }\n        if($divisor > $max_divisor) {\n            $max_divisor\
    \ = $divisor;\n            $max_divisor_value = $i;\n        }\n    }\n    return\
    \ $max_divisor_value;\n}", "    $max_divisor = 0;\n    $max_divisor_index = 0;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor\
    \ = $i;\n            $max_divisor_index = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value =\
    \ $i;\n            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_id = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_id = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n\
    \            $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor_value;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = $max_divisor;\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $max_divisor_p\
    \ = $i;\n        }\n        if ($max_divisor_p > $max_divisor) {\n           \
    \ $max_divisor = $max_divisor_p;\n        }\n    }\n    return $max_divisor;\n\
    }", "    $max_divisor = 1;\n    $max_divisor_ind = 1;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n      \
    \      $max_divisor_ind = $i;\n        }\n    }\n    return $max_divisor;\n}\n",
  "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        $divisor = $n / $i;\n        if($divisor % 2 == 0) {\n          \
    \  $max_divisor_value = $divisor;\n        }\n        if($divisor > $max_divisor)\
    \ {\n            $max_divisor = $divisor;\n        }\n    }\n    return $max_divisor_value;\n\
    }\n", "    $divisors = range(1, $n);\n    $largest = array_reduce($divisors, function($largest,\
    \ $divisor) {\n        if ($n % $divisor === 0) {\n            $largest = $divisor;\n\
    \        }\n        return $largest;\n    });\n    return $largest;\n}\n", " \
    \   $max_divisor = 1;\n    $max_divisor_id = 0;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_id\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_p = 1;\n    $max_divisor_pp = 1;\n    $max_divisor_ppp\
    \ = 1;\n    $max_divisor_pppp = 1;\n    $max_divisor_ppppp = 1;\n    $max_divisor_pppppp\
    \ = 1;\n    $max_divisor_ppppppp = 1;\n    $max_divisor_ppppppp = 1;\n    $max_divisor_pppppppp\
    \ = 1;\n    $max_divisor_ppppppppp = 1;\n    $max_divisor_ppppppppp = 1;\n   \
    \ $max_divisor_pppppppppp = 1;\n    $max_divisor_ppppppppppp = 1;\n    $max_divisor_ppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppp = 1;\n    $max_divisor_ppppppppppppp = 1;\n\
    \    $max_divisor_ppppppppppppp = 1;\n    $max_divisor_ppppppppppppp = 1;\n  \
    \  $max_divisor_pppppppppppppp = 1;\n    $max_divisor_ppppppppppppppp = 1;\n \
    \   $max_divisor_pppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppp = 1;\n\
    \    $max_divisor_ppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_pppppppppppppppppppppppppp = 1;\n    $max_divisor_ppppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppppppppppp = 1;\n    $max_divisor_pppppppppppppppppppppppppp\
    \ = 1;\n    $max_divisor_ppppppppppppppppp", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = $max_divisor;\n    $max_divisor_p2 = $max_divisor;\n    $max_divisor_p3 =\
    \ $max_divisor;\n    $max_divisor_p4 = $max_divisor;\n    $max_divisor_p5 = $max_divisor;\n\
    \    $max_divisor_p6 = $max_divisor;\n    $max_divisor_p7 = $max_divisor;\n  \
    \  $max_divisor_p8 = $max_divisor;\n    $max_divisor_p9 = $max_divisor;\n    $max_divisor_p10\
    \ = $max_divisor;\n    $max_divisor_p11 = $max_divisor;\n    $max_divisor_p12\
    \ = $max_divisor;\n    $max_divisor_p13 = $max_divisor;\n    $max_divisor_p14\
    \ = $max_divisor;\n    $max_divisor_p15 = $max_divisor;\n    $max_divisor_p16\
    \ = $max_divisor;\n    $max_divisor_p17 = $max_divisor;\n    $max_divisor_p18\
    \ = $max_divisor;\n    $max_divisor_p19 = $max_divisor;\n    $max_divisor_p20\
    \ = $max_divisor;\n    $max_divisor_p21 = $max_divisor;\n    $max_divisor_p22\
    \ = $max_divisor;\n    $max_divisor_p23 = $max_divisor;\n    $max_divisor_p24\
    \ = $max_divisor;\n    $max_divisor_p25 = $max_divisor;\n    $max_divisor_p26\
    \ = $max_divisor;\n    $max_divisor_p27 = $max_divisor;\n    $max_divisor_p28\
    \ = $max_divisor;\n    $max_divisor_p29 = $max_divisor;\n    $max_divisor_p30\
    \ = $max_divisor;\n    $max_divisor_p31 = $max_divisor;\n    $max_divisor_p32\
    \ = $max_divisor;\n    $max_divisor_p33 = $max_divisor;\n    $max_divisor_p34\
    \ = $max_divisor;\n    $max_divisor_p35 = $max_divisor;\n    $max_divisor_p36\
    \ = $max_divisor;\n    $max_divisor_p37 = $max_divisor;\n    $max_divisor_p38\
    \ = $max_divisor;\n    $max_divisor_p39 = $max_divisor;\n    $max_divisor_p40\
    \ = $max_divisor;\n    $max_divisor_p41 = $max_divisor;\n    $max_divisor_p42\
    \ = $max_divisor;\n    $max_divisor_p43 = $max_divisor;\n    $max_divisor_p44\
    \ = $max_divisor;\n    $max_divisor_p45 = $max_divisor;\n    $max_divisor_p46\
    \ = $max_divisor;\n    $max_divisor_p47 = $max_divisor;\n    $max_divisor_p48\
    \ = $max_divisor;\n    $max_divisor_p49 = $max_divisor;\n    $max_divisor_p50\
    \ = $max_divisor;\n    $max_", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor_value = $i;\n            $max_divisor = $i;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $divisors = range(1, $n+1);\n   \
    \ sort($divisors);\n    return $divisors[count($divisors)-1];\n}\n", "    $divisors\
    \ = array(1 => 1);\n    foreach ($divisors as $divisor => $value) {\n        if\
    \ ($n % $divisor === 0) {\n            $divisors[$divisor] = $value;\n       \
    \ }\n    }\n    return max($divisors);\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor_value = $i;\n            $max_divisor = $i;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors) - 1];\n}\n", "    $divisors = range(1,\
    \ $n);\n    sort($divisors);\n    return $divisors[count($divisors)-1];\n}\n",
  "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i\
    \ == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n      \
    \      $max_divisor_p = $i;\n        }\n    }\n    return $max_divisor;\n}\n",
  "    $max_divisor = 1;\n    $max_divisor_p = $max_divisor;\n    $max_divisor_p =\
    \ $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p\
    \ = $max_divisor_p / $n;\n    $max_divisor_p = $max_divisor_p % $n;\n    $max_divisor_p",
  "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            if($max_divisor < $i) {\n       \
    \         $max_divisor = $i;\n                $max_divisor_value = $n;\n     \
    \       }\n        }\n    }\n    return $max_divisor_value;\n}", "    $divisors\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            $divisors[] = $i;\n        }\n    }\n    return max($divisors);\n\
    }", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value = $i;\n\
    \            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n\
    \            $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor_value;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_id = 0;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_id = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_id = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_id = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n\
    \    $max_divisor_p3 = 1;\n    $max_divisor_p4 = 1;\n    $max_divisor_p5 = 1;\n\
    \    $max_divisor_p6 = 1;\n    $max_divisor_p7 = 1;\n    $max_divisor_p8 = 1;\n\
    \    $max_divisor_p9 = 1;\n    $max_divisor_p10 = 1;\n    $max_divisor_p11 = 1;\n\
    \    $max_divisor_p12 = 1;\n    $max_divisor_p13 = 1;\n    $max_divisor_p14 =\
    \ 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16 = 1;\n    $max_divisor_p17\
    \ = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19 = 1;\n    $max_divisor_p20\
    \ = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22 = 1;\n    $max_divisor_p23\
    \ = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25 = 1;\n    $max_divisor_p26\
    \ = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28 = 1;\n    $max_divisor_p29\
    \ = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31 = 1;\n    $max_divisor_p32\
    \ = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34 = 1;\n    $max_divisor_p35\
    \ = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37 = 1;\n    $max_divisor_p38\
    \ = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40 = 1;\n    $max_divisor_p41\
    \ = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43 = 1;\n    $max_divisor_p44\
    \ = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46 = 1;\n    $max_divisor_p47\
    \ = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49 = 1;\n    $max_divisor_p50\
    \ = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52 = 1;\n    $max_divisor_p53\
    \ = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55 = 1;\n    $max_divisor_p56\
    \ = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58 = 1;\n    $max_divisor_p59\
    \ = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61 = 1;\n    $max_divisor_p62\
    \ = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64 = 1;\n    $max_divisor_p65\
    \ = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67 = 1;\n    $max_divisor_p68\
    \ = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70 = 1;\n    $max_divisor_p71\
    \ = 1;\n    $max_divisor_p72 = 1;", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    $max_divisor_pp = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor\
    \ = $n / $i;\n        if($divisor == $max_divisor) {\n            $max_divisor_p\
    \ = $i;\n            $max_divisor_pp = $divisor;\n        }\n    }\n    return\
    \ array($max_divisor_p, $max_divisor_pp);\n}\n", "    $divisors = array();\n \
    \   for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n}\n", " \
    \   $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value\
    \ = $i;\n        }\n        if($max_divisor_value > $n) {\n            $max_divisor\
    \ = $max_divisor_value;\n        }\n    }\n    return $max_divisor;\n}", "   \
    \ $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_pp = 1;\n    $max_divisor_ppp\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor = $n % $i;\n     \
    \   if($divisor == 0) {\n            $max_divisor = $i;\n            $max_divisor_p\
    \ = $divisor;\n            $max_divisor_pp = $divisor;\n            $max_divisor_ppp\
    \ = $divisor;\n        }\n    }\n    return array($max_divisor, $max_divisor_p,\
    \ $max_divisor_pp, $max_divisor_ppp);\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_remainder\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor = $max_divisor;\n\
    \        $divisor_remainder = $max_divisor_remainder;\n        while($divisor_remainder\
    \ >= $i) {\n            $divisor_remainder -= $i;\n            $divisor++;\n \
    \       }\n        if($divisor > $max_divisor) {\n            $max_divisor = $divisor;\n\
    \            $max_divisor_remainder = $divisor_remainder;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $max_divisor = 0;\n    $max_divisor_value\
    \ = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n     \
    \       $divisor = $i;\n            if ($divisor > $max_divisor_value) {\n   \
    \             $max_divisor = $divisor;\n                $max_divisor_value = $n;\n\
    \            }\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor\
    \ = 1;\n    $max_divisor_index = 0;\n    for($i = 1; $i <= $n; $i++) {\n     \
    \   if($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_index\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n\
    \    $max_divisor_p = $max_divisor;\n    for($i = 1; $i <= $n; $i++) {\n     \
    \   if($n % $i == 0) {\n            $max_divisor_p = $i;\n        }\n    }\n \
    \   return $max_divisor;\n}\n", "    $divisors = array();\n    $divisors[2] =\
    \ 1;\n    $divisors[1] = 2;\n    $divisors[0] = 1;\n    foreach ($divisors as\
    \ $divisor => $divisor2) {\n        if ($n % $divisor == 0) {\n            if\
    \ ($divisor2 > $divisor) {\n                $divisor = $divisor2;\n          \
    \  }\n        }\n    }\n    return $divisor;\n}\n", "    $max_divisor = 1;\n \
    \   $max_divisor_value = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_value\
    \ = $n;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_index = 0;\n    for ($i = 1; $i <= $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_index\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $divisors = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n}\n", " \
    \   $divisors = array();\n    $divisors[2] = 1;\n    $divisors[1] = 1;\n    $divisors[3]\
    \ = 1;\n    $divisors[4] = 1;\n    $divisors[5] = 1;\n    $divisors[6] = 1;\n\
    \    $divisors[7] = 1;\n    $divisors[8] = 1;\n    $divisors[9] = 1;\n    $divisors[10]\
    \ = 1;\n    $divisors[11] = 1;\n    $divisors[12] = 1;\n    $divisors[13] = 1;\n\
    \    $divisors[14] = 1;\n    $divisors[15] = 1;\n    $divisors[16] = 1;\n    $divisors[17]\
    \ = 1;\n    $divisors[18] = 1;\n    $divisors[19] = 1;\n    $divisors[20] = 1;\n\
    \    $divisors[21] = 1;\n    $divisors[22] = 1;\n    $divisors[23] = 1;\n    $divisors[24]\
    \ = 1;\n    $divisors[25] = 1;\n    $divisors[26] = 1;\n    $divisors[27] = 1;\n\
    \    $divisors[28] = 1;\n    $divisors[29] = 1;\n    $divisors[30] = 1;\n    $divisors[31]\
    \ = 1;\n    $divisors[32] = 1;\n    $divisors[33] = 1;\n    $divisors[34] = 1;\n\
    \    $divisors[35] = 1;\n    $divisors[36] = 1;\n    $divisors[37] = 1;\n    $divisors[38]\
    \ = 1;\n    $divisors[39] = 1;\n    $divisors[40] = 1;\n    $divisors[41] = 1;\n\
    \    $divisors[42] = 1;\n    $divisors[43] = 1;\n    $divisors[44] = 1;\n    $divisors[45]\
    \ = 1;\n    $divisors[46] = 1;\n    $divisors[47] = 1;\n    $divisors[48] = 1;\n\
    \    $divisors[49] = 1;\n    $divisors[50] = 1;\n    $divisors[51] = 1;\n    $divisors[52]\
    \ = 1;\n    $divisors[53] = 1;\n    $divisors[54] = 1;\n    $divisors[55] = 1;\n\
    \    $divisors[56] = 1;\n    $divisors[57] = 1;\n    $divisors[58] = 1;\n    $divisors[59]\
    \ = 1;\n    $divisors[60] = 1;\n    $divisors[61] = 1;\n    $divisors[62] = 1;\n\
    \    $divisors[63] = 1;\n    $divisors[64] = 1;\n    $divisors[65] = 1;\n    $divisors[66]\
    \ = 1;\n    $divisors[67] = 1;\n    $divisors[68] = 1;\n    $divisors[69] = 1;\n\
    \    $divisors[70] = 1;\n    $divisors[71] = 1;\n    $divisors[72] = 1;\n    $divisors[73]\
    \ = 1;\n    $", "    $divisors = range(1, $n);\n    sort($divisors);\n    return\
    \ $divisors[count($divisors) - 1];\n}\n", "    $divisors = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n}\n", " \
    \   $max_divisor = 1;\n    $max_divisor_p = 0;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_p\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n\
    \    $max_divisor_index = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_index\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_index = 0;\n    for($i = 1; $i <= $n; $i++) {\n       \
    \ if($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_index\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <= $n; $i++) {\n      \
    \  if($n % $i == 0) {\n            $max_divisor_value = $i;\n            $max_divisor\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n\
    \    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor\
    \ = $n / $i;\n        if($divisor == $max_divisor) {\n            $max_divisor_p\
    \ = $i;\n        }\n        if($divisor > $max_divisor) {\n            $max_divisor\
    \ = $divisor;\n            $max_divisor_p = $i;\n        }\n    }\n    return\
    \ $max_divisor_p;\n}", "    $divisors = array(\n        1 => 1,\n        2 =>\
    \ 1,\n        3 => 2,\n        4 => 2,\n        5 => 3,\n        6 => 3,\n   \
    \     7 => 4,\n        8 => 4,\n        9 => 5,\n        10 => 5,\n        11\
    \ => 6,\n        12 => 6,\n        13 => 7,\n        14 => 7,\n        15 => 8,\n\
    \        16 => 8,\n        17 => 9,\n        18 => 9,\n        19 => 10,\n   \
    \     20 => 10,\n        21 => 11,\n        22 => 11,\n        23 => 12,\n   \
    \     24 => 12,\n        25 => 13,\n        26 => 13,\n        27 => 14,\n   \
    \     28 => 14,\n        29 => 15,\n        30 => 15,\n        31 => 16,\n   \
    \     32 => 16,\n        33 => 17,\n        34 => 17,\n        35 => 18,\n   \
    \     36 => 18,\n        37 => 19,\n        38 => 19,\n        39 => 20,\n   \
    \     40 => 20,\n        41 => 21,\n        42 => 21,\n        43 => 22,\n   \
    \     44 => 22,\n        45 => 23,\n        46 => 23,\n        47 => 24,\n   \
    \     48 => 24,\n        49 => 25,\n        50 => 25,\n        51 => 26,\n   \
    \     52 => 26,\n        53 => 27,\n        54 => 27,\n        55 => 28,\n   \
    \     56 => 28,\n        57 => 29,\n        58 => 29,\n        59 => 30,\n   \
    \     60 => 30,\n        61 => 31,\n        62 => 31,\n        63 => 32,\n   \
    \     64 => 32,\n        65 => 33,\n        66 => 33,\n        67 => 34,\n   \
    \     68 => 34,\n        69 => 35,\n        70 => 35,\n        71 => 36,\n   \
    \     72 => 36,\n        73 => 37,\n        74 => 37,\n        75 => 38,\n   \
    \     76 => 38,\n        77 => 39,\n        78 => 39,\n        79 => 40,\n   \
    \     80 => 40,\n        81 => 41,\n        82 => 41,\n        83 => 42,\n   \
    \     84 => 42,\n        85 => 43,\n        86 => 43,\n        87 => 44,\n   \
    \     88 => 44,\n        89 => 45,\n        90 => 45,\n        ", "    $max_divisor\
    \ = 1;\n    $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        if ($n % $i == 0) {\n            $max_divisor_p = $i;\n\
    \            $max_divisor_p2 = $max_divisor;\n        }\n        if ($max_divisor\
    \ < $max_divisor_p) {\n            $max_divisor = $max_divisor_p;\n        }\n\
    \        if ($max_divisor_p2 < $max_divisor_p) {\n            $max_divisor_p2\
    \ = $max_divisor_p;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor\
    \ = 1;\n    $max_divisor_ind = 1;\n    for ($i = 1; $i <= $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_ind\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}", "    $divisors = range(1,\
    \ $n);\n    sort($divisors);\n    return $divisors[count($divisors) - 1];\n}\n",
  "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            $max_divisor = $i;\n     \
    \       $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = $n;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_p = $i;\n\
    \            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n\
    \    $max_divisor_p3 = 1;\n    $max_divisor_p4 = 1;\n    $max_divisor_p5 = 1;\n\
    \    $max_divisor_p6 = 1;\n    $max_divisor_p7 = 1;\n    $max_divisor_p8 = 1;\n\
    \    $max_divisor_p9 = 1;\n    $max_divisor_p10 = 1;\n    $max_divisor_p11 = 1;\n\
    \    $max_divisor_p12 = 1;\n    $max_divisor_p13 = 1;\n    $max_divisor_p14 =\
    \ 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16 = 1;\n    $max_divisor_p17\
    \ = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19 = 1;\n    $max_divisor_p20\
    \ = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22 = 1;\n    $max_divisor_p23\
    \ = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25 = 1;\n    $max_divisor_p26\
    \ = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28 = 1;\n    $max_divisor_p29\
    \ = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31 = 1;\n    $max_divisor_p32\
    \ = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34 = 1;\n    $max_divisor_p35\
    \ = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37 = 1;\n    $max_divisor_p38\
    \ = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40 = 1;\n    $max_divisor_p41\
    \ = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43 = 1;\n    $max_divisor_p44\
    \ = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46 = 1;\n    $max_divisor_p47\
    \ = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49 = 1;\n    $max_divisor_p50\
    \ = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52 = 1;\n    $max_divisor_p53\
    \ = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55 = 1;\n    $max_divisor_p56\
    \ = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58 = 1;\n    $max_divisor_p59\
    \ = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61 = 1;\n    $max_divisor_p62\
    \ = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64 = 1;\n    $max_divisor_p65\
    \ = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67 = 1;\n    $max_divisor_p68\
    \ = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70 = 1;\n    $max_divisor_p71\
    \ = 1;\n    $max_divisor_p72 = 1;", "    $divisors = range(1, $n);\n    $largest\
    \ = array_reduce($divisors, function ($largest, $divisor) {\n        return $divisor\
    \ > $largest ? $divisor : $largest;\n    });\n    return $largest;\n}\n", "  \
    \  $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            $max_divisor_p = $i;\n          \
    \  $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "   \
    \ $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_value\
    \ = $n;\n        }\n    }\n    return $max_divisor_value;\n}\n", "    $max_divisor\
    \ = 1;\n    $max_divisor_p = 1;\n    $max_divisor_pp = 1;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        $divisor = $i / $n;\n        if($divisor == $max_divisor)\
    \ {\n            $max_divisor_p = $i;\n            $max_divisor_pp = $n;\n   \
    \     }\n        if($divisor > $max_divisor) {\n            $max_divisor = $divisor;\n\
    \            $max_divisor_p = $i;\n            $max_divisor_pp = $n;\n       \
    \ }\n    }\n    return array($max_divisor_p, $max_divisor_pp);\n}\n", "    $divisors\
    \ = array();\n    $divisors[2] = 1;\n    $divisors[1] = 1;\n    $divisors[3] =\
    \ 1;\n    $divisors[4] = 1;\n    $divisors[5] = 1;\n    $divisors[6] = 1;\n  \
    \  $divisors[7] = 1;\n    $divisors[8] = 1;\n    $divisors[9] = 1;\n    $divisors[10]\
    \ = 1;\n    $divisors[11] = 1;\n    $divisors[12] = 1;\n    $divisors[13] = 1;\n\
    \    $divisors[14] = 1;\n    $divisors[15] = 1;\n    $divisors[16] = 1;\n    $divisors[17]\
    \ = 1;\n    $divisors[18] = 1;\n    $divisors[19] = 1;\n    $divisors[20] = 1;\n\
    \    $divisors[21] = 1;\n    $divisors[22] = 1;\n    $divisors[23] = 1;\n    $divisors[24]\
    \ = 1;\n    $divisors[25] = 1;\n    $divisors[26] = 1;\n    $divisors[27] = 1;\n\
    \    $divisors[28] = 1;\n    $divisors[29] = 1;\n    $divisors[30] = 1;\n    $divisors[31]\
    \ = 1;\n    $divisors[32] = 1;\n    $divisors[33] = 1;\n    $divisors[34] = 1;\n\
    \    $divisors[35] = 1;\n    $divisors[36] = 1;\n    $divisors[37] = 1;\n    $divisors[38]\
    \ = 1;\n    $divisors[39] = 1;\n    $divisors[40] = 1;\n    $divisors[41] = 1;\n\
    \    $divisors[42] = 1;\n    $divisors[43] = 1;\n    $divisors[44] = 1;\n    $divisors[45]\
    \ = 1;\n    $divisors[46] = 1;\n    $divisors[47] = 1;\n    $divisors[48] = 1;\n\
    \    $divisors[49] = 1;\n    $divisors[50] = 1;\n    $divisors[51] = 1;\n    $divisors[52]\
    \ = 1;\n    $divisors[53] = 1;\n    $divisors[54] = 1;\n    $divisors[55] = 1;\n\
    \    $divisors[56] = 1;\n    $divisors[57] = 1;\n    $divisors[58] = 1;\n    $divisors[59]\
    \ = 1;\n    $divisors[60] = 1;\n    $divisors[61] = 1;\n    $divisors[62] = 1;\n\
    \    $divisors[63] = 1;\n    $divisors[64] = 1;\n    $divisors[65] = 1;\n    $divisors[66]\
    \ = 1;\n    $divisors[67] = 1;\n    $divisors[68] = 1;\n    $divisors[69] = 1;\n\
    \    $divisors[70] = 1;\n    $divisors[71] = 1;\n    $divisors[72] = 1;\n    $divisors[73]\
    \ = 1;\n    $", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    $divisor\
    \ = 1;\n    while($divisor < $n) {\n        $divisor *= 2;\n        if($divisor\
    \ > $max_divisor_value) {\n            $max_divisor_value = $divisor;\n      \
    \      $max_divisor = $divisor;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value =\
    \ $i;\n            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }", "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor\
    \ = $i;\n            $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor_value;\n\
    }", "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n           \
    \ $divisor_p = $i / $n;\n            $divisor_p2 = $divisor_p * $divisor_p;\n\
    \            if ($divisor_p2 > $max_divisor_p2) {\n                $max_divisor_p2\
    \ = $divisor_p2;\n                $max_divisor = $i;\n            }\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor_value = $i;\n            $max_divisor = $i;\n        }\n \
    \   }\n    return $max_divisor;\n}\n$n = largest_divisor(100);\necho \"Largest\
    \ divisor of 100 is $n\";", "    $max_divisor = 1;\n    $max_divisor_ind = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor\
    \ = $i;\n            $max_divisor_ind = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 1;\n    $max_divisor_p = $max_divisor;\n  \
    \  $max_divisor_p2 = $max_divisor;\n    $max_divisor_p3 = $max_divisor;\n    $max_divisor_p4\
    \ = $max_divisor;\n    $max_divisor_p5 = $max_divisor;\n    $max_divisor_p6 =\
    \ $max_divisor;\n    $max_divisor_p7 = $max_divisor;\n    $max_divisor_p8 = $max_divisor;\n\
    \    $max_divisor_p9 = $max_divisor;\n    $max_divisor_p10 = $max_divisor;\n \
    \   $max_divisor_p11 = $max_divisor;\n    $max_divisor_p12 = $max_divisor;\n \
    \   $max_divisor_p13 = $max_divisor;\n    $max_divisor_p14 = $max_divisor;\n \
    \   $max_divisor_p15 = $max_divisor;\n    $max_divisor_p16 = $max_divisor;\n \
    \   $max_divisor_p17 = $max_divisor;\n    $max_divisor_p18 = $max_divisor;\n \
    \   $max_divisor_p19 = $max_divisor;\n    $max_divisor_p20 = $max_divisor;\n \
    \   $max_divisor_p21 = $max_divisor;\n    $max_divisor_p22 = $max_divisor;\n \
    \   $max_divisor_p23 = $max_divisor;\n    $max_divisor_p24 = $max_divisor;\n \
    \   $max_divisor_p25 = $max_divisor;\n    $max_divisor_p26 = $max_divisor;\n \
    \   $max_divisor_p27 = $max_divisor;\n    $max_divisor_p28 = $max_divisor;\n \
    \   $max_divisor_p29 = $max_divisor;\n    $max_divisor_p30 = $max_divisor;\n \
    \   $max_divisor_p31 = $max_divisor;\n    $max_divisor_p32 = $max_divisor;\n \
    \   $max_divisor_p33 = $max_divisor;\n    $max_divisor_p34 = $max_divisor;\n \
    \   $max_divisor_p35 = $max_divisor;\n    $max_divisor_p36 = $max_divisor;\n \
    \   $max_divisor_p37 = $max_divisor;\n    $max_divisor_p38 = $max_divisor;\n \
    \   $max_divisor_p39 = $max_divisor;\n    $max_divisor_p40 = $max_divisor;\n \
    \   $max_divisor_p41 = $max_divisor;\n    $max_divisor_p42 = $max_divisor;\n \
    \   $max_divisor_p43 = $max_divisor;\n    $max_divisor_p44 = $max_divisor;\n \
    \   $max_divisor_p45 = $max_divisor;\n    $max_divisor_p46 = $max_divisor;\n \
    \   $max_divisor_p47 = $max_divisor;\n    $max_divisor_p48 = $max_divisor;\n \
    \   $max_divisor_p49 = $max_divisor;\n    $max_divisor_p50 = $max_divisor;\n \
    \   $max_", "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n\
    \        if($n % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n\
    \    return max($divisors);\n}\n", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor = $max_divisor;\n\
    \        $divisor_p = 1;\n        for($j = 1; $j <= $n; $j++) {\n            if($j\
    \ % $i == 0) {\n                $divisor_p = $divisor_p + 1;\n               \
    \ $divisor = $divisor + $j;\n            }\n        }\n        if($divisor > $max_divisor)\
    \ {\n            $max_divisor = $divisor;\n            $max_divisor_p = $divisor_p;\n\
    \        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n  \
    \  $max_divisor_value = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_value\
    \ = $n;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor\
    \ = $n / $i;\n        if($divisor == $max_divisor) {\n            $max_divisor_p\
    \ = $i;\n        }\n        if($divisor > $max_divisor) {\n            $max_divisor\
    \ = $divisor;\n            $max_divisor_p = $i;\n        }\n    }\n    return\
    \ $max_divisor_p;\n}", "    $max_divisor = 1;\n    $max_divisor_index = 0;\n \
    \   for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor\
    \ = $i;\n            $max_divisor_index = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        if ($n % $i == 0) {\n            $divisor = $i;\n  \
    \          if ($divisor > $max_divisor_value) {\n                $max_divisor_value\
    \ = $divisor;\n            }\n        }\n    }\n    return $max_divisor_value;\n\
    }\n", "    $divisors = array();\n    $divisors[2] = 1;\n    $divisors[3] = 1;\n\
    \    $divisors[4] = 1;\n    $divisors[5] = 1;\n    $divisors[6] = 1;\n    $divisors[7]\
    \ = 1;\n    $divisors[8] = 1;\n    $divisors[9] = 1;\n    $divisors[10] = 1;\n\
    \    $divisors[11] = 1;\n    $divisors[12] = 1;\n    $divisors[13] = 1;\n    $divisors[14]\
    \ = 1;\n    $divisors[15] = 1;\n    $divisors[16] = 1;\n    $divisors[17] = 1;\n\
    \    $divisors[18] = 1;\n    $divisors[19] = 1;\n    $divisors[20] = 1;\n    $divisors[21]\
    \ = 1;\n    $divisors[22] = 1;\n    $divisors[23] = 1;\n    $divisors[24] = 1;\n\
    \    $divisors[25] = 1;\n    $divisors[26] = 1;\n    $divisors[27] = 1;\n    $divisors[28]\
    \ = 1;\n    $divisors[29] = 1;\n    $divisors[30] = 1;\n    $divisors[31] = 1;\n\
    \    $divisors[32] = 1;\n    $divisors[33] = 1;\n    $divisors[34] = 1;\n    $divisors[35]\
    \ = 1;\n    $divisors[36] = 1;\n    $divisors[37] = 1;\n    $divisors[38] = 1;\n\
    \    $divisors[39] = 1;\n    $divisors[40] = 1;\n    $divisors[41] = 1;\n    $divisors[42]\
    \ = 1;\n    $divisors[43] = 1;\n    $divisors[44] = 1;\n    $divisors[45] = 1;\n\
    \    $divisors[46] = 1;\n    $divisors[47] = 1;\n    $divisors[48] = 1;\n    $divisors[49]\
    \ = 1;\n    $divisors[50] = 1;\n    $divisors[51] = 1;\n    $divisors[52] = 1;\n\
    \    $divisors[53] = 1;\n    $divisors[54] = 1;\n    $divisors[55] = 1;\n    $divisors[56]\
    \ = 1;\n    $divisors[57] = 1;\n    $divisors[58] = 1;\n    $divisors[59] = 1;\n\
    \    $divisors[60] = 1;\n    $divisors[61] = 1;\n    $divisors[62] = 1;\n    $divisors[63]\
    \ = 1;\n    $divisors[64] = 1;\n    $divisors[65] = 1;\n    $divisors[66] = 1;\n\
    \    $divisors[67] = 1;\n    $divisors[68] = 1;\n    $divisors[69] = 1;\n    $divisors[70]\
    \ = 1;\n    $divisors[71] = 1;\n    $divisors[72] = 1;\n    $divisors[73] = 1;\n\
    \    $divisors[74] = 1;", "    $max_divisor = 1;\n    $max_divisor_p = $n;\n \
    \   for($i = 1; $i <= $n; $i++) {\n        $divisor = $max_divisor;\n        $divisor_p\
    \ = $max_divisor_p;\n        while($divisor <= $n) {\n            $divisor *=\
    \ $divisor_p;\n            $divisor_p++;\n        }\n        if($divisor > $n)\
    \ {\n            $max_divisor = $divisor;\n            $max_divisor_p = $divisor_p;\n\
    \        }\n    }\n    return $max_divisor;\n}\n", "    $divisors = range(1, $n);\n\
    \    sort($divisors);\n    return $divisors[count($divisors) - 1];\n}\n", "  \
    \  $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        $divisor = $max_divisor;\n        $divisor_p = 1;\n        for($j\
    \ = 1; $j <= $i; $j++) {\n            $divisor_p *= $j;\n            $divisor\
    \ += $divisor_p;\n        }\n        if($divisor > $n) {\n            $max_divisor\
    \ = $divisor;\n            $max_divisor_p = $divisor_p;\n        }\n    }\n  \
    \  return $max_divisor;\n}\n$n = largest_divisor(100);\necho \"Largest divisor\
    \ is $n\\n\";", "    $max_divisor = 1;\n    $max_divisor_ind = 1;\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor\
    \ = $i;\n            $max_divisor_ind = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_remainder = 0;\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        $divisor = $n % $i;\n        if($divisor == 0) {\n\
    \            $max_divisor_remainder = $i;\n            $max_divisor = $i;\n  \
    \      } else {\n            $max_divisor_remainder = $divisor;\n        }\n \
    \   }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor = $max_divisor * $i;\n\
    \        if($n % $divisor == 0) {\n            $max_divisor_p = $divisor;\n  \
    \          $max_divisor = $i;\n        }\n    }\n    return $max_divisor_p;\n\
    }\n", "    $max_divisor = 0;\n    $max_divisor_id = 0;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_id = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = $max_divisor;\n    for($i =\
    \ 1; $i <= $n; $i++) {\n        $divisor = $n / $i;\n        if($divisor != $max_divisor)\
    \ {\n            $max_divisor = $divisor;\n            $max_divisor_p = $i;\n\
    \        }\n    }\n    return $max_divisor_p;\n}\n", "    $divisors = range(1,\
    \ $n);\n    sort($divisors);\n    return $divisors[count($divisors) - 1];\n}",
  "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value = $i;\n\
    \            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $divisor_p = pow($i, $max_divisor);\n        if\
    \ ($divisor_p > $max_divisor_p) {\n            $max_divisor = $divisor_p;\n  \
    \          $max_divisor_p = $divisor_p;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_ind = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_ind = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value =\
    \ $i;\n        }\n        if($max_divisor_value > $n) {\n            $max_divisor_value\
    \ = $n;\n        }\n    }\n    return $max_divisor_value;\n}\n", "    $max_divisor\
    \ = 1;\n    $max_divisor_id = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_id =\
    \ $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $divisors = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n}", "  \
    \  $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n      \
    \      $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $divisors = array(\n        1 => 1,\n        2 => 1,\n        3 =>\
    \ 1,\n        4 => 2,\n        5 => 2,\n        6 => 2,\n        7 => 3,\n   \
    \     8 => 3,\n        9 => 3,\n        10 => 4,\n        11 => 4,\n        12\
    \ => 4,\n        13 => 5,\n        14 => 5,\n        15 => 5,\n        16 => 6,\n\
    \        17 => 6,\n        18 => 6,\n        19 => 7,\n        20 => 7,\n    \
    \    21 => 7,\n        22 => 8,\n        23 => 8,\n        24 => 8,\n        25\
    \ => 9,\n        26 => 9,\n        27 => 9,\n        28 => 10,\n        29 =>\
    \ 10,\n        30 => 10,\n        31 => 11,\n        32 => 11,\n        33 =>\
    \ 11,\n        34 => 11,\n        35 => 12,\n        36 => 12,\n        37 =>\
    \ 12,\n        38 => 13,\n        39 => 13,\n        40 => 13,\n        41 =>\
    \ 14,\n        42 => 14,\n        43 => 14,\n        44 => 15,\n        45 =>\
    \ 15,\n        46 => 15,\n        47 => 16,\n        48 => 16,\n        49 =>\
    \ 16,\n        50 => 17,\n        51 => 17,\n        52 => 17,\n        53 =>\
    \ 18,\n        54 => 18,\n        55 => 18,\n        56 => 19,\n        57 =>\
    \ 19,\n        58 => 19,\n        59 => 20,\n        60 => 20,\n        61 =>\
    \ 20,\n        62 => 21,\n        63 => 21,\n        64 => 21,\n        65 =>\
    \ 22,\n        66 => 22,\n        67 => 22,\n        68 => 23,\n        69 =>\
    \ 23,\n        70 => 23,\n        71 => 24,\n        72 => 24,\n        73 =>\
    \ 24,\n        74 => 25,\n        75 => 25,\n        76 => 25,\n        77 =>\
    \ 26,\n        78 => 26,\n        79 => 26,\n        80 => 27,\n        81 =>\
    \ 27,\n        82 => 27,\n        83 => 28,\n        84 => 28,\n        85 =>\
    \ 28,\n        86 => 29,\n        87 => 29,\n        88 => 29,\n        89 =>\
    \ 30,\n        90 => 30,\n        91 => 30,\n        92 => 31,\n        93 ",
  "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i\
    \ == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return max($divisors);\n\
    }", "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return max($divisors);\n\
    }\n", "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n\
    }", "    $max_divisor = 1;\n    $max_divisor_p = 0;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n      \
    \      $max_divisor_p = $i;\n        }\n    }\n    return $max_divisor;\n}\n",
  "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    $divisor = 1;\n    $divisor_value\
    \ = 1;\n    while($divisor <= $n) {\n        if($n % $divisor == 0) {\n      \
    \      $divisor_value = $divisor;\n        }\n        $divisor++;\n    }\n   \
    \ while($divisor_value <= $n) {\n        if($n % $divisor_value == 0) {\n    \
    \        $max_divisor_value = $divisor_value;\n        }\n        $divisor_value++;\n\
    \    }\n    if($max_divisor_value > $max_divisor) {\n        $max_divisor = $max_divisor_value;\n\
    \    }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor_value = $i;\n            $max_divisor = $i;\n        }\n \
    \   }\n    return $max_divisor;\n}", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors) - 1];\n}\n", "    $divisors = array();\n\
    \    $divisors[2] = 1;\n    $divisors[1] = 1;\n    $divisors[3] = 1;\n    $divisors[4]\
    \ = 1;\n    $divisors[5] = 1;\n    $divisors[6] = 1;\n    $divisors[7] = 1;\n\
    \    $divisors[8] = 1;\n    $divisors[9] = 1;\n    $divisors[10] = 1;\n    $divisors[11]\
    \ = 1;\n    $divisors[12] = 1;\n    $divisors[13] = 1;\n    $divisors[14] = 1;\n\
    \    $divisors[15] = 1;\n    $divisors[16] = 1;\n    $divisors[17] = 1;\n    $divisors[18]\
    \ = 1;\n    $divisors[19] = 1;\n    $divisors[20] = 1;\n    $divisors[21] = 1;\n\
    \    $divisors[22] = 1;\n    $divisors[23] = 1;\n    $divisors[24] = 1;\n    $divisors[25]\
    \ = 1;\n    $divisors[26] = 1;\n    $divisors[27] = 1;\n    $divisors[28] = 1;\n\
    \    $divisors[29] = 1;\n    $divisors[30] = 1;\n    $divisors[31] = 1;\n    $divisors[32]\
    \ = 1;\n    $divisors[33] = 1;\n    $divisors[34] = 1;\n    $divisors[35] = 1;\n\
    \    $divisors[36] = 1;\n    $divisors[37] = 1;\n    $divisors[38] = 1;\n    $divisors[39]\
    \ = 1;\n    $divisors[40] = 1;\n    $divisors[41] = 1;\n    $divisors[42] = 1;\n\
    \    $divisors[43] = 1;\n    $divisors[44] = 1;\n    $divisors[45] = 1;\n    $divisors[46]\
    \ = 1;\n    $divisors[47] = 1;\n    $divisors[48] = 1;\n    $divisors[49] = 1;\n\
    \    $divisors[50] = 1;\n    $divisors[51] = 1;\n    $divisors[52] = 1;\n    $divisors[53]\
    \ = 1;\n    $divisors[54] = 1;\n    $divisors[55] = 1;\n    $divisors[56] = 1;\n\
    \    $divisors[57] = 1;\n    $divisors[58] = 1;\n    $divisors[59] = 1;\n    $divisors[60]\
    \ = 1;\n    $divisors[61] = 1;\n    $divisors[62] = 1;\n    $divisors[63] = 1;\n\
    \    $divisors[64] = 1;\n    $divisors[65] = 1;\n    $divisors[66] = 1;\n    $divisors[67]\
    \ = 1;\n    $divisors[68] = 1;\n    $divisors[69] = 1;\n    $divisors[70] = 1;\n\
    \    $divisors[71] = 1;\n    $divisors[72] = 1;\n    $divisors[73] = 1;\n    $",
  "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i\
    \ == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return max($divisors);\n\
    }", "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 0;\n    $max_divisor_id = 0;\n    for($i =\
    \ 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor =\
    \ $i;\n            $max_divisor_id = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        $divisor = $n / $i;\n        if($divisor == $max_divisor) {\n\
    \            $max_divisor_p = $i;\n        }\n        if($divisor > $max_divisor)\
    \ {\n            $max_divisor = $divisor;\n            $max_divisor_p = $i;\n\
    \        }\n    }\n    return $max_divisor_p;\n}\n", "    $max_divisor = 1;\n\
    \    $max_divisor_index = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_index\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}", "    $divisors = range(1,\
    \ $n);\n    sort($divisors);\n    return $divisors[count($divisors) - 1];\n}\n",
  "    $max_divisor = 1;\n    $max_divisor_remainder = 1;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        $divisor = $n / $i;\n        if($divisor % 2 == 0) {\n    \
    \        $max_divisor_remainder = $divisor;\n        } else {\n            $max_divisor\
    \ = $divisor;\n        }\n    }\n    return $max_divisor_remainder;\n}\n", " \
    \   $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++)\
    \ {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_p\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_p = $n;\n    $max_divisor_pm = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        $divisor = $max_divisor;\n        $divisor_p = $max_divisor_p;\n\
    \        $divisor_pm = $max_divisor_pm;\n        while($divisor <= $n) {\n   \
    \         $divisor_p = $divisor * $divisor_p;\n            $divisor_pm = $divisor\
    \ * $divisor_pm;\n            $divisor = $divisor + 1;\n        }\n        if($divisor\
    \ > $max_divisor) {\n            $max_divisor = $divisor;\n            $max_divisor_p\
    \ = $divisor_p;\n            $max_divisor_pm = $divisor_pm;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors) - 1];\n}\n", "    $divisors = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n}\n", " \
    \   $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 1;\n    $max_divisor_ind = 1;\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $max_divisor\
    \ = $i;\n            $max_divisor_ind = $i;\n        }\n    }\n    return $max_divisor;\n\
    }", "    $divisors = range(1, $n+1);\n    sort($divisors);\n    return $divisors[count($divisors)-1];\n\
    }\n", "    $divisors = array();\n    for($i = 1; $i <= $n; $i++) {\n        if($n\
    \ % $i == 0) {\n            $divisors[] = $i;\n        }\n    }\n    return max($divisors);\n\
    }\n", "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n\
    \            $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor_value;\n\
    }", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n\
    \    $max_divisor_p3 = 1;\n    $max_divisor_p4 = 1;\n    $max_divisor_p5 = 1;\n\
    \    $max_divisor_p6 = 1;\n    $max_divisor_p7 = 1;\n    $max_divisor_p8 = 1;\n\
    \    $max_divisor_p9 = 1;\n    $max_divisor_p10 = 1;\n    $max_divisor_p11 = 1;\n\
    \    $max_divisor_p12 = 1;\n    $max_divisor_p13 = 1;\n    $max_divisor_p14 =\
    \ 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16 = 1;\n    $max_divisor_p17\
    \ = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19 = 1;\n    $max_divisor_p20\
    \ = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22 = 1;\n    $max_divisor_p23\
    \ = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25 = 1;\n    $max_divisor_p26\
    \ = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28 = 1;\n    $max_divisor_p29\
    \ = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31 = 1;\n    $max_divisor_p32\
    \ = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34 = 1;\n    $max_divisor_p35\
    \ = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37 = 1;\n    $max_divisor_p38\
    \ = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40 = 1;\n    $max_divisor_p41\
    \ = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43 = 1;\n    $max_divisor_p44\
    \ = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46 = 1;\n    $max_divisor_p47\
    \ = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49 = 1;\n    $max_divisor_p50\
    \ = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52 = 1;\n    $max_divisor_p53\
    \ = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55 = 1;\n    $max_divisor_p56\
    \ = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58 = 1;\n    $max_divisor_p59\
    \ = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61 = 1;\n    $max_divisor_p62\
    \ = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64 = 1;\n    $max_divisor_p65\
    \ = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67 = 1;\n    $max_divisor_p68\
    \ = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70 = 1;\n    $max_divisor_p71\
    \ = 1;\n    $max_divisor_p72 = 1;", "    $max_divisor = 1;\n    $max_divisor_id\
    \ = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_id = $i;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_p =\
    \ 1;\n    $max_divisor_p2 = 1;\n    $max_divisor_p3 = 1;\n    $max_divisor_p4\
    \ = 1;\n    $max_divisor_p5 = 1;\n    $max_divisor_p6 = 1;\n    $max_divisor_p7\
    \ = 1;\n    $max_divisor_p8 = 1;\n    $max_divisor_p9 = 1;\n    $max_divisor_p10\
    \ = 1;\n    $max_divisor_p11 = 1;\n    $max_divisor_p12 = 1;\n    $max_divisor_p13\
    \ = 1;\n    $max_divisor_p14 = 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16\
    \ = 1;\n    $max_divisor_p17 = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19\
    \ = 1;\n    $max_divisor_p20 = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22\
    \ = 1;\n    $max_divisor_p23 = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25\
    \ = 1;\n    $max_divisor_p26 = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28\
    \ = 1;\n    $max_divisor_p29 = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31\
    \ = 1;\n    $max_divisor_p32 = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34\
    \ = 1;\n    $max_divisor_p35 = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37\
    \ = 1;\n    $max_divisor_p38 = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40\
    \ = 1;\n    $max_divisor_p41 = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43\
    \ = 1;\n    $max_divisor_p44 = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46\
    \ = 1;\n    $max_divisor_p47 = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49\
    \ = 1;\n    $max_divisor_p50 = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52\
    \ = 1;\n    $max_divisor_p53 = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55\
    \ = 1;\n    $max_divisor_p56 = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58\
    \ = 1;\n    $max_divisor_p59 = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61\
    \ = 1;\n    $max_divisor_p62 = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64\
    \ = 1;\n    $max_divisor_p65 = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67\
    \ = 1;\n    $max_divisor_p68 = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70\
    \ = 1;\n    $max_divisor_p71 = 1;\n    $max_divisor_p72 = 1;", "    $max_divisor\
    \ = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor\
    \ = $n % $i;\n        if($divisor == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_p = $divisor;\n        }\n    }\n    return $max_divisor;\n\
    }", "    $max_divisor = 1;\n    $max_divisor_index = 0;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_index = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor_p = $i;\n    \
    \        $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n}", " \
    \   $max_divisor = 0;\n    $max_divisor_value = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            $max_divisor = $i;\n     \
    \       $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor_value;\n\
    }", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value = $i;\n\
    \            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = $n;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_p = $i;\n\
    \            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n}",
  "    $max_divisor = 1;\n    $max_divisor_p = $max_divisor;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_p = $i;\n\
    \        }\n    }\n    return $max_divisor_p;\n}", "    $max_divisor = 1;\n  \
    \  $max_divisor_ind = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n %\
    \ $i == 0) {\n            if ($max_divisor < $i) {\n                $max_divisor\
    \ = $i;\n                $max_divisor_ind = $i;\n            }\n        }\n  \
    \  }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    $max_divisor_pp = 1;\n    $max_divisor_ppp = 1;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n\
    \            $max_divisor_p = $max_divisor * $i;\n            $max_divisor_pp\
    \ = $max_divisor_p * $i;\n            $max_divisor_ppp = $max_divisor_pp * $i;\n\
    \        }\n    }\n    return array($max_divisor, $max_divisor_p, $max_divisor_pp,\
    \ $max_divisor_ppp);\n}\n", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value\
    \ = $i;\n            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 1;\n    $max_divisor_ind = 1;\n    for($i =\
    \ 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor =\
    \ $i;\n            $max_divisor_ind = $i;\n        }\n    }\n    return $max_divisor;\n\
    }", "    $divisors = range(1, $n);\n    $largest = array_reduce($divisors, function($largest,\
    \ $divisor) {\n        return $divisor > $largest ? $divisor : $largest;\n   \
    \ });\n    return $largest;\n}\n", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor = $max_divisor;\n\
    \        $divisor_p = 1;\n        for($j = 1; $j <= $n; $j++) {\n            if($i\
    \ % $j == 0) {\n                $divisor *= $j;\n                $divisor_p *=\
    \ $j;\n            }\n        }\n        if($divisor > $max_divisor) {\n     \
    \       $max_divisor = $divisor;\n            $max_divisor_p = $divisor_p;\n \
    \       }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n   \
    \ $max_divisor_p = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            $max_divisor = $i;\n            $max_divisor_p = $i;\n\
    \        }\n    }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n    $max_divisor_ind\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_ind = $i;\n        }\n   \
    \ }\n    return $max_divisor;\n}", "    $max_divisor = 1;\n    $max_divisor_id\
    \ = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_id = $i;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_p =\
    \ 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n        \
    \    $max_divisor_p = $i;\n            $max_divisor = $i;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors) - 1];\n}\n", "    $max_divisor = 1;\n \
    \   $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i\
    \ == 0) {\n            $max_divisor_p = $i;\n            $max_divisor = $i;\n\
    \        }\n    }\n    return $max_divisor;\n}\n", "    $divisors = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return max($divisors);\n}\n", "    $divisors =\
    \ array(1);\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n \
    \           $divisors[] = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_value = 1;\n    for($i = 1; $i\
    \ <= $n; $i++) {\n        $divisor = $n / $i;\n        if($divisor % 2 == 0) {\n\
    \            $divisor_value = $divisor;\n        } else {\n            $divisor_value\
    \ = $divisor + 1;\n        }\n        if($divisor_value > $max_divisor_value)\
    \ {\n            $max_divisor_value = $divisor_value;\n            $max_divisor\
    \ = $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor =\
    \ 1;\n    $max_divisor_p = 1;\n    for($i = 1; $i <= $n; $i++) {\n        $divisor\
    \ = $max_divisor * $i;\n        if($n % $divisor == 0) {\n            $max_divisor_p\
    \ = $i;\n            $max_divisor = $divisor;\n        }\n    }\n    return $max_divisor_p;\n\
    }", "    $max_divisor = 0;\n    $max_divisor_value = 0;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if ($n % $i == 0) {\n            if ($max_divisor < $i)\
    \ {\n                $max_divisor = $i;\n                $max_divisor_value =\
    \ $n;\n            }\n        }\n    }\n    return $max_divisor_value;\n}\n",
  "    $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        $divisor = $n % $i;\n        if($divisor == 0) {\n\
    \            $max_divisor = $i;\n            $max_divisor_p = $divisor;\n    \
    \    }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_index\
    \ = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n    \
    \        $max_divisor = $i;\n            $max_divisor_index = $i;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_ind\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_ind = $i;\n        }\n   \
    \ }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_p\
    \ = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_p = $i;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor_value;\n}", "    $divisors = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $divisors[]\
    \ = $i;\n        }\n    }\n    return $divisors[count($divisors)-1];\n}\n", " \
    \   $max_divisor = 1;\n    $max_divisor_value = $n;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            $max_divisor = $i;\n     \
    \       $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n\
    \    $max_divisor_p3 = 1;\n    $max_divisor_p4 = 1;\n    $max_divisor_p5 = 1;\n\
    \    $max_divisor_p6 = 1;\n    $max_divisor_p7 = 1;\n    $max_divisor_p8 = 1;\n\
    \    $max_divisor_p9 = 1;\n    $max_divisor_p10 = 1;\n    $max_divisor_p11 = 1;\n\
    \    $max_divisor_p12 = 1;\n    $max_divisor_p13 = 1;\n    $max_divisor_p14 =\
    \ 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16 = 1;\n    $max_divisor_p17\
    \ = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19 = 1;\n    $max_divisor_p20\
    \ = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22 = 1;\n    $max_divisor_p23\
    \ = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25 = 1;\n    $max_divisor_p26\
    \ = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28 = 1;\n    $max_divisor_p29\
    \ = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31 = 1;\n    $max_divisor_p32\
    \ = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34 = 1;\n    $max_divisor_p35\
    \ = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37 = 1;\n    $max_divisor_p38\
    \ = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40 = 1;\n    $max_divisor_p41\
    \ = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43 = 1;\n    $max_divisor_p44\
    \ = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46 = 1;\n    $max_divisor_p47\
    \ = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49 = 1;\n    $max_divisor_p50\
    \ = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52 = 1;\n    $max_divisor_p53\
    \ = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55 = 1;\n    $max_divisor_p56\
    \ = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58 = 1;\n    $max_divisor_p59\
    \ = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61 = 1;\n    $max_divisor_p62\
    \ = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64 = 1;\n    $max_divisor_p65\
    \ = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67 = 1;\n    $max_divisor_p68\
    \ = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70 = 1;\n    $max_divisor_p71\
    \ = 1;\n    $max_divisor_p72 = 1;", "    $max_divisor = 1;\n    $max_divisor_index\
    \ = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_index = $i;\n        }\n \
    \   }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_id\
    \ = 0;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n      \
    \      $max_divisor = $i;\n            $max_divisor_id = $i;\n        }\n    }\n\
    \    return $max_divisor;\n}\n", "    $max_divisor = 1;\n    $max_divisor_value\
    \ = $n;\n    for($i = 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n     \
    \       $max_divisor = $i;\n            $max_divisor_value = $n;\n        }\n\
    \    }\n    return $max_divisor;\n}", "    $divisors = range(1, $n);\n    sort($divisors);\n\
    \    return $divisors[count($divisors)-1];\n}\n", "    $max_divisor = 1;\n   \
    \ $max_divisor_p = 1;\n    $max_divisor_p2 = 1;\n    $max_divisor_p3 = 1;\n  \
    \  $max_divisor_p4 = 1;\n    $max_divisor_p5 = 1;\n    $max_divisor_p6 = 1;\n\
    \    $max_divisor_p7 = 1;\n    $max_divisor_p8 = 1;\n    $max_divisor_p9 = 1;\n\
    \    $max_divisor_p10 = 1;\n    $max_divisor_p11 = 1;\n    $max_divisor_p12 =\
    \ 1;\n    $max_divisor_p13 = 1;\n    $max_divisor_p14 = 1;\n    $max_divisor_p15\
    \ = 1;\n    $max_divisor_p16 = 1;\n    $max_divisor_p17 = 1;\n    $max_divisor_p18\
    \ = 1;\n    $max_divisor_p19 = 1;\n    $max_divisor_p20 = 1;\n    $max_divisor_p21\
    \ = 1;\n    $max_divisor_p22 = 1;\n    $max_divisor_p23 = 1;\n    $max_divisor_p24\
    \ = 1;\n    $max_divisor_p25 = 1;\n    $max_divisor_p26 = 1;\n    $max_divisor_p27\
    \ = 1;\n    $max_divisor_p28 = 1;\n    $max_divisor_p29 = 1;\n    $max_divisor_p30\
    \ = 1;\n    $max_divisor_p31 = 1;\n    $max_divisor_p32 = 1;\n    $max_divisor_p33\
    \ = 1;\n    $max_divisor_p34 = 1;\n    $max_divisor_p35 = 1;\n    $max_divisor_p36\
    \ = 1;\n    $max_divisor_p37 = 1;\n    $max_divisor_p38 = 1;\n    $max_divisor_p39\
    \ = 1;\n    $max_divisor_p40 = 1;\n    $max_divisor_p41 = 1;\n    $max_divisor_p42\
    \ = 1;\n    $max_divisor_p43 = 1;\n    $max_divisor_p44 = 1;\n    $max_divisor_p45\
    \ = 1;\n    $max_divisor_p46 = 1;\n    $max_divisor_p47 = 1;\n    $max_divisor_p48\
    \ = 1;\n    $max_divisor_p49 = 1;\n    $max_divisor_p50 = 1;\n    $max_divisor_p51\
    \ = 1;\n    $max_divisor_p52 = 1;\n    $max_divisor_p53 = 1;\n    $max_divisor_p54\
    \ = 1;\n    $max_divisor_p55 = 1;\n    $max_divisor_p56 = 1;\n    $max_divisor_p57\
    \ = 1;\n    $max_divisor_p58 = 1;\n    $max_divisor_p59 = 1;\n    $max_divisor_p60\
    \ = 1;\n    $max_divisor_p61 = 1;\n    $max_divisor_p62 = 1;\n    $max_divisor_p63\
    \ = 1;\n    $max_divisor_p64 = 1;\n    $max_divisor_p65 = 1;\n    $max_divisor_p66\
    \ = 1;\n    $max_divisor_p67 = 1;\n    $max_divisor_p68 = 1;\n    $max_divisor_p69\
    \ = 1;\n    $max_divisor_p70 = 1;\n    $max_divisor_p71 = 1;\n    $max_divisor_p72\
    \ = 1;", "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor_value\
    \ = $i;\n            $max_divisor = $i;\n        }\n    }\n    return $max_divisor;\n\
    }", "    $max_divisor = 1;\n    $max_divisor_value = $n;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_value = $n;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_id = 1;\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n  \
    \          $max_divisor_id = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 1;\n    $max_divisor_pp = 1;\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $divisor_p = $n % $i;\n        $divisor_pp\
    \ = $n % $i * $i;\n        if($divisor_p === 0) {\n            $divisor_p = 1;\n\
    \        }\n        if($divisor_pp === 0) {\n            $divisor_pp = 1;\n  \
    \      }\n        if($divisor_pp > $divisor_p) {\n            $max_divisor = $i;\n\
    \            $max_divisor_p = $divisor_p;\n            $max_divisor_pp = $divisor_pp;\n\
    \        }\n    }\n    return array($max_divisor, $max_divisor_p, $max_divisor_pp);\n\
    }\n", "    $divisors = range(1, $n+1);\n    $largest = 0;\n    foreach ($divisors\
    \ as $divisor) {\n        if ($n % $divisor === 0) {\n            $largest = $divisor;\n\
    \            break;\n        }\n    }\n    return $largest;\n}\n", "    $max_divisor\
    \ = 1;\n    $max_divisor_p = 0;\n    $max_divisor_p1 = 1;\n    $max_divisor_p2\
    \ = 1;\n    $max_divisor_p3 = 1;\n    $max_divisor_p4 = 1;\n    $max_divisor_p5\
    \ = 1;\n    $max_divisor_p6 = 1;\n    $max_divisor_p7 = 1;\n    $max_divisor_p8\
    \ = 1;\n    $max_divisor_p9 = 1;\n    $max_divisor_p10 = 1;\n    $max_divisor_p11\
    \ = 1;\n    $max_divisor_p12 = 1;\n    $max_divisor_p13 = 1;\n    $max_divisor_p14\
    \ = 1;\n    $max_divisor_p15 = 1;\n    $max_divisor_p16 = 1;\n    $max_divisor_p17\
    \ = 1;\n    $max_divisor_p18 = 1;\n    $max_divisor_p19 = 1;\n    $max_divisor_p20\
    \ = 1;\n    $max_divisor_p21 = 1;\n    $max_divisor_p22 = 1;\n    $max_divisor_p23\
    \ = 1;\n    $max_divisor_p24 = 1;\n    $max_divisor_p25 = 1;\n    $max_divisor_p26\
    \ = 1;\n    $max_divisor_p27 = 1;\n    $max_divisor_p28 = 1;\n    $max_divisor_p29\
    \ = 1;\n    $max_divisor_p30 = 1;\n    $max_divisor_p31 = 1;\n    $max_divisor_p32\
    \ = 1;\n    $max_divisor_p33 = 1;\n    $max_divisor_p34 = 1;\n    $max_divisor_p35\
    \ = 1;\n    $max_divisor_p36 = 1;\n    $max_divisor_p37 = 1;\n    $max_divisor_p38\
    \ = 1;\n    $max_divisor_p39 = 1;\n    $max_divisor_p40 = 1;\n    $max_divisor_p41\
    \ = 1;\n    $max_divisor_p42 = 1;\n    $max_divisor_p43 = 1;\n    $max_divisor_p44\
    \ = 1;\n    $max_divisor_p45 = 1;\n    $max_divisor_p46 = 1;\n    $max_divisor_p47\
    \ = 1;\n    $max_divisor_p48 = 1;\n    $max_divisor_p49 = 1;\n    $max_divisor_p50\
    \ = 1;\n    $max_divisor_p51 = 1;\n    $max_divisor_p52 = 1;\n    $max_divisor_p53\
    \ = 1;\n    $max_divisor_p54 = 1;\n    $max_divisor_p55 = 1;\n    $max_divisor_p56\
    \ = 1;\n    $max_divisor_p57 = 1;\n    $max_divisor_p58 = 1;\n    $max_divisor_p59\
    \ = 1;\n    $max_divisor_p60 = 1;\n    $max_divisor_p61 = 1;\n    $max_divisor_p62\
    \ = 1;\n    $max_divisor_p63 = 1;\n    $max_divisor_p64 = 1;\n    $max_divisor_p65\
    \ = 1;\n    $max_divisor_p66 = 1;\n    $max_divisor_p67 = 1;\n    $max_divisor_p68\
    \ = 1;\n    $max_divisor_p69 = 1;\n    $max_divisor_p70 = 1;\n    $max_divisor_p71\
    \ = 1;\n", "    $max_divisor = 1;\n    $max_divisor_index = 0;\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n\
    \            $max_divisor_index = $i;\n        }\n    }\n    return $max_divisor;\n\
    }\n", "    $max_divisor = 1;\n    $max_divisor_p = 0;\n    for($i = 1; $i <= $n;\
    \ $i++) {\n        if($n % $i == 0) {\n            $max_divisor = $i;\n      \
    \      $max_divisor_p = $i;\n        }\n    }\n    return $max_divisor;\n}", " \
    \   $divisors = range(1, $n);\n    sort($divisors);\n    return $divisors[count($divisors)\
    \ - 1];\n}\n", "    $divisors = range(1, $n);\n    sort($divisors);\n    return\
    \ $divisors[count($divisors) - 1];\n}\n", "    $max_divisor = 0;\n    for($i =\
    \ 1; $i <= $n; $i++) {\n        if($n % $i == 0) {\n            $max_divisor =\
    \ $i;\n        }\n    }\n    return $max_divisor;\n}\n", "    $max_divisor = 1;\n\
    \    $max_divisor_ind = 1;\n    for($i = 1; $i <= $n; $i++) {\n        if($n %\
    \ $i == 0) {\n            $max_divisor = $i;\n            $max_divisor_ind = $i;\n\
    \        }\n    }\n    return $max_divisor;\n}\n", "    $divisors = range(1, $n);\n\
    \    sort($divisors);\n    return $divisors[count($divisors)-1];\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

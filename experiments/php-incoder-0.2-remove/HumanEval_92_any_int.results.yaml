language: php
name: HumanEval_92_any_int
results:
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5bllpkz.php:15\n\
    Stack trace:\n#0 /tmp/tmpa5bllpkz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5bllpkz.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ == $y - $z) {\n        return true;\n    }\n    if ($x == $y - $y) {\n     \
    \   return true;\n    }\n    if ($x == $y + $y) {\n        return true;\n    }\n\
    \    if ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y + $z)\
    \ {\n        return true;\n    }\n    if ($x == $z + $y) {\n        return true;\n\
    \    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if ($x == $z\
    \ - $z) {\n        return true;\n    }\n    if ($x == $z + $z) {\n        return\
    \ true;\n    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if\
    \ ($x == $z + $y) {\n        return true;\n    }\n    if ($x == $z + $z) {\n \
    \       return true;\n    }\n    if ($x == $z - $z) {\n        return true;\n\
    \    }\n    if ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y\
    \ + $z) {\n        return true;\n    }\n    if ($x == $y + $y) {\n        return\
    \ true;\n    }\n    if ($x == $y - $y) {\n        return true;\n    }\n    if\
    \ ($x == $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n \
    \       return true;\n    }\n    if ($x == $z + $y) {\n        return true;\n\
    \    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if ($x == $z\
    \ - $z) {\n        return true;\n    }\n    if ($x == $z + $z) {\n        return\
    \ true;\n    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if\
    \ ($x == $z + $y) {\n        return true;\n    }\n    if ($x == $z + $z) {\n \
    \       return true;\n    }\n    if ($x == $z - $z) {\n        return true;\n\
    \    }\n    if ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y\
    \ + $z) {\n        return true;\n    }\n    if ($x == $y + $y) {\n        return\
    \ true;\n    }\n    if ($x == $y - $y) {\n        return true;\n    }\n    if\
    \ ($x == $y + $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n \
    \       return true;\n    }\n    if ($x == $z + $y) {\n        return true;\n\
    \    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if ($x == $z\
    \ - $z) {\n        return true;\n    }\n    if ($x == $z + $z) {\n        return\
    \ true;\n    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if\
    \ (\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpzs9pioxx.php on line 125

    '
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3v5a8295.php:15\n\
    Stack trace:\n#0 /tmp/tmp3v5a8295.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3v5a8295.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5bllpkz.php:15\n\
    Stack trace:\n#0 /tmp/tmpa5bllpkz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5bllpkz.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3v5a8295.php:15\n\
    Stack trace:\n#0 /tmp/tmp3v5a8295.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3v5a8295.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ != $y || $x != $z) {\n        return false;\n    }\n    if ($x != $y && $x !=\
    \ $z) {\n        return false;\n    }\n    if ($x == $y && $x == $z) {\n     \
    \   return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcq9t6if0.php:26\n\
    Stack trace:\n#0 /tmp/tmpcq9t6if0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcq9t6if0.php\
    \ on line 26\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8u29n_1.php:14\n\
    Stack trace:\n#0 /tmp/tmpj8u29n_1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj8u29n_1.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x + $y == $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8gv9b15.php:17\n\
    Stack trace:\n#0 /tmp/tmph8gv9b15.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph8gv9b15.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8u29n_1.php:14\n\
    Stack trace:\n#0 /tmp/tmpj8u29n_1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj8u29n_1.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3v5a8295.php:15\n\
    Stack trace:\n#0 /tmp/tmp3v5a8295.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3v5a8295.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x + $y == $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8gv9b15.php:17\n\
    Stack trace:\n#0 /tmp/tmph8gv9b15.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph8gv9b15.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3v5a8295.php:15\n\
    Stack trace:\n#0 /tmp/tmp3v5a8295.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3v5a8295.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8u29n_1.php:14\n\
    Stack trace:\n#0 /tmp/tmpj8u29n_1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj8u29n_1.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x + $y == $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8gv9b15.php:17\n\
    Stack trace:\n#0 /tmp/tmph8gv9b15.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph8gv9b15.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpout40l5y.php:14\n\
    Stack trace:\n#0 /tmp/tmpout40l5y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpout40l5y.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == ($x + $y + $z);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgklx_09.php:15\n\
    Stack trace:\n#0 /tmp/tmpvgklx_09.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvgklx_09.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  if ($x == $y + $z) {\n    return true;\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuok426gf.php:17\n\
    Stack trace:\n#0 /tmp/tmpuok426gf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuok426gf.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == ($x + $y + $z);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgklx_09.php:15\n\
    Stack trace:\n#0 /tmp/tmpvgklx_09.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvgklx_09.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Write your code here\n}\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyef0p6z.php:14\n\
    Stack trace:\n#0 /tmp/tmpzyef0p6z.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzyef0p6z.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Write your code here\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qbznxc6.php:16\n\
    Stack trace:\n#0 /tmp/tmp0qbznxc6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0qbznxc6.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5bllpkz.php:15\n\
    Stack trace:\n#0 /tmp/tmpa5bllpkz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5bllpkz.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpout40l5y.php:14\n\
    Stack trace:\n#0 /tmp/tmpout40l5y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpout40l5y.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8u29n_1.php:14\n\
    Stack trace:\n#0 /tmp/tmpj8u29n_1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj8u29n_1.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return $x === $y + $z;\n}\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0w83oqr0.php:14\n\
    Stack trace:\n#0 /tmp/tmp0w83oqr0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0w83oqr0.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5bllpkz.php:15\n\
    Stack trace:\n#0 /tmp/tmpa5bllpkz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5bllpkz.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpout40l5y.php:14\n\
    Stack trace:\n#0 /tmp/tmpout40l5y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpout40l5y.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ != $y || $x != $z) {\n        return false;\n    }\n    if ($x != $y && $x !=\
    \ $z) {\n        return false;\n    }\n    if ($x == $y && $x == $z) {\n     \
    \   return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcq9t6if0.php:26\n\
    Stack trace:\n#0 /tmp/tmpcq9t6if0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcq9t6if0.php\
    \ on line 26\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5bllpkz.php:15\n\
    Stack trace:\n#0 /tmp/tmpa5bllpkz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa5bllpkz.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpout40l5y.php:14\n\
    Stack trace:\n#0 /tmp/tmpout40l5y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpout40l5y.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  // Your code goes here\n}\n\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnu7onucc.php:15\n\
    Stack trace:\n#0 /tmp/tmpnu7onucc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnu7onucc.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3v5a8295.php:15\n\
    Stack trace:\n#0 /tmp/tmp3v5a8295.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3v5a8295.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return $x === $y + $z;\n}\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0w83oqr0.php:14\n\
    Stack trace:\n#0 /tmp/tmp0w83oqr0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0w83oqr0.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ == $y - $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n     \
    \   return true;\n    }\n    if ($x == $y + $z) {\n        return true;\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc526c26d.php:28\n\
    Stack trace:\n#0 /tmp/tmpc526c26d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc526c26d.php\
    \ on line 28\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x + $y == $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptc97xi1_.php:18\n\
    Stack trace:\n#0 /tmp/tmptc97xi1_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptc97xi1_.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ == $y - $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n     \
    \   return true;\n    }\n    if ($x == $y + $z) {\n        return true;\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc526c26d.php:28\n\
    Stack trace:\n#0 /tmp/tmpc526c26d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc526c26d.php\
    \ on line 28\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x || $x + $y + $z == $y || $x + $y\
    \ + $z == $z;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwfmscaw3.php:14\n\
    Stack trace:\n#0 /tmp/tmpwfmscaw3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwfmscaw3.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ == $y - $z) {\n        return true;\n    }\n    if ($x == $y - $z) {\n     \
    \   return true;\n    }\n    if ($x == $y + $z) {\n        return true;\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc526c26d.php:28\n\
    Stack trace:\n#0 /tmp/tmpc526c26d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc526c26d.php\
    \ on line 28\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ == $y - $z) {\n        return true;\n    }\n    if ($x == $y - $y) {\n     \
    \   return true;\n    }\n    if ($x == $y + $y) {\n        return true;\n    }\n\
    \    if ($x == $y - $z) {\n        return true;\n    }\n    if ($x == $y + $z)\
    \ {\n        return true;\n    }\n    if ($x == $z + $y) {\n        return true;\n\
    \    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if ($x == $z\
    \ - $z) {\n        return true;\n    }\n    if ($x == $z + $z) {\n        return\
    \ true;\n    }\n    if ($x == $z - $y) {\n        return true;\n    }\n    if\
    \ ($x == $z + $y) {\n        return true;\n    }\n    if ($x == $z + $z) {\n \
    \       return true;\n    }\n    if ($x == $z - $z) {\n        return true;\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx4vdrf9.php:58\n\
    Stack trace:\n#0 /tmp/tmphx4vdrf9.php(68): test()\n#1 {main}\n  thrown in /tmp/tmphx4vdrf9.php\
    \ on line 58\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == ($x + $y + $z);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgklx_09.php:15\n\
    Stack trace:\n#0 /tmp/tmpvgklx_09.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvgklx_09.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return $x == $y + $z;\n}\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2ytrpsl.php:14\n\
    Stack trace:\n#0 /tmp/tmpc2ytrpsl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc2ytrpsl.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z == 100);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4c43fj6.php:14\n\
    Stack trace:\n#0 /tmp/tmpq4c43fj6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq4c43fj6.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return $x === $y + $z;\n}\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0w83oqr0.php:14\n\
    Stack trace:\n#0 /tmp/tmp0w83oqr0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0w83oqr0.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6px1vjis.php:15\n\
    Stack trace:\n#0 /tmp/tmp6px1vjis.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6px1vjis.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8u29n_1.php:14\n\
    Stack trace:\n#0 /tmp/tmpj8u29n_1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj8u29n_1.php\
    \ on line 14\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3t1ijxo.php:18\n\
    Stack trace:\n#0 /tmp/tmpi3t1ijxo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi3t1ijxo.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevxtk2s5.php:16\n\
    Stack trace:\n#0 /tmp/tmpevxtk2s5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpevxtk2s5.php\
    \ on line 16\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    if ($x\
    \ == $y || $x == $z) {\n        return true;\n    }\n    if ($y == $z) {\n   \
    \     return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7knmz08w.php:23\n\
    Stack trace:\n#0 /tmp/tmp7knmz08w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7knmz08w.php\
    \ on line 23\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == ($x + $y + $z);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgklx_09.php:15\n\
    Stack trace:\n#0 /tmp/tmpvgklx_09.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvgklx_09.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n  if ($x == $y + $z) {\n    return true;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhsi0w54.php:18\n\
    Stack trace:\n#0 /tmp/tmpzhsi0w54.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzhsi0w54.php\
    \ on line 18\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    return ($x + $y + $z) == $x + $y + $z;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_han387q.php:15\n\
    Stack trace:\n#0 /tmp/tmp_han387q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_han387q.php\
    \ on line 15\n"
  timestamp: 1659978454
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\nfunction any_int($x,\
    \ $y, $z) {\n    if ($x == $y + $z) {\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2dzf2vd.php:17\n\
    Stack trace:\n#0 /tmp/tmpv2dzf2vd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2dzf2vd.php\
    \ on line 17\n"
  timestamp: 1659978454

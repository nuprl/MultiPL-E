language: php
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strrchr', $grades);\n    $grades = array_map('strripos',\
    \ $grades);\n    $grades = array_map('strriendpos', $grades);\n    $grades = array_map('strriends',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrevstr',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrevstr', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrevstr',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrevstr', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrevstr',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strrev\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "strrev" in /tmp/tmpfo0gjaxc.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'A-', 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'D+',\
    \ 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace', array('D',\
    \ 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'E'), $grades);\n \
    \   $grades = array_map('str_replace', array('D+', 'D', 'D-', 'E'), $grades);\n\
    \    $grades = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-',\
    \ 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace', array('D+',\
    \ 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace', array('D',\
    \ 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D+', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D', 'A-', 'B',\
    \ 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D+', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-',\
    \ 'E'), \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmped3dzcx4.php on line 46

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcasecmp', $grades);\n    $grades =\
    \ array_map('strnatcasecmp', $grades);\n    $grades = array_map('strnatcasecmp',\
    \ $grades);\n    $grades = array_map\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpvsl_rfxa.php
    on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpl_ukldaa.php on line 80

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpl_ukldaa.php on line 80

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpj9uqg7jp.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_values($grades);\n    $grades = array_combine($grades, $grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpw347sfhz.php on line 74

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"strtoupper\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"strrev\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"strpos\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"strrpos\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_sum($grades);\n    $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpaioq1kxh.php
    on line 73

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpb_nk23q8.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"floatval\", $grades);\n\
    \  $grades = array_filter($grades);\n  $grades = array_map(\"round\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpfvggqc7j.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('trim', $grades);\n    $grades = array_map('floatval', $grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strnatcmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strnatcmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strnatcmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strnatcmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strnatcmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('str\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "str" in /tmp/tmpt4oqp_n2.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(',', $grades);\n  $grades = array_map('trim', $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('floatval', $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('round', $grades);\n  $grades\
    \ = array_map('intval', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('chr', $grades);\n  $grades = array_filter($grades);\n  return implode(',',\
    \ $grades);\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpqaw3s8k6.php:23\nStack trace:\n#0\
    \ /tmp/tmpqaw3s8k6.php(23): explode(',', Array)\n#1 /tmp/tmpqaw3s8k6.php(37):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpqaw3s8k6.php(41): candidate(Array)\n\
    #3 /tmp/tmpqaw3s8k6.php(49): test()\n#4 {main}\n  thrown in /tmp/tmpqaw3s8k6.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"chr\", $grades);\n    $grades = array_map(\"\
    strtoupper\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"str_repeat\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_repeat\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"str_replace\"\
    , $grades);\n    $grades = array_map(\"str_repeat\", $grades);\n    $grades =\
    \ array_map(\"strlen\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_repeat\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n    $grades\
    \ = array_map(\"str_repeat\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_repeat\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"str_repeat\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_repeat\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"str_replace\"\
    , $grades);\n    $grades = array_map(\"str_repeat\", $grades);\n    $grades =\
    \ array_map(\"strlen\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_repeat\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmp89vta_3f.php
    on line 68

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpj9uqg7jp.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = array_map('floatval', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('chr', $grades);\n  $grades = array_map('strtoupper', $grades);\n\
    \  $grades = array_map('strrev', $grades);\n  $grades = array_map('strlen', $grades);\n\
    \  $grades = array_map('strpos', $grades);\n  $grades = array_map('strrpos', $grades);\n\
    \  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('strcasecmp',\
    \ $grades);\n  $grades = array_map('strnatcmp', $grades);\n  $grades = array_map('strnatcasecmp',\
    \ $grades);\n  $grades = array_map('strcmp', $grades);\n  $grades = array_map('\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpuvqdbmbu.php
    on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmp1058agdi.php
    on line 65

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpjqn362bf.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpb_nk23q8.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map(\"floatval\", $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map(\"round\", $grades);\n  $grades\
    \ = array_map(\"intval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strlen\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpvasgokcx.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grade\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpg_l6_omc.php
    on line 74

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpi_gyksuk.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp1qyh21iv.php on line 73

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-',\
    \ 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-',\
    \ 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-',\
    \ 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-',\
    \ 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0', 'E'), $grades);\n\
    \    $grades = array_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpqs7qgcwl.php
    on line 42

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code goes here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxex984a.php:30\n\
    Stack trace:\n#0 /tmp/tmplxex984a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplxex984a.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('chr', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmptda83n66.php on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(',', $grades);\n  $grades = array_map('trim', $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('floatval', $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('round', $grades);\n  $grades\
    \ = array_map('intval', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('chr', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('strtoupper', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('strrev', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('strpos', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('strrpos', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n \
    \ $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('strlen', $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('str_replace\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "str_replace" in /tmp/tmpvw6owsuc.php
    on line 71

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\",\
    \ $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n\
    \    $grades = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\",\
    \ $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmppx1_rw70.php on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(',', $grades);\n  $grades = array_map('floatval', $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('round', $grades);\n  $grades\
    \ = array_map('intval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strtoupper',\
    \ $grades);\n  $grades = array_map('strtolower', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strlen',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp5o5heae5.php on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_filter($grades);\n  $grades =\
    \ array_map(\"trim\", $grades);\n  $grades = array_map(\"floatval\", $grades);\n\
    \  $grades = array_map(\"round\", $grades);\n  $grades = array_map(\"intval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades =\
    \ array_map(\"strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\",\
    \ $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"\
    strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n  $grades\
    \ = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"strcasecmp\", $grades);\n\
    \  $grades = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\"\
    , $grades);\n  $grades = array_map(\"strcasecmp\", $grades);\n  $grades = array_map(\"\
    strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades\
    \ = array_map(\"strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\"\
    , $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"\
    strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n  $grades\
    \ = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"strcasecmp\", $grades);\n\
    \  $grades = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\"\
    , $grades);\n  $grades = array_map(\"strcasecmp\", $grades);\n  $grades = array_map(\"\
    strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades\
    \ = array_map(\"strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\"\
    , $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"\
    strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmp_nziq3_r.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_map(\"floatval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"round\", $grades);\n  $grades = array_map(\"intval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmp7e2spneq.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strtoupper\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n    $grades = array_map(\"array_search\"\
    , $grades);\n    $grades = array_map(\"array_search\", $grades);\n    $grades\
    \ = array_map(\"array_search\", $grades);\n\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpfu3vu7qs.php on line 77

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n  \
    \  $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n  \
    \  $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n  \
    \  $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strcmp\", \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp9jjhemvq.php on line 60

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strtoupper\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp22e2wkru.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades =\
    \ array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpzypq991c.php on line 77

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"trim\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmposwjpjty.php on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"chr\"\
    , $grades);\n    $grades = array_map(\"strtoupper\", $grades);\n    $grades =\
    \ array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpm76dhykf.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "str" in /tmp/tmpzmjj_pq9.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp48oqa_zk.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpbd0q4ets.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpcyafe71h.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpbrtq1tqk.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmprg32mnjs.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"trim\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp6xth4zgo.php on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = array_map('floatval', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strtoupper',\
    \ $grades);\n  return implode('+', $grades);\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdzhvm1t.php:37\n\
    Stack trace:\n#0 /tmp/tmpkdzhvm1t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkdzhvm1t.php\
    \ on line 37\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"floatval\", $grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(function($grade) {\n        return $grade >= 4.0 ? \"A+\"\
    \ : ($grade >= 3.7 ? \"A\" : ($grade >= 3.3 ? \"A-\" : ($grade >= 3.0 ? \"B+\"\
    \ : \n        ($grade >= 2.7 ? \"B\" : ($grade >= 2.3 ? \"B-\" : ($grade >= 2.0\
    \ ? \"C+\" : \n        ($grade >= 1.7 ? \"C\" : \n        ($grade >= 1.3 ? \"\
    C-\" : \n        ($grade >= 1.0 ? \"D+\" : \n        ($grade >= 0.7 ? \"D\" :\
    \ \n        ($grade >= 0.0 ? \"D-\" : \"E\")))))))))));\n    }, $grades);\n  \
    \  return implode(\",\", $grades);\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpzmil_4xw.php:23\nStack trace:\n#0\
    \ /tmp/tmpzmil_4xw.php(23): explode(',', Array)\n#1 /tmp/tmpzmil_4xw.php(40):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpzmil_4xw.php(44): candidate(Array)\n\
    #3 /tmp/tmpzmil_4xw.php(52): test()\n#4 {main}\n  thrown in /tmp/tmpzmil_4xw.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpdwbfdyf4.php on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code goes here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxex984a.php:30\n\
    Stack trace:\n#0 /tmp/tmplxex984a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplxex984a.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grade\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpg_l6_omc.php
    on line 74

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpwaamsqpl.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n   \
    \ $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", \nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvrn03r_8.php on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpdwbfdyf4.php on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades =\
    \ array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpzypq991c.php on line 77

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp48oqa_zk.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_map(\"floatval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"round\", $grades);\n  $grades = array_map(\"intval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmp81wwsk0z.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "strncasecmp" in /tmp/tmpzsmfbmwl.php
    on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n\
    \    $grades = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"\
    strncmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n   \
    \ $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpqsli4i6j.php on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = array_map('intval', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_unique($grades);\n  $grades = array_values($grades);\n  $grades = array_slice($grades,\
    \ 0, 10);\n  $grades = array_map(function($grade) {\n    return $grade >= 3.0\
    \ ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade >= 3.3 ? \"A-\" : ($grade >= 3.0\
    \ ? \"B+\" : $grade >= 2.7 ? \"B\" : $grade >= 2.3 ? \"B-\" : $grade >= 2.0 ?\
    \ \"C+\" : $grade >= 1.7 ? \"C\" : $grade >= 1.3 ? \"C-\" : $grade >= 1.0 ? \"\
    D+\" : $grade >= 0.7 ? \"D\" : $grade >= 0.0 ? \"D-\" : \"E\"));\n  }, $grades);\n\
    \  return implode(\" \", $grades);\n}\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token ";" in /tmp/tmp6v593p5r.php on line
    29

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppq_j5rry.php on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(function($grade) {\n\
    \        return $grade > 0 ? \"A+\" : ($grade < 0 ? \"A-\" : \"B+\");\n    },\
    \ $grades);\n    return implode(\",\", $grades);\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpu02lhdg6.php:23\nStack trace:\n#0\
    \ /tmp/tmpu02lhdg6.php(23): explode(',', Array)\n#1 /tmp/tmpu02lhdg6.php(35):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpu02lhdg6.php(39): candidate(Array)\n\
    #3 /tmp/tmpu02lhdg6.php(47): test()\n#4 {main}\n  thrown in /tmp/tmpu02lhdg6.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code goes here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxex984a.php:30\n\
    Stack trace:\n#0 /tmp/tmplxex984a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplxex984a.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n   \
    \ $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", \nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvrn03r_8.php on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtolower', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpw44hc65x.php on line 83

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpi_gyksuk.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpj9uqg7jp.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtolower', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrpos', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades, $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "str" in /tmp/tmpinof3fzw.php
    on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmppbgwxsfn.php on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_unique\", $grades);\n\
    \    $grades = array_map(\"array_unique\", $grade\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpgdz2bl7s.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"chr\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"str_pad\", $grades);\n    $grades\
    \ = array_map(\"str_repeat\", $grades);\n    $grades = array_map(\"str_replace\"\
    , $grades);\n    $grades = array_map(\"strtr\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grade\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp8zgdfiq7.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtolower', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmps6j_pceb.php on line 83

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"chr\", $grades);\n    $grades =\
    \ array_map(\"ord\", $grades);\n    $grades = array_map(\"chr\", $grades);\n \
    \   $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grade\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmphi0vuqap.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtolower', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, ',');\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array(',', '.', '-', '*', '^', '>', '=',\
    \ '?'), $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, ',');\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array(',', '.', '-', '*', '^', '>', '=',\
    \ '?'), $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, ',');\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array(',', '.', '-', '*', '^', '>', '=',\
    \ '?'), $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strpos', $grades, ',');\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array(',', '.', '-', '*', '^', '>', '=',\
    \ '?'), $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grade\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpajavn1vp.php
    on line 65

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strtoupper\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strpos\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strrpos\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strtr\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpms_c48py.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_map(\"floatval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"round\", $grades);\n  $grades = array_map(\"intval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"chr\", $grades);\n  $grades = array_map(\"\
    ord\", $grades);\n  $grades = array_map(\"chr\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpg95x9imw.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_sum($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map('str_pad', array_fill(0,\
    \ count($grades), ''), $grades);\n    $grades = array_sum($grades);\n    $grades\
    \ = array_map('str_repeat', array_fill(0, count($grades), ''), $grades);\n   \
    \ $grades = array_sum($grades);\n    $grades = array_map('str_pad', array_fill(0,\
    \ count($grades), ''), $grades);\n    $grades = array_sum($grades);\n    $grades\
    \ = array_map('str_repeat', array_fill(0, count($grades), ''), $grades);\n   \
    \ $grades = array_sum($grades);\n    $grades = array_map('str_pad', array_fill(0,\
    \ count($grades), ''), $grades);\n    $grades = array_sum($grades);\n    $grades\
    \ = array_map('str_repeat', array_fill(0, count($grades), ''), $grades);\n   \
    \ $grades = array_sum($grades);\n    $grades = array_map('str_pad', array_fill(0,\
    \ count($grades), ''), $grades);\n    $grades = array_sum($grades);\n    $grades\
    \ = array_map('str_repeat', array_fill(0, count($grades), ''), $grades);\n   \
    \ $grades = array_sum($grades);\n    $grades = array_map('str_pad', array_fill(0,\
    \ count($grades), ''), $grades);\n    $grades = array_sum($grades);\n    $grades\
    \ = array_map('str_repeat', array_fill(0, count($grades), ''), $grades);\n   \
    \ $grades = array_sum($grades);\n    $grades = array_map('str_pad', array_fill(0,\
    \ count($grades), ''), $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpicts9oa8.php
    on line 60

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"trim\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmp0uvh2g0p.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('str\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "str" in /tmp/tmp3a139ku1.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"chrval\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strtoupper\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strstr\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strstr\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strstr\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpioiuajpj.php on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"chr\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strtoupper\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strpos\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strcmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"strnatcase\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmprwnt3lxp.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"floatval\", $grades);\n\
    \  $grades = array_filter($grades);\n  $grades = array_map(\"round\", $grades);\n\
    \  $grades = array_map(\"intval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"\
    strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n  $grades =\
    \ array_map(\"strval\", $grades);\n  $grades = array_map(\"strval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grade\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp4baptdxm.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search_key', $grades);\n    $grades\
    \ = array_map('array_key_exists', $grades);\n    $grades = array_map('array_keys',\
    \ $grades);\n    $grades = array_map('array_values', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades);\n    $grades = array_map('array_chunk', $grades);\n    $grades = array_map('array_chunk',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_fill_keys', $grades);\n    $grades\
    \ = array_map('array_chunk', $grades);\n    $grades = array_map('array_chunk',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_fill_keys', $grades);\n    $grades\
    \ = array_map('array_chunk', $grades);\n    $grades = array_map('array_chunk',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpl86yayug.php on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strrchr',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpt93ytt1b.php on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\",\
    \ $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\",\
    \ $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\",\
    \ $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strcmp\", \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp3pkdhq97.php on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strtoupper\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp22e2wkru.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = round($grades, 2);\n    $grades\
    \ = $grades / 10;\n    $grades = $grades % 10;\n    if ($grades == 0) {\n    \
    \    $grades = \"E\";\n    }\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpxef37y3f.php:23\nStack trace:\n#0\
    \ /tmp/tmpxef37y3f.php(23): explode(',', Array)\n#1 /tmp/tmpxef37y3f.php(38):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpxef37y3f.php(42): candidate(Array)\n\
    #3 /tmp/tmpxef37y3f.php(50): test()\n#4 {main}\n  thrown in /tmp/tmpxef37y3f.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp0j2b8cgs.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmpm4qb227h.php
    on line 75

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-', '0.0',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-',\
    \ 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades =\
    \ array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B',\
    \ 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace', array('D+',\
    \ 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n \
    \   $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grade\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpfpvfo9wy.php
    on line 42

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map(\"floatval\", $grades);\n  $grades\
    \ = array_sum($grades);\n  $grades = array_map(\"round\", $grades);\n  $grades\
    \ = array_map(\"intval\", $grades);\n  $grades = array_sum($grades);\n  $grades\
    \ = array_map(\"strval\", $grades);\n  $grades = array_sum($grades);\n  $grades\
    \ = array_map(\"chr\", $grades);\n  $grades = array_sum($grades);\n  $grades =\
    \ array_map(\"ord\", $grades);\n  $grades = array_sum($grades);\n  $grades = array_map(\"\
    chr\", $grades);\n  $grades = array_sum($grades);\n  $grades = array_map(\"ord\"\
    , $grades);\n  $grades = array_sum($grades);\n  $grades = array_map(\"chr\", $grades);\n\
    \  $grades = array_sum($grades);\n  $grades = array_map(\"ord\", $grades);\n \
    \ $grades = array_sum($grades);\n  $grades = array_map(\"chr\", $grades);\n  $grades\
    \ = array_sum($grades);\n  $grades = array_map(\"ord\", $grades);\n  $grades =\
    \ array_sum($grades);\n  $grades = array_map(\"chr\", $grades);\n  $grades = array_sum($grades);\n\
    \  $grades = array_map(\"ord\", $grades);\n  $grades = array_sum($grades);\n \
    \ $grades = array_map(\"chr\", $grades);\n  $grades = array_sum($grades);\n  $grades\
    \ = array_map(\"ord\", $grades);\n  $grades = array_sum($grades);\n  $grades =\
    \ array_map(\"chr\", $grades);\n  $grades = array_sum($grades);\n  $grades = array_map(\"\
    ord\", $grades);\n  $grades = array_sum($grades);\n  $grades = array_map(\"chr\"\
    , $grades);\n  $grades = array_sum($grades);\n  $grades = array_map(\"ord\", $grades);\n\
    \  $grades = array_sum($grades);\n  $grades = array_map(\"chr\", $grades);\n \
    \ $grades = array_sum($grades);\n  $grades = array_map(\"ord\", $grades);\n  $grades\
    \ = array_sum($grades);\n  $grades = array_map(\"chr\", $grades);\n  $grades =\
    \ array_sum($grades);\n  $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmphpwq2ac2.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grade\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpv71izsoc.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strrev', $grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strrstr', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpn4vzww2y.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('trim', $grades);\n    $grades = array_map('floatval', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('substr',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('substr',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('substr',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpf_mgszne.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpj9uqg7jp.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"array_search\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp927dtn7t.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpcyafe71h.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"floatval\", $grades);\n\
    \  $grades = array_filter($grades);\n  $grades = array_map(\"round\", $grades);\n\
    \  $grades = array_map(\"intval\", $grades);\n  $grades = array_map(\"strval\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades = array_map(\"\
    strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n  $grades =\
    \ array_map(\"strlen\", $grades);\n  $grades = array_map(\"strlen\", $grades);\n\
    \  $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp130shvbx.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"chr\", $grades);\n    $grades = array_map(\"\
    strtoupper\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strpos\", $grades);\n    $grades = array_map(\"strrpos\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"str_replace\"\
    , $grades);\n    $grades = array_map(\"strtr\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmppop9w96r.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"trim\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n  \
    \  $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp6xth4zgo.php on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('trim', $grades);\n    $grades = array_map('floatval', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strncasecmp',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpycl2hp_j.php on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_map(\"floatval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"round\", $grades);\n  $grades = array_map(\"intval\", $grades);\n\
    \  $grades = array_map(\"strval\", $grades);\n  $grades = array_map(\"strlen\"\
    , $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"\
    strcasecmp\", $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n  $grades\
    \ = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n\
    \  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"strncasecmp\"\
    , $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"\
    strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades\
    \ = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n\
    \  $grades = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\"\
    , $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"\
    strcmp\", $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n  $grades\
    \ = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n\
    \  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"strncasecmp\"\
    , $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades = array_map(\"\
    strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n  $grades\
    \ = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\", $grades);\n\
    \  $grades = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"strcmp\"\
    , $grades);\n  $grades = array_map(\"strncasecmp\", $grades);\n  $grades = array_map(\"\
    strcmp\", \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvwbvnqod.php on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_unique($grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp0j2b8cgs.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('trim', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'A-', 'A-',\
    \ 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'D+', 'D', 'D-', 'E'), $grades);\n\
    \    $grades = array_map('str_replace', array('D', 'A-', 'B+', 'B', 'B-', 'C+',\
    \ 'C', 'C-', 'D+', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D', 'A-', 'B',\
    \ 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D', 'A-', 'B',\
    \ 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D', 'A-', 'B',\
    \ 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-', 'E'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'A-', 'B', 'B-', 'C', 'C-', 'D', 'D-',\
    \ 'E'), $grades);\n    $grades = array_map('str_replace', array('D', 'A-', 'B',\
    \ 'B-', 'C', 'C-', 'D', 'D-', 'E\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "E", expecting ")" in /tmp/tmpe880937h.php
    on line 44

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_pad', $grades);\n    $grades = array_map('str_repeat',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_pad',\
    \ $grades);\n    $grades = array_map('str_repeat', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_pad', $grades);\n    $grades = array_map('str_repeat',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_pad',\
    \ $grades);\n    $grades = array_map('str_repeat', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_pad', $grades);\n    $grades = array_map('str_repeat',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_pad',\
    \ $grades);\n    $grades = array_map('str_repeat', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_pad', $grades);\n    $grades = array_map('str_repeat',\
    \ $grades);\n    $grades = array_map('str_replace', $grades);\n    $grades = array_map('strtr',\
    \ $grades);\n    $grades = array_map('str\nfunction candidate(...$args) {\n  \
    \  return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\",\
    \ \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "str" in /tmp/tmpy7p_3w54.php
    on line 65

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+',\
    \ 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n\
    \    $grades = array_map('str_replace', array('D+', 'D', 'D-', 'C+', 'C', 'C-',\
    \ 'B+', 'B', 'B-', 'A+', 'A', 'A-'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'D-', 'C+', 'C', 'C-', 'B+', 'B', 'B\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "B", expecting ")" in /tmp/tmp09drcwpt.php
    on line 42

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array(',', '.', '*', '^'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grade\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmppy7koq3f.php
    on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"trim\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n   \
    \ $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strncmp\", $grades);\n   \
    \ $grades = array_map(\"strcmp\", $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpvle6shwl.php on line 62

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_values($grades);\n    $grades\
    \ = array_map(function($grade) {\n        return $grade >= 4.0 ? \"A+\" : ($grade\
    \ >= 3.7 ? \"A\" : ($grade >= 3.3 ? \"A-\" : ($grade >= 3.0 ? \"B+\" : \n    \
    \    ($grade >= 2.7 ? \"B\" : ($grade >= 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\"\
    \ : \n        ($grade >= 1.7 ? \"C\" : \n        ($grade >= 1.3 ? \"C-\" : ($grade\
    \ >= 1.0 ? \"D+\" : \n        ($grade >= 0.7 ? \"D\" : \n        ($grade >= 0.0\
    \ ? \"D-\" : \"E\")))))))))));\n    }, $grades);\n    return implode(\"\\n\",\
    \ $grades);\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzd0e3zk7.php:42\n\
    Stack trace:\n#0 /tmp/tmpzd0e3zk7.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpzd0e3zk7.php\
    \ on line 42\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_chunk', $grades);\n\
    \    $grades = array_map('array_combine', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpgdw6wb70.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpcyafe71h.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpdzf8xlyp.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(',', $grades);\n  $grades = array_map('trim', $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map('floatval', $grades);\n  $grades\
    \ = array_sum($grades);\n  $grades = array_map('round', $grades);\n  $grades =\
    \ array_map('intval', $grades);\n  $grades = array_sum($grades);\n  $grades =\
    \ array_map('chr', $grades);\n  $grades = implode('', $grades);\n  return $grades;\n\
    }\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpcqokt75n.php:23\nStack trace:\n#0\
    \ /tmp/tmpcqokt75n.php(23): explode(',', Array)\n#1 /tmp/tmpcqokt75n.php(36):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpcqokt75n.php(40): candidate(Array)\n\
    #3 /tmp/tmpcqokt75n.php(48): test()\n#4 {main}\n  thrown in /tmp/tmpcqokt75n.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('trim', $grades);\n    $grades = array_map('floatval', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtolower', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrev', array_unique($grades));\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpv_97lus_.php
    on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_reduce', $grades);\n\
    \    $grades = array_map('array_count_values', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_reduce', $grades);\n    $grades =\
    \ array_map('array_count_values', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_reduce', $grades);\n    $grades =\
    \ array_map('array_count_values', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_reduce', $grades);\n    $grades =\
    \ array_map('array_count_values', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_reduce',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpmtk0j92p.php on line 65

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpu7r0ss17.php on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('trim', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grade\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpxavuzrcg.php
    on line 67

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfi1watkw.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strcmp\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "strcmp" in /tmp/tmp1_wwwtpw.php
    on line 71

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = explode(\",\", $grades);\n  $grades = array_map(\"trim\", $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map(\"floatval\", $grades);\n  $grades\
    \ = array_filter($grades);\n  $grades = array_map(\"round\", $grades);\n  $grades\
    \ = array_map(\"intval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"strval\", $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map(\"array_search\", $grades);\n  $grades = array_filter($grades);\n\
    \  $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmprgh9gsq5.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_map('chr', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strpos',\
    \ $grades);\n    $grades = array_map('strrpos', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strrchr', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strncmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strncasecmp\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "strncasecmp" in /tmp/tmpoh2bf2bl.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_pad', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_split', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('round', $grades);\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('chr',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_pad',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_split',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('round',\
    \ $grades);\n    $grades = array_map('intval', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp5rdxe9ly.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_sum($grades) / count($grades);\n    $grades = array_map(\"round\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strtoupper\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grade\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpjrrtw46_.php
    on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpb_nk23q8.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpm0lto7n4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'd', 'E', 'e', 'F', 'f', 'G', 'g', 'H', 'h', 'I', 'i', 'J', 'j',\
    \ 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O', 'o', 'P', 'p', 'R', 'r', 'S', 's',\
    \ 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z'), $grades);\n\
    \    $grades = array_map('str_replace', array('D', 'd', 'E', 'e', 'F', 'f', 'G',\
    \ 'g', 'H', 'h', 'I', 'i', 'J', 'j', 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O',\
    \ 'o', 'P', 'p', 'R', 'r', 'S', 's', 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X',\
    \ 'x', 'Y', 'y', 'Z', 'z'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'd', 'E', 'e', 'F', 'f', 'G', 'g', 'H', 'h', 'I', 'i', 'J', 'j',\
    \ 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O', 'o', 'P', 'p', 'R', 'r', 'S', 's',\
    \ 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z'), $grades);\n\
    \    $grades = array_map('str_replace', array('D', 'd', 'E', 'e', 'F', 'f', 'G',\
    \ 'g', 'H', 'h', 'I', 'i', 'J', 'j', 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O',\
    \ 'o', 'P', 'p', 'R', 'r', 'S', 's', 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X',\
    \ 'x', 'Y', 'y', 'Z', 'z'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'd', 'E', 'e', 'F', 'f', 'G', 'g', 'H', 'h', 'I', 'i', 'J', 'j',\
    \ 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O', 'o', 'P', 'p', 'R', 'r', 'S', 's',\
    \ 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z'), $grades);\n\
    \    $grades = array_map('str_replace', array('D', 'd', 'E', 'e', 'F\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "F", expecting ")" in /tmp/tmp07ivgkp1.php
    on line 35

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"trim\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmposwjpjty.php on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code goes here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxex984a.php:30\n\
    Stack trace:\n#0 /tmp/tmplxex984a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplxex984a.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpjqn362bf.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpcyafe71h.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"chr\", $grades);\n    $grades = array_map(\"\
    strtoupper\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strpos\", $grades);\n    $grades = array_map(\"strrpos\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\"\
    , $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n    $\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpjkginexj.php on line 59

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strcmp', $grades);\n    $grades = array_map('strcasecmp',\
    \ $grades);\n    $grades = array_map('strnatcmp', $grades);\n    $grades = array_map('strcmp',\
    \ $grades);\n    $grades = array_map('strcasecmp', $grades);\n    $grades = array_map('strnatcmp',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "array_search" in /tmp/tmp_w5_w0w3.php
    on line 65

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strtoupper\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades\
    \ = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strnatcmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n    $grades\
    \ = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strnatcmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmp4ds173hy.php on line 74

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades =\
    \ array_map(\"strrev\", $grades);\n    $grades = array_map(\"strpos\", $grades);\n\
    \    $grades = array_map(\"strrpos\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strncmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strncmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strnatcmp\"\
    , $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpt9xs87rx.php on line 61

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpi_gyksuk.php
    on line 70

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code goes here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxex984a.php:30\n\
    Stack trace:\n#0 /tmp/tmplxex984a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplxex984a.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"chr\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"str_pad\", $grades);\n    $grades\
    \ = array_map(\"str_split\", $grades);\n    $grades = array_map(\"array_sum\"\
    , $grades);\n    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_map\", $grades);\n   \
    \ $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"array_map\"\
    , $grades);\n    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_map\", $grades);\n   \
    \ $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"array_map\"\
    , $grades);\n    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_map\", $grades);\n   \
    \ $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"array_map\"\
    , $grades);\n    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_map\", $grades);\n   \
    \ $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"array_map\"\
    , $grades);\n    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_map\", $grades);\n   \
    \ $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"array_map\"\
    , $grades);\n    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_map\", $grades);\n   \
    \ $grades = array_map(\"array_map\", $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpbdgvkx0r.php on line 64

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(\"chr\"\
    , $grades);\n    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpg8w0bqmv.php:23\nStack trace:\n#0\
    \ /tmp/tmpg8w0bqmv.php(23): explode(',', Array)\n#1 /tmp/tmpg8w0bqmv.php(36):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpg8w0bqmv.php(40): candidate(Array)\n\
    #3 /tmp/tmpg8w0bqmv.php(48): test()\n#4 {main}\n  thrown in /tmp/tmpg8w0bqmv.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strtoupper\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grade\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp6n8ecjs4.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'A-', 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'A-',\
    \ 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'D+', 'D', 'D-', 'D-', 'E'),\
    \ $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'A-', 'A-',\
    \ 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'A-', 'A-', 'B+', 'B', 'B-', 'B-',\
    \ 'C+', 'C', 'C-', 'C-', 'D+', 'D', 'D-', 'D-', 'E'), $grades);\n    $grades =\
    \ array_map('str_replace', array('D+', 'D', 'A-', 'A-', 'B+', 'B', 'B-', 'B-',\
    \ 'C+', 'C', 'C-', 'C-', 'A-', 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-',\
    \ 'D+', 'D', 'D-', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'A-', 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'A-',\
    \ 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'D+', 'D', 'D-', 'D-', 'E'),\
    \ $grades);\n    $grades = array_map('str_replace', array('D+', 'D', 'A-', 'A-',\
    \ 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'A-', 'A-', 'B+', 'B', 'B-', 'B-',\
    \ 'C+', 'C', 'C-', 'C-', 'D+', 'D', 'D-', 'D-', 'E'), $grades);\n    $grades =\
    \ array_map('str_replace', array('D+', 'D', 'A-', 'A-', 'B+', 'B', 'B-', 'B-',\
    \ 'C+', 'C', 'C-', 'C-', 'A-', 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-',\
    \ 'D+', 'D', 'D-', 'D-', 'E'), $grades);\n    $grades = array_map('str_replace',\
    \ array('D+', 'D', 'A-', 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'A-',\
    \ 'A-', 'B+', 'B', 'B-', 'B-', 'C+', 'C', 'C-', 'C-', 'D+', 'D', 'D-\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "D-", expecting ")" in /tmp/tmp8aoz5anr.php
    on line 36

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map(\"trim\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n    $grades =\
    \ array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n\
    \    $grades = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"\
    strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades\
    \ = array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\",\
    \ $grades);\n    $grades = array_map(\"strcasecmp\", $grades);\n    $grades =\
    \ array_map(\"strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strncasecmp\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades\
    \ = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\"\
    , $grades);\n    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"\
    strcasecmp\", $grades);\n    $grades = array_map(\"strncasecmp\", $grades);\n\
    \    $grades = array_map(\"strcmp\", $grades);\n    $grades = array_map(\"strcasecmp\"\
    , $grades);\n    $grades = array_map(\"strncasecmp\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmppwldcza7.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strtoupper\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"strpos\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmpovbbk9zo.php
    on line 75

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades\
    \ = array_map(\"strval\", $grades);\n    $grades = array_map(\"strval\", $grades);\n\
    \    $grades = array_map(\"strval\", $grade\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpj9uqg7jp.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('floatval', $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map('round', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('trim', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('strrev', $grades);\n    $grades = array_map('strstr',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpu0zy64om.php
    on line 66

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strtoupper\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strcmp\", $grades);\n\
    \    $grades = array_map(\"strcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", $grades);\n\
    \    $grades = array_map(\"strnatcasecmp\", $grades);\n    $grades = array_map(\"\
    strnatcasecmp\", $grades);\n    $grades = array_map(\"strnatcasecmp\", \nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpjk8wo927.php on line 58

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt239qebh.php:30\n\
    Stack trace:\n#0 /tmp/tmpt239qebh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt239qebh.php\
    \ on line 30\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_filter($grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_sum($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"strval\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"ord\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(\"chr\", $grades);\n    $grades = array_sum($grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpcyafe71h.php
    on line 72

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_sum($grades);\n   \
    \ $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"chr\", $grades);\n\
    \    $grades = implode(\",\", $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must\
    \ be of type string, array given in /tmp/tmpuen7aoci.php:23\nStack trace:\n#0\
    \ /tmp/tmpuen7aoci.php(23): explode(',', Array)\n#1 /tmp/tmpuen7aoci.php(34):\
    \ numerical_letter_grade(Array)\n#2 /tmp/tmpuen7aoci.php(38): candidate(Array)\n\
    #3 /tmp/tmpuen7aoci.php(46): test()\n#4 {main}\n  thrown in /tmp/tmpuen7aoci.php\
    \ on line 23\n"
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\"\
    , $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades\
    \ = array_map(\"strlen\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n\
    \    $grades = array_map(\"strlen\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmptpjfh1le.php on line 76

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades =\
    \ array_map(\"str_pad\", $grades);\n    $grades = array_map(\"str_repeat\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_split\", $grades);\n    $grades = array_map(\"array_reverse\", $grades);\n\
    \    $grades = array_map(\"array_merge\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_intersect\", $grades);\n\
    \    $grades = array_map(\"array_diff\", $grades);\n    $grades = array_map(\"\
    array_keys\", $grades);\n    $grades = array_map(\"array_values\", $grades);\n\
    \    $grades = array_map(\"array_count_values\", $grades);\n    $grades = array_map(\"\
    array_sum\", $grades);\n    $grades = array_map(\"array_average\", $grades);\n\
    \    $grades = array_map(\"array_push\", $grades);\n    $grades = array_map(\"\
    array_pop\", $grades);\n    $grades = array_map(\"array_shift\", $grades);\n \
    \   $grades = array_map(\"array_unshift\", $grades);\n    $grades = array_map(\"\
    array_slice\", $grades);\n    $grades = array_map(\"array_splice\", $grades);\n\
    \    $grades = array_map(\"array_merge_recursive\", $grades);\n    $grades = array_map(\"\
    array_unique\", $grades);\n    $grades = array_map(\"array_filter\", $grades);\n\
    \    $grades = array_map(\"array_map\", $grades);\n    $grades = array_map(\"\
    array_reduce\", $grades);\n    $grades = array_map(\"array_reduceRight\", $grades);\n\
    \    $grades = array_map(\"array_filter\", $grades);\n    $grades = array_map(\"\
    array_map\", $grades);\n    $grades = array_map(\"array_reduce\", $grades);\n\
    \    $grades = array_map(\"array_reduceRight\", $grades);\n    $grades = array_map(\"\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "A", expecting ")" in /tmp/tmp31x2u1fw.php
    on line 68

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(',', $grades);\n    $grades = array_map('trim', $grades);\n    $grades\
    \ = array_map('floatval', $grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('chr', $grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strchr',\
    \ $grades);\n    $grades = array_map('strrchr', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strchr',\
    \ $grades);\n    $grades = array_map('strrchr', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n    $grades = array_map('str_replace',\
    \ $grades);\n    $grades = array_map('strtr', $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strstr', $grades);\n    $grades = array_map('strchr',\
    \ $grades);\n    $grades = array_map('strrchr', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades);\n    $grades = array_map('strrpos',\
    \ $grades);\n    $grades = array_map('substr', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmpeo6ll7i7.php on line 80

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"floatval\", $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map(\"round\", $grades);\n\
    \    $grades = array_map(\"intval\", $grades);\n    $grades = array_map(\"chr\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strlen\", $grades);\n    $grades = array_map(\"str_pad\", $grades);\n    $grades\
    \ = array_map(\"str_repeat\", $grades);\n    $grades = array_map(\"str_replace\"\
    , $grades);\n    $grades = array_map(\"strtr\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grades);\n    $grades = array_map(\"str_replace\", $grades);\n\
    \    $grades = array_map(\"str_replace\", $grades);\n    $grades = array_map(\"\
    str_replace\", $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpvdi74miz.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n  $grades\
    \ = array_map('floatval', $grades);\n  $grades = array_filter($grades);\n  $grades\
    \ = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strtolower',\
    \ $grades);\n  $grades = array_map('strlen', $grades);\n  $grades = array_map('strpos',\
    \ $grades);\n  $grades = array_map('strrpos', $grades);\n  $grades = array_map('strrev',\
    \ $grades);\n  $grades = array_map('strstr', $grades);\n  $grades = array_map('strrchr',\
    \ $grades);\n  $grades = array_map('strrev', array_unique($grades));\n  $grades\
    \ = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_search',\
    \ $grades);\n  $grades = array_map('array_key_exists', $grades);\n  $grades =\
    \ array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_search', $grades);\n  $grades = array_map('array_key_exists',\
    \ $grades);\n  $grades = array_map('array_\nfunction candidate(...$args) {\n \
    \   return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "array_" in /tmp/tmpk1do5is7.php
    on line 63

    '
  timestamp: 1660005544
- exit_code: 255
  program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\nfunction numerical_letter_grade($grades) {\n    $grades\
    \ = explode(\",\", $grades);\n    $grades = array_map(\"trim\", $grades);\n  \
    \  $grades = array_map(\"floatval\", $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map(\"round\", $grades);\n    $grades = array_map(\"intval\"\
    , $grades);\n    $grades = array_map(\"strval\", $grades);\n    $grades = array_map(\"\
    chr\", $grades);\n    $grades = array_map(\"strlen\", $grades);\n    $grades =\
    \ array_map(\"str_pad\", $grades);\n    $grades = array_map(\"str_repeat\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\"\
    , $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades = array_map(\"\
    strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n    $grades\
    \ = array_map(\"strrev\", $grades);\n    $grades = array_map(\"strrev\", $grades);\n\
    \    $grades = array_map(\"strrev\", $grades);\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 22 in /tmp/tmp0682pdu4.php on line 76

    '
  timestamp: 1660005544

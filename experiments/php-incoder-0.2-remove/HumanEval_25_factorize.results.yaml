language: php
name: HumanEval_25_factorize
results:
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[$i] = $i;\n            $n = $n / $i;\n  \
    \      }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n \
    \   return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzygmyixa.php:21\n\
    Stack trace:\n#0 /tmp/tmpzygmyixa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzygmyixa.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ecqtafy.php:24\n\
    Stack trace:\n#0 /tmp/tmp8ecqtafy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8ecqtafy.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor = 1;\n        } else {\n            $factor++;\n        }\n    }\n\
    \    if($factor != 1) {\n        $factors[] = $factor;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3wa9kc_.php:27\n\
    Stack trace:\n#0 /tmp/tmpv3wa9kc_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv3wa9kc_.php\
    \ on line 27\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat9o51fv.php:23\n\
    Stack trace:\n#0 /tmp/tmpat9o51fv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpat9o51fv.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    if ($n != 1) {\n        $factors[] =\
    \ $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplthxxmf5.php:28\n\
    Stack trace:\n#0 /tmp/tmplthxxmf5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplthxxmf5.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= $n; $i++) {\n\
    \        while($n % $i == 0) {\n            $factors[] = $factor;\n          \
    \  $n /= $i;\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszu04pc5.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[$i] = $factor;\n       \
    \     $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5coravv.php:22\n\
    Stack trace:\n#0 /tmp/tmpo5coravv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpo5coravv.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $n = $n\
    \ % $factor;\n        $factors[] = $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpkcfb1a1a.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = ($n % $factor);\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpff7oycof.php on line 9

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    if ($n != 1) {\n        $factors[] =\
    \ $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplthxxmf5.php:28\n\
    Stack trace:\n#0 /tmp/tmplthxxmf5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplthxxmf5.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \        }\n        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxf9nfu31.php:23\n\
    Stack trace:\n#0 /tmp/tmpxf9nfu31.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxf9nfu31.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkquh6ge.php:21\n\
    Stack trace:\n#0 /tmp/tmpxkquh6ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxkquh6ge.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n = $n /\
    \ $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp_f73yjfb.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n >= $factor) {\n       \
    \ $factors[] = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5r25i59.php:21\n\
    Stack trace:\n#0 /tmp/tmpz5r25i59.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz5r25i59.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpor_ufifp.php:24\n\
    Stack trace:\n#0 /tmp/tmpor_ufifp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpor_ufifp.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        if($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbwl1yydg.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        if($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbwl1yydg.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        if($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbwl1yydg.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptghxh7o4.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ecqtafy.php:24\n\
    Stack trace:\n#0 /tmp/tmp8ecqtafy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8ecqtafy.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor = 1;\n        } else {\n            $factor *= $i;\n        }\n  \
    \  }\n    $factors[] = $factor;\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysb2lgc6.php:25\n\
    Stack trace:\n#0 /tmp/tmpysb2lgc6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpysb2lgc6.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n            $n\
    \ = $n / $i;\n            $factor++;\n        }\n        $i++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsngb0p2.php:25\n\
    Stack trace:\n#0 /tmp/tmprsngb0p2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprsngb0p2.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ecqtafy.php:24\n\
    Stack trace:\n#0 /tmp/tmp8ecqtafy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8ecqtafy.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n/$i;\n      \
    \  } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalijyny1.php:24\n\
    Stack trace:\n#0 /tmp/tmpalijyny1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpalijyny1.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n = $n /\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp_v1o269s.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptghxh7o4.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while($i <= sqrt($n))\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $i;\n            $n\
    \ /= $i;\n            $factor++;\n        }\n        $i++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tqevisa.php:25\n\
    Stack trace:\n#0 /tmp/tmp1tqevisa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1tqevisa.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while($i <= $n) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n\
    \ / $i;\n            $factor++;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqyuuwpfg.php:25\n\
    Stack trace:\n#0 /tmp/tmpqyuuwpfg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqyuuwpfg.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n            $n\
    \ /= $i;\n            $factor++;\n        }\n        $i++;\n    }\n    if ($n\
    \ != 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezpep3qo.php:30\n\
    Stack trace:\n#0 /tmp/tmpezpep3qo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpezpep3qo.php\
    \ on line 30\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ecqtafy.php:24\n\
    Stack trace:\n#0 /tmp/tmp8ecqtafy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8ecqtafy.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while($i <= $n) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $factor;\n            $factor\
    \ *= $i;\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz8f50ck.php:24\n\
    Stack trace:\n#0 /tmp/tmplz8f50ck.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplz8f50ck.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93uc350z.php:29\n\
    Stack trace:\n#0 /tmp/tmp93uc350z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp93uc350z.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n            $n /= $i;\n        }\n    }\n    $factors[] =\
    \ $factor;\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5gkdyp7.php:24\n\
    Stack trace:\n#0 /tmp/tmpt5gkdyp7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt5gkdyp7.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while($i <= $n) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $i;\n            $n = ($n\
    \ / $i);\n            $factor++;\n        }\n        $i++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6oo5vn.php:25\n\
    Stack trace:\n#0 /tmp/tmptb6oo5vn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptb6oo5vn.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkquh6ge.php:21\n\
    Stack trace:\n#0 /tmp/tmpxkquh6ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxkquh6ge.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= $n; $i++) {\n\
    \        while($n % $i == 0) {\n            $factors[] = $factor;\n          \
    \  $n /= $i;\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszu04pc5.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = ($n % $factor);\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpff7oycof.php on line 9

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkquh6ge.php:21\n\
    Stack trace:\n#0 /tmp/tmpxkquh6ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxkquh6ge.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypzhvn_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpypzhvn_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpypzhvn_4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while($i <= sqrt($n))\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3tqhaa4.php:29\n\
    Stack trace:\n#0 /tmp/tmph3tqhaa4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph3tqhaa4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat9o51fv.php:23\n\
    Stack trace:\n#0 /tmp/tmpat9o51fv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpat9o51fv.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while($i <= sqrt($n))\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $n /= $i;\n            $factor = 1;\n        } else {\n            $factor++;\n\
    \        }\n        $i++;\n    }\n    if($n != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu9uqflq.php:30\n\
    Stack trace:\n#0 /tmp/tmppu9uqflq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppu9uqflq.php\
    \ on line 30\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= $n; $i++) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $factor;\n            $factor\
    \ = 1;\n        } else {\n            $factor *= $i;\n        }\n    }\n    $factors[]\
    \ = $factor;\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj797ano.php:25\n\
    Stack trace:\n#0 /tmp/tmpbj797ano.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbj797ano.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n % $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9j5ebsvz.php on line 9

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        \
    \    $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0q5u0d4.php:23\n\
    Stack trace:\n#0 /tmp/tmpw0q5u0d4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw0q5u0d4.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while($i <= $n) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n\
    \            $factor++;\n        }\n        $i++;\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlyav5xp.php:25\n\
    Stack trace:\n#0 /tmp/tmptlyav5xp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptlyav5xp.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n = $n /\
    \ $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp_f73yjfb.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypzhvn_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpypzhvn_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpypzhvn_4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat9o51fv.php:23\n\
    Stack trace:\n#0 /tmp/tmpat9o51fv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpat9o51fv.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        if($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbwl1yydg.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypzhvn_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpypzhvn_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpypzhvn_4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n/$i;\n      \
    \  } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalijyny1.php:24\n\
    Stack trace:\n#0 /tmp/tmpalijyny1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpalijyny1.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n/$i;\n      \
    \  } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalijyny1.php:24\n\
    Stack trace:\n#0 /tmp/tmpalijyny1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpalijyny1.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $n = $n\
    \ % $factor;\n        $factors[] = $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpkcfb1a1a.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n = $n /\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp_v1o269s.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n        } else {\n            $factor *= $i;\n        }\n \
    \       $i++;\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmlmhgqmo.php:29\n\
    Stack trace:\n#0 /tmp/tmpmlmhgqmo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmlmhgqmo.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor = 1;\n        } else {\n            $factor *= $i;\n        }\n  \
    \  }\n    $factors[] = $factor;\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysb2lgc6.php:25\n\
    Stack trace:\n#0 /tmp/tmpysb2lgc6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpysb2lgc6.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n = $n\
    \ / $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp0unjzu7z.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n >= $factor) {\n      \
    \  $factors[] = $factor;\n        $n = $n / $factor;\n        $factor++;\n   \
    \ }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvgmk67q.php:21\n\
    Stack trace:\n#0 /tmp/tmpvvgmk67q.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvvgmk67q.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while ($i <= $n) {\n\
    \        if ($n % $i == 0) {\n            $factors[] = $factor;\n            $factor\
    \ = 1;\n            $i++;\n        } else {\n            $factor *= $i;\n    \
    \    }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpak010uhl.php:29\n\
    Stack trace:\n#0 /tmp/tmpak010uhl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpak010uhl.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while($i <= $n) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $factor;\n            $factor\
    \ = 1;\n            $i++;\n        } else {\n            $factor *= $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqves7we2.php:26\n\
    Stack trace:\n#0 /tmp/tmpqves7we2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqves7we2.php\
    \ on line 26\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypzhvn_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpypzhvn_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpypzhvn_4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkquh6ge.php:21\n\
    Stack trace:\n#0 /tmp/tmpxkquh6ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxkquh6ge.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkquh6ge.php:21\n\
    Stack trace:\n#0 /tmp/tmpxkquh6ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxkquh6ge.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptghxh7o4.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat9o51fv.php:23\n\
    Stack trace:\n#0 /tmp/tmpat9o51fv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpat9o51fv.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkquh6ge.php:21\n\
    Stack trace:\n#0 /tmp/tmpxkquh6ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxkquh6ge.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    if($n != 1) {\n        $factors[] = $n;\n    }\n  \
    \  return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9vu8v677.php:28\n\
    Stack trace:\n#0 /tmp/tmp9vu8v677.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9vu8v677.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 2; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor = 1;\n        } else {\n            $factor *= $i;\n        }\n  \
    \  }\n    $factors[] = $factor;\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gf6_jxg.php:25\n\
    Stack trace:\n#0 /tmp/tmp1gf6_jxg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1gf6_jxg.php\
    \ on line 25\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = ($n % $factor);\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpff7oycof.php on line 9

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    if($n > 1) {\n        $factors[] = $n;\n    }\n   \
    \ return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7866mry.php:28\n\
    Stack trace:\n#0 /tmp/tmpm7866mry.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm7866mry.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[$i] = $i;\n            $n = $n / $i;\n  \
    \      }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n \
    \   return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzygmyixa.php:21\n\
    Stack trace:\n#0 /tmp/tmpzygmyixa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzygmyixa.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    if($n != 1) {\n        $factors[] = $n;\n    }\n  \
    \  return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9vu8v677.php:28\n\
    Stack trace:\n#0 /tmp/tmp9vu8v677.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9vu8v677.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ecqtafy.php:24\n\
    Stack trace:\n#0 /tmp/tmp8ecqtafy.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8ecqtafy.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypzhvn_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpypzhvn_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpypzhvn_4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    if($n > 1) {\n        $factors[] = $n;\n    }\n   \
    \ return $factors;\n}\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparmf8yd4.php:27\n\
    Stack trace:\n#0 /tmp/tmparmf8yd4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmparmf8yd4.php\
    \ on line 27\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n = $n /\
    \ $factor;\n        } else {\n            $factor++;\n        }\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp_f73yjfb.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: -1
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= $n; $i++) {\n\
    \        $factors[$i] = $factor;\n        while($n % $i == 0) {\n            $n\
    \ /= $i;\n            $factor++;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659730776
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= $n; $i++) {\n\
    \        while($n % $i == 0) {\n            $factors[] = $factor;\n          \
    \  $n /= $i;\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszu04pc5.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        $factors[]\
    \ = $factor;\n        $n = $n / $factor;\n        $factor++;\n    }\n    return\
    \ $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsorauno.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsorauno.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsorauno.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while($i <= sqrt($n))\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $i;\n            $n\
    \ /= $i;\n            $factor++;\n        }\n        $i++;\n    }\n    if($n !=\
    \ 1) {\n        $factors[] = $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pn6apdy.php:30\n\
    Stack trace:\n#0 /tmp/tmp_pn6apdy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_pn6apdy.php\
    \ on line 30\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n/$i;\n      \
    \  } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalijyny1.php:24\n\
    Stack trace:\n#0 /tmp/tmpalijyny1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpalijyny1.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 2; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna7evn6u.php:22\n\
    Stack trace:\n#0 /tmp/tmpna7evn6u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpna7evn6u.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $factor = 1;\n            $i++;\n        } else {\n            $factor *=\
    \ $i;\n        }\n    }\n    if ($factor != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypzhvn_4.php:29\n\
    Stack trace:\n#0 /tmp/tmpypzhvn_4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpypzhvn_4.php\
    \ on line 29\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n /= $i;\n        }\n\
    \        $i++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat9o51fv.php:23\n\
    Stack trace:\n#0 /tmp/tmpat9o51fv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpat9o51fv.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \        $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3v6w0_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7r3v6w0_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7r3v6w0_.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n    \
    \    }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n   \
    \ return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkj059rcu.php:21\n\
    Stack trace:\n#0 /tmp/tmpkj059rcu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkj059rcu.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    for($i = 1; $i <= sqrt($n); $i++) {\n        $factors[$i]\
    \ = 1;\n        for($j = 2; $j <= $i; $j++) {\n            if($n % $j == 0) {\n\
    \                $factors[$i] += $factors[$j];\n                $factors[$j] =\
    \ 1;\n            }\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp317u2bj1.php:24\n\
    Stack trace:\n#0 /tmp/tmp317u2bj1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp317u2bj1.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while($i <= sqrt($n)) {\n        if($n\
    \ % $i == 0) {\n            $factors[] = $i;\n            $n = $n/$i;\n      \
    \      $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt05y5h8.php:23\n\
    Stack trace:\n#0 /tmp/tmpnt05y5h8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnt05y5h8.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    if ($n > 1) {\n        $factors[] =\
    \ $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y1k2gcz.php:28\n\
    Stack trace:\n#0 /tmp/tmp6y1k2gcz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6y1k2gcz.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= $n; $i++) {\n\
    \        while($n % $i == 0) {\n            $factors[] = $factor;\n          \
    \  $n /= $i;\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpszu04pc5.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        if ($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmptghxh7o4.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    for($i = 1; $i <= sqrt($n); $i++)\
    \ {\n        if($n % $i == 0) {\n            $factors[] = $factor;\n         \
    \   $factor *= $i;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13k95s0k.php:22\n\
    Stack trace:\n#0 /tmp/tmp13k95s0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp13k95s0k.php\
    \ on line 22\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55il_e4p.php:23\n\
    Stack trace:\n#0 /tmp/tmp55il_e4p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp55il_e4p.php\
    \ on line 23\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if\
    \ ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n\
    \            $i++;\n        }\n    }\n    if ($n != 1) {\n        $factors[] =\
    \ $n;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplthxxmf5.php:28\n\
    Stack trace:\n#0 /tmp/tmplthxxmf5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplthxxmf5.php\
    \ on line 28\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 1;\n    while($i <= $n) {\n\
    \        if($n % $i == 0) {\n            $factors[] = $factor;\n            $factor\
    \ *= $i;\n            $i++;\n        }\n    }\n    return $factors;\n}\n\nfunction\
    \ candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577) !== array(3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18)\
    \ !== array(2, 3, 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplz8f50ck.php:24\n\
    Stack trace:\n#0 /tmp/tmplz8f50ck.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplz8f50ck.php\
    \ on line 24\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n >= $factor) {\n      \
    \  $factors[] = $factor;\n        $n  /= $factor;\n        $factor++;\n    }\n\
    \    return $factors;\n}\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawg1m7ud.php:21\n\
    Stack trace:\n#0 /tmp/tmpawg1m7ud.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpawg1m7ud.php\
    \ on line 21\n"
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        if($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        } else {\n            $factor++;\n        }\n    }\n    return $factors;\n\
    }\n\nfunction candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpbwl1yydg.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while($n != 1) {\n        while($n\
    \ % $factor == 0) {\n            $factors[] = $factor;\n            $n /= $factor;\n\
    \        }\n        $factor++;\n    }\n    return $factors;\n}\n\nfunction candidate(...$args)\
    \ {\n    return factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp9qv0qg5r.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    while ($n != 1) {\n        while\
    \ ($n % $factor == 0) {\n            $factors[] = $factor;\n            $n /=\
    \ $factor;\n        }\n        $factor++;\n    }\n    return $factors;\n}\n\n\
    function candidate(...$args) {\n    return factorize(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(57) !== array(3, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(185193) !== array(3, 3, 3,\
    \ 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20577)\
    \ !== array(3, 19, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(18) !== array(2, 3, 3)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpy_j4wg8x.php on line 10

    '
  timestamp: 1659730771
- exit_code: 255
  program: "<?php\n// Return list of prime factors of given integer in the order from\
    \ smallest to largest.\n// Each of the factors should be listed number of times\
    \ corresponding to how many times it appeares in factorization.\n// Input number\
    \ should be equal to the product of all factors\nfunction factorize($n) {\n  \
    \  $factors = array();\n    $factor = 1;\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            $factors[] = $factor;\n        \
    \    $n /= $i;\n            $factor = 1;\n        } else {\n            $factor++;\n\
    \        }\n        $i++;\n    }\n    if ($n != 1) {\n        $factors[] = $factor;\n\
    \    }\n    return $factors;\n}\n\nfunction candidate(...$args) {\n    return\
    \ factorize(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !==\
    \ array(2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== array(2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(57)\
    \ !== array(3, 19)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3249)\
    \ !== array(3, 3, 19, 19)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20577) !== array(3, 19, 19, 19)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(18) !== array(2, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybcxn8_r.php:30\n\
    Stack trace:\n#0 /tmp/tmpybcxn8_r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpybcxn8_r.php\
    \ on line 30\n"
  timestamp: 1659730771

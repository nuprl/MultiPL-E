name: HumanEval_6_parse_nested_parens
language: php
prompt: "<?php\n// Input to this function is a string represented multiple groups\
  \ for nested parentheses separated by spaces.\n// For each of the group, output\
  \ the deepest level of nesting of parentheses.\n// E.g. (()()) has maximum two levels\
  \ of nesting while ((())) has three.\nfunction parse_nested_parens($paren_string)\
  \ {\n"
tests: "function candidate(...$args) {\n    return parse_nested_parens(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"(()()) ((())) () ((())()())\"\
  ) !== array(2, 3, 1, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  () (()) ((())) (((())))\") !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"(()(())((())))\") !== array(4)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    foreach ($paren_array as $level) {\n        if ($level == '(') {\n      \
    \      $max_level++;\n        } else if ($level == ')') {\n            $max_level--;\n\
    \        }\n    }\n    return $max_level;\n}\n", "  $paren_array = explode(' ',\
    \ $paren_string);\n  $max_level = 0;\n  $max_level_paren = '';\n  foreach ($paren_array\
    \ as $paren) {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren\
    \ == ')') {\n      $max_level--;\n      if ($max_level < 0) {\n        throw new\
    \ Exception('Invalid parenthesis string');\n      }\n      if ($max_level > $max_level_paren)\
    \ {\n        $max_level_paren = $max_level;\n      }\n    }\n  }\n  return $max_level_paren;\n\
    }\n", "  $level = 0;\n  $paren_stack = array();\n  foreach (explode(' ', $paren_string)\
    \ as $paren) {\n    if ($paren == '(') {\n      $paren_stack[] = $paren;\n   \
    \ } else if ($paren == ')') {\n      $paren_stack = array_pop($paren_stack);\n\
    \    } else {\n      $paren_stack[] = $paren;\n    }\n    if ($paren_stack) {\n\
    \      $level++;\n    }\n  }\n  return $level;\n}\n", "  $level = 0;\n  $paren_stack\
    \ = array();\n  $paren_stack[] = array();\n  $paren_stack[0][] = $paren_string;\n\
    \  while ($paren_stack) {\n    $level++;\n    $paren_string = array_pop($paren_stack);\n\
    \    $paren_stack = array();\n    foreach (explode(' ', $paren_string) as $paren)\
    \ {\n      if ($paren == '(') {\n        $paren_stack[] = array();\n        $paren_stack[0][]\
    \ = $paren;\n      } else if ($paren == ')') {\n        $paren_string = implode('',\
    \ $paren_stack);\n        $paren_stack = array();\n      }\n    }\n  }\n  return\
    \ $level;\n}\n", "    $paren_array = explode(\" \", $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        if ($paren_array[$i] === \"(\") {\n            $max_level++;\n\
    \        } else if ($paren_array[$i] === \")\") {\n            $max_level--;\n\
    \        }\n    }\n    return $max_level;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $level = 0;\n    foreach ($paren_array\
    \ as $paren) {\n        if ($paren == '(') {\n            $level++;\n        }\
    \ else if ($paren == ')') {\n            $level--;\n        }\n        if ($level\
    \ > $max_level) {\n            $max_level = $level;\n        }\n    }\n    return\
    \ $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level\
    \ = 0;\n  $max_level_parens = '';\n  foreach ($paren_array as $paren) {\n    if\
    \ ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')') {\n  \
    \    $max_level--;\n      if ($max_level < 0) {\n        break;\n      }\n   \
    \ }\n    if ($max_level > $max_level_parens) {\n      $max_level_parens = $max_level;\n\
    \    }\n  }\n  return $max_level_parens;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    foreach ($paren_array as $level)\
    \ {\n        if ($level == '(') {\n            $max_level++;\n        } else if\
    \ ($level == ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n    } else if ($paren == ')') {\n      $level--;\n      if ($level\
    \ < 0) {\n        $max_level = 0;\n        break;\n      }\n    }\n    $max_level\
    \ = max($max_level, $level);\n  }\n  return $max_level;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \            if ($max_level < 0) {\n                return false;\n          \
    \  }\n        } elseif ($max_level > 0) {\n            $max_level_parens .= $paren;\n\
    \        }\n    }\n    return $max_level_parens;\n}\n", "  $level = 0;\n  $paren_stack\
    \ = array();\n  $paren_stack[] = array();\n  foreach (explode(' ', $paren_string)\
    \ as $char) {\n    if ($char == '(') {\n      $level++;\n      $paren_stack[$level][]\
    \ = array();\n    } else if ($char == ')') {\n      $level--;\n      $paren_stack[$level]\
    \ = array_pop($paren_stack[$level]);\n    } else if ($char == ' ') {\n      $level\
    \ = 0;\n    }\n  }\n  return $paren_stack;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $paren_levels = array();\n  $paren_levels_count = array();\n\
    \  $paren_levels_count_max = array();\n  $paren_levels_count_max[0] = 0;\n  $paren_levels_count_max[1]\
    \ = 0;\n  $paren_levels_count_max[2] = 0;\n  foreach ($paren_array as $paren_string)\
    \ {\n    $paren_levels[] = array();\n    $paren_levels_count[] = 0;\n    $paren_levels_count_max[0]\
    \ = 0;\n    $paren_levels_count_max[1] = 0;\n    $paren_levels_count_max[2] =\
    \ 0;\n    $paren_levels_count_max[0]++;\n    $paren_levels_count_max[1]++;\n \
    \   $paren_levels_count_max[2]++;\n    $paren_levels[count($paren_levels) - 1][]\
    \ = str_replace(array('(', ')'), '', $paren_string);\n  }\n  $paren_levels_count\
    \ = array_count_values($paren_levels_count);\n  foreach ($paren_levels_count as\
    \ $key => $value) {\n    if ($value == 1) {\n      $paren_levels_count_max[$key]\
    \ = $value;\n    }\n  }\n  foreach ($paren_levels as $key => $value) {\n    if\
    \ ($paren_levels_count_max[$key] == 0) {\n      $paren_levels[$key] = array();\n\
    \    }\n  }\n  foreach ($paren_levels as $key => $value) {\n    $paren_levels[$key]\
    \ = array_reverse($value);\n  }\n  return $paren_levels;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length; $i++) {\n   \
    \     if ($paren_array[$i] === '(') {\n            $max_level++;\n        } else\
    \ if ($paren_array[$i] === ')') {\n            $max_level--;\n        }\n    }\n\
    \    return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_array_length = count($paren_array);\n  $max_level = 0;\n  for ($i =\
    \ 0; $i < $paren_array_length; $i++) {\n    $level = 0;\n    for ($j = 0; $j <\
    \ $i; $j++) {\n      if ($paren_array[$j] === '(') {\n        $level++;\n    \
    \  } else if ($paren_array[$j] === ')') {\n        $level--;\n      }\n    }\n\
    \    if ($level > $max_level) {\n      $max_level = $level;\n    }\n  }\n  return\
    \ $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level\
    \ = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as $paren) {\n\
    \        if ($paren == '(') {\n            $max_level++;\n        } else if ($paren\
    \ == ')') {\n            $max_level--;\n        }\n        if ($max_level > $max_level_parens)\
    \ {\n            $max_level_parens = $max_level;\n        }\n    }\n    return\
    \ $max_level_parens;\n}\n", "  $paren_stack = array();\n  $paren_stack_count =\
    \ array();\n  $paren_stack_count[0] = 0;\n  $paren_stack[0] = '';\n  foreach (explode('\
    \ ', $paren_string) as $char) {\n    if ($char == '(') {\n      $paren_stack_count[$paren_stack_count[0]]\
    \ = $paren_stack_count[$paren_stack_count[0]] + 1;\n      $paren_stack[$paren_stack_count[0]]\
    \ = $paren_stack[$paren_stack_count[0]] . $char;\n    } else if ($char == ')')\
    \ {\n      $paren_stack_count[$paren_stack_count[0]] = $paren_stack_count[$paren_stack_count[0]]\
    \ - 1;\n      if ($paren_stack_count[$paren_stack_count[0]] == 0) {\n        $paren_stack[$paren_stack_count[0]]\
    \ = $paren_stack[$paren_stack_count[0]] . $char;\n      }\n    }\n  }\n  return\
    \ $paren_stack;\n}\n", "  $paren_array = explode(' ', $paren_string);\n  $paren_array_count\
    \ = count($paren_array);\n  $max_level = 0;\n  $max_level_paren = '';\n  for ($i\
    \ = 0; $i < $paren_array_count; $i++) {\n    if ($paren_array[$i] === '(') {\n\
    \      $max_level++;\n      if ($max_level > $max_level_paren) {\n        $max_level_paren\
    \ = $max_level;\n      }\n    } else if ($paren_array[$i] === ')') {\n      $max_level--;\n\
    \    }\n  }\n  return $max_level_paren;\n}\n", "    $paren_array = explode(' ',\
    \ $paren_string);\n    $paren_array_length = count($paren_array);\n    $max_level\
    \ = 0;\n    $max_level_paren_array = [];\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        if ($paren_array[$i] === '(') {\n            $max_level++;\n\
    \            $max_level_paren_array[$i] = $max_level;\n        } elseif ($paren_array[$i]\
    \ === ')') {\n            $max_level--;\n        }\n    }\n    for ($i = 0; $i\
    \ < $paren_array_length; $i++) {\n        if ($paren_array[$i] === '(') {\n  \
    \          $paren_array[$i] = $max_level_paren_array[$i];\n        }\n    }\n\
    \    return implode(' ', $paren_array);\n}\n", "  $paren_array = explode(' ',\
    \ $paren_string);\n  $max_level = 0;\n  $max_level_paren = '';\n  foreach ($paren_array\
    \ as $paren) {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren\
    \ == ')') {\n      $max_level--;\n      if ($max_level < 0) {\n        throw new\
    \ Exception('Invalid parenthesis string provided');\n      }\n      if ($max_level\
    \ > $max_level_paren) {\n        $max_level_paren = $max_level;\n      }\n   \
    \ }\n  }\n  return $max_level_paren;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $paren_array_count = count($paren_array);\n    $max_level = 0;\n    for ($i\
    \ = 0; $i < $paren_array_count; $i++) {\n        if ($paren_array[$i] === '(')\
    \ {\n            $max_level++;\n        } else if ($paren_array[$i] === ')') {\n\
    \            $max_level--;\n        }\n    }\n    return $max_level;\n}\n", " \
    \ $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_paren_array\
    \ = [];\n  foreach ($paren_array as $paren_string) {\n    $paren_array = explode(')',\
    \ $paren_string);\n    $level = 0;\n    foreach ($paren_array as $paren_string)\
    \ {\n      $paren_array = explode('(', $paren_string);\n      $level++;\n    }\n\
    \    if ($level > $max_level) {\n      $max_level = $level;\n      $max_level_paren_array\
    \ = $paren_array;\n    }\n  }\n  return $max_level_paren_array;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $level = 0;\n  $max_level = 0;\n  foreach\
    \ ($paren_array as $paren) {\n    if ($paren == '(') {\n      $level++;\n    \
    \  if ($level > $max_level) {\n        $max_level = $level;\n      }\n    } elseif\
    \ ($paren == ')') {\n      $level--;\n    }\n  }\n  return $max_level;\n}\n",
  "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_array\
    \ = [];\n    foreach ($paren_array as $level) {\n        if ($level == '(') {\n\
    \            $max_level++;\n        } else if ($level == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_array[0]) {\n            $max_level_array\
    \ = $max_level;\n        }\n    }\n    return $max_level_array;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_parens) {\n            $max_level_parens\
    \ = $max_level;\n        }\n    }\n    return $max_level_parens;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_levels = array();\n    $paren_levels_count\
    \ = array();\n    $paren_levels_count_max = array();\n    foreach ($paren_array\
    \ as $paren_string) {\n        $paren_levels[] = $paren_string;\n        $paren_levels_count[]\
    \ = substr_count($paren_string, '(');\n        $paren_levels_count_max[] = max($paren_levels_count_max);\n\
    \    }\n    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_array);\n    $paren_levels_count_max[] = count($paren_array);\n\
    \    $paren_levels_count_max[] = count($paren_array);\n    $paren_levels_count_max[]\
    \ = count($paren_", "  $paren_array = explode(' ', $paren_string);\n  $level =\
    \ 0;\n  $paren_array_length = count($paren_array);\n  for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n    if ($paren_array[$i] === '(') {\n      $level++;\n    } else if\
    \ ($paren_array[$i] === ')') {\n      $level--;\n    }\n  }\n  return $level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  $paren_stack = array();\n  foreach ($paren_array as $paren) {\n    if\
    \ ($paren == '(') {\n      $level++;\n      $paren_stack[] = $level;\n    } elseif\
    \ ($paren == ')') {\n      $level--;\n      if ($level < 0) {\n        throw new\
    \ Exception('Unbalanced parenthesis');\n      }\n      $paren_stack[] = $level;\n\
    \    } else {\n      if ($level > $max_level) {\n        $max_level = $level;\n\
    \      }\n    }\n  }\n  $max_level++;\n  $paren_stack[] = $max_level;\n  $paren_stack\
    \ = array_reverse($paren_stack);\n  $output_string = '';\n  foreach ($paren_stack\
    \ as $level) {\n    if ($level > 0) {\n      $output_string .= ' (';\n    }\n\
    \    for ($i = 0; $i < $level; $i++) {\n      $output_string .= ')';\n    }\n\
    \  }\n  return $output_string;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_level = 0;\n  $paren_max_level = 0;\n  foreach ($paren_array as $paren_string)\
    \ {\n    if ($paren_string == '(') {\n      $paren_level++;\n      if ($paren_level\
    \ > $paren_max_level) {\n        $paren_max_level = $paren_level;\n      }\n \
    \   } else if ($paren_string == ')') {\n      $paren_level--;\n    }\n  }\n  return\
    \ $paren_max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level\
    \ = 0;\n  $level = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren ==\
    \ '(') {\n      $level++;\n    } else if ($paren == ')') {\n      $level--;\n\
    \    }\n    if ($level > $max_level) {\n      $max_level = $level;\n    }\n  }\n\
    \  return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_array_count = count($paren_array);\n  $paren_array_level = 0;\n  $paren_array_deepest_level\
    \ = 0;\n  foreach ($paren_array as $paren_string) {\n    if ($paren_array_level\
    \ == 0) {\n      $paren_array_level++;\n    }\n    if ($paren_array_level > $paren_array_deepest_level)\
    \ {\n      $paren_array_deepest_level = $paren_array_level;\n    }\n    if ($paren_array_level\
    \ == $paren_array_deepest_level) {\n      $paren_array_level++;\n    }\n  }\n\
    \  return $paren_array_deepest_level;\n}\n", "  $level = 0;\n  $paren_stack =\
    \ array();\n  foreach (explode(' ', $paren_string) as $paren) {\n    if ($paren\
    \ == '(') {\n      $paren_stack[] = $paren;\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $paren = array_pop($paren_stack);\n      $level--;\n      if\
    \ ($level < 0) {\n        throw new Exception('Unbalanced parenthesis');\n   \
    \   }\n    }\n  }\n  return $level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_array = [];\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n    }\n    if ($paren == ')')\
    \ {\n      $max_level--;\n    }\n    if ($max_level > $max_level_array[0]) {\n\
    \      $max_level_array[0] = $max_level;\n    }\n  }\n  return $max_level_array[0];\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $paren_levels = array();\n\
    \  $paren_levels_count = array();\n  $paren_levels_count_max = array();\n  $paren_levels_count_max[0]\
    \ = 0;\n  $paren_levels_count_max[1] = 0;\n  $paren_levels_count_max[2] = 0;\n\
    \  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n      $paren_levels[]\
    \ = 1;\n      $paren_levels_count[] = 1;\n      $paren_levels_count_max[1]++;\n\
    \    } else if ($paren == ')') {\n      $paren_levels[] = $paren_levels[count($paren_levels)\
    \ - 1];\n      $paren_levels_count[] = $paren_levels_count[count($paren_levels)\
    \ - 1];\n      $paren_levels_count_max[max($paren_levels_count_max)]++;\n    }\n\
    \  }\n  $paren_levels_count_max[max($paren_levels_count_max)] = max($paren_levels_count_max);\n\
    \  foreach ($paren_levels_count_max as $i => $level) {\n    if ($level == 1) {\n\
    \      $paren_levels_count_max[$i] = $paren_levels_count_max[$i] - 1;\n    }\n\
    \  }\n  foreach ($paren_levels_count_max as $i => $level) {\n    if ($level >\
    \ 1) {\n      $paren_levels_count_max[$i] = $paren_levels_count_max[$i] - 1;\n\
    \    }\n  }\n  return $paren_levels_count_max;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $max_level = 0;\n  $level = 0;\n  foreach ($paren_array\
    \ as $paren) {\n    if ($paren == '(') {\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $level--;\n      if ($level < 0) {\n        $max_level = 0;\n\
    \        break;\n      }\n    }\n    $max_level = max($max_level, $level);\n \
    \ }\n  return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_array = [];\n  foreach ($paren_array as $paren_group)\
    \ {\n    $paren_group_array = explode(')', $paren_group);\n    $current_level\
    \ = 0;\n    foreach ($paren_group_array as $paren_group_element) {\n      if ($paren_group_element\
    \ == '(') {\n        $current_level++;\n      } else if ($paren_group_element\
    \ == ')') {\n        $current_level--;\n      }\n      if ($current_level > $max_level)\
    \ {\n        $max_level = $current_level;\n        $max_level_array = $paren_group_array;\n\
    \      }\n    }\n  }\n  return $max_level_array;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $paren_array_length = count($paren_array);\n  $max_level\
    \ = 0;\n  $max_level_paren_string = '';\n  for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n    $level = 0;\n    $paren_string = $paren_array[$i];\n    for ($j\
    \ = 0; $j < strlen($paren_string); $j++) {\n      if ($paren_string[$j] == '(')\
    \ {\n        $level++;\n      } else if ($paren_string[$j] == ')') {\n       \
    \ $level--;\n      }\n      if ($level > $max_level) {\n        $max_level = $level;\n\
    \        $max_level_paren_string = $paren_string;\n      }\n    }\n  }\n  return\
    \ $max_level_paren_string;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    foreach ($paren_array as $level) {\n        if ($level\
    \ == '(') {\n            $max_level++;\n        } else if ($level == ')') {\n\
    \            $max_level--;\n        }\n    }\n    return $max_level;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    $max_level_array = [];\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        if ($paren_array[$i] === '(') {\n            $max_level++;\n\
    \            $max_level_array[$i] = $max_level;\n        } else if ($paren_array[$i]\
    \ === ')') {\n            $max_level--;\n            $max_level_array[$i] = $max_level;\n\
    \        }\n    }\n    $max_level_array_length = count($max_level_array);\n  \
    \  for ($i = 0; $i < $max_level_array_length; $i++) {\n        if ($max_level_array[$i]\
    \ === 0) {\n            return $i;\n        }\n    }\n    return -1;\n}\n", " \
    \ $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_parens\
    \ = array();\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n\
    \      $max_level++;\n    } else if ($paren == ')') {\n      $max_level--;\n \
    \     if ($max_level < 0) {\n        return $max_level_parens;\n      }\n    }\n\
    \    $max_level_parens[] = $max_level;\n  }\n  return $max_level_parens;\n}\n",
  "  $paren_array = explode(' ', $paren_string);\n  $level = 0;\n  $paren_levels =\
    \ array();\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n \
    \     $level++;\n      $paren_levels[$level] = $level;\n    }\n    if ($paren\
    \ == ')') {\n      $level--;\n      $paren_levels[$level] = $level;\n    }\n \
    \ }\n  $max_level = max($paren_levels);\n  foreach ($paren_levels as $level =>\
    \ $paren_level) {\n    if ($paren_level == $max_level) {\n      return $level;\n\
    \    }\n  }\n  return -1;\n}\n", "  $level = 0;\n  $paren_stack = array();\n \
    \ $paren_stack[] = -1;\n  $paren_stack_string = array();\n  $paren_stack_string[]\
    \ = '';\n  foreach (explode(' ', $paren_string) as $char) {\n    if ($char ==\
    \ '(') {\n      $level++;\n      $paren_stack_string[] = $char;\n      $paren_stack[]\
    \ = $level;\n    } else if ($char == ')') {\n      $level--;\n      $paren_stack_string[]\
    \ = $char;\n      $paren_stack[] = $level;\n    }\n  }\n  $paren_stack_string\
    \ = array_reverse($paren_stack_string);\n  $paren_stack_string = array_map(function\
    \ ($char) {\n    return str_repeat($char, $level);\n  }, $paren_stack_string);\n\
    \  $paren_stack_string = implode('', $paren_stack_string);\n  return $paren_stack_string;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    $max_level_parens = '';\n    foreach ($paren_array as $paren) {\n       \
    \ if ($paren == '(') {\n            $max_level++;\n        } else {\n        \
    \    $max_level--;\n        }\n        if ($max_level > $max_level_parens) {\n\
    \            $max_level_parens = $max_level;\n        }\n    }\n    return $max_level_parens;\n\
    }\n", "  $level = 0;\n  $paren_stack = array();\n  $paren_stack[] = array();\n\
    \  $paren_stack[0][] = $paren_string;\n  while ($paren_stack) {\n    $level++;\n\
    \    $paren_string = array_pop($paren_stack);\n    $paren_stack = array();\n \
    \   foreach (explode(' ', $paren_string) as $paren) {\n      if ($paren == '(')\
    \ {\n        $paren_stack[] = array();\n        $paren_stack[0][] = $paren;\n\
    \      } else if ($paren == ')') {\n        $paren_string = implode('', $paren_stack);\n\
    \        $paren_stack = array();\n      }\n    }\n  }\n  return $level;\n}\n",
  "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_paren_array\
    \ = [];\n  foreach ($paren_array as $paren_item) {\n    if ($paren_item == '(')\
    \ {\n      $max_level++;\n      $max_level_paren_array[] = $paren_item;\n    }\n\
    \    if ($paren_item == ')') {\n      $max_level--;\n      if ($max_level < 0)\
    \ {\n        throw new Exception('Too many closing parentheses.');\n      }\n\
    \      $max_level_paren_array[] = $paren_item;\n    }\n  }\n  return $max_level_paren_array;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n    } else if ($paren == ')') {\n      $level--;\n    }\n    if ($level\
    \ > $max_level) {\n      $max_level = $level;\n    }\n  }\n  return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $paren_levels = array();\n\
    \  $paren_levels_count = array();\n  $paren_levels_count_max = array();\n  foreach\
    \ ($paren_array as $paren_string) {\n    $paren_levels[] = $paren_string;\n  \
    \  $paren_levels_count[] = substr_count($paren_string, '(');\n    $paren_levels_count_max[]\
    \ = max($paren_levels_count);\n  }\n  $max_level = max($paren_levels_count);\n\
    \  $paren_levels_count = array_fill(0, $max_level, $max_level);\n  $paren_levels_count_max\
    \ = array_fill(0, $max_level, $max_level);\n  foreach ($paren_array as $paren_string)\
    \ {\n    $paren_levels_count[$paren_levels_count_max[$paren_string]] += substr_count($paren_string,\
    \ '(');\n    $paren_levels_count_max[$paren_string] = max($paren_levels_count_max[$paren_string]);\n\
    \  }\n  $paren_levels_count_max = array_values($paren_levels_count_max);\n  $paren_levels_count\
    \ = array_values($paren_levels_count);\n  return $paren_levels_count;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $paren_array_count = count($paren_array);\n\
    \    $max_level = 0;\n    for ($i = 0; $i < $paren_array_count; $i++) {\n    \
    \    $level = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($paren_array[$j]\
    \ === '(') {\n                $level++;\n            } elseif ($paren_array[$j]\
    \ === ')') {\n                $level--;\n            }\n        }\n        if\
    \ ($level > $max_level) {\n            $max_level = $level;\n        }\n    }\n\
    \    return $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } else {\n            $max_level--;\n        }\n        if ($max_level > $max_level_parens)\
    \ {\n            $max_level_parens = $max_level;\n        }\n    }\n    return\
    \ $max_level_parens;\n}\n", "  $paren_array = explode(' ', $paren_string);\n \
    \ $max_level = 0;\n  $max_level_paren = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')')\
    \ {\n      $max_level--;\n      if ($max_level < 0) {\n        break;\n      }\n\
    \      if ($max_level > $max_level_paren) {\n        $max_level_paren = $max_level;\n\
    \      }\n    }\n  }\n  return $max_level_paren;\n}\n", "  $level = 0;\n  $paren_string\
    \ = preg_replace('/\\s+/', ' ', $paren_string);\n  foreach (explode(' ', $paren_string)\
    \ as $paren) {\n    if ($paren == '(') {\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $level--;\n    }\n  }\n  return $level;\n}\n", "  $level =\
    \ 0;\n  $paren_stack = array();\n  $paren_stack[] = array();\n  $paren_stack =\
    \ array_reverse($paren_stack);\n  foreach (explode(' ', $paren_string) as $char)\
    \ {\n    if ($char == '(') {\n      $level++;\n      $paren_stack[] = array();\n\
    \      $paren_stack = array_reverse($paren_stack);\n    } elseif ($char == ')')\
    \ {\n      $level--;\n      $paren_stack = array_reverse($paren_stack);\n    }\n\
    \    if ($level > 0) {\n      $paren_stack = array_reverse($paren_stack);\n  \
    \  }\n  }\n  return $paren_stack;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $paren_array_count = count($paren_array);\n    $max_level = 0;\n    for ($i\
    \ = 0; $i < $paren_array_count; $i++) {\n        if ($paren_array[$i] === '(')\
    \ {\n            $max_level++;\n        } else if ($paren_array[$i] === ')') {\n\
    \            $max_level--;\n        }\n    }\n    return $max_level;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens\
    \ = '';\n    foreach ($paren_array as $paren) {\n        $level = 0;\n       \
    \ $paren_array = explode(')', $paren);\n        foreach ($paren_array as $paren_item)\
    \ {\n            $paren_array = explode('(', $paren_item);\n            $level++;\n\
    \        }\n        if ($level > $max_level) {\n            $max_level = $level;\n\
    \            $max_level_parens = $paren;\n        }\n    }\n    return $max_level_parens;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    $max_level_paren = -1;\n    foreach ($paren_array as $paren) {\n        if\
    \ ($paren == '(') {\n            $max_level++;\n        } else if ($paren == ')')\
    \ {\n            $max_level--;\n            if ($max_level < 0) {\n          \
    \      return false;\n            }\n        }\n        if ($max_level > $max_level_paren)\
    \ {\n            $max_level_paren = $max_level;\n        }\n    }\n    return\
    \ $max_level_paren;\n}\n", "  $level = 0;\n  $paren_stack = array();\n  $paren_stack[]\
    \ = array();\n  $paren_stack[0][] = $paren_string;\n  while ($paren_stack) {\n\
    \    $level++;\n    $paren_string = $paren_stack[count($paren_stack) - 1][count($paren_stack[count($paren_stack)\
    \ - 1]) - 1];\n    $paren_stack = array_pop($paren_stack);\n    if ($paren_string\
    \ == ')') {\n      $level--;\n    }\n    if ($level > 0) {\n      $paren_stack[]\
    \ = array();\n      $paren_stack[0][] = $paren_string;\n    }\n  }\n  return $level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_paren\
    \ = '';\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n    \
    \  $max_level++;\n    } else if ($paren == ')') {\n      $max_level--;\n     \
    \ if ($max_level < 0) {\n        return $max_level_paren;\n      }\n    }\n  \
    \  $max_level_paren .= $paren;\n  }\n  return $max_level_paren;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $max_level = 0;\n  $level = 0;\n  foreach\
    \ ($paren_array as $paren) {\n    if ($paren == '(') {\n      $level++;\n    }\
    \ else if ($paren == ')') {\n      $level--;\n      if ($level < 0) {\n      \
    \  $max_level = 0;\n        break;\n      }\n    }\n    $max_level = max($max_level,\
    \ $level);\n  }\n  return $max_level;\n}\n", "  $level = 0;\n  $paren_stack =\
    \ array();\n  $paren_stack[] = array();\n  foreach (explode(' ', $paren_string)\
    \ as $char) {\n    if ($char == '(') {\n      $paren_stack[$level][] = array();\n\
    \      $level++;\n    } else if ($char == ')') {\n      $level--;\n      if ($level\
    \ == 0) {\n        $paren_stack[$level][] = array();\n      }\n    } else {\n\
    \      $paren_stack[$level][] = $char;\n    }\n  }\n  $paren_stack[$level] = array();\n\
    \  return $paren_stack;\n}\n", "    $paren_array = explode(\" \", $paren_string);\n\
    \    $max_level = 0;\n    $max_level_paren = -1;\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == \"(\") {\n            $max_level++;\n     \
    \   } else if ($paren == \")\") {\n            $max_level--;\n            if ($max_level\
    \ < 0) {\n                return -1;\n            }\n        }\n        if ($max_level\
    \ > $max_level_paren) {\n            $max_level_paren = $max_level;\n        }\n\
    \    }\n    return $max_level_paren;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_paren = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n      if ($max_level > $max_level_paren)\
    \ {\n        $max_level_paren = $max_level;\n      }\n    } else if ($paren ==\
    \ ')') {\n      $max_level--;\n    }\n  }\n  return $max_level_paren;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens\
    \ = '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_parens) {\n            $max_level_parens\
    \ = $max_level;\n        }\n    }\n    return $max_level_parens;\n}\n", "    $paren_array\
    \ = explode(\" \", $paren_string);\n    $max_level = 0;\n    $max_level_paren\
    \ = \"\";\n    foreach ($paren_array as $paren) {\n        if ($paren == \"(\"\
    ) {\n            $max_level++;\n        } else if ($paren == \")\") {\n      \
    \      $max_level--;\n        }\n        if ($max_level > $max_level_paren) {\n\
    \            $max_level_paren = $max_level;\n        }\n    }\n    return $max_level_paren;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_level = 0;\n\
    \    $paren_stack = array();\n    foreach ($paren_array as $paren) {\n       \
    \ if ($paren == '(') {\n            $paren_level++;\n        } else if ($paren\
    \ == ')') {\n            $paren_level--;\n        }\n        if ($paren_level\
    \ == 0 && count($paren_stack) > 0) {\n            $paren_stack[count($paren_stack)\
    \ - 1]++;\n        } else {\n            $paren_stack[] = 0;\n        }\n    }\n\
    \    return $paren_stack;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_paren = '';\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } elseif ($paren == ')') {\n            $max_level--;\n        }\n        if\
    \ ($max_level > $max_level_paren) {\n            $max_level_paren = $max_level;\n\
    \        }\n    }\n    return $max_level_paren;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $max_level = 0;\n  $max_level_array = [];\n  foreach ($paren_array\
    \ as $paren) {\n    if ($paren == '(') {\n      $max_level++;\n      $max_level_array[]\
    \ = $max_level;\n    }\n    if ($paren == ')') {\n      $max_level--;\n      $max_level_array[]\
    \ = $max_level;\n    }\n  }\n  $max_level_array = array_reverse($max_level_array);\n\
    \  $max_level_array_length = count($max_level_array);\n  for ($i = 0; $i < $max_level_array_length;\
    \ $i++) {\n    if ($max_level_array[$i] == 0) {\n      return $i;\n    }\n  }\n\
    \  return -1;\n}\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level\
    \ = 0;\n  $level = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren ==\
    \ '(') {\n      $level++;\n    } else if ($paren == ')') {\n      $level--;\n\
    \      if ($level < 0) {\n        $max_level = 0;\n        break;\n      }\n \
    \   }\n    $max_level = max($max_level, $level);\n  }\n  return $max_level;\n\
    }\n", "  $level = 0;\n  $paren_stack = array();\n  foreach (explode(' ', $paren_string)\
    \ as $char) {\n    if ($char == '(') {\n      $paren_stack[] = $char;\n    } else\
    \ if ($char == ')') {\n      $level--;\n      if ($level == 0) {\n        $paren_stack\
    \ = array_reverse($paren_stack);\n        break;\n      }\n    }\n  }\n  return\
    \ $paren_stack;\n}\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level\
    \ = 0;\n    $max_level_array = [];\n    foreach ($paren_array as $level) {\n \
    \       if ($level == '(') {\n            $max_level++;\n        } else if ($level\
    \ == ')') {\n            $max_level--;\n        }\n        if ($max_level > $max_level_array[0])\
    \ {\n            $max_level_array = $max_level;\n        }\n    }\n    return\
    \ $max_level_array;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } elseif ($paren == ')') {\n            $max_level--;\n            if ($max_level\
    \ < 0) {\n                return false;\n            }\n        } elseif ($max_level\
    \ > 0) {\n            $max_level_parens .= $paren;\n        }\n    }\n    return\
    \ $max_level_parens;\n}\n", "  $paren_array = explode(' ', $paren_string);\n \
    \ $max_level = 0;\n  $level = 0;\n  foreach ($paren_array as $paren) {\n    if\
    \ ($paren == '(') {\n      $level++;\n    } else if ($paren == ')') {\n      $level--;\n\
    \      if ($level < 0) {\n        $max_level = $level;\n        break;\n     \
    \ }\n    }\n  }\n  return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_array = [];\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')')\
    \ {\n      $max_level--;\n      if ($max_level < 0) {\n        throw new Exception('Maximum\
    \ level of nesting exceeded');\n      }\n      if ($max_level_array[$max_level]\
    \ == 0) {\n        $max_level_array[$max_level] = 1;\n      } else {\n       \
    \ $max_level_array[$max_level]++;\n      }\n    }\n  }\n  return $max_level_array;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $level = 0;\n  $max_level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n      if ($level > $max_level) {\n        $max_level = $level;\n\
    \      }\n    } else if ($paren == ')') {\n      $level--;\n    }\n  }\n  return\
    \ $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        $paren_array[$i] = trim($paren_array[$i]);\n        if ($paren_array[$i]\
    \ === '(') {\n            $max_level++;\n        } else if ($paren_array[$i] ===\
    \ ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "  $level = 0;\n  $nested_parens = array();\n  foreach (explode(' ', $paren_string)\
    \ as $paren) {\n    if ($paren == '(') {\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $level--;\n    }\n    if ($level > 0) {\n      $nested_parens[]\
    \ = $level;\n    }\n  }\n  return $nested_parens;\n}\n", "    $level = 0;\n  \
    \  $paren_stack = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[] = array();\n    $paren_stack[]\
    \ = array();\n    $paren_stack[] = array();\n    $paren_stack[] = array();\n \
    \   $paren_stack[] = array();\n    $paren_stack[]", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_array_size = count($paren_array);\n    $max_level\
    \ = 0;\n    for ($i = 0; $i < $paren_array_size; $i++) {\n        if ($paren_array[$i]\
    \ === '(') {\n            $max_level++;\n        } else if ($paren_array[$i] ===\
    \ ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n    } else if ($paren == ')') {\n      $level--;\n    }\n    if ($level\
    \ > $max_level) {\n      $max_level = $level;\n    }\n  }\n  return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_parens\
    \ = '';\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n    \
    \  $max_level++;\n    }\n    if ($paren == ')') {\n      $max_level--;\n    }\n\
    \    if ($max_level > $max_level_parens) {\n      $max_level_parens = $max_level;\n\
    \    }\n  }\n  return $max_level_parens;\n}\n", "  $paren_array = explode(' ',\
    \ $paren_string);\n  $level = 0;\n  $paren_levels = array();\n  foreach ($paren_array\
    \ as $paren) {\n    if ($paren == '(') {\n      $level++;\n      $paren_levels[$level]\
    \ = $level;\n    } elseif ($paren == ')') {\n      $level--;\n      $paren_levels[$level]\
    \ = $level;\n    }\n  }\n  $max_level = max($paren_levels);\n  foreach ($paren_levels\
    \ as $level => $paren_level) {\n    if ($paren_level == $max_level) {\n      return\
    \ $level;\n    }\n  }\n  return -1;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    foreach ($paren_array as $level) {\n        if ($level\
    \ == '(') {\n            $max_level++;\n        } else if ($level == ')') {\n\
    \            $max_level--;\n        }\n    }\n    return $max_level;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    foreach\
    \ ($paren_array as $level) {\n        if ($level == '(') {\n            $max_level++;\n\
    \        } else if ($level == ')') {\n            $max_level--;\n        }\n \
    \   }\n    return $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_paren_array = [];\n    foreach ($paren_array\
    \ as $paren_item) {\n        if ($paren_item == '(') {\n            $max_level++;\n\
    \            $max_level_paren_array[$max_level] = $paren_item;\n        } elseif\
    \ ($paren_item == ')') {\n            $max_level--;\n            if ($max_level\
    \ < 0) {\n                return false;\n            }\n            $max_level_paren_array[$max_level]\
    \ = $paren_item;\n        }\n    }\n    $max_level_paren_array[$max_level] = $paren_array[$max_level];\n\
    \    return $max_level_paren_array;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $paren_array_size = count($paren_array);\n    $max_level = 0;\n    for ($i\
    \ = 0; $i < $paren_array_size; $i++) {\n        if ($paren_array[$i] === '(')\
    \ {\n            $max_level++;\n        } else if ($paren_array[$i] === ')') {\n\
    \            $max_level--;\n        }\n    }\n    return $max_level;\n}\n", " \
    \ $paren_array = explode(' ', $paren_string);\n  $paren_array_count = count($paren_array);\n\
    \  $max_level = 0;\n  $max_level_paren_array = [];\n  for ($i = 0; $i < $paren_array_count;\
    \ $i++) {\n    $paren_array[$i] = trim($paren_array[$i]);\n    if ($paren_array[$i]\
    \ === '(') {\n      $max_level++;\n      $max_level_paren_array[$i] = $max_level;\n\
    \    }\n    if ($paren_array[$i] === ')') {\n      $max_level--;\n    }\n  }\n\
    \  $max_level_paren_array_count = count($max_level_paren_array);\n  for ($i =\
    \ 0; $i < $max_level_paren_array_count; $i++) {\n    $max_level = $max_level_paren_array[$i];\n\
    \  }\n  return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_paren = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')')\
    \ {\n      $max_level--;\n      if ($max_level < 0) {\n        throw new Exception('Invalid\
    \ parenthesis string');\n      }\n      if ($max_level == 0) {\n        $max_level_paren\
    \ = $paren;\n      }\n    }\n  }\n  return $max_level_paren;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren_array\
    \ = [];\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n            $max_level_paren_array[] = $paren;\n \
    \       } elseif ($paren == ')') {\n            $max_level--;\n            $max_level_paren_array[]\
    \ = $paren;\n        }\n    }\n    return $max_level;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } else {\n            $max_level--;\n    \
    \    }\n        if ($max_level > $max_level_parens) {\n            $max_level_parens\
    \ = $max_level;\n        }\n    }\n    return $max_level_parens;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_paren = '';\n\
    \  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n      $max_level++;\n\
    \    }\n    if ($paren == ')') {\n      $max_level--;\n    }\n    if ($max_level\
    \ > $max_level_paren) {\n      $max_level_paren = $max_level;\n    }\n  }\n  return\
    \ $max_level_paren;\n}\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level\
    \ = 0;\n  $max_level_array = [];\n  foreach ($paren_array as $paren) {\n    if\
    \ ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')') {\n  \
    \    $max_level--;\n      if ($max_level < 0) {\n        return $max_level_array;\n\
    \      }\n    }\n    $max_level_array[] = $max_level;\n  }\n  return $max_level_array;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    foreach ($paren_array as $level) {\n        if ($level == '(') {\n      \
    \      $max_level++;\n        } else if ($level == ')') {\n            $max_level--;\n\
    \        }\n    }\n    return $max_level;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $level = 0;\n    foreach ($paren_array\
    \ as $paren) {\n        if ($paren == '(') {\n            $level++;\n        }\
    \ else if ($paren == ')') {\n            $level--;\n        }\n        if ($level\
    \ > $max_level) {\n            $max_level = $level;\n        }\n    }\n    return\
    \ $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_levels\
    \ = array();\n    $max_level = 0;\n    foreach ($paren_array as $paren_string)\
    \ {\n        $paren_levels[] = $paren_string;\n        $max_level = max($max_level,\
    \ count($paren_levels));\n    }\n    return $max_level;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $level = 0;\n  $paren_levels = array();\n\
    \  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n      $level++;\n\
    \    } else if ($paren == ')') {\n      $level--;\n      if ($level < 0) {\n \
    \       $paren_levels[] = $level;\n      }\n    }\n  }\n  return $paren_levels;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n    } else if ($paren == ')') {\n      $level--;\n      if ($level\
    \ < 0) {\n        $max_level = 0;\n        break;\n      }\n    }\n    $max_level\
    \ = max($max_level, $level);\n  }\n  return $max_level;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_array_count = count($paren_array);\n\
    \    $max_level = 0;\n    for ($i = 0; $i < $paren_array_count; $i++) {\n    \
    \    $level = 0;\n        for ($j = $i; $j < $paren_array_count; $j++) {\n   \
    \         if ($paren_array[$i] == $paren_array[$j]) {\n                $level++;\n\
    \            } else {\n                break;\n            }\n        }\n    \
    \    if ($level > $max_level) {\n            $max_level = $level;\n        }\n\
    \    }\n    return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_levels = array();\n  $max_level = 0;\n  foreach ($paren_array as $paren_string)\
    \ {\n    $paren_levels[] = $paren_level;\n    $paren_level = count($paren_levels);\n\
    \    if ($paren_level > $max_level) {\n      $max_level = $paren_level;\n    }\n\
    \  }\n  return $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $paren_array_size = count($paren_array);\n    $paren_array_max = 0;\n   \
    \ $paren_array_index = 0;\n    foreach ($paren_array as $paren_array_value) {\n\
    \        if ($paren_array_index > $paren_array_max) {\n            $paren_array_max\
    \ = $paren_array_index;\n        }\n        $paren_array_index++;\n    }\n   \
    \ return $paren_array_max;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_array_length = count($paren_array);\n  $max_level = 0;\n  $max_level_array\
    \ = [];\n  for ($i = 0; $i < $paren_array_length; $i++) {\n    if ($paren_array[$i]\
    \ === '(') {\n      $max_level++;\n      $max_level_array[$i] = $max_level;\n\
    \    }\n    if ($paren_array[$i] === ')') {\n      $max_level--;\n    }\n  }\n\
    \  $max_level_length = count($max_level_array);\n  for ($i = 0; $i < $max_level_length;\
    \ $i++) {\n    $max_level_array[$i] = $max_level_array[$i] + 1;\n  }\n  $max_level_length\
    \ = array_sum($max_level_array);\n  for ($i = 0; $i < $max_level_length; $i++)\
    \ {\n    $paren_array[$i] = $max_level_array[$i];\n  }\n  return $paren_array;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_count\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_count;\
    \ $i++) {\n        $paren_array[$i] = trim($paren_array[$i]);\n        if ($paren_array[$i]\
    \ === '(') {\n            $max_level++;\n        } else if ($paren_array[$i] ===\
    \ ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n    } else if ($paren == ')') {\n      $level--;\n    }\n    if ($level\
    \ > $max_level) {\n      $max_level = $level;\n    }\n  }\n  return $max_level;\n\
    }\n", "    $paren_array = explode(\" \", $paren_string);\n    $max_level = 0;\n\
    \    $max_level_paren_array = [];\n    foreach ($paren_array as $paren_item) {\n\
    \        if ($paren_item == \"(\") {\n            $max_level++;\n            $max_level_paren_array[]\
    \ = $paren_item;\n        } elseif ($paren_item == \")\") {\n            $max_level--;\n\
    \            if ($max_level == 0) {\n                $max_level_paren_array[]\
    \ = $paren_item;\n            }\n        }\n    }\n    return $max_level_paren_array;\n\
    }\n", "  $level = 0;\n  $paren_stack = array();\n  $paren_stack_size = count($paren_string);\n\
    \  for ($i = 0; $i < $paren_stack_size; ++$i) {\n    if ($paren_string[$i] ==\
    \ ')') {\n      ++$level;\n    } else {\n      --$level;\n    }\n    if ($level\
    \ < 0) {\n      return $paren_stack;\n    }\n    $paren_stack[] = $paren_string[$i];\n\
    \  }\n  return $paren_stack;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as\
    \ $paren) {\n        $level = 0;\n        $paren_array = explode(')', $paren);\n\
    \        foreach ($paren_array as $nested_paren) {\n            $level++;\n  \
    \          $nested_paren_array = explode('(', $nested_paren);\n            if\
    \ ($level > $max_level) {\n                $max_level = $level;\n            \
    \    $max_level_parens = $nested_paren;\n            }\n        }\n    }\n   \
    \ return $max_level_parens;\n}\n", "  $level = 0;\n  $paren_stack = array();\n\
    \  foreach (explode(' ', $paren_string) as $paren) {\n    if ($paren == '(') {\n\
    \      $paren_stack[] = $paren;\n    } else {\n      if ($paren == ')') {\n  \
    \      $paren = array_pop($paren_stack);\n      }\n      if ($paren) {\n     \
    \   $level++;\n      }\n    }\n  }\n  return $level;\n}\n", "  $paren_array =\
    \ explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_parens = '';\n\
    \  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n      $max_level++;\n\
    \    } else if ($paren == ')') {\n      $max_level--;\n      if ($max_level <\
    \ 0) {\n        // This paren string has too many levels of nesting.\n       \
    \ return FALSE;\n      }\n    }\n    if ($max_level > $max_level_parens) {\n \
    \     $max_level_parens = $max_level;\n    }\n  }\n  return $max_level_parens;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_count\
    \ = count($paren_array);\n    $paren_array_level = 0;\n    $paren_array_output\
    \ = '';\n    foreach ($paren_array as $paren_item) {\n        if ($paren_item\
    \ == '(') {\n            $paren_array_level++;\n        } elseif ($paren_item\
    \ == ')') {\n            $paren_array_level--;\n        }\n        if ($paren_array_level\
    \ == 0) {\n            $paren_array_output .= $paren_item;\n        }\n    }\n\
    \    return $paren_array_output;\n}", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_paren_array = [];\n  foreach ($paren_array as\
    \ $paren) {\n    $paren_array_copy = array_slice($paren_array, 0, $paren);\n \
    \   $max_level_paren_array[$paren] = max($max_level_paren_array[$paren], count($paren_array_copy));\n\
    \  }\n  foreach ($max_level_paren_array as $level => $level_paren_array) {\n \
    \   if ($level == count($paren_array) - 1) {\n      $max_level = max($max_level,\
    \ $level);\n    }\n  }\n  return $max_level;\n}\n", "  $level = 0;\n  $paren_levels\
    \ = array();\n  $paren_levels_count = array();\n  $paren_levels_count = explode('\
    \ ', $paren_string);\n  foreach ($paren_levels_count as $paren_level) {\n    $paren_levels[$level]\
    \ = $paren_level;\n    $level++;\n  }\n  $paren_levels_count = array_reverse($paren_levels_count);\n\
    \  foreach ($paren_levels_count as $paren_level) {\n    if ($paren_level > 0)\
    \ {\n      $paren_level--;\n    }\n    $paren_levels[$level] = $paren_level;\n\
    \    $level++;\n  }\n  $paren_levels = array_reverse($paren_levels);\n  $max_level\
    \ = 0;\n  foreach ($paren_levels as $level) {\n    if ($level > $max_level) {\n\
    \      $max_level = $level;\n    }\n  }\n  $max_level++;\n  $paren_levels = array_reverse($paren_levels);\n\
    \  $paren_levels = array_slice($paren_levels, 0, $max_level);\n  $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, $max_level);\n  $paren_levels_count =\
    \ array_reverse($paren_levels_count);\n  $paren_levels_count = array_slice($paren_levels_count,\
    \ 0, $max_level);\n  $paren_levels_count = array_reverse($paren_levels_count);\n\
    \  $paren_levels_count = array_slice($paren_levels_count, 0, $max_level);\n  $paren_levels_count\
    \ = array_reverse($paren_levels_count);\n  $paren_levels_count = array_slice($paren_levels_count,\
    \ 0, $max_level);\n  $paren_levels_count = array_reverse($paren_levels_count);\n\
    \  $paren_levels_count = array_slice($paren_levels_count, 0, $max_level);\n  $paren_levels_count\
    \ = array_reverse($paren_levels_count);\n  $paren_levels_count = array_slice($paren_levels_count,\
    \ 0, $max_level);\n  $paren_levels_count = array_reverse($paren_levels_count);\n\
    \  $paren_levels_count = array_slice($paren_levels_count, 0, $max_level);\n  $paren_levels_count\
    \ = array_reverse($paren_levels_count);\n  $paren_levels_count = array_slice($paren_levels_count,\
    \ 0, $max_level);\n  $paren_levels_count = array_reverse($paren_levels_count);\n\
    \  $paren_levels_count = array_slice($paren_levels_count, 0, $max_level);\n",
  "    $paren_array = explode(' ', $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length; $i++) {\n   \
    \     if ($paren_array[$i] === '(') {\n            $max_level++;\n        } else\
    \ if ($paren_array[$i] === ')') {\n            $max_level--;\n        }\n    }\n\
    \    return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_levels = array();\n  foreach ($paren_array as $paren_string) {\n   \
    \ $paren_levels[] = count($paren_string);\n  }\n  $max_level = max($paren_levels);\n\
    \  $nested_parens = array();\n  for ($i = 0; $i < $max_level; $i++) {\n    $nested_parens[]\
    \ = '';\n  }\n  for ($i = 0; $i < $max_level; $i++) {\n    for ($j = 0; $j < $i;\
    \ $j++) {\n      $nested_parens[$j] = $nested_parens[$j] . $paren_array[$i];\n\
    \    }\n  }\n  return $nested_parens;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_parens = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n      if ($max_level > $max_level_parens)\
    \ {\n        $max_level_parens = $max_level;\n      }\n    } else if ($paren ==\
    \ ')') {\n      $max_level--;\n    }\n  }\n  return $max_level_parens;\n}\n",
  "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $level\
    \ = 0;\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $level++;\n        } else if ($paren == ')') {\n            $level--;\n\
    \        }\n        if ($level > $max_level) {\n            $max_level = $level;\n\
    \        }\n    }\n    return $max_level;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $max_level_paren = -1;\n    foreach\
    \ ($paren_array as $paren) {\n        if ($paren == '(') {\n            $max_level++;\n\
    \        } else if ($paren == ')') {\n            $max_level--;\n            if\
    \ ($max_level < 0) {\n                return false;\n            }\n        }\
    \ else if ($max_level > 0) {\n            $max_level_paren = $paren;\n       \
    \ }\n    }\n    return $max_level_paren;\n}\n", "  $paren_array = explode(' ',\
    \ $paren_string);\n  $paren_array_count = count($paren_array);\n  $max_level =\
    \ 0;\n  $max_level_paren = '';\n  for ($i = 0; $i < $paren_array_count; $i++)\
    \ {\n    if ($paren_array[$i] === '(') {\n      $max_level++;\n      if ($max_level\
    \ > $max_level_paren) {\n        $max_level_paren = $max_level;\n      }\n   \
    \ } else if ($paren_array[$i] === ')') {\n      $max_level--;\n    }\n  }\n  return\
    \ $max_level_paren;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } else if ($paren == ')') {\n            $max_level--;\n        }\n        if\
    \ ($max_level > $max_level_parens) {\n            $max_level_parens = $max_level;\n\
    \        }\n    }\n    return $max_level_parens;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_array_size = count($paren_array);\n    $max_level\
    \ = 0;\n    for ($i = 0; $i < $paren_array_size; $i++) {\n        $level = 0;\n\
    \        for ($j = 0; $j < $i; $j++) {\n            if ($paren_array[$i] == $paren_array[$j])\
    \ {\n                $level++;\n            } else {\n                break;\n\
    \            }\n        }\n        if ($level > $max_level) {\n            $max_level\
    \ = $level;\n        }\n    }\n    return $max_level;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \            if ($max_level < 0) {\n                return false;\n          \
    \  }\n        } elseif ($max_level > 0) {\n            $max_level_paren .= $paren;\n\
    \        }\n    }\n    return $max_level_paren;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_array_length = count($paren_array);\n    $max_level\
    \ = 0;\n    for ($i = 0; $i < $paren_array_length; $i++) {\n        if ($paren_array[$i]\
    \ === '(') {\n            $max_level++;\n        } else if ($paren_array[$i] ===\
    \ ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    $max_level_paren_array = [];\n    foreach ($paren_array as $paren_string)\
    \ {\n        $paren_array = explode(')', $paren_string);\n        $level = 0;\n\
    \        foreach ($paren_array as $paren_string) {\n            $paren_array =\
    \ explode('(', $paren_string);\n            $level++;\n        }\n        if ($level\
    \ > $max_level) {\n            $max_level = $level;\n            $max_level_paren_array\
    \ = $paren_array;\n        }\n    }\n    return $max_level_paren_array;\n}\n",
  "  $paren_array = explode(' ', $paren_string);\n  $paren_array_count = count($paren_array);\n\
    \  $paren_array_level = 0;\n  $paren_array_output = '';\n  foreach ($paren_array\
    \ as $paren_string) {\n    if ($paren_array_level == 0) {\n      $paren_array_output\
    \ .= $paren_string;\n    } else {\n      $paren_array_output .= ' ' . $paren_string;\n\
    \    }\n    if ($paren_array_level == $paren_array_count - 1) {\n      $paren_array_output\
    \ .= ')';\n    } else {\n      $paren_array_output .= ')';\n    }\n    $paren_array_level++;\n\
    \  }\n  return $paren_array_output;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } else {\n            $max_level--;\n        }\n        if ($max_level > $max_level_parens)\
    \ {\n            $max_level_parens = $max_level;\n        }\n    }\n    return\
    \ $max_level_parens;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $paren_levels = array();\n    $paren_levels_len = count($paren_array);\n\
    \    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i] =\
    \ $paren_array[$i];\n    }\n    $paren_levels_len = count($paren_levels);\n  \
    \  $paren_levels_len = max($paren_levels_len);\n    $paren_levels_len = min($paren_levels_len,\
    \ 2);\n    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i]\
    \ = $paren_levels[$i];\n    }\n    $paren_levels_len = count($paren_levels);\n\
    \    $paren_levels_len = max($paren_levels_len);\n    $paren_levels_len = min($paren_levels_len,\
    \ 2);\n    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i]\
    \ = $paren_levels[$i];\n    }\n    $paren_levels_len = count($paren_levels);\n\
    \    $paren_levels_len = max($paren_levels_len);\n    $paren_levels_len = min($paren_levels_len,\
    \ 2);\n    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i]\
    \ = $paren_levels[$i];\n    }\n    $paren_levels_len = count($paren_levels);\n\
    \    $paren_levels_len = max($paren_levels_len);\n    $paren_levels_len = min($paren_levels_len,\
    \ 2);\n    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i]\
    \ = $paren_levels[$i];\n    }\n    $paren_levels_len = count($paren_levels);\n\
    \    $paren_levels_len = max($paren_levels_len);\n    $paren_levels_len = min($paren_levels_len,\
    \ 2);\n    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i]\
    \ = $paren_levels[$i];\n    }\n    $paren_levels_len = count($paren_levels);\n\
    \    $paren_levels_len = max($paren_levels_len);\n    $paren_levels_len = min($paren_levels_len,\
    \ 2);\n    for ($i = 0; $i < $paren_levels_len; $i++) {\n        $paren_levels[$i]\
    \ = $", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    $max_level_paren_array = [];\n\
    \    for ($i = 0; $i < $paren_array_length; $i++) {\n        $current_level =\
    \ 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($paren_array[$j]\
    \ === '(') {\n                $current_level++;\n            } else if ($paren_array[$j]\
    \ === ')') {\n                $current_level--;\n            }\n        }\n  \
    \      if ($current_level > $max_level) {\n            $max_level = $current_level;\n\
    \            $max_level_paren_array = $paren_array;\n        }\n    }\n    return\
    \ $max_level_paren_array;\n}\n", "  $level = 0;\n  $paren_stack = array();\n \
    \ foreach (explode(' ', $paren_string) as $char) {\n    if ($char == '(') {\n\
    \      $paren_stack[] = $char;\n    } else if ($char == ')') {\n      $paren_stack\
    \ = array_reverse($paren_stack);\n      $level--;\n      if ($level < 0) {\n \
    \       return $paren_stack;\n      }\n    }\n  }\n  return $paren_stack;\n}\n",
  "    $level = 0;\n    $nested_parens = array();\n    foreach (explode(' ', $paren_string)\
    \ as $paren) {\n        if ($paren == '(') {\n            $level++;\n        }\
    \ else if ($paren == ')') {\n            $level--;\n        }\n        if ($level\
    \ == 0 && count($nested_parens) == 0) {\n            $nested_parens[] = $paren;\n\
    \        }\n    }\n    return $nested_parens;\n}\n", "  $level = 0;\n  $paren_stack\
    \ = array();\n  $paren_stack[] = array();\n  foreach (explode(' ', $paren_string)\
    \ as $char) {\n    if ($char == '(') {\n      $level++;\n      $paren_stack[]\
    \ = array();\n    } else if ($char == ')') {\n      $level--;\n      $paren_stack\
    \ = array_pop($paren_stack);\n    }\n    if ($level > 0) {\n      $paren_stack[$level][]\
    \ = $char;\n    }\n  }\n  return $paren_stack;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_levels = array();\n    $paren_levels_count =\
    \ array();\n    $paren_levels_count_total = 0;\n    foreach ($paren_array as $paren_item)\
    \ {\n        if ($paren_item == '(') {\n            $paren_levels[] = $paren_item;\n\
    \            $paren_levels_count[] = 1;\n        } else {\n            $paren_levels_count_total++;\n\
    \            $paren_levels_count_total = $paren_levels_count_total + 1;\n    \
    \        $paren_levels_count[$paren_levels_count_total] = $paren_levels_count[$paren_levels_count_total]\
    \ + 1;\n        }\n    }\n    $max_level = 0;\n    $max_level_found = false;\n\
    \    foreach ($paren_levels as $paren_item) {\n        if ($paren_levels_count[$paren_item]\
    \ > $max_level) {\n            $max_level = $paren_levels_count[$paren_item];\n\
    \            $max_level_found = true;\n        }\n    }\n    if ($max_level_found\
    \ == false) {\n        $max_level = 0;\n    }\n    return $max_level;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $level\
    \ = 0;\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $level++;\n        } else if ($paren == ')') {\n            $level--;\n\
    \        }\n        if ($level > $max_level) {\n            $max_level = $level;\n\
    \        }\n    }\n    return $max_level;\n}\n", "  $level = 0;\n  $nested_parens\
    \ = array();\n  foreach (explode(' ', $paren_string) as $paren) {\n    if ($paren\
    \ == '(') {\n      $level++;\n    } else if ($paren == ')') {\n      $level--;\n\
    \      if ($level < 0) {\n        throw new Exception('Unbalanced parenthesis');\n\
    \      }\n    }\n    $nested_parens[] = $level;\n  }\n  return $nested_parens;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $level\
    \ = 0;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n     \
    \ $level++;\n    } else if ($paren == ')') {\n      $level--;\n      if ($level\
    \ < 0) {\n        $max_level = 0;\n        break;\n      }\n    }\n    $max_level\
    \ = max($max_level, $level);\n  }\n  return $max_level;\n}\n", "    $paren_array\
    \ = explode(\" \", $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    $max_level_paren_array = [];\n    for ($i = 0; $i <\
    \ $paren_array_length; $i++) {\n        if ($paren_array[$i] === \"(\") {\n  \
    \          $max_level++;\n        } else {\n            $max_level--;\n      \
    \  }\n        if ($max_level > $max_level_paren_array[$i]) {\n            $max_level_paren_array[$i]\
    \ = $max_level;\n        }\n    }\n    return $max_level_paren_array;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $paren_array_count = count($paren_array);\n\
    \    $paren_array_level = 0;\n    $paren_array_output = '';\n    foreach ($paren_array\
    \ as $paren_item) {\n        if ($paren_item == '(') {\n            $paren_array_level++;\n\
    \        } elseif ($paren_item == ')') {\n            $paren_array_level--;\n\
    \        }\n        if ($paren_array_level > 0) {\n            $paren_array_output\
    \ .= $paren_item;\n        }\n    }\n    return $paren_array_output;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren\
    \ = '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } else if ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_paren) {\n            $max_level_paren\
    \ = $max_level;\n        }\n    }\n    return $max_level_paren;\n}\n", "  $level\
    \ = 0;\n  $paren_stack = array();\n  $paren_stack[] = array();\n  foreach (explode('\
    \ ', $paren_string) as $char) {\n    if ($char == '(') {\n      $paren_stack[$level][]\
    \ = array();\n      $level++;\n    } else if ($char == ')') {\n      $level--;\n\
    \      if ($level == 0) {\n        $paren_stack[$level][] = array();\n      }\n\
    \    } else {\n      $paren_stack[$level][] = $char;\n    }\n  }\n  $paren_stack[$level]\
    \ = array();\n  return $paren_stack;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_parens = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n      $max_level_parens .=\
    \ '(';\n    } elseif ($paren == ')') {\n      $max_level--;\n      $max_level_parens\
    \ .= ')';\n    } else {\n      $max_level_parens .= $paren;\n    }\n  }\n  return\
    \ $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_size\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_size;\
    \ $i++) {\n        $level = 0;\n        for ($j = $i; $j < $paren_array_size;\
    \ $j++) {\n            if ($paren_array[$i] == $paren_array[$j]) {\n         \
    \       $level++;\n            } else {\n                break;\n            }\n\
    \        }\n        if ($level > $max_level) {\n            $max_level = $level;\n\
    \        }\n    }\n    return $max_level;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_levels = array();\n    $paren_levels_count =\
    \ array();\n    $paren_levels_count = array_fill(0, count($paren_array), 0);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    foreach ($paren_array\
    \ as $paren_level) {\n        $paren_levels[] = $paren_level;\n    }\n    $paren_levels\
    \ = array_reverse($paren_levels);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count, 0, -1);\n    $paren_levels_count = array_reverse($paren_levels_count);\n\
    \    $paren_levels_count = array_sum($paren_levels_count);\n    $paren_levels_count\
    \ = array_slice($paren_levels_count", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_array = [];\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } else if ($paren == ')') {\n            $max_level--;\n        }\n        if\
    \ ($max_level > $max_level_array[0]) {\n            $max_level_array[0] = $max_level;\n\
    \        }\n    }\n    foreach ($paren_array as $paren) {\n        if ($paren\
    \ == '(') {\n            $max_level++;\n        } else if ($paren == ')') {\n\
    \            $max_level--;\n        }\n        if ($max_level > $max_level_array[1])\
    \ {\n            $max_level_array[1] = $max_level;\n        }\n    }\n    return\
    \ $max_level_array;\n}\n", "  $level = 0;\n  $paren_stack = array();\n  foreach\
    \ (explode(' ', $paren_string) as $paren) {\n    if ($paren == '(') {\n      $paren_stack[]\
    \ = $paren;\n    } else if ($paren == ')') {\n      $paren_stack = array_pop($paren_stack);\n\
    \    } else {\n      $paren_stack[] = $paren;\n    }\n    if ($paren_stack) {\n\
    \      $level++;\n    }\n  }\n  return $level;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $paren_array_count = count($paren_array);\n  $max_level\
    \ = 0;\n  $level = 0;\n  foreach ($paren_array as $paren_string) {\n    if ($level\
    \ == 0 && $paren_string == '(') {\n      $level++;\n    } else if ($level == $max_level\
    \ && $paren_string == ')') {\n      $level--;\n    } else {\n      $max_level\
    \ = $level;\n    }\n  }\n  return $max_level;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $paren_array_count = count($paren_array);\n  $paren_array_level\
    \ = 0;\n  $paren_array_output = '';\n  foreach ($paren_array as $paren_array_value)\
    \ {\n    if ($paren_array_level == 0) {\n      $paren_array_output .= $paren_array_value;\n\
    \    } else {\n      if ($paren_array_level == $paren_array_count - 1) {\n   \
    \     $paren_array_output .= $paren_array_value . '(';\n      } else {\n     \
    \   $paren_array_output .= $paren_array_value . ')';\n      }\n    }\n    $paren_array_level++;\n\
    \  }\n  return $paren_array_output;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $level = 0;\n  $paren_levels = array();\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $level++;\n      $paren_levels[$level] =\
    \ $level;\n    } elseif ($paren == ')') {\n      $level--;\n      $paren_levels[$level]\
    \ = $level;\n    }\n  }\n  $max_level = max($paren_levels);\n  $max_level_key\
    \ = max(array_keys($paren_levels));\n  $max_level_key_index = array_search($max_level_key,\
    \ $paren_levels);\n  $max_level_key_index += 1;\n  $max_level_key_index = array_search($max_level_key_index,\
    \ array_keys($paren_levels));\n  $max_level_key_index += 1;\n  $max_level_key_index\
    \ = array_search($max_level_key_index, array_keys($paren_levels));\n  $max_level_key_index\
    \ += 1;\n  $max_level_key_index = array_search($max_level_key_index, array_keys($paren_levels));\n\
    \  $max_level_key_index += 1;\n  $max_level_key_index = array_search($max_level_key_index,\
    \ array_keys($paren_levels));\n  $max_level_key_index += 1;\n  $max_level_key_index\
    \ = array_search($max_level_key_index, array_keys($paren_levels));\n  $max_level_key_index\
    \ += 1;\n  $max_level_key_index = array_search($max_level_key_index, array_keys($paren_levels));\n\
    \  $max_level_key_index += 1;\n  $max_level_key_index = array_search($max_level_key_index,\
    \ array_keys($paren_levels));\n  $max_level_key_index += 1;\n  $max_level_key_index\
    \ = array_search($max_level_key_index, array_keys($paren_levels));\n  $max_level_key_index\
    \ += 1;\n  $max_level_key_index = array_search($max_level_key_index, array_keys($paren_levels));\n\
    \  $max_level_key_index += 1;\n  $max_level_key_index = array_search($max_level_key_index,\
    \ array_keys($paren_levels));\n  $max_level_key_index += 1;\n  $max_level_key_index\
    \ = array_search($max_level_key_index, array_keys($paren_levels));\n  $max_level_key_index\
    \ += 1;\n  $max_level_key_index = array_search($max_level_key_index, array_keys($paren_levels));\n\
    \  $max_level_key_index += 1;\n  $max_level_key_index = array_search($max_level_key_index,\
    \ array_keys($paren_levels));\n  $max_level_key_index += 1;\n  $max_level_key_index\
    \ = array_search($max_level_key_index, array_", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $max_level_paren_array = [];\n\
    \    foreach ($paren_array as $paren) {\n        $paren_array = explode(')', $paren);\n\
    \        $level = 0;\n        foreach ($paren_array as $paren_item) {\n      \
    \      if ($paren_item == '(') {\n                $level++;\n            } else\
    \ {\n                $level--;\n            }\n            if ($level > $max_level)\
    \ {\n                $max_level = $level;\n                $max_level_paren_array\
    \ = $paren_array;\n            }\n        }\n    }\n    return $max_level_paren_array;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_count\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_count;\
    \ $i++) {\n        $paren_array[$i] = trim($paren_array[$i]);\n        if ($paren_array[$i]\
    \ === '(') {\n            $max_level++;\n        } else if ($paren_array[$i] ===\
    \ ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "    $paren_array = explode(\" \", $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        if ($paren_array[$i] === \"(\") {\n            $max_level++;\n\
    \        } else if ($paren_array[$i] === \")\") {\n            $max_level--;\n\
    \        }\n    }\n    return $max_level;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_levels = array();\n    $paren_levels_count =\
    \ array();\n    foreach ($paren_array as $paren_string) {\n        $paren_levels[]\
    \ = $paren_string;\n        $paren_levels_count[$paren_string] = 0;\n    }\n \
    \   $paren_levels_count = array_count_values($paren_levels_count);\n    foreach\
    \ ($paren_levels_count as $key => $value) {\n        if ($value == 1) {\n    \
    \        $paren_levels[$key] = '(';\n        } else {\n            $paren_levels[$key]\
    \ = ')';\n        }\n    }\n    return $paren_levels;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren =\
    \ -1;\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } else {\n            $max_level--;\n    \
    \    }\n        if ($max_level > $max_level_paren) {\n            $max_level_paren\
    \ = $max_level;\n        }\n    }\n    return $max_level_paren;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length; $i++) {\n   \
    \     $level = 0;\n        for ($j = 0; $j < $i; $j++) {\n            if ($paren_array[$j]\
    \ == ')') {\n                $level--;\n            } else {\n               \
    \ $level++;\n            }\n        }\n        if ($level > $max_level) {\n  \
    \          $max_level = $level;\n        }\n    }\n    return $max_level;\n}\n",
  "  $level = 0;\n  $nested_parens = array();\n  foreach (explode(' ', $paren_string)\
    \ as $paren) {\n    if ($paren == '(') {\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $level--;\n    }\n    if ($level < 0) {\n      $nested_parens[]\
    \ = $paren;\n    }\n  }\n  return $nested_parens;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $max_level = 0;\n  $max_level_array = [];\n  foreach ($paren_array\
    \ as $level) {\n    if ($level == '(') {\n      $max_level++;\n    } else if ($level\
    \ == ')') {\n      $max_level--;\n      if ($max_level < 0) {\n        throw new\
    \ Exception('Invalid parenthesis string');\n      }\n      if ($max_level > count($max_level_array))\
    \ {\n        $max_level_array = array_fill(0, $max_level, $max_level);\n     \
    \ }\n      $max_level_array[$max_level]++;\n    }\n  }\n  return $max_level_array;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    $max_level_paren = '';\n    foreach ($paren_array as $paren) {\n        if\
    \ ($paren == '(') {\n            $max_level++;\n        } elseif ($paren == ')')\
    \ {\n            $max_level--;\n        }\n        if ($max_level > $max_level_paren)\
    \ {\n            $max_level_paren = $max_level;\n        }\n    }\n    return\
    \ $max_level_paren;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    $max_level_parens = '';\n    foreach ($paren_array as\
    \ $paren) {\n        if ($paren == '(') {\n            $max_level++;\n       \
    \ } else if ($paren == ')') {\n            $max_level--;\n        }\n        if\
    \ ($max_level > $max_level_parens) {\n            $max_level_parens = $max_level;\n\
    \        }\n    }\n    return $max_level_parens;\n}\n", "  $level = 0;\n  $paren_stack\
    \ = array();\n  $paren_stack[] = array();\n  foreach (explode(' ', $paren_string)\
    \ as $char) {\n    if ($char == '(') {\n      $level++;\n      $paren_stack[]\
    \ = array();\n    } else if ($char == ')') {\n      $level--;\n      if ($level\
    \ == 0) {\n        $paren_stack = array_reverse($paren_stack);\n        break;\n\
    \      }\n    }\n    $paren_stack[$level][] = $char;\n  }\n  return $paren_stack;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        $level = 0;\n        for ($j = 0; $j < $i; $j++) {\n      \
    \      if ($paren_array[$j] === '(') {\n                $level++;\n          \
    \  } elseif ($paren_array[$j] === ')') {\n                $level--;\n        \
    \    }\n        }\n        if ($level > $max_level) {\n            $max_level\
    \ = $level;\n        }\n    }\n    return $max_level;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } else if ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_parens) {\n            $max_level_parens\
    \ = $max_level;\n        }\n    }\n    return $max_level_parens;\n}\n", "  $level\
    \ = 0;\n  $paren_stack = array();\n  $paren_stack[] = array();\n  $paren_stack[0][]\
    \ = $paren_string;\n  while ($paren_stack) {\n    $level++;\n    $paren_string\
    \ = array_pop($paren_stack);\n    $paren_string = str_replace(')', '', $paren_string);\n\
    \    $paren_string = str_replace('(', '', $paren_string);\n    $paren_string =\
    \ str_replace('(', ' (', $paren_string);\n    $paren_stack[] = array();\n    $paren_stack[$level][]\
    \ = $paren_string;\n  }\n  return $level;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $level = 0;\n    foreach ($paren_array\
    \ as $paren) {\n        if ($paren == '(') {\n            $level++;\n        }\
    \ else if ($paren == ')') {\n            $level--;\n            if ($level < 0)\
    \ {\n                $max_level = 0;\n                break;\n            }\n\
    \        }\n        $max_level = max($max_level, $level);\n    }\n    return $max_level;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n        if ($paren_array[$i] === '(') {\n            $max_level++;\n\
    \        } else if ($paren_array[$i] === ')') {\n            $max_level--;\n \
    \       }\n    }\n    return $max_level;\n}\n", "  $level = 0;\n  $paren_stack\
    \ = array();\n  foreach (explode(' ', $paren_string) as $char) {\n    if ($char\
    \ == '(') {\n      $paren_stack[$level] = $char;\n      $level++;\n    } else\
    \ if ($char == ')') {\n      $level--;\n      if ($level < 0) {\n        return\
    \ $paren_stack;\n      }\n    }\n  }\n  return $paren_stack;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_levels = array();\n    $max_level\
    \ = 0;\n    foreach ($paren_array as $paren_group) {\n        $paren_levels[]\
    \ = count($paren_group);\n        if ($paren_levels[count($paren_levels) - 1]\
    \ > $max_level) {\n            $max_level = count($paren_levels) - 1;\n      \
    \  }\n    }\n    return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_parens = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')')\
    \ {\n      $max_level--;\n      if ($max_level < 0) {\n        $max_level = 0;\n\
    \      }\n    }\n    if ($max_level > $max_level_parens) {\n      $max_level_parens\
    \ = $max_level;\n    }\n  }\n  return $max_level_parens;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_paren) {\n            $max_level_paren\
    \ = $max_level;\n        }\n    }\n    return $max_level_paren;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $paren_array_count = count($paren_array);\n\
    \  $paren_array_level = 0;\n  $paren_array_output = '';\n  foreach ($paren_array\
    \ as $paren_array_item) {\n    if ($paren_array_item == '(') {\n      $paren_array_level++;\n\
    \    } else if ($paren_array_item == ')') {\n      $paren_array_level--;\n   \
    \ }\n    if ($paren_array_level > $paren_array_count) {\n      $paren_array_output\
    \ .= $paren_array_item;\n    }\n  }\n  return $paren_array_output;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_array = [];\n\
    \  foreach ($paren_array as $level) {\n    $level_array = explode(')', $level);\n\
    \    if (count($level_array) > $max_level) {\n      $max_level = count($level_array);\n\
    \      $max_level_array = $level_array;\n    }\n  }\n  return $max_level_array;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $paren_array_length =\
    \ count($paren_array);\n  $max_level = 0;\n  $max_level_paren_array = [];\n  for\
    \ ($i = 0; $i < $paren_array_length; $i++) {\n    $current_level = 0;\n    $current_level_paren_array\
    \ = [];\n    for ($j = 0; $j < $paren_array_length; $j++) {\n      if ($paren_array[$i]\
    \ == $paren_array[$j]) {\n        $current_level++;\n      }\n      if ($current_level\
    \ > $max_level) {\n        $max_level = $current_level;\n        $max_level_paren_array\
    \ = $current_level_paren_array;\n      }\n      if ($j == $paren_array_length\
    \ - 1) {\n        $current_level_paren_array[] = $paren_array[$j];\n      }\n\
    \    }\n  }\n  return $max_level_paren_array;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $max_level_paren = '';\n    foreach\
    \ ($paren_array as $paren) {\n        if ($paren == '(') {\n            $max_level++;\n\
    \        } elseif ($paren == ')') {\n            $max_level--;\n            if\
    \ ($max_level < 0) {\n                return false;\n            }\n        }\
    \ elseif ($max_level < 0 && $paren != '') {\n            return false;\n     \
    \   }\n        if ($max_level > $max_level_paren) {\n            $max_level_paren\
    \ = $max_level;\n        }\n    }\n    return $max_level_paren;\n}\n", "  $paren_array\
    \ = explode(' ', $paren_string);\n  $paren_array_length = count($paren_array);\n\
    \  $max_level = 0;\n  $max_level_paren_string = '';\n  for ($i = 0; $i < $paren_array_length;\
    \ $i++) {\n    if ($paren_array[$i] === '(') {\n      $max_level++;\n      if\
    \ ($max_level > $max_level_paren_string) {\n        $max_level_paren_string =\
    \ $max_level;\n      }\n    } else if ($paren_array[$i] === ')') {\n      $max_level--;\n\
    \    }\n  }\n  return $max_level_paren_string;\n}\n", "  $level = 0;\n  $paren_stack\
    \ = array();\n  foreach (explode(' ', $paren_string) as $paren) {\n    if ($paren\
    \ == '(') {\n      $paren_stack[] = $paren;\n    } else if ($paren == ')') {\n\
    \      $paren_stack = array_pop($paren_stack);\n    } else if ($paren == '') {\n\
    \      // Empty string means we reached a leaf level.\n      $level--;\n    }\n\
    \  }\n  return $level;\n}\n", "  $level = 0;\n  $paren_string = trim($paren_string);\n\
    \  $paren_string = preg_replace('/\\s+/', '', $paren_string);\n  $paren_string\
    \ = preg_replace('/\\(\\)/', '', $paren_string);\n  $paren_string = preg_replace('/\\\
    (\\(\\)/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\)\\\
    )/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\(\\)\\)\\\
    )/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\(\\(\\)\\\
    )\\)\\)/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\(\\\
    (\\(\\)\\)\\)\\)\\)/', '', $paren_string);\n  $paren_string = preg_replace('/\\\
    (\\(\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)/', '', $paren_string);\n  $paren_string\
    \ = preg_replace('/\\(\\(\\(\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)\\)/', '', $paren_string);\n\
    \  $paren_string = preg_replace('/\\(\\(\\(\\(\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\\
    )\\)\\)/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\(\\\
    (\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)\\)\\)/', '', $paren_string);\n  $paren_string\
    \ = preg_replace('/\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)\\)\\)\\\
    )/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\(\\(\\(\\\
    (\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)/', '', $paren_string);\n  $paren_string\
    \ = preg_replace('/\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)\\\
    )\\)\\)\\)/', '', $paren_string);\n  $paren_string = preg_replace('/\\(\\(\\(\\\
    (\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)/', '', $paren_string);\n\
    \  $paren_string = preg_replace('/\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\\
    (\\(\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)\\)/', '', $paren_string);\n  $paren_string\
    \ = preg_replace('/\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\(\\\
    (\\(\\(\\(\\(\\(\\(\\(\\(\\(\\", "    $paren_array = explode(' ', $paren_string);\n\
    \    $paren_array_length = count($paren_array);\n    $max_level = 0;\n    for\
    \ ($i = 0; $i < $paren_array_length; $i++) {\n        if ($paren_array[$i] ===\
    \ '(') {\n            $max_level++;\n        } else if ($paren_array[$i] === ')')\
    \ {\n            $max_level--;\n        }\n    }\n    return $max_level;\n}\n",
  "    $paren_array = explode(\" \", $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    $max_level_paren_string = \"\";\n    for ($i = 0; $i\
    \ < $paren_array_length; $i++) {\n        if ($paren_array[$i] === \"(\") {\n\
    \            $max_level++;\n            if ($max_level > $max_level_paren_string)\
    \ {\n                $max_level_paren_string = $max_level;\n            }\n  \
    \      } elseif ($paren_array[$i] === \")\") {\n            $max_level--;\n  \
    \      }\n    }\n    return $max_level_paren_string;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_parens) {\n            $max_level_parens\
    \ = $max_level;\n        }\n    }\n    return $max_level_parens;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    $max_level_paren_array = [];\n    for ($i = 0; $i <\
    \ $paren_array_length; $i++) {\n        $level = 0;\n        for ($j = 0; $j <\
    \ $i; $j++) {\n            if ($paren_array[$j] == ')') {\n                $level--;\n\
    \            }\n        }\n        if ($level > $max_level) {\n            $max_level\
    \ = $level;\n            $max_level_paren_array = $paren_array;\n        }\n \
    \   }\n    return $max_level_paren_array;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $max_level = 0;\n    $max_level_parens = '';\n    foreach\
    \ ($paren_array as $paren) {\n        if ($paren == '(') {\n            $max_level++;\n\
    \            $max_level_parens .= '(';\n        } elseif ($paren == ')') {\n \
    \           $max_level--;\n            $max_level_parens .= ')';\n        } else\
    \ {\n            $max_level_parens .= $paren;\n        }\n    }\n    return $max_level;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_array_length\
    \ = count($paren_array);\n    $max_level = 0;\n    $max_level_paren_array = [];\n\
    \    for ($i = 0; $i < $paren_array_length; $i++) {\n        $level = 0;\n   \
    \     $paren_array[$i] = '(' . $paren_array[$i] . ')';\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\[[^()]*\\]/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\[[^()]*\\]/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\([^()]*\\)/', '', $paren_array[$i]);\n        $paren_array[$i]\
    \ = preg_replace('/\\", "  $paren_array = explode(' ', $paren_string);\n  $paren_array_count\
    \ = count($paren_array);\n  $max_level = 0;\n  for ($i = 0; $i < $paren_array_count;\
    \ $i++) {\n    $level = 0;\n    $paren_char = $paren_array[$i];\n    while ($paren_char\
    \ != '(') {\n      $paren_char = $paren_array[$i + $level];\n      $level++;\n\
    \    }\n    $max_level = max($max_level, $level);\n  }\n  return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $paren_array_length =\
    \ count($paren_array);\n  $max_level = 0;\n  $max_level_array = [];\n  for ($i\
    \ = 0; $i < $paren_array_length; $i++) {\n    if ($paren_array[$i] === '(') {\n\
    \      $max_level++;\n    }\n    if ($paren_array[$i] === ')') {\n      $max_level--;\n\
    \    }\n    if ($max_level > $max_level_array[$i]) {\n      $max_level_array[$i]\
    \ = $max_level;\n    }\n  }\n  return $max_level_array;\n}\n", "  $level = 0;\n\
    \  $paren_stack = array();\n  $paren_stack[] = array();\n  foreach (explode('\
    \ ', $paren_string) as $char) {\n    if ($char == '(') {\n      $level++;\n  \
    \    $paren_stack[$level][] = array();\n    } else if ($char == ')') {\n     \
    \ $level--;\n      $paren_stack[$level][] = array();\n    } else {\n      $paren_stack[$level][]\
    \ = $char;\n    }\n  }\n  return $paren_stack;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_array_length = count($paren_array);\n    $max_level\
    \ = 0;\n    for ($i = 0; $i < $paren_array_length; $i++) {\n        if ($paren_array[$i]\
    \ === '(') {\n            $max_level++;\n        } else if ($paren_array[$i] ===\
    \ ')') {\n            $max_level--;\n        }\n    }\n    return $max_level;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $paren_array_length =\
    \ count($paren_array);\n  $max_level = 0;\n  $max_level_paren_array = [];\n  for\
    \ ($i = 0; $i < $paren_array_length; $i++) {\n    if ($paren_array[$i] === '(')\
    \ {\n      $max_level++;\n      if ($max_level > $max_level_paren_array[0]) {\n\
    \        $max_level_paren_array[0] = $max_level;\n      }\n    } else if ($paren_array[$i]\
    \ === ')') {\n      $max_level--;\n      if ($max_level < $max_level_paren_array[0])\
    \ {\n        $max_level_paren_array[0] = $max_level;\n      }\n    }\n  }\n  for\
    \ ($i = 0; $i < $paren_array_length; $i++) {\n    if ($paren_array[$i] === '(')\
    \ {\n      $paren_array[$i] = '';\n    }\n  }\n  $paren_string = implode(' ',\
    \ $paren_array);\n  return $paren_string;\n}\n", "    $paren_array = explode('\
    \ ', $paren_string);\n    $paren_array_count = count($paren_array);\n    $paren_array_level\
    \ = 0;\n    $paren_array_output = '';\n    foreach ($paren_array as $paren_array_item)\
    \ {\n        if ($paren_array_item == '(') {\n            $paren_array_level++;\n\
    \        } elseif ($paren_array_item == ')') {\n            $paren_array_level--;\n\
    \        }\n        if ($paren_array_level == $paren_array_count) {\n        \
    \    $paren_array_output .= $paren_array_item;\n        }\n    }\n    return $paren_array_output;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    $level = 0;\n    foreach ($paren_array as $paren) {\n        if ($paren ==\
    \ '(') {\n            $level++;\n        } else if ($paren == ')') {\n       \
    \     $level--;\n        }\n        if ($level > $max_level) {\n            $max_level\
    \ = $level;\n        }\n    }\n    return $max_level;\n}\n", "  $paren_array =\
    \ explode(' ', $paren_string);\n  $paren_levels = array();\n  $max_level = 0;\n\
    \  foreach ($paren_array as $paren_string) {\n    $paren_levels[] = $paren_level;\n\
    \    $paren_level = count($paren_levels);\n    if ($paren_level > $max_level)\
    \ {\n      $max_level = $paren_level;\n    }\n  }\n  return $max_level;\n}", " \
    \ $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_parens\
    \ = '';\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n    \
    \  $max_level++;\n    } else if ($paren == ')') {\n      $max_level--;\n     \
    \ if ($max_level < 0) {\n        // This paren string has too many levels of nesting.\n\
    \        return FALSE;\n      }\n    }\n    if ($max_level > $max_level_parens)\
    \ {\n      $max_level_parens = $max_level;\n    }\n  }\n  return $max_level_parens;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $paren_levels = array();\n\
    \    $max_level = 0;\n    foreach ($paren_array as $paren) {\n        if ($paren\
    \ == '(') {\n            $paren_levels[] = 1;\n        } elseif ($paren == ')')\
    \ {\n            $paren_levels[] = count($paren_levels) - 1;\n        } else {\n\
    \            $paren_levels[] = count($paren_levels);\n        }\n        if (count($paren_levels)\
    \ > $max_level) {\n            $max_level = count($paren_levels);\n        }\n\
    \    }\n    return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $paren_array_count = count($paren_array);\n  $max_level = 0;\n  for ($i = 0;\
    \ $i < $paren_array_count; $i++) {\n    if ($paren_array[$i] === '(') {\n    \
    \  $max_level++;\n    } else if ($paren_array[$i] === ')') {\n      $max_level--;\n\
    \    }\n  }\n  return $max_level;\n}\n", "    $paren_array = explode(' ', $paren_string);\n\
    \    $max_level = 0;\n    foreach ($paren_array as $level) {\n        if ($level\
    \ == '(') {\n            $max_level++;\n        } else if ($level == ')') {\n\
    \            $max_level--;\n        }\n    }\n    return $max_level;\n}\n", " \
    \   $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren\
    \ = '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } else if ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_paren) {\n            $max_level_paren\
    \ = $max_level;\n        }\n    }\n    return $max_level_paren;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    foreach ($paren_array\
    \ as $level) {\n        if ($level == '(') {\n            $max_level++;\n    \
    \    } else if ($level == ')') {\n            $max_level--;\n        }\n    }\n\
    \    return $max_level;\n}\n", "    $paren_array = explode(\" \", $paren_string);\n\
    \    $max_level = 0;\n    foreach ($paren_array as $level) {\n        if ($level\
    \ == \"(\") {\n            $max_level++;\n        } else if ($level == \")\")\
    \ {\n            $max_level--;\n        }\n    }\n    return $max_level;\n}\n",
  "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_paren\
    \ = '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } elseif ($paren == ')') {\n            $max_level--;\n\
    \            if ($max_level < 0) {\n                return false;\n          \
    \  }\n        } elseif ($max_level > 0) {\n            $max_level_paren .= $paren;\n\
    \        }\n    }\n    return $max_level_paren;\n}\n", "  $paren_array = explode('\
    \ ', $paren_string);\n  $max_level = 0;\n  $level = 0;\n  foreach ($paren_array\
    \ as $paren) {\n    if ($paren == '(') {\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $level--;\n      if ($level < 0) {\n        $max_level = $level;\n\
    \        break;\n      }\n    }\n  }\n  return $max_level;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $max_level = 0;\n    $max_level_parens =\
    \ '';\n    foreach ($paren_array as $paren) {\n        if ($paren == '(') {\n\
    \            $max_level++;\n        } else if ($paren == ')') {\n            $max_level--;\n\
    \        }\n        if ($max_level > $max_level_parens) {\n            $max_level_parens\
    \ = $max_level;\n        }\n    }\n    return $max_level_parens;\n}\n", "    $paren_array\
    \ = explode(' ', $paren_string);\n    $paren_array_length = count($paren_array);\n\
    \    $max_level = 0;\n    $max_level_paren_array = [];\n    for ($i = 0; $i <\
    \ $paren_array_length; $i++) {\n        $current_level = 0;\n        $current_level_paren_array\
    \ = [];\n        for ($j = 0; $j < $i; $j++) {\n            if ($paren_array[$j]\
    \ === '(') {\n                $current_level++;\n                $current_level_paren_array[]\
    \ = $paren_array[$j];\n            } elseif ($paren_array[$j] === ')') {\n   \
    \             $current_level--;\n            }\n        }\n        if ($current_level\
    \ > $max_level) {\n            $max_level = $current_level;\n            $max_level_paren_array\
    \ = $current_level_paren_array;\n        }\n    }\n    return $max_level_paren_array;\n\
    }\n", "  $paren_array = explode(' ', $paren_string);\n  $max_level = 0;\n  $max_level_paren\
    \ = -1;\n  foreach ($paren_array as $paren) {\n    if ($paren == '(') {\n    \
    \  $max_level++;\n      if ($max_level_paren == -1) {\n        $max_level_paren\
    \ = $paren;\n      }\n    } else if ($paren == ')') {\n      $max_level--;\n \
    \     if ($max_level == 0) {\n        $max_level_paren = $paren;\n      }\n  \
    \  }\n  }\n  return $max_level_paren;\n}\n", "  $level = 0;\n  $paren_stack =\
    \ array();\n  $paren_stack[] = array();\n  foreach (explode(' ', $paren_string)\
    \ as $char) {\n    if ($char == '(') {\n      $level++;\n      $paren_stack[]\
    \ = array();\n    }\n    else if ($char == ')') {\n      $level--;\n      if ($level\
    \ == 0) {\n        $paren_stack = array_reverse($paren_stack);\n      }\n    }\n\
    \    else {\n      $paren_stack[$level][] = $char;\n    }\n  }\n  return $paren_stack;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    foreach ($paren_array as $level) {\n        if ($level == '(') {\n      \
    \      $max_level++;\n        } else if ($level == ')') {\n            $max_level--;\n\
    \        }\n    }\n    return $max_level;\n}\n", "  $paren_array = explode(' ',\
    \ $paren_string);\n  $max_level = 0;\n  $level = 0;\n  foreach ($paren_array as\
    \ $paren) {\n    if ($paren == '(') {\n      $level++;\n    } else if ($paren\
    \ == ')') {\n      $level--;\n      if ($level < 0) {\n        $max_level = 0;\n\
    \        break;\n      }\n    }\n    $max_level = max($max_level, $level);\n \
    \ }\n  return $max_level;\n}\n", "  $paren_array = explode(' ', $paren_string);\n\
    \  $max_level = 0;\n  $max_level_paren = '';\n  foreach ($paren_array as $paren)\
    \ {\n    if ($paren == '(') {\n      $max_level++;\n    } else if ($paren == ')')\
    \ {\n      $max_level--;\n      if ($max_level < 0) {\n        return $max_level_paren;\n\
    \      }\n    }\n    $max_level_paren .= $paren;\n  }\n  return $max_level_paren;\n\
    }\n", "    $paren_array = explode(' ', $paren_string);\n    $max_level = 0;\n\
    \    $max_level_parens = '';\n    foreach ($paren_array as $paren) {\n       \
    \ $paren_level = 0;\n        $paren_array = explode(')', $paren);\n        foreach\
    \ ($paren_array as $nested_paren) {\n            $paren_level++;\n           \
    \ $nested_paren_array = explode('(', $nested_paren);\n            $nested_paren_level\
    \ = 0;\n            foreach ($nested_paren_array as $nested_paren_item) {\n  \
    \              $nested_paren_level++;\n            }\n            if ($nested_paren_level\
    \ > $paren_level) {\n                $paren_level = $nested_paren_level;\n   \
    \         }\n        }\n        if ($paren_level > $max_level) {\n           \
    \ $max_level = $paren_level;\n            $max_level_parens = $paren;\n      \
    \  }\n    }\n    return $max_level_parens;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

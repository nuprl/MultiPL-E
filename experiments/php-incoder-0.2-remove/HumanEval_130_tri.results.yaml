language: php
name: HumanEval_130_tri
results:
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 2;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 2;\n    $result[8] = 2;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 2;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 2;\n   \
    \ $result[20] = 2;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 2;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 2;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 2;\n    $result[32] = 2;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 2;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 2;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 2;\n    $result[44]\
    \ = 2;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 2;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 2;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 2;\n    $result[56] = 2;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 2;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 2;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 2;\n    $result[68] = 2;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 2;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 2;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 2;\n    $result[80] = 2;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 2;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvkwlqcln.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzrkwabt.php:33\n\
    Stack trace:\n#0 /tmp/tmpwzrkwabt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwzrkwabt.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    return $result;\n}\n$result\
    \ = tri(2);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpiqzf48sw.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $result = [];\n\
    \    for($i = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n$result\
    \ = tri(5);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_c4tmdm.php:36\n\
    Stack trace:\n#0 /tmp/tmpq_c4tmdm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpq_c4tmdm.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = [$a, $b,\
    \ $c];\n    for($i = 1; $i <= $n; $i++) {\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b;\n        $tri[] = $c;\n    }\n    return $tri;\n}\n$n =\
    \ $input->readInt();\n$tri = tri($n);\n$output->writeList($tri);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $input in /tmp/tmp1fbiadsq.php on line 29\n\
    \nFatal error: Uncaught Error: Call to a member function readInt() on null in\
    \ /tmp/tmp1fbiadsq.php:29\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp1fbiadsq.php\
    \ on line 29\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        if ($i % 2 == 0) {\n\
    \            $a = $b;\n            $b = $c;\n            $c = $a + $b;\n     \
    \   } else {\n            $a = $c;\n            $b = $c;\n            $c = $a\
    \ + $b;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6_s89hy.php:39\n\
    Stack trace:\n#0 /tmp/tmpb6_s89hy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpb6_s89hy.php\
    \ on line 39\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[0] = 3;\n    $tri[1] = 1;\n\
    \    $tri[2] = 1;\n    $tri[3] = 2;\n    $tri[4] = 1;\n    $tri[5] = 1;\n    $tri[6]\
    \ = 1;\n    $tri[7] = 1;\n    $tri[8] = 1;\n    $tri[9] = 1;\n    $tri[10] = 1;\n\
    \    $tri[11] = 1;\n    $tri[12] = 1;\n    $tri[13] = 1;\n    $tri[14] = 1;\n\
    \    $tri[15] = 1;\n    $tri[16] = 1;\n    $tri[17] = 1;\n    $tri[18] = 1;\n\
    \    $tri[19] = 1;\n    $tri[20] = 1;\n    $tri[21] = 1;\n    $tri[22] = 1;\n\
    \    $tri[23] = 1;\n    $tri[24] = 1;\n    $tri[25] = 1;\n    $tri[26] = 1;\n\
    \    $tri[27] = 1;\n    $tri[28] = 1;\n    $tri[29] = 1;\n    $tri[30] = 1;\n\
    \    $tri[31] = 1;\n    $tri[32] = 1;\n    $tri[33] = 1;\n    $tri[34] = 1;\n\
    \    $tri[35] = 1;\n    $tri[36] = 1;\n    $tri[37] = 1;\n    $tri[38] = 1;\n\
    \    $tri[39] = 1;\n    $tri[40] = 1;\n    $tri[41] = 1;\n    $tri[42] = 1;\n\
    \    $tri[43] = 1;\n    $tri[44] = 1;\n    $tri[45] = 1;\n    $tri[46] = 1;\n\
    \    $tri[47] = 1;\n    $tri[48] = 1;\n    $tri[49] = 1;\n    $tri[50] = 1;\n\
    \    $tri[51] = 1;\n    $tri[52] = 1;\n    $tri[53] = 1;\n    $tri[54] = 1;\n\
    \    $tri[55] = 1;\n    $tri[56] = 1;\n    $tri[57] = 1;\n    $tri[58] = 1;\n\
    \    $tri[59] = 1;\n    $tri[60] = 1;\n    $tri[61] = 1;\n    $tri[62] = 1;\n\
    \    $tri[63] = 1;\n    $tri[64] = 1;\n    $tri[65] = 1;\n    $tri[66] = 1;\n\
    \    $tri[67] = 1;\n    $tri[68] = 1;\n    $tri[69] = 1;\n    $tri[70] = 1;\n\
    \    $tri[71] = 1;\n    $tri[72] = 1;\n    $tri[73] = 1;\n    $tri[74] = 1;\n\
    \    $tri[75] = 1;\n    $\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp4iy6mgte.php on line 95

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[2] = 1;\n        $result[3] = $result[2]\
    \ + $result[1];\n    } else {\n        $result[2] = $result[1] + $result[0];\n\
    \        $result[3] = $result[3] + $result[2];\n    }\n    $result[4] = $result[3]\
    \ + $result[2];\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpprpv6z6j.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpprpv6z6j.php:35\nStack\
    \ trace:\n#0 /tmp/tmpprpv6z6j.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpprpv6z6j.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = tri($n - 1) + tri($n -\
    \ 2);\n    if ($n % 2 == 0) {\n        $result[] = tri($n + 1);\n    }\n    return\
    \ $result;\n}\n\n$result = tri(5);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmp9a8c4bqn.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[] = $n / 2;\n    }\n    $result[] = $result[0]\
    \ + $result[1] + $result[2];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmptqnz_1rf.php on line 23\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmptqnz_1rf.php:31\nStack\
    \ trace:\n#0 /tmp/tmptqnz_1rf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptqnz_1rf.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n < 2) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 16 in /tmp/tmps_4gp667.php on line 138

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n$n = 4; //\
    \ $n = 4\n$tri = tri($n); // $tri = array(1,2,3,4)\n$tri = array_slice($tri, 0,\
    \ $n + 1); // $tri = array(1,2,3,4)\n$tri = array_slice($tri, 0, $n); // $tri\
    \ = array(1,2,3)\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_a8__4_j.php:38\n\
    Stack trace:\n#0 /tmp/tmp_a8__4_j.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_a8__4_j.php\
    \ on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    } else {\n     \
    \   $result[] = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp31vqxqg2.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $result = [];\n\
    \    for($i = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Easy to understand\
    \ and understandable for people who are new to programming.\n<|/ c |>\n<| c |>\n\
    This answer should be the accepted answer. Easy to understand and understandable\
    \ for people who are new to programming.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. Easy to understand and understandable for people who are new\
    \ to programming.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Easy\
    \ to understand and understandable for people who are new to programming.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Easy to understand and understandable\
    \ for people who are new to programming.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphktxsywx.php
    on line 29

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 1;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 1;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 1;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 1;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 1;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 1;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp1nunitbd.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n < 3) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    $result[] = 1;\n    if ($n % 2 == 0) {\n     \
    \   $result[] = 2;\n    }\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\
    \ = 1;\n    return $result;\n}\n\n$result = tri(2);\nprint_r($result);\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpix9k18hh.php:39\n\
    Stack trace:\n#0 /tmp/tmpix9k18hh.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpix9k18hh.php\
    \ on line 39\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl523eu2x.php:33\n\
    Stack trace:\n#0 /tmp/tmpl523eu2x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl523eu2x.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 2;\n    $c = 1;\n    $list = [];\n \
    \   for($i = 1; $i <= $n; $i++) {\n        $list[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $a + $b;\n    }\n    return $list;\n}\n\n$result\
    \ = tri(5);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqaowjpb.php:37\n\
    Stack trace:\n#0 /tmp/tmptqaowjpb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmptqaowjpb.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    if ($n % 2 == 0) {\n        $result[2] = $result[1]\
    \ + $result[2];\n    }\n    if ($n % 2 == 1) {\n        $result[3] = $result[1]\
    \ + $result[2] + $result[3];\n    }\n    return $result;\n}\n\n$result = tri(2);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 2\n)\n\nWarning: Undefined\
    \ array key 3 in /tmp/tmpczxhgjti.php on line 25\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpczxhgjti.php:37\nStack trace:\n#0 /tmp/tmpczxhgjti.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpczxhgjti.php on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    $arr[0] = 3;\n    $arr[1] = 1;\n    $arr[2]\
    \ = 2;\n    $arr[3] = 1;\n    $arr[4] = 1;\n    $arr[5] = 1;\n    $arr[6] = 1;\n\
    \    $arr[7] = 1;\n    $arr[8] = 1;\n    $arr[9] = 1;\n    $arr[10] = 1;\n   \
    \ $arr[11] = 1;\n    $arr[12] = 1;\n    $arr[13] = 1;\n    $arr[14] = 1;\n   \
    \ $arr[15] = 1;\n    $arr[16] = 1;\n    $arr[17] = 1;\n    $arr[18] = 1;\n   \
    \ $arr[19] = 1;\n    $arr[20] = 1;\n    $arr[21] = 1;\n    $arr[22] = 1;\n   \
    \ $arr[23] = 1;\n    $arr[24] = 1;\n    $arr[25] = 1;\n    $arr[26] = 1;\n   \
    \ $arr[27] = 1;\n    $arr[28] = 1;\n    $arr[29] = 1;\n    $arr[30] = 1;\n   \
    \ $arr[31] = 1;\n    $arr[32] = 1;\n    $arr[33] = 1;\n    $arr[34] = 1;\n   \
    \ $arr[35] = 1;\n    $arr[36] = 1;\n    $arr[37] = 1;\n    $arr[38] = 1;\n   \
    \ $arr[39] = 1;\n    $arr[40] = 1;\n    $arr[41] = 1;\n    $arr[42] = 1;\n   \
    \ $arr[43] = 1;\n    $arr[44] = 1;\n    $arr[45] = 1;\n    $arr[46] = 1;\n   \
    \ $arr[47] = 1;\n    $arr[48] = 1;\n    $arr[49] = 1;\n    $arr[50] = 1;\n   \
    \ $arr[51] = 1;\n    $arr[52] = 1;\n    $arr[53] = 1;\n    $arr[54] = 1;\n   \
    \ $arr[55] = 1;\n    $arr[56] = 1;\n    $arr[57] = 1;\n    $arr[58] = 1;\n   \
    \ $arr[59] = 1;\n    $arr[60] = 1;\n    $arr[61] = 1;\n    $arr[62] = 1;\n   \
    \ $arr[63] = 1;\n    $arr[64] = 1;\n    $arr[65] = 1;\n    $arr[66] = 1;\n   \
    \ $arr[67] = 1;\n    $arr[68] = 1;\n    $arr[69] = 1;\n    $arr[70] = 1;\n   \
    \ $arr[71] = 1;\n    $arr[72] = 1;\n    $arr[73] = 1;\n    $arr[74] = 1;\n   \
    \ $arr[75] = 1;\n    $arr[76] = 1;\n    $arr[77] = 1;\n    $arr[78] = 1;\n   \
    \ $arr[79] = 1;\n    $arr[80] = 1;\n    $arr[81] = 1;\n    $arr[82] = 1;\n   \
    \ $arr[83] = 1;\n    $arr[84] = 1;\n    $arr[\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpqx0fqjtz.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ + 1;\n    $result[] = $n - 1;\n    $result[] = $n + 2;\n    $result[] = $n -\
    \ 2;\n    $result[] = $n + 3;\n    $result[] = $n - 3;\n    $result[] = $n + 4;\n\
    \    $result[] = $n - 4;\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfapya_9.php:38\n\
    Stack trace:\n#0 /tmp/tmpmfapya_9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpmfapya_9.php\
    \ on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    if ($n % 2\
    \ == 0) {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    else\
    \ {\n        $result[] = $result[$n - 1] + $result[$n - 2] + $result[$n + 1];\n\
    \    }\n    return $result;\n}\n\n$n = 4; // $n = 4\n$result = tri($n);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 2\n)\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmpa0zpk5k9.php on line 24\n\nWarning: Undefined array key\
    \ 1 in /tmp/tmpa0zpk5k9.php on line 24\n\nWarning: Undefined array key 4 in /tmp/tmpa0zpk5k9.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0zpk5k9.php:37\n\
    Stack trace:\n#0 /tmp/tmpa0zpk5k9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpa0zpk5k9.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $tri = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y27q7nr.php:34\n\
    Stack trace:\n#0 /tmp/tmp6y27q7nr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6y27q7nr.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 === 0) {\n        $result[] = 1;\n\
    \    }\n    $result[] = $result[0] + $result[1];\n    $result[] = $result[1] +\
    \ $result[2];\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpt04fk76s.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmpt04fk76s.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpt04fk76s.php:34\nStack trace:\n\
    #0 /tmp/tmpt04fk76s.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt04fk76s.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [];\n    $tri[0] = 3;\n    $tri[1] = 1;\n    $tri[2]\
    \ = 1;\n    $tri[3] = 1;\n    $tri[4] = 1;\n    $tri[5] = 1;\n    $tri[6] = 1;\n\
    \    $tri[7] = 1;\n    $tri[8] = 1;\n    $tri[9] = 1;\n    $tri[10] = 1;\n   \
    \ $tri[11] = 1;\n    $tri[12] = 1;\n    $tri[13] = 1;\n    $tri[14] = 1;\n   \
    \ $tri[15] = 1;\n    $tri[16] = 1;\n    $tri[17] = 1;\n    $tri[18] = 1;\n   \
    \ $tri[19] = 1;\n    $tri[20] = 1;\n    $tri[21] = 1;\n    $tri[22] = 1;\n   \
    \ $tri[23] = 1;\n    $tri[24] = 1;\n    $tri[25] = 1;\n    $tri[26] = 1;\n   \
    \ $tri[27] = 1;\n    $tri[28] = 1;\n    $tri[29] = 1;\n    $tri[30] = 1;\n   \
    \ $tri[31] = 1;\n    $tri[32] = 1;\n    $tri[33] = 1;\n    $tri[34] = 1;\n   \
    \ $tri[35] = 1;\n    $tri[36] = 1;\n    $tri[37] = 1;\n    $tri[38] = 1;\n   \
    \ $tri[39] = 1;\n    $tri[40] = 1;\n    $tri[41] = 1;\n    $tri[42] = 1;\n   \
    \ $tri[43] = 1;\n    $tri[44] = 1;\n    $tri[45] = 1;\n    $tri[46] = 1;\n   \
    \ $tri[47] = 1;\n    $tri[48] = 1;\n    $tri[49] = 1;\n    $tri[50] = 1;\n   \
    \ $tri[51] = 1;\n    $tri[52] = 1;\n    $tri[53] = 1;\n    $tri[54] = 1;\n   \
    \ $tri[55] = 1;\n    $tri[56] = 1;\n    $tri[57] = 1;\n    $tri[58] = 1;\n   \
    \ $tri[59] = 1;\n    $tri[60] = 1;\n    $tri[61] = 1;\n    $tri[62] = 1;\n   \
    \ $tri[63] = 1;\n    $tri[64] = 1;\n    $tri[65] = 1;\n    $tri[66] = 1;\n   \
    \ $tri[67] = 1;\n    $tri[68] = 1;\n    $tri[69] = 1;\n    $tri[70] = 1;\n   \
    \ $tri[71] = 1;\n    $tri[72] = 1;\n    $tri[73] = 1;\n    $tri[74] = 1;\n   \
    \ $tri[75] = 1;\n    $tri[\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp7p4zskst.php on line 95

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    } else {\n     \
    \   $result[] = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n\
    }\n$result = tri(5);\nprint_r($result);\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp_4s91llo.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    if ($n == 1) {\n        $tri[] =\
    \ 1;\n        return $tri;\n    }\n    $tri[] = 1;\n    $tri[] = $tri[$n - 1];\n\
    \    $tri[] = $tri[$n - 1] + $tri[$n - 2];\n    return $tri;\n}\n\n$n = 4; //\
    \ $n = 4\n$tri = tri($n);\nprint_r($tri);\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpl_p3lki3.php on line 23\n\n\
    Warning: Undefined array key 3 in /tmp/tmpl_p3lki3.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpl_p3lki3.php on line 24\nArray\n(\n    [0]\
    \ => 1\n    [1] => \n    [2] => 0\n)\n\nWarning: Undefined array key 2 in /tmp/tmpl_p3lki3.php\
    \ on line 23\n\nWarning: Undefined array key 2 in /tmp/tmpl_p3lki3.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_p3lki3.php:36\n\
    Stack trace:\n#0 /tmp/tmpl_p3lki3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpl_p3lki3.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[]\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpym63ac3i.php
    on line 120

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n == 1) {\n        $result = [3];\n\
    \    } else {\n        $result = [1, ($n / 2)];\n        if ($n % 2 == 0) {\n\
    \            $result[] = $result[0] + $result[1];\n        }\n    }\n    return\
    \ $result;\n}\n\n$result = tri(2);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp9py9k_ap.php:36\nStack trace:\n#0 /tmp/tmp9py9k_ap.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9py9k_ap.php on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $tri = [];\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92rbl4u7.php:34\n\
    Stack trace:\n#0 /tmp/tmp92rbl4u7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp92rbl4u7.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 1;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 1;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 1;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 1;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 1;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 1;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 1;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxoglktvf.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = tri(--$n) + tri(--$n)\
    \ + tri(++$n);\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp6fmgie2f.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $list = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $list[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $list;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkcmlqrc.php:34\n\
    Stack trace:\n#0 /tmp/tmphkcmlqrc.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphkcmlqrc.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    } else {\n        $result[] = tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp80k4gaeu.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 1;\n    } else {\n     \
    \   $result[1] = 1;\n        $result[2] = 2;\n    }\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n    return $result;\n}\n\n$result = tri(2);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 1\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpttkk95s4.php on line 27\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpttkk95s4.php:39\nStack trace:\n#0 /tmp/tmpttkk95s4.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpttkk95s4.php on line 39\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    } else {\n     \
    \   $result[] = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n\
    }\n\n$result = tri(2);\nprint_r($result);\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 1\n)\n\nFatal error: Allowed\
    \ memory size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in\
    \ /tmp/tmp7ap7vx03.php on line 23\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        $result[] =\
    \ 1;\n        return $result;\n    }\n    $result[] = 1;\n    $result[] = 1;\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpkt5olqxe.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmpkt5olqxe.php on line 25\n\nWarning:\
    \ Undefined array key 3 in /tmp/tmpkt5olqxe.php on line 25\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkt5olqxe.php:35\nStack trace:\n#0 /tmp/tmpkt5olqxe.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkt5olqxe.php on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhqigi61.php:33\n\
    Stack trace:\n#0 /tmp/tmpbhqigi61.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbhqigi61.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpka8odfjl.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpka8odfjl.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpka8odfjl.php:31\nStack trace:\n\
    #0 /tmp/tmpka8odfjl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpka8odfjl.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $list = [];\n\
    \    for($i = 0; $i < $n; $i++) {\n        $list[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $d;\n        $d = $a + $b + $c;\n    }\n    return\
    \ $list;\n}\n$n = tri(5);\nprint_r($n);\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 1\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3p1omesw.php:37\n\
    Stack trace:\n#0 /tmp/tmp3p1omesw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3p1omesw.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n    $tri\
    \ = array();\n    for($i = 0; $i < $n; $i++) {\n        $tri[] = $a;\n       \
    \ $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $a + $b + $c;\n \
    \   }\n    return $tri;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd95jgbeh.php:36\n\
    Stack trace:\n#0 /tmp/tmpd95jgbeh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpd95jgbeh.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = 1 + $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp_natloft.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmp_natloft.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp_natloft.php:32\nStack trace:\n\
    #0 /tmp/tmp_natloft.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_natloft.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp1w9ohzh7.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $list = array();\n    for($i =\
    \ 1; $i <= $n; $i++) {\n        $list[] = $a;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n    }\n    return $list;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnl5y806.php:33\n\
    Stack trace:\n#0 /tmp/tmphnl5y806.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphnl5y806.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b + $c;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0gih24e.php:32\n\
    Stack trace:\n#0 /tmp/tmpf0gih24e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf0gih24e.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $result = [];\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n$result = tri(5);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7uuhr5q.php:35\n\
    Stack trace:\n#0 /tmp/tmpl7uuhr5q.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpl7uuhr5q.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = $result[0] + $result[1];\n    if ($n % 2 == 0) {\n        $result[]\
    \ = $result[$result[0]] + $result[$result[1]] + $result[$result[2]];\n    } else\
    \ {\n        $result[] = $result[$result[0]] + $result[$result[1]] + $result[$result[2]]\
    \ + $result[$result[3] + 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmp4yv49zu9.php on line 24\n\n\
    Warning: Undefined array key 4 in /tmp/tmp4yv49zu9.php on line 24\n\nWarning:\
    \ Undefined array key 3 in /tmp/tmp4yv49zu9.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp4yv49zu9.php:34\nStack trace:\n#0 /tmp/tmp4yv49zu9.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4yv49zu9.php on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n < 3) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = 1;\n    $result[] = 1;\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c15gcv9.php:34\n\
    Stack trace:\n#0 /tmp/tmp1c15gcv9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1c15gcv9.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpna7dcbnz.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpna7dcbnz.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpna7dcbnz.php:32\nStack trace:\n\
    #0 /tmp/tmpna7dcbnz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpna7dcbnz.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[0] = 3;\n    $tri[1] = 1;\n\
    \    $tri[2] = 1;\n    $tri[3] = 1;\n    $tri[4] = 1;\n    $tri[5] = 1;\n    $tri[6]\
    \ = 1;\n    $tri[7] = 1;\n    $tri[8] = 1;\n    $tri[9] = 1;\n    $tri[10] = 1;\n\
    \    $tri[11] = 1;\n    $tri[12] = 1;\n    $tri[13] = 1;\n    $tri[14] = 1;\n\
    \    $tri[15] = 1;\n    $tri[16] = 1;\n    $tri[17] = 1;\n    $tri[18] = 1;\n\
    \    $tri[19] = 1;\n    $tri[20] = 1;\n    $tri[21] = 1;\n    $tri[22] = 1;\n\
    \    $tri[23] = 1;\n    $tri[24] = 1;\n    $tri[25] = 1;\n    $tri[26] = 1;\n\
    \    $tri[27] = 1;\n    $tri[28] = 1;\n    $tri[29] = 1;\n    $tri[30] = 1;\n\
    \    $tri[31] = 1;\n    $tri[32] = 1;\n    $tri[33] = 1;\n    $tri[34] = 1;\n\
    \    $tri[35] = 1;\n    $tri[36] = 1;\n    $tri[37] = 1;\n    $tri[38] = 1;\n\
    \    $tri[39] = 1;\n    $tri[40] = 1;\n    $tri[41] = 1;\n    $tri[42] = 1;\n\
    \    $tri[43] = 1;\n    $tri[44] = 1;\n    $tri[45] = 1;\n    $tri[46] = 1;\n\
    \    $tri[47] = 1;\n    $tri[48] = 1;\n    $tri[49] = 1;\n    $tri[50] = 1;\n\
    \    $tri[51] = 1;\n    $tri[52] = 1;\n    $tri[53] = 1;\n    $tri[54] = 1;\n\
    \    $tri[55] = 1;\n    $tri[56] = 1;\n    $tri[57] = 1;\n    $tri[58] = 1;\n\
    \    $tri[59] = 1;\n    $tri[60] = 1;\n    $tri[61] = 1;\n    $tri[62] = 1;\n\
    \    $tri[63] = 1;\n    $tri[64] = 1;\n    $tri[65] = 1;\n    $tri[66] = 1;\n\
    \    $tri[67] = 1;\n    $tri[68] = 1;\n    $tri[69] = 1;\n    $tri[70] = 1;\n\
    \    $tri[71] = 1;\n    $tri[72] = 1;\n    $tri[73] = 1;\n    $tri[74] = 1;\n\
    \    $tri[75] = 1;\n    $\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpb5ftlppz.php on line 95

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    \n    for($i = 2; $i <= $n; $i++) {\n        $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    \n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpjw7viw4k.php on line 23\n\n\
    Warning: Undefined array key 4 in /tmp/tmpjw7viw4k.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpjw7viw4k.php:34\nStack trace:\n\
    #0 /tmp/tmpjw7viw4k.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjw7viw4k.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = $result[0] + $result[1];\n    $result[] = $result[1] +\
    \ $result[2];\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmppjr3g0fc.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmppjr3g0fc.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppjr3g0fc.php:34\nStack trace:\n\
    #0 /tmp/tmppjr3g0fc.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppjr3g0fc.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 2;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 2;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 2;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 2;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 2;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 2;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 2;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 2;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 2;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 2;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 2;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 2;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 2;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxppzmsoa.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp1ym_v9rh.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 2;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 2;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 2;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 2;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 2;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 2;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 2;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 2;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 2;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 2;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 2;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 2;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 2;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpi4mxj8c6.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ + 1;\n    $result[] = $result[0] + $result[1];\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd91i9j0.php:32\n\
    Stack trace:\n#0 /tmp/tmprd91i9j0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprd91i9j0.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpka8odfjl.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpka8odfjl.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpka8odfjl.php:31\nStack trace:\n\
    #0 /tmp/tmpka8odfjl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpka8odfjl.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n    $tri\
    \ = array();\n    if ($n == 0) {\n        $tri[] = $a;\n        $tri[] = $b;\n\
    \        $tri[] = $c;\n        $tri[] = $d;\n        return $tri;\n    }\n   \
    \ if ($n == 1) {\n        $tri[] = $a;\n        $tri[] = $b;\n        $tri[] =\
    \ $c;\n        $tri[] = $d;\n        return $tri;\n    }\n    if ($n % 2 == 0)\
    \ {\n        $tri[] = $a;\n        $tri[] = $b;\n        $tri[] = $c;\n      \
    \  $tri[] = $d;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n      \
    \  $d = $a + $b + $c;\n        $tri[] = $d;\n        return $tri;\n    }\n   \
    \ $tri[] = $a;\n    $tri[] = $b;\n    $tri[] = $c;\n    $tri[] = $d;\n    $a =\
    \ $b;\n    $b = $c;\n    $c = $d;\n    $d = $a + $b + $c;\n    $tri[] = $d;\n\
    \    $tri[] = $a + $b;\n    $tri[] = $a + $c;\n    $tri[] = $b + $c;\n    return\
    \ $tri;\n}\n$n = $input;\n$tri = tri($n);\n$sum = 0;\nfor ($i = 0; $i < count($tri);\
    \ $i++) {\n    $sum = $sum + $tri[$i];\n}\necho $sum;\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $input in /tmp/tmp8pd3jp04.php on line 62\n\
    4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pd3jp04.php:74\n\
    Stack trace:\n#0 /tmp/tmp8pd3jp04.php(86): test()\n#1 {main}\n  thrown in /tmp/tmp8pd3jp04.php\
    \ on line 74\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $list = [];\n \
    \   for ($i = 1; $i <= $n; $i++) {\n        $list[] = $a;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $a + $b;\n    }\n    return $list;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3u7udrj.php:34\n\
    Stack trace:\n#0 /tmp/tmpt3u7udrj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt3u7udrj.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = 1 + $n / 2;\n    }\n    $result[]\
    \ = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmp4gnk13ro.php on line 18

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    else {\n        $result[] = tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n}\n\n$n = tri(8);\n\
    print_r($n);\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 5\n)\n\nFatal error: Allowed memory\
    \ size of 134217728 bytes exhausted (tried to allocate 262144 bytes) in /tmp/tmppzyrlelj.php\
    \ on line 23\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ee65ol4.php:33\n\
    Stack trace:\n#0 /tmp/tmp0ee65ol4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0ee65ol4.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = tri(3)\
    \ + tri(2) + tri(1);\n    $result[] = tri(3) + tri(2) + tri(1) + tri(4);\n   \
    \ $result[] = tri(3) + tri(2) + tri(1) + tri(4) + tri(3);\n    $result[] = tri(3)\
    \ + tri(2) + tri(1) + tri(4) + tri(3) + tri(2);\n    $result[] = tri(3) + tri(2)\
    \ + tri(1) + tri(4) + tri(3) + tri(2) + tri(1);\n    $result[] = tri(3) + tri(2)\
    \ + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4);\n    $result[] = tri(3)\
    \ + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4) + tri(3);\n \
    \   $result[] = tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) +\
    \ tri(4) + tri(3) + tri(2);\n    $result[] = tri(3) + tri(2) + tri(1) + tri(4)\
    \ + tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1);\n    $result[]\
    \ = tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4) + tri(3)\
    \ + tri(2) + tri(1) + tri(4);\n    $result[] = tri(3) + tri(2) + tri(1) + tri(4)\
    \ + tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4) + tri(3);\n\
    \    $result[] = tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1)\
    \ + tri(4) + tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2);\n    $result[]\
    \ = tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4) + tri(3)\
    \ + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1);\n    $result[] = tri(3)\
    \ + tri(2) + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4) + tri(3) + tri(2)\
    \ + tri(1) + tri(4) + tri(3) + tri(2) + tri(1) + tri(4);\n    $result[] = tri(3)\
    \ + tri(2) + tri(1) + tri\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmph1ii6dkf.php
    on line 38

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $tri = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $d;\n        $d = $a + $b + $c;\n    }\n    return\
    \ $tri;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzg2m__16.php:36\n\
    Stack trace:\n#0 /tmp/tmpzg2m__16.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzg2m__16.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    $arr[0] = 3;\n    $arr[1] = 1;\n    $arr[2]\
    \ = 1;\n    $arr[3] = 2;\n    $arr[4] = 1;\n    $arr[5] = 1;\n    $arr[6] = 1;\n\
    \    $arr[7] = 1;\n    $arr[8] = 1;\n    $arr[9] = 1;\n    $arr[10] = 1;\n   \
    \ $arr[11] = 1;\n    $arr[12] = 1;\n    $arr[13] = 1;\n    $arr[14] = 1;\n   \
    \ $arr[15] = 1;\n    $arr[16] = 1;\n    $arr[17] = 1;\n    $arr[18] = 1;\n   \
    \ $arr[19] = 1;\n    $arr[20] = 1;\n    $arr[21] = 1;\n    $arr[22] = 1;\n   \
    \ $arr[23] = 1;\n    $arr[24] = 1;\n    $arr[25] = 1;\n    $arr[26] = 1;\n   \
    \ $arr[27] = 1;\n    $arr[28] = 1;\n    $arr[29] = 1;\n    $arr[30] = 1;\n   \
    \ $arr[31] = 1;\n    $arr[32] = 1;\n    $arr[33] = 1;\n    $arr[34] = 1;\n   \
    \ $arr[35] = 1;\n    $arr[36] = 1;\n    $arr[37] = 1;\n    $arr[38] = 1;\n   \
    \ $arr[39] = 1;\n    $arr[40] = 1;\n    $arr[41] = 1;\n    $arr[42] = 1;\n   \
    \ $arr[43] = 1;\n    $arr[44] = 1;\n    $arr[45] = 1;\n    $arr[46] = 1;\n   \
    \ $arr[47] = 1;\n    $arr[48] = 1;\n    $arr[49] = 1;\n    $arr[50] = 1;\n   \
    \ $arr[51] = 1;\n    $arr[52] = 1;\n    $arr[53] = 1;\n    $arr[54] = 1;\n   \
    \ $arr[55] = 1;\n    $arr[56] = 1;\n    $arr[57] = 1;\n    $arr[58] = 1;\n   \
    \ $arr[59] = 1;\n    $arr[60] = 1;\n    $arr[61] = 1;\n    $arr[62] = 1;\n   \
    \ $arr[63] = 1;\n    $arr[64] = 1;\n    $arr[65] = 1;\n    $arr[66] = 1;\n   \
    \ $arr[67] = 1;\n    $arr[68] = 1;\n    $arr[69] = 1;\n    $arr[70] = 1;\n   \
    \ $arr[71] = 1;\n    $arr[72] = 1;\n    $arr[73] = 1;\n    $arr[74] = 1;\n   \
    \ $arr[75] = 1;\n    $arr[76] = 1;\n    $arr[77] = 1;\n    $arr[78] = 1;\n   \
    \ $arr[79] = 1;\n    $arr[80] = 1;\n    $arr[81] = 1;\n    $arr[82] = 1;\n   \
    \ $arr[83] = 1;\n    $arr[84] = 1;\n    $arr[\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmps_ebov91.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 1;\n        $result[3] =\
    \ 2;\n    } else {\n        $result[1] = 1;\n        $result[2] = 1;\n       \
    \ $result[3] = 1;\n    }\n    $result[4] = $result[1] + $result[2] + $result[3];\n\
    \    $result[5] = $result[4] + $result[3];\n    $result[6] = $result[5] + $result[2];\n\
    \    $result[7] = $result[6] + $result[1];\n    $result[8] = $result[7] + $result[0];\n\
    \    $result[9] = $result[8] + 1;\n    $result[10] = $result[9] + $result[0];\n\
    \    $result[11] = $result[10] + 1;\n    $result[12] = $result[11] + $result[0];\n\
    \    $result[13] = $result[12] + 1;\n    $result[14] = $result[13] + $result[0];\n\
    \    $result[15] = $result[14] + 1;\n    $result[16] = $result[15] + $result[0];\n\
    \    $result[17] = $result[16] + 1;\n    $result[18] = $result[17] + $result[0];\n\
    \    $result[19] = $result[18] + 1;\n    $result[20] = $result[19] + $result[0];\n\
    \    $result[21] = $result[20] + 1;\n    $result[22] = $result[21] + $result[0];\n\
    \    $result[23] = $result[22] + 1;\n    $result[24] = $result[23] + $result[0];\n\
    \    $result[25] = $result[24] + 1;\n    $result[26] = $result[25] + $result[0];\n\
    \    $result[27] = $result[26] + 1;\n    $result[28] = $result[27] + $result[0];\n\
    \    $result[29] = $result[28] + 1;\n    $result[30] = $result[29] + $result[0];\n\
    \    $result[31] = $result[30] + 1;\n    $result[32] = $result[31] + $result[0];\n\
    \    $result[33] = $result[32] + 1;\n    $result[34] = $result[33] + $result[0];\n\
    \    $result[35] = $result[34] + 1;\n    $result[36] = $result[35] + $result[0];\n\
    \    $result[37] = $result[36] + 1;\n    $result[38] = $result[37] + $result[0];\n\
    \    $result[39] = $result[38] + 1;\n    $result[40] = $result[39] + $result[0];\n\
    \    $result[41] = $result[40] + 1;\n    $result[42] = $result[41] + $result[0];\n\
    \    $result[43] = $result[42] + 1;\n    $result[44] = $result[43] + $result[0];\n\
    \    $\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmppyi4w43y.php on line 70

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = [];\n  \
    \  for ($i = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n  \
    \      $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\n$n = 4;\
    \ // $n is 4\n$tri = tri($n); // $tri is [1,2,3]\n$tri = array_slice($tri, 0,\
    \ $n + 1); // $tri is [1,2,3]\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppoltju66.php:38\n\
    Stack trace:\n#0 /tmp/tmppoltju66.php(50): test()\n#1 {main}\n  thrown in /tmp/tmppoltju66.php\
    \ on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzrkwabt.php:33\n\
    Stack trace:\n#0 /tmp/tmpwzrkwabt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwzrkwabt.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 1;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 1;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 1;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 1;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 1;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 1;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpo54916f0.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ / 2;\n    $result[] = $n / 3;\n    $result[] = $n / 4 + $n / 5;\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9znu1mqp.php:34\n\
    Stack trace:\n#0 /tmp/tmp9znu1mqp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9znu1mqp.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    for($i = 2; $i <= $n; $i++) {\n        $result[] = $result[$i-1]\
    \ + $result[$i-2];\n    }\n    return $result;\n}\n\n$result = tri(2);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 2\n    [3] => 4\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpxkpiku6e.php:34\nStack\
    \ trace:\n#0 /tmp/tmpxkpiku6e.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxkpiku6e.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    for($i = 2; $i < $n; $i++) {\n        $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    return $result;\n}\n$result\
    \ = tri(5);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpmifrxykm.php on line 22\n\n\
    Warning: Undefined array key 4 in /tmp/tmpmifrxykm.php on line 22\n\nWarning:\
    \ Undefined array key 5 in /tmp/tmpmifrxykm.php on line 22\nArray\n(\n    [0]\
    \ => 3\n    [1] => 1\n    [2] => 2\n    [3] => 4\n    [4] => 3\n    [5] => 6\n\
    )\n\nWarning: Undefined array key 3 in /tmp/tmpmifrxykm.php on line 22\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpmifrxykm.php:33\nStack trace:\n\
    #0 /tmp/tmpmifrxykm.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmifrxykm.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    } else {\n        $result[] = tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp80k4gaeu.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 2;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 2;\n    $result[8] = 2;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 2;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 2;\n   \
    \ $result[20] = 2;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 2;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 2;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 2;\n    $result[32] = 2;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 2;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 2;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 2;\n    $result[44]\
    \ = 2;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 2;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 2;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 2;\n    $result[56] = 2;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 2;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 2;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 2;\n    $result[68] = 2;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 2;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 2;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 2;\n    $result[80] = 2;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 2;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvkwlqcln.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri(--$n) + tri(--$n) + tri(++$n);\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpll2ks24k.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n < 2) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = $result[0] + $result[1] + $result[2];\n    $result[] =\
    \ $result[0] + $result[1] + $result[2] + $result[3];\n    return $result;\n}\n\
    \n$numbers = tri(5);\nprint_r($numbers);\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpzm4g9mkr.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmpzm4g9mkr.php on line 25\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpzm4g9mkr.php on line 26\n\nWarning: Undefined\
    \ array key 3 in /tmp/tmpzm4g9mkr.php on line 26\nArray\n(\n    [0] => 3\n   \
    \ [1] => 3\n    [2] => 6\n)\n\nWarning: Undefined array key 1 in /tmp/tmpzm4g9mkr.php\
    \ on line 25\n\nWarning: Undefined array key 2 in /tmp/tmpzm4g9mkr.php on line\
    \ 25\n\nWarning: Undefined array key 2 in /tmp/tmpzm4g9mkr.php on line 26\n\n\
    Warning: Undefined array key 3 in /tmp/tmpzm4g9mkr.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpzm4g9mkr.php:37\nStack trace:\n\
    #0 /tmp/tmpzm4g9mkr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzm4g9mkr.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri(--$n) + tri(--$n) + tri(++$n);\n    return $result;\n}\n\n$result = tri(3);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpmte61t90.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $tri = array();\n\
    \    for($i = 0; $i < $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n  \
    \      $b = $c;\n        $c = $d;\n        $d = $a + $b + $c;\n    }\n    return\
    \ $tri;\n}\n$tri = tri(5);\nprint_r($tri);\nfunction candidate(...$args) {\n \
    \   return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 1\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp77l3f7v2.php:37\n\
    Stack trace:\n#0 /tmp/tmp77l3f7v2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp77l3f7v2.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = $result[0] + $result[1]\
    \ + $result[2];\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp6t75px1u.php on line 22\n\n\
    Warning: Undefined array key 2 in /tmp/tmp6t75px1u.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6t75px1u.php:30\nStack trace:\n\
    #0 /tmp/tmp6t75px1u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6t75px1u.php\
    \ on line 30\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 2;\n    $c = 1;\n    $result = [];\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1et4d9m.php:35\n\
    Stack trace:\n#0 /tmp/tmpp1et4d9m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpp1et4d9m.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 2;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 2;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 2;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 2;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 2;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 2;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 2;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 2;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 2;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 2;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 2;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 2;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 2;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpi4mxj8c6.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\n$result = tri(2);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqlpzl4ur.php:35\nStack trace:\n#0 /tmp/tmpqlpzl4ur.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqlpzl4ur.php on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result[] = $result[]\
    \ = $result[] = $result[] = $result[] = $result[] = $result[] = $result\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpe_c2btf4.php
    on line 21

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $result = [];\n    for($i\
    \ = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n$result = tri(5);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cnm47nu.php:35\n\
    Stack trace:\n#0 /tmp/tmp2cnm47nu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2cnm47nu.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpna7dcbnz.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpna7dcbnz.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpna7dcbnz.php:32\nStack trace:\n\
    #0 /tmp/tmpna7dcbnz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpna7dcbnz.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqit38doe.php:33\n\
    Stack trace:\n#0 /tmp/tmpqit38doe.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqit38doe.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ / 2;\n    if ($n % 2 == 0) {\n        $result[] = $result[$n - 1] + $result[$n\
    \ - 2];\n    } else {\n        $result[] = $result[$n - 1] + $result[$n - 2] +\
    \ $result[$n + 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpired10eo.php on line 27\n\n\
    Warning: Undefined array key 4 in /tmp/tmpired10eo.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpired10eo.php:36\nStack trace:\n\
    #0 /tmp/tmpired10eo.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpired10eo.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $tri[] = $tri[count($tri) - 1] + $tri[count($tri) - 2];\n    }\n\
    \    if ($n % 2 == 1) {\n        $tri[] = $tri[count($tri) - 1] + $tri[count($tri)\
    \ - 2] + $tri[count($tri) - 3];\n    }\n    return $tri;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmp8ap2hdrh.php on line 23\n\n\
    Warning: Undefined array key -2 in /tmp/tmp8ap2hdrh.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8ap2hdrh.php:32\nStack trace:\n\
    #0 /tmp/tmp8ap2hdrh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8ap2hdrh.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 2;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 2;\n    $result[8] = 2;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 2;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 2;\n   \
    \ $result[20] = 2;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 2;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 2;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 2;\n    $result[32] = 2;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 2;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 2;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 2;\n    $result[44]\
    \ = 2;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 2;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 2;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 2;\n    $result[56] = 2;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 2;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 2;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 2;\n    $result[68] = 2;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 2;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 2;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 2;\n    $result[80] = 2;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 2;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvkwlqcln.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    } else {\n     \
    \   $result[] = $result[0] + $result[1];\n        $result[] = $result[1] + $result[2];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpozme9s3_.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpozme9s3_.php on line 24\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpozme9s3_.php:34\nStack trace:\n\
    #0 /tmp/tmpozme9s3_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpozme9s3_.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[2] = $result[1] + $result[0];\n    }\
    \ else {\n        $result[2] = $result[0] + $result[1];\n    }\n    for ($i =\
    \ 3; $i <= $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2]\
    \ + $result[$i + 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpac4pbzvu.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpac4pbzvu.php:35\nStack\
    \ trace:\n#0 /tmp/tmpac4pbzvu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpac4pbzvu.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[2] = 1;\n        $result[3] = 2;\n  \
    \  } else {\n        $result[2] = 1;\n        $result[3] = 1;\n    }\n    $result[4]\
    \ = $result[2] + $result[3];\n    for ($i = 5; $i <= $n; $i++) {\n        $result[$i]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbexb06l1.php:38\n\
    Stack trace:\n#0 /tmp/tmpbexb06l1.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbexb06l1.php\
    \ on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpka8odfjl.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpka8odfjl.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpka8odfjl.php:31\nStack trace:\n\
    #0 /tmp/tmpka8odfjl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpka8odfjl.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $tri = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n$n = 4; // $n = 4\n\
    $tri = tri($n); // $tri = array(1,2,3,4)\necho \"The first $n numbers of the Tribonacci\
    \ sequence are: \";\nprint_r($tri);\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The first 4 numbers of the Tribonacci sequence are: Array\n(\n    [0] =>\
    \ 1\n    [1] => 1\n    [2] => 1\n    [3] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpx7lluke9.php:37\nStack trace:\n#0 /tmp/tmpx7lluke9.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx7lluke9.php on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 2;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 2;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 2;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 2;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 2;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 2;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 2;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 2;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 2;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 2;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 2;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 2;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 2;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpi4mxj8c6.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n    }\n    $result[] = 1;\n    $result[] = 1;\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvi0vbjl0.php:32\n\
    Stack trace:\n#0 /tmp/tmpvi0vbjl0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvi0vbjl0.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ - 1;\n    $result[] = $n - 2;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl85m7gs.php:33\n\
    Stack trace:\n#0 /tmp/tmpzl85m7gs.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzl85m7gs.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = array();\n\
    \    for($i = 0; $i < $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n  \
    \      $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\n$n = $_POST['n'];\n\
    $tri = tri($n);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri,\
    \ 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n\
    $tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri =\
    \ array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri,\
    \ 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n\
    $tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri =\
    \ array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri,\
    \ 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n\
    $tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri =\
    \ array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri,\
    \ 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n\
    $tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri =\
    \ array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri,\
    \ 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($tri, 0, $n+1);\n\
    $tri = array_slice($tri, 0, $n+1);\n$tri = array_slice($\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpcez81m78.php on line 66

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 === 0) {\n        $result[] = 1;\n\
    \    }\n    for ($i = 2; $i <= $n; $i++) {\n        $result[] = $result[($i -\
    \ 1) + $i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpefx9raiz.php on line 26\n\n\
    Warning: Undefined array key 5 in /tmp/tmpefx9raiz.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpefx9raiz.php:36\nStack trace:\n\
    #0 /tmp/tmpefx9raiz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpefx9raiz.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5b008c0.php:33\n\
    Stack trace:\n#0 /tmp/tmpz5b008c0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpz5b008c0.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    $arr[0] = 3;\n    $arr[1] = 1;\n    $arr[2]\
    \ = 1;\n    $arr[3] = 1;\n    $arr[4] = 1;\n    $arr[5] = 1;\n    $arr[6] = 1;\n\
    \    $arr[7] = 1;\n    $arr[8] = 1;\n    $arr[9] = 1;\n    $arr[10] = 1;\n   \
    \ $arr[11] = 1;\n    $arr[12] = 1;\n    $arr[13] = 1;\n    $arr[14] = 1;\n   \
    \ $arr[15] = 1;\n    $arr[16] = 1;\n    $arr[17] = 1;\n    $arr[18] = 1;\n   \
    \ $arr[19] = 1;\n    $arr[20] = 1;\n    $arr[21] = 1;\n    $arr[22] = 1;\n   \
    \ $arr[23] = 1;\n    $arr[24] = 1;\n    $arr[25] = 1;\n    $arr[26] = 1;\n   \
    \ $arr[27] = 1;\n    $arr[28] = 1;\n    $arr[29] = 1;\n    $arr[30] = 1;\n   \
    \ $arr[31] = 1;\n    $arr[32] = 1;\n    $arr[33] = 1;\n    $arr[34] = 1;\n   \
    \ $arr[35] = 1;\n    $arr[36] = 1;\n    $arr[37] = 1;\n    $arr[38] = 1;\n   \
    \ $arr[39] = 1;\n    $arr[40] = 1;\n    $arr[41] = 1;\n    $arr[42] = 1;\n   \
    \ $arr[43] = 1;\n    $arr[44] = 1;\n    $arr[45] = 1;\n    $arr[46] = 1;\n   \
    \ $arr[47] = 1;\n    $arr[48] = 1;\n    $arr[49] = 1;\n    $arr[50] = 1;\n   \
    \ $arr[51] = 1;\n    $arr[52] = 1;\n    $arr[53] = 1;\n    $arr[54] = 1;\n   \
    \ $arr[55] = 1;\n    $arr[56] = 1;\n    $arr[57] = 1;\n    $arr[58] = 1;\n   \
    \ $arr[59] = 1;\n    $arr[60] = 1;\n    $arr[61] = 1;\n    $arr[62] = 1;\n   \
    \ $arr[63] = 1;\n    $arr[64] = 1;\n    $arr[65] = 1;\n    $arr[66] = 1;\n   \
    \ $arr[67] = 1;\n    $arr[68] = 1;\n    $arr[69] = 1;\n    $arr[70] = 1;\n   \
    \ $arr[71] = 1;\n    $arr[72] = 1;\n    $arr[73] = 1;\n    $arr[74] = 1;\n   \
    \ $arr[75] = 1;\n    $arr[76] = 1;\n    $arr[77] = 1;\n    $arr[78] = 1;\n   \
    \ $arr[79] = 1;\n    $arr[80] = 1;\n    $arr[81] = 1;\n    $arr[82] = 1;\n   \
    \ $arr[83] = 1;\n    $arr[84] = 1;\n    $arr[\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmplzzuoh80.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    if ($n % 2 == 0) {\n        $result[] = $result[$n -\
    \ 1] + $result[$n - 2];\n    } else {\n        $result[] = $result[$n - 1] + $result[$n\
    \ - 2] + $result[$n + 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpmmhyrmwi.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhyrmwi.php:33\nStack\
    \ trace:\n#0 /tmp/tmpmmhyrmwi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmmhyrmwi.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 1;\n    $result[] = 2;\n    if ($n % 2 == 0) {\n     \
    \   $result[] = 3;\n    }\n    $result[] = $result[0] + $result[1] + $result[2];\n\
    \    if ($n % 2 == 1) {\n        $result[] = $result[0] + $result[1] + $result[2]\
    \ + $result[3];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpd8h2b57s.php on line 26\n\n\
    Warning: Undefined array key 3 in /tmp/tmpd8h2b57s.php on line 28\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpd8h2b57s.php:38\nStack trace:\n\
    #0 /tmp/tmpd8h2b57s.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpd8h2b57s.php\
    \ on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = $result[0] + $result[1];\n    $result[] = $result[1] +\
    \ $result[2];\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmppjr3g0fc.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmppjr3g0fc.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppjr3g0fc.php:34\nStack trace:\n\
    #0 /tmp/tmppjr3g0fc.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppjr3g0fc.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqaoa1c2.php:33\n\
    Stack trace:\n#0 /tmp/tmpaqaoa1c2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaqaoa1c2.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzrkwabt.php:33\n\
    Stack trace:\n#0 /tmp/tmpwzrkwabt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwzrkwabt.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n < 2) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = $result[0] + $result[1];\n    $result[] = $result[1] +\
    \ $result[2];\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpp7yt9w6b.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmpp7yt9w6b.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpp7yt9w6b.php:35\nStack trace:\n\
    #0 /tmp/tmpp7yt9w6b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpp7yt9w6b.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    if ($n % 2 == 0) {\n        $result[3] = $result[2]\
    \ + $result[1];\n        $result[2] = $result[1];\n        $result[1] = $result[0];\n\
    \        $result[0] = $n;\n    } else {\n        $result[3] = $result[3] + $result[2];\n\
    \        $result[2] = $result[2];\n        $result[1] = $result[1] + $result[0];\n\
    \        $result[0] = $result[3] - $result[2] + $result[1];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpas7uamew.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpas7uamew.php:40\nStack\
    \ trace:\n#0 /tmp/tmpas7uamew.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpas7uamew.php\
    \ on line 40\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = $result[$n - 1] + $result[$n - 2];\n    } else {\n  \
    \      $result[] = $result[$n - 1] + $result[$n - 2] + $result[$n + 1];\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpx_64npey.php on line 22\n\n\
    Warning: Undefined array key 1 in /tmp/tmpx_64npey.php on line 22\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpx_64npey.php on line 22\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpx_64npey.php:31\nStack trace:\n#0 /tmp/tmpx_64npey.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx_64npey.php on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        $result[] =\
    \ 1;\n        return $result;\n    }\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = $result[$n - 1] + $result[$n - 2] + $result[$n];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmp4wk_f7fo.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp4wk_f7fo.php:34\nStack\
    \ trace:\n#0 /tmp/tmp4wk_f7fo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4wk_f7fo.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $tri = array();\n    for($i\
    \ = 0; $i < $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n$n = $argv[1];\n$tri\
    \ = tri($n);\n$sum = 0;\nforeach($tri as $value) {\n    $sum += $value;\n}\necho\
    \ $sum;\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp34kgfg9k.php on line 28\n0\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp34kgfg9k.php:40\nStack\
    \ trace:\n#0 /tmp/tmp34kgfg9k.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp34kgfg9k.php\
    \ on line 40\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    if ($n % 2\
    \ == 0) {\n        $result[] = 1;\n        $result[] = 1 + $n / 2;\n    } else\
    \ {\n        $result[] = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmpn7ebv8c1.php on line 18

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    if ($n % 2\
    \ == 0) {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpi5z_fkg5.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpi5z_fkg5.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpi5z_fkg5.php:31\nStack trace:\n\
    #0 /tmp/tmpi5z_fkg5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi5z_fkg5.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri(--$n) + tri(--$n) + tri($n + 1);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp6i8hbm9c.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n    } else {\n        $result[] = tri($n - 1) + tri($n - 2);\n        if\
    \ ($n % 2 == 0) {\n            $result[] = tri($n + 1);\n        }\n    }\n  \
    \  return $result;\n}\n\n$result = tri(5);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmpphmedkhg.php on line 21

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    if ($n % 2\
    \ == 0) {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri(--$n) + tri(--$n) + tri(++$n);\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpb5sc8vz3.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 2;\n    } else {\n     \
    \   $result[1] = 1;\n        $result[2] = 2;\n        $result[3] = 1;\n    }\n\
    \    $result[] = $result[0] + $result[1] + $result[2];\n    for ($i = 4; $i <=\
    \ $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n    return $result;\n}\n$result = tri(8);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 5 in /tmp/tmp_kde7obm.php on line 29\n\n\
    Warning: Undefined array key 6 in /tmp/tmp_kde7obm.php on line 29\n\nWarning:\
    \ Undefined array key 7 in /tmp/tmp_kde7obm.php on line 29\n\nWarning: Undefined\
    \ array key 8 in /tmp/tmp_kde7obm.php on line 29\n\nWarning: Undefined array key\
    \ 9 in /tmp/tmp_kde7obm.php on line 29\nArray\n(\n    [0] => 3\n    [1] => 1\n\
    \    [2] => 2\n    [3] => 6\n    [4] => 8\n    [5] => 14\n    [6] => 22\n    [7]\
    \ => 36\n    [8] => 58\n)\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_kde7obm.php:40\nStack trace:\n#0 /tmp/tmp_kde7obm.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_kde7obm.php on line 40\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $list = [];\n \
    \   for($i = 0; $i < $n; $i++) {\n        $list[] = $a;\n        $a = $b;\n  \
    \      $b = $c;\n        $c = $a + $b;\n    }\n    return $list;\n}\n\n$n = $argv[1];\n\
    $list = tri($n);\n$sum = 0;\nforeach($list as $value) {\n    $sum += $value;\n\
    }\necho $sum;\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpxxzwghqo.php on line 30\n0\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpxxzwghqo.php:42\nStack\
    \ trace:\n#0 /tmp/tmpxxzwghqo.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpxxzwghqo.php\
    \ on line 42\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 1;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 2;\n    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n\
    \    $result[] = 3;\n    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[]\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpkhuyyz8d.php
    on line 120

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 2;\n    $c = 1;\n    $list = [];\n \
    \   for($i = 0; $i < $n; $i++) {\n        $list[$i] = $a;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $a + $b;\n    }\n    return $list;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf20pi9pv.php:34\n\
    Stack trace:\n#0 /tmp/tmpf20pi9pv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpf20pi9pv.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 2;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 2;\n    $result[8] = 2;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 2;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 2;\n   \
    \ $result[20] = 2;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 2;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 2;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 2;\n    $result[32] = 2;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 2;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 2;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 2;\n    $result[44]\
    \ = 2;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 2;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 2;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 2;\n    $result[56] = 2;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 2;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 2;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 2;\n    $result[68] = 2;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 2;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 2;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 2;\n    $result[80] = 2;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 2;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvkwlqcln.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\n$n = $argv[1];\n\
    $tri = tri($n);\n$tri = array_slice($tri, 0, $n+1);\n$tri = array_map(function($v){return\
    \ $v+1;}, $tri);\n$tri = array_map(function($v){return $v+2;}, $tri);\n$tri =\
    \ array_map(function($v){return $v+3;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+4;}, $tri);\n$tri = array_map(function($v){return $v+5;}, $tri);\n$tri =\
    \ array_map(function($v){return $v+6;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+7;}, $tri);\n$tri = array_map(function($v){return $v+8;}, $tri);\n$tri =\
    \ array_map(function($v){return $v+9;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+10;}, $tri);\n$tri = array_map(function($v){return $v+11;}, $tri);\n$tri\
    \ = array_map(function($v){return $v+12;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+13;}, $tri);\n$tri = array_map(function($v){return $v+14;}, $tri);\n$tri\
    \ = array_map(function($v){return $v+15;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+16;}, $tri);\n$tri = array_map(function($v){return $v+17;}, $tri);\n$tri\
    \ = array_map(function($v){return $v+18;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+19;}, $tri);\n$tri = array_map(function($v){return $v+20;}, $tri);\n$tri\
    \ = array_map(function($v){return $v+21;}, $tri);\n$tri = array_map(function($v){return\
    \ $v+22;}, $tri);\n$\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpyd5h4dt1.php on line 56

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 2;\n    } else {\n     \
    \   $result[1] = 1;\n        $result[2] = 1;\n    }\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n    return $result;\n}\n$result = tri(5);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpwophwp7q.php on line 27\n\n\
    Warning: Undefined array key 5 in /tmp/tmpwophwp7q.php on line 27\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmpwophwp7q.php on line 27\nArray\n(\n    [0]\
    \ => 3\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 3\n    [5] => 5\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmpwophwp7q.php on line 27\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpwophwp7q.php:38\nStack trace:\n\
    #0 /tmp/tmpwophwp7q.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwophwp7q.php\
    \ on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ + 1;\n    $result[] = $result[0] + $result[1] + $result[2];\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp0mg9el26.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp0mg9el26.php:32\nStack\
    \ trace:\n#0 /tmp/tmp0mg9el26.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0mg9el26.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    if ($n % 2\
    \ == 0) {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = $result[0] + $result[1] + $result[2];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpi5z_fkg5.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpi5z_fkg5.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpi5z_fkg5.php:31\nStack trace:\n\
    #0 /tmp/tmpi5z_fkg5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi5z_fkg5.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $tri[] = 1;\n        $tri[] = $n / 2;\n    } else {\n        $tri[]\
    \ = tri(--$n) + tri(--$n) + tri(++$n);\n    }\n    return $tri;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpkamxt9fe.php on line 23

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $result = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n    \
    \    $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88z0_nun.php:34\n\
    Stack trace:\n#0 /tmp/tmp88z0_nun.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp88z0_nun.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 2;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 2;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 2;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 2;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 2;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 2;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 2;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 2;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 2;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 2;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 2;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 2;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 2;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 2;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxppzmsoa.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $result;\n}\n$result = tri(2);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_l46lk7g.php:34\nStack trace:\n#0 /tmp/tmp_l46lk7g.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_l46lk7g.php on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ + 1;\n    $result[] = $n - 1;\n    $result[] = $n + 2;\n    $result[] = $n +\
    \ 3;\n    return $result;\n}\n\n$n = 4; // $n is 4\n$result = tri($n); // $result\
    \ is [1,2,3,4]\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qvw_bf2.php:37\n\
    Stack trace:\n#0 /tmp/tmp_qvw_bf2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_qvw_bf2.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    $arr[0] = 3;\n    $arr[1] = 1;\n    $arr[2]\
    \ = 1;\n    $arr[3] = 1;\n    $arr[4] = 1;\n    $arr[5] = 1;\n    $arr[6] = 1;\n\
    \    $arr[7] = 1;\n    $arr[8] = 1;\n    $arr[9] = 1;\n    $arr[10] = 1;\n   \
    \ $arr[11] = 1;\n    $arr[12] = 1;\n    $arr[13] = 1;\n    $arr[14] = 1;\n   \
    \ $arr[15] = 1;\n    $arr[16] = 1;\n    $arr[17] = 1;\n    $arr[18] = 1;\n   \
    \ $arr[19] = 1;\n    $arr[20] = 1;\n    $arr[21] = 1;\n    $arr[22] = 1;\n   \
    \ $arr[23] = 1;\n    $arr[24] = 1;\n    $arr[25] = 1;\n    $arr[26] = 1;\n   \
    \ $arr[27] = 1;\n    $arr[28] = 1;\n    $arr[29] = 1;\n    $arr[30] = 1;\n   \
    \ $arr[31] = 1;\n    $arr[32] = 1;\n    $arr[33] = 1;\n    $arr[34] = 1;\n   \
    \ $arr[35] = 1;\n    $arr[36] = 1;\n    $arr[37] = 1;\n    $arr[38] = 1;\n   \
    \ $arr[39] = 1;\n    $arr[40] = 1;\n    $arr[41] = 1;\n    $arr[42] = 1;\n   \
    \ $arr[43] = 1;\n    $arr[44] = 1;\n    $arr[45] = 1;\n    $arr[46] = 1;\n   \
    \ $arr[47] = 1;\n    $arr[48] = 1;\n    $arr[49] = 1;\n    $arr[50] = 1;\n   \
    \ $arr[51] = 1;\n    $arr[52] = 1;\n    $arr[53] = 1;\n    $arr[54] = 1;\n   \
    \ $arr[55] = 1;\n    $arr[56] = 1;\n    $arr[57] = 1;\n    $arr[58] = 1;\n   \
    \ $arr[59] = 1;\n    $arr[60] = 1;\n    $arr[61] = 1;\n    $arr[62] = 1;\n   \
    \ $arr[63] = 1;\n    $arr[64] = 1;\n    $arr[65] = 1;\n    $arr[66] = 1;\n   \
    \ $arr[67] = 1;\n    $arr[68] = 1;\n    $arr[69] = 1;\n    $arr[70] = 1;\n   \
    \ $arr[71] = 1;\n    $arr[72] = 1;\n    $arr[73] = 1;\n    $arr[74] = 1;\n   \
    \ $arr[75] = 1;\n    $arr[76] = 1;\n    $arr[77] = 1;\n    $arr[78] = 1;\n   \
    \ $arr[79] = 1;\n    $arr[80] = 1;\n    $arr[81] = 1;\n    $arr[82] = 1;\n   \
    \ $arr[83] = 1;\n    $arr[84] = 1;\n    $arr[\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmplzzuoh80.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = 1 + $n / 2;\n    $result[] = tri($n - 1) + tri($n - 2)\
    \ + tri($n + 1);\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmprg6cs9ou.php on line 26

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 2;\n    $c = 1;\n    $d = 1;\n    $sum\
    \ = 0;\n    for($i = 1; $i <= $n; $i++) {\n        $sum = $a + $b + $c + $d;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n        $d = $sum;\n  \
    \  }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16ud5iy9.php:36\n\
    Stack trace:\n#0 /tmp/tmp16ud5iy9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp16ud5iy9.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $sum = 0;\n   \
    \ for($i = 0; $i < $n; $i++) {\n        $sum = $a + $b + $c;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $sum;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjy7n6bp.php:34\n\
    Stack trace:\n#0 /tmp/tmpwjy7n6bp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwjy7n6bp.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n == 0) {\n        $result[] =\
    \ 0;\n        return $result;\n    }\n    if ($n == 1) {\n        $result[] =\
    \ 1;\n        return $result;\n    }\n    if ($n % 2 == 0) {\n        $result[]\
    \ = tri($n - 1) + tri($n - 2);\n    } else {\n        $result[] = tri($n - 1)\
    \ + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpba81fbux.php on line 27

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknwigein.php:35\n\
    Stack trace:\n#0 /tmp/tmpknwigein.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpknwigein.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \       $result[] = $n / 2;\n    }\n    $result[] = tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1);\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"n\" in /tmp/tmpfvw9y9x7.php:26\n\
    Stack trace:\n#0 /tmp/tmpfvw9y9x7.php(30): tri(3)\n#1 /tmp/tmpfvw9y9x7.php(34):\
    \ candidate(3)\n#2 /tmp/tmpfvw9y9x7.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpfvw9y9x7.php\
    \ on line 26\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n    }\n    $result[] = 1;\n    $result[] = 1;\n \
    \   $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 1;\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 16 in /tmp/tmpzhfpm_w3.php on line 138

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    $arr[] = 3;\n    if ($n % 2 == 0) {\n\
    \        $arr[] = 1 + $n / 2;\n    } else {\n        $arr[] = tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n    }\n    return $arr;\n}\n\n$result = tri(5);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpemxlcd1_.php on line 22

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n    $list\
    \ = [];\n    if ($n == 0) {\n        $list[] = 0;\n        return $list;\n   \
    \ }\n    if ($n == 1) {\n        $list[] = 1;\n        return $list;\n    }\n\
    \    if ($n % 2 == 0) {\n        $list[] = $a;\n        $list[] = $b;\n      \
    \  return $list;\n    }\n    $list[] = $a;\n    $list[] = $b;\n    $list[] = $c;\n\
    \    $list[] = $d;\n    $list[] = $a + $b;\n    $list[] = $a + $c;\n    $list[]\
    \ = $b + $c;\n    $list[] = $a + $d + $b;\n    $list[] = $a + $d + $c;\n    $list[]\
    \ = $b + $d + $c;\n    $list[] = $a + $b + $c + $d;\n    return $list;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03u9qpg4.php:53\n\
    Stack trace:\n#0 /tmp/tmp03u9qpg4.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp03u9qpg4.php\
    \ on line 53\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = array();\n\
    \    for($i = 0; $i < $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n  \
    \      $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n$n = 4; //\
    \ $n = 4\n$tri = tri($n); // $tri = array(1,2,3)\necho \"The first $n numbers\
    \ of the Tribonacci sequence are: \";\nprint_r($tri);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The first 4 numbers of the Tribonacci sequence are: Array\n(\n    [0] =>\
    \ 1\n    [1] => 1\n    [2] => 1\n    [3] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmplizt39ag.php:38\nStack trace:\n#0 /tmp/tmplizt39ag.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplizt39ag.php on line 38\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $tri = array();\n\
    \    for($i = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknwigein.php:35\n\
    Stack trace:\n#0 /tmp/tmpknwigein.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpknwigein.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri(--$n) + tri(--$n) + tri(++$n);\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpll2ks24k.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[2] = 1;\n        $result[3] = $result[2]\
    \ + $result[1];\n    } else {\n        $result[2] = $result[1];\n        $result[3]\
    \ = $result[3] + $result[2];\n    }\n    for ($i = 4; $i <= $n; $i++) {\n    \
    \    $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpzcc1_qrr.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzcc1_qrr.php:37\nStack\
    \ trace:\n#0 /tmp/tmpzcc1_qrr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzcc1_qrr.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 1;\n    } else {\n     \
    \   $result[1] = 1;\n        $result[2] = 2;\n    }\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp7sbsitmj.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7sbsitmj.php:36\nStack\
    \ trace:\n#0 /tmp/tmp7sbsitmj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7sbsitmj.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri(--$n) + tri(--$n) + tri(++$n);\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpll2ks24k.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for($i = 0;\
    \ $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\n$result = tri(3);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcl_kz_w1.php:35\nStack trace:\n#0 /tmp/tmpcl_kz_w1.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcl_kz_w1.php on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [];\n    $tri[0] = 3;\n    $tri[1] = 1;\n    $tri[2]\
    \ = 1;\n    $tri[3] = $tri[0] + $tri[1] + $tri[2];\n    $tri[4] = $tri[1] + $tri[2];\n\
    \    $tri[5] = $tri[0] + $tri[3];\n    $tri[6] = $tri[0] + $tri[4];\n    $tri[7]\
    \ = $tri[1] + $tri[5];\n    $tri[8] = $tri[2] + $tri[6];\n    $tri[9] = $tri[3]\
    \ + $tri[7];\n    $tri[10] = $tri[4] + $tri[8];\n    $tri[11] = $tri[5] + $tri[9];\n\
    \    $tri[12] = $tri[6] + $tri[10];\n    $tri[13] = $tri[7] + $tri[11];\n    $tri[14]\
    \ = $tri[8] + $tri[12];\n    $tri[15] = $tri[9] + $tri[13];\n    $tri[16] = $tri[10]\
    \ + $tri[14];\n    $tri[17] = $tri[11] + $tri[15];\n    $tri[18] = $tri[12] +\
    \ $tri[16];\n    $tri[19] = $tri[13] + $tri[17];\n    $tri[20] = $tri[14] + $tri[18];\n\
    \    $tri[21] = $tri[15] + $tri[19];\n    $tri[22] = $tri[16] + $tri[20];\n  \
    \  $tri[23] = $tri[17] + $tri[21];\n    $tri[24] = $tri[18] + $tri[22];\n    $tri[25]\
    \ = $tri[19] + $tri[23];\n    $tri[26] = $tri[20] + $tri[24];\n    $tri[27] =\
    \ $tri[21] + $tri[25];\n    $tri[28] = $tri[22] + $tri[26];\n    $tri[29] = $tri[23]\
    \ + $tri[27];\n    $tri[30] = $tri[24] + $tri[28];\n    $tri[31] = $tri[25] +\
    \ $tri[29];\n    $tri[32] = $tri[26] + $tri[30];\n    $tri[33] = $tri[27] + $tri[31];\n\
    \    $tri[34] = $tri[28] + $tri[32];\n    $tri[35] = $tri[29] + $tri[33];\n  \
    \  $tri[36] = $tri[30] + $\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmplr0yp_jc.php on line 55

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = $result[0] + $result[1];\n    $result[] = $result[1] +\
    \ $result[2];\n    return $result;\n}\n\n$result = tri(2);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 4\n    [3] => 5\n)\n\n\
    Warning: Undefined array key 1 in /tmp/tmpw5p2obow.php on line 25\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpw5p2obow.php on line 26\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpw5p2obow.php:37\nStack trace:\n#0 /tmp/tmpw5p2obow.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw5p2obow.php on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 1;\n    } else {\n     \
    \   $result[1] = 1;\n        $result[2] = 2;\n    }\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp7sbsitmj.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7sbsitmj.php:36\nStack\
    \ trace:\n#0 /tmp/tmp7sbsitmj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7sbsitmj.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    if ($n <= 1) {\n        $result[]\
    \ = 1;\n        $result[] = 1;\n        return $result;\n    }\n    $result[]\
    \ = 1;\n    $result[] = $result[$n - 1] + $result[$n - 2];\n    if ($n % 2 ==\
    \ 0) {\n        $result[] = $result[$n - 1] + $result[$n - 2];\n    }\n    return\
    \ $result;\n}\n$result = tri(5);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp83pyqrq2.php on line 24\n\n\
    Warning: Undefined array key 3 in /tmp/tmp83pyqrq2.php on line 24\nArray\n(\n\
    \    [0] => 1\n    [1] => 0\n)\n\nWarning: Undefined array key 2 in /tmp/tmp83pyqrq2.php\
    \ on line 24\n\nWarning: Undefined array key 1 in /tmp/tmp83pyqrq2.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83pyqrq2.php:37\n\
    Stack trace:\n#0 /tmp/tmp83pyqrq2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp83pyqrq2.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $result = [];\n    for($i = 1; $i <=\
    \ $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $a + $b;\n\
    \    }\n    return $result;\n}\n$result = tri(5);\nprint_r($result);\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 2\n    [3] => 4\n    [4]\
    \ => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gejjboi.php:33\n\
    Stack trace:\n#0 /tmp/tmp4gejjboi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4gejjboi.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    }\n    $result[]\
    \ = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp89a11hfz.php on line 23

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 1;\n        $result[3] =\
    \ 1;\n    } else {\n        $result[1] = 1;\n        $result[2] = 1;\n       \
    \ $result[3] = 2;\n    }\n    for ($i = 4; $i <= $n; $i++) {\n        $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    return $result;\n\
    }\n$result = tri(8);\nprint_r($result);\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 5 in /tmp/tmpz2njoltn.php on line 29\n\n\
    Warning: Undefined array key 6 in /tmp/tmpz2njoltn.php on line 29\n\nWarning:\
    \ Undefined array key 7 in /tmp/tmpz2njoltn.php on line 29\n\nWarning: Undefined\
    \ array key 8 in /tmp/tmpz2njoltn.php on line 29\n\nWarning: Undefined array key\
    \ 9 in /tmp/tmpz2njoltn.php on line 29\nArray\n(\n    [0] => 3\n    [1] => 1\n\
    \    [2] => 1\n    [3] => 1\n    [4] => 2\n    [5] => 3\n    [6] => 5\n    [7]\
    \ => 8\n    [8] => 13\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2njoltn.php:40\n\
    Stack trace:\n#0 /tmp/tmpz2njoltn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpz2njoltn.php\
    \ on line 40\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = 1;\n    $result[] = 1;\n    $result[] = 2;\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcipdgbzc.php:35\n\
    Stack trace:\n#0 /tmp/tmpcipdgbzc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcipdgbzc.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    if ($n <= 2) {\n        $arr[] = $n;\n\
    \        return $arr;\n    }\n    $arr[] = $n;\n    $arr[] = $n - 1;\n    $arr[]\
    \ = $n - 2;\n    $arr[] = $n + 1;\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcktssb64.php:33\n\
    Stack trace:\n#0 /tmp/tmpcktssb64.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcktssb64.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = tri($n - 1) + tri($n -\
    \ 2);\n    if ($n % 2 == 0) {\n        $result[] = tri($n + 1);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kmzzj2i.php:33\n\
    Stack trace:\n#0 /tmp/tmp3kmzzj2i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3kmzzj2i.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n    }\n    $result[] = $result[0] + $result[1];\n\
    \    $result[] = $result[0] + $result[1] + $result[2];\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpgcgddvqw.php on line 22\n\n\
    Warning: Undefined array key 2 in /tmp/tmpgcgddvqw.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpgcgddvqw.php:31\nStack trace:\n\
    #0 /tmp/tmpgcgddvqw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgcgddvqw.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    if ($n % 2\
    \ == 0) {\n        $result[] = 1;\n    }\n    $result[] = 1;\n    $result[] =\
    \ 1;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh5o4hm1.php:32\n\
    Stack trace:\n#0 /tmp/tmprh5o4hm1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprh5o4hm1.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = 1;\n \
    \   }\n    $result[] = $result[0] + $result[1];\n    $result[] = $result[1] +\
    \ $result[2];\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp8otg65uw.php on line 25\n\n\
    Warning: Undefined array key 2 in /tmp/tmp8otg65uw.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8otg65uw.php:35\nStack trace:\n\
    #0 /tmp/tmp8otg65uw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8otg65uw.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n    } else {\n        $result[] = $n;\n        $result[] = $n + 1;\n  \
    \      $result[] = $result[0] + $result[1];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2vod_vn.php:32\n\
    Stack trace:\n#0 /tmp/tmpq2vod_vn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpq2vod_vn.php\
    \ on line 32\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n    } else {\n        $result[] = $n; // tri(1) = 3\n        $result[]\
    \ = $n + 1; // tri(2) = 1 + 2 / 2 = 3\n        $result[] = $n + 1; // tri(3) =\
    \ 1 + 2 / 2 + 1 = 3\n        $result[] = $n + 1; // tri(4) = 1 + 2 / 2 + 1 + 1\
    \ = 3\n        $result[] = $n + 1; // tri(5) = 1 + 2 / 2 + 1 + 1 + 1 = 3\n   \
    \     $result[] = $n + 1; // tri(6) = 1 + 2 / 2 + 1 + 1 + 1 + 1 = 3\n        $result[]\
    \ = $n + 1; // tri(7) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[] =\
    \ $n + 1; // tri(8) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[]\
    \ = $n + 1; // tri(9) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[]\
    \ = $n + 1; // tri(10) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n     \
    \   $result[] = $n + 1; // tri(11) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\
    \ + 1 = 3\n        $result[] = $n + 1; // tri(12) = 1 + 2 / 2 + 1 + 1 + 1 + 1\
    \ + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[] = $n + 1; // tri(13) = 1 + 2\
    \ / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[] =\
    \ $n + 1; // tri(14) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +\
    \ 1 + 1 + 1 = 3\n        $result[] = $n + 1; // tri(15) = 1 + 2 / 2 + 1 + 1 +\
    \ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[] = $n\
    \ + 1; // tri(16) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\
    \ + 1 + 1 + 1 = 3\n        $result[] = $n + 1; // tri(17) = 1 + 2 / 2 + 1 + 1\
    \ + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[]\
    \ = $n + 1; // tri(18) = 1 + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\
    \ + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n        $result[] = $n + 1; // tri(19) = 1\
    \ + 2 / 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1\
    \ + 1 + 1 = 3\n        $result[] = $n + 1; // tri(20) = 1 + 2 / 2 + 1 + 1 + 1\
    \ + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 = 3\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 20 in /tmp/tmpuzjeejc5.php on line 59

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[] = $n / 2;\n    }\n    $result[] = $result[0]\
    \ + $result[1] + $result[2];\n    return $result;\n}\n\n$n = 4; // $n = 4\n$result\
    \ = tri($n);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 2\n    [3] => 6\n)\n\n\
    Warning: Undefined array key 2 in /tmp/tmp2knlztkv.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp2knlztkv.php:35\nStack trace:\n\
    #0 /tmp/tmp2knlztkv.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2knlztkv.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[0] = 3;\n    $tri[1] = 1;\n\
    \    $tri[2] = 2;\n    $tri[3] = 1;\n    $tri[4] = 1;\n    $tri[5] = 1;\n    $tri[6]\
    \ = 1;\n    $tri[7] = 1;\n    $tri[8] = 1;\n    $tri[9] = 1;\n    $tri[10] = 1;\n\
    \    $tri[11] = 1;\n    $tri[12] = 1;\n    $tri[13] = 1;\n    $tri[14] = 1;\n\
    \    $tri[15] = 1;\n    $tri[16] = 1;\n    $tri[17] = 1;\n    $tri[18] = 1;\n\
    \    $tri[19] = 1;\n    $tri[20] = 1;\n    $tri[21] = 1;\n    $tri[22] = 1;\n\
    \    $tri[23] = 1;\n    $tri[24] = 1;\n    $tri[25] = 1;\n    $tri[26] = 1;\n\
    \    $tri[27] = 1;\n    $tri[28] = 1;\n    $tri[29] = 1;\n    $tri[30] = 1;\n\
    \    $tri[31] = 1;\n    $tri[32] = 1;\n    $tri[33] = 1;\n    $tri[34] = 1;\n\
    \    $tri[35] = 1;\n    $tri[36] = 1;\n    $tri[37] = 1;\n    $tri[38] = 1;\n\
    \    $tri[39] = 1;\n    $tri[40] = 1;\n    $tri[41] = 1;\n    $tri[42] = 1;\n\
    \    $tri[43] = 1;\n    $tri[44] = 1;\n    $tri[45] = 1;\n    $tri[46] = 1;\n\
    \    $tri[47] = 1;\n    $tri[48] = 1;\n    $tri[49] = 1;\n    $tri[50] = 1;\n\
    \    $tri[51] = 1;\n    $tri[52] = 1;\n    $tri[53] = 1;\n    $tri[54] = 1;\n\
    \    $tri[55] = 1;\n    $tri[56] = 1;\n    $tri[57] = 1;\n    $tri[58] = 1;\n\
    \    $tri[59] = 1;\n    $tri[60] = 1;\n    $tri[61] = 1;\n    $tri[62] = 1;\n\
    \    $tri[63] = 1;\n    $tri[64] = 1;\n    $tri[65] = 1;\n    $tri[66] = 1;\n\
    \    $tri[67] = 1;\n    $tri[68] = 1;\n    $tri[69] = 1;\n    $tri[70] = 1;\n\
    \    $tri[71] = 1;\n    $tri[72] = 1;\n    $tri[73] = 1;\n    $tri[74] = 1;\n\
    \    $tri[75] = 1;\n    $\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpljeea_5h.php on line 95

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = 1;\n    $b = 2;\n    $c = 1;\n    $result = [];\n\
    \    for($i = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n\
    \        $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\n$result\
    \ = tri(5);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70n7wdeo.php:37\n\
    Stack trace:\n#0 /tmp/tmp70n7wdeo.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp70n7wdeo.php\
    \ on line 37\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n    }\n    $result[] = 1;\n    $result[] = 1;\n \
    \   return $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxx6xrcqy.php:31\n\
    Stack trace:\n#0 /tmp/tmpxx6xrcqy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxx6xrcqy.php\
    \ on line 31\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqaoa1c2.php:33\n\
    Stack trace:\n#0 /tmp/tmpaqaoa1c2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaqaoa1c2.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n < 2) {\n        $result[] =\
    \ 3;\n        return $result;\n    }\n    $result[] = 1;\n    $result[] = $result[$n\
    \ - 1] + $result[$n - 2];\n    if ($n % 2 === 0) {\n        $result[] = $result[$n\
    \ - 1] + $result[$n - 2];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmprin58_om.php on line 23\n\n\
    Warning: Undefined array key 1 in /tmp/tmprin58_om.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmprin58_om.php:35\nStack trace:\n\
    #0 /tmp/tmprin58_om.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprin58_om.php\
    \ on line 35\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = $result[] + $result[] = $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $result[] + $result[] = $result[] + $result[]\
    \ = $result[] + $result[] = $result[] + $result[] = $result[] + $result[] = $result[]\
    \ + $result[] = $result[] + $result[] = $\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpxut3325d.php on line 21

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [];\n    if ($n <= 1) {\n        return $tri;\n\
    \    }\n    $tri[] = 3;\n    if ($n % 2 == 0) {\n        $tri[] = $tri[count($tri)\
    \ - 1] + $tri[count($tri) - 2];\n    }\n    $tri[] = $tri[count($tri) - 1] + $tri[count($tri)\
    \ - 2];\n    return $tri;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpk5o7a0w4.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpk5o7a0w4.php:33\nStack\
    \ trace:\n#0 /tmp/tmpk5o7a0w4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpk5o7a0w4.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[2] = $result[1] + $result[0];\n    }\
    \ else {\n        $result[2] = $result[1] + $result[0] + $result[0];\n    }\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpflnl9i0b.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpflnl9i0b.php:36\nStack\
    \ trace:\n#0 /tmp/tmpflnl9i0b.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpflnl9i0b.php\
    \ on line 36\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $result = array();\n  \
    \  for($i = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n \
    \       $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bak61yz.php:34\n\
    Stack trace:\n#0 /tmp/tmp4bak61yz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4bak61yz.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    } else {\n     \
    \   $result[] = $result[-1] + $result[-2];\n        $result[] = $result[-1] +\
    \ $result[-2] + $result[-1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmp7rtwe663.php on line 23\n\n\
    Warning: Undefined array key -2 in /tmp/tmp7rtwe663.php on line 23\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmp7rtwe663.php on line 24\n\nWarning: Undefined\
    \ array key -2 in /tmp/tmp7rtwe663.php on line 24\n\nWarning: Undefined array\
    \ key -1 in /tmp/tmp7rtwe663.php on line 24\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp7rtwe663.php:34\nStack trace:\n#0 /tmp/tmp7rtwe663.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7rtwe663.php on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $tri[] = 1;\n        $tri[] = $n / 2;\n    } else {\n        $tri[]\
    \ = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $tri;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpw1mhau6f.php on line 23

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsr_5trl3.php:33\n\
    Stack trace:\n#0 /tmp/tmpsr_5trl3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsr_5trl3.php\
    \ on line 33\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    $arr[0] = 3;\n    if ($n % 2 == 0) {\n\
    \        $arr[1] = 1;\n        $arr[2] = 1;\n    } else {\n        $arr[1] = 1;\n\
    \        $arr[2] = 2;\n    }\n    for ($i = 3; $i <= $n; $i++) {\n        $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n    return $arr;\n}\n\
    $n = tri(5);\nprint_r($n);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpmlte0xeb.php on line 27\n\n\
    Warning: Undefined array key 5 in /tmp/tmpmlte0xeb.php on line 27\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmpmlte0xeb.php on line 27\nArray\n(\n    [0]\
    \ => 3\n    [1] => 1\n    [2] => 2\n    [3] => 3\n    [4] => 5\n    [5] => 8\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmpmlte0xeb.php on line 27\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpmlte0xeb.php:38\nStack trace:\n\
    #0 /tmp/tmpmlte0xeb.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpmlte0xeb.php\
    \ on line 38\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [];\n    if ($n == 1) {\n        $tri[] = 1;\n\
    \        return $tri;\n    }\n    if ($n == 2) {\n        $tri[] = 1;\n      \
    \  $tri[] = 2;\n        return $tri;\n    }\n    $tri[] = 1;\n    $tri[] = tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n    return $tri;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmpnktsripj.php on line 23

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 1;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 1;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 1;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 1;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 1;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 1;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 1;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 1;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 1;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 1;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 1;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 1;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 1;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 1;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxoglktvf.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b + $c;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ee65ol4.php:33\n\
    Stack trace:\n#0 /tmp/tmp0ee65ol4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0ee65ol4.php\
    \ on line 33\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 1) {\n        return $result;\n\
    \    }\n    $result[] = 3;\n    if ($n % 2 == 0) {\n        $result[] = $result[$n\
    \ - 1] + $result[$n - 2];\n    } else {\n        $result[] = $result[$n - 1] +\
    \ $result[$n - 2] + $result[$n + 1];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp_mflsu3o.php on line 25\n\n\
    Warning: Undefined array key 1 in /tmp/tmp_mflsu3o.php on line 25\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmp_mflsu3o.php on line 25\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_mflsu3o.php:35\nStack trace:\n#0 /tmp/tmp_mflsu3o.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_mflsu3o.php on line 35\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $tri = array();\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_lwh7ul.php:34\n\
    Stack trace:\n#0 /tmp/tmpv_lwh7ul.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpv_lwh7ul.php\
    \ on line 34\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    if ($n == 1) {\n        $tri[] =\
    \ 1;\n        return $tri;\n    }\n    if ($n == 2) {\n        $tri[] = 1;\n \
    \       $tri[] = 2;\n        return $tri;\n    }\n    if ($n % 2 == 0) {\n   \
    \     $tri[] = tri($n - 1) + tri($n - 2);\n    } else {\n        $tri[] = tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $tri;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmprskqwlbm.php on line 30

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = $c = 1;\n    $result = array();\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n        $b\
    \ = $c;\n        $c = $a + $b + $c;\n    }\n    return $result;\n}\n$result =\
    \ tri(5);\nprint_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 7\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hdn1k44.php:34\n\
    Stack trace:\n#0 /tmp/tmp9hdn1k44.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9hdn1k44.php\
    \ on line 34\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $tri = array();\n    for($i\
    \ = 1; $i <= $n; $i++) {\n        $tri[] = $a;\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n    }\n    return $tri;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y27q7nr.php:34\n\
    Stack trace:\n#0 /tmp/tmp6y27q7nr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6y27q7nr.php\
    \ on line 34\n"
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [];\n    $tri[0] = 3;\n    $tri[1] = 1;\n    $tri[2]\
    \ = 2;\n    $tri[3] = 1;\n    $tri[4] = 1;\n    $tri[5] = 1;\n    $tri[6] = 1;\n\
    \    $tri[7] = 1;\n    $tri[8] = 1;\n    $tri[9] = 1;\n    $tri[10] = 1;\n   \
    \ $tri[11] = 1;\n    $tri[12] = 1;\n    $tri[13] = 1;\n    $tri[14] = 1;\n   \
    \ $tri[15] = 1;\n    $tri[16] = 1;\n    $tri[17] = 1;\n    $tri[18] = 1;\n   \
    \ $tri[19] = 1;\n    $tri[20] = 1;\n    $tri[21] = 1;\n    $tri[22] = 1;\n   \
    \ $tri[23] = 1;\n    $tri[24] = 1;\n    $tri[25] = 1;\n    $tri[26] = 1;\n   \
    \ $tri[27] = 1;\n    $tri[28] = 1;\n    $tri[29] = 1;\n    $tri[30] = 1;\n   \
    \ $tri[31] = 1;\n    $tri[32] = 1;\n    $tri[33] = 1;\n    $tri[34] = 1;\n   \
    \ $tri[35] = 1;\n    $tri[36] = 1;\n    $tri[37] = 1;\n    $tri[38] = 1;\n   \
    \ $tri[39] = 1;\n    $tri[40] = 1;\n    $tri[41] = 1;\n    $tri[42] = 1;\n   \
    \ $tri[43] = 1;\n    $tri[44] = 1;\n    $tri[45] = 1;\n    $tri[46] = 1;\n   \
    \ $tri[47] = 1;\n    $tri[48] = 1;\n    $tri[49] = 1;\n    $tri[50] = 1;\n   \
    \ $tri[51] = 1;\n    $tri[52] = 1;\n    $tri[53] = 1;\n    $tri[54] = 1;\n   \
    \ $tri[55] = 1;\n    $tri[56] = 1;\n    $tri[57] = 1;\n    $tri[58] = 1;\n   \
    \ $tri[59] = 1;\n    $tri[60] = 1;\n    $tri[61] = 1;\n    $tri[62] = 1;\n   \
    \ $tri[63] = 1;\n    $tri[64] = 1;\n    $tri[65] = 1;\n    $tri[66] = 1;\n   \
    \ $tri[67] = 1;\n    $tri[68] = 1;\n    $tri[69] = 1;\n    $tri[70] = 1;\n   \
    \ $tri[71] = 1;\n    $tri[72] = 1;\n    $tri[73] = 1;\n    $tri[74] = 1;\n   \
    \ $tri[75] = 1;\n    $tri[\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp59ueon_e.php on line 95

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 2;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 2;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 2;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 2;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 2;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 2;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 2;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 2;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 2;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 2;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 2;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 2;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 2;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpi4mxj8c6.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    if ($n % 2 == 0) {\n        $result[2] = $result[1] + $result[0];\n    }\
    \ else {\n        $result[2] = $result[1] + $result[0] + $result[0];\n    }\n\
    \    $result[3] = $result[2] + $result[1];\n    $result[4] = $result[3] + $result[2];\n\
    \    $result[5] = $result[4] + $result[3];\n    $result[6] = $result[5] + $result[4];\n\
    \    $result[7] = $result[6] + $result[5];\n    $result[8] = $result[7] + $result[6];\n\
    \    $result[9] = $result[8] + $result[7];\n    $result[10] = $result[9] + $result[8];\n\
    \    $result[11] = $result[10] + $result[9];\n    $result[12] = $result[11] +\
    \ $result[10];\n    $result[13] = $result[12] + $result[11];\n    $result[14]\
    \ = $result[13] + $result[12];\n    $result[15] = $result[14] + $result[13];\n\
    \    $result[16] = $result[15] + $result[14];\n    $result[17] = $result[16] +\
    \ $result[15];\n    $result[18] = $result[17] + $result[16];\n    $result[19]\
    \ = $result[18] + $result[17];\n    $result[20] = $result[19] + $result[18];\n\
    \    $result[21] = $result[20] + $result[19];\n    $result[22] = $result[21] +\
    \ $result[20];\n    $result[23] = $result[22] + $result[21];\n    $result[24]\
    \ = $result[23] + $result[22];\n    $result[25] = $result[24] + $result[23];\n\
    \    $result[26] = $result[25] + $result[24];\n    $result[27] = $result[26] +\
    \ $result[25];\n    $result[28] = $result[27] + $result[26];\n    $result[29]\
    \ = $result[28] + $result[27];\n    $result[30] = $result[29] + $result[28];\n\
    \    $result[31] = $result[30] + $result[29];\n    $result[32] = $result[31] +\
    \ $result[30];\n    $result[33] = $result[32] + $result[31];\n    $result[34]\
    \ = $result[33] + $result[32];\n    $result[35] = $result[34] + $result[33];\n\
    \    $result[36] = $result[35] + $result[34];\n    $result[37] = $result[36] +\
    \ $result[35];\n    $result[38] = $result[37] + $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpuur06cvu.php on line 61

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = array();\n    $result[] = 3;\n    $result[]\
    \ = 1;\n    if ($n % 2 == 0) {\n        $result[] = 1 + $n / 2;\n    } else {\n\
    \        $result[] = $this->tri($n - 1) + $this->tri($n - 2) + $this->tri($n +\
    \ 1);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpsb2egq3m.php:23\nStack trace:\n#0 /tmp/tmpsb2egq3m.php(28): tri(3)\n\
    #1 /tmp/tmpsb2egq3m.php(32): candidate(3)\n#2 /tmp/tmpsb2egq3m.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsb2egq3m.php on line 23\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = array();\n    $tri[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $tri[] = 1;\n        $tri[] = $n / 2;\n    } else {\n        $tri[]\
    \ = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $tri;\n}\n\n$n\
    \ = 4; // $n = 4\n$tri = tri($n); // $tri = array(3, 1, 1, 1)\n$sum = 0;\nforeach\
    \ ($tri as $value) {\n    $sum += $value;\n}\necho $sum; // 8\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '6

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp7lsg75eq.php on line 23

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    $result[] = 1;\n\
    \    $result[] = 1;\n    $result[] = 2;\n    $result[] = 3;\n    $result[] = tri($n\
    \ - 1) + tri($n - 2) + tri($n + 1);\n    return $result;\n}\n$result = tri(2);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmplqk66nnt.php on line 18

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = $n / 2;\n    }\n    $result[] = tri(--$n) + tri(--$n)\
    \ + tri($n + 1);\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmpnv55a_w2.php on line 18

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    if ($n <= 2) {\n        $result[] =\
    \ $n;\n        return $result;\n    }\n    $result[] = $n;\n    $result[] = $n\
    \ - 1;\n    $result[] = $n - 2;\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68c60e7h.php:32\n\
    Stack trace:\n#0 /tmp/tmp68c60e7h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp68c60e7h.php\
    \ on line 32\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 1;\n    $result[10] = 2;\n    $result[11] = 1;\n    $result[12] = 1;\n   \
    \ $result[13] = 1;\n    $result[14] = 2;\n    $result[15] = 1;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 2;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 1;\n    $result[22] = 2;\n    $result[23]\
    \ = 1;\n    $result[24] = 1;\n    $result[25] = 1;\n    $result[26] = 2;\n   \
    \ $result[27] = 1;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 2;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 1;\n   \
    \ $result[34] = 2;\n    $result[35] = 1;\n    $result[36] = 1;\n    $result[37]\
    \ = 1;\n    $result[38] = 2;\n    $result[39] = 1;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 2;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 1;\n    $result[46] = 2;\n    $result[47] = 1;\n   \
    \ $result[48] = 1;\n    $result[49] = 1;\n    $result[50] = 2;\n    $result[51]\
    \ = 1;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 2;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 1;\n    $result[58]\
    \ = 2;\n    $result[59] = 1;\n    $result[60] = 1;\n    $result[61] = 1;\n   \
    \ $result[62] = 2;\n    $result[63] = 1;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 2;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 1;\n    $result[70] = 2;\n    $result[71] = 1;\n    $result[72]\
    \ = 1;\n    $result[73] = 1;\n    $result[74] = 2;\n    $result[75] = 1;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 2;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 1;\n    $result[82] = 2;\n   \
    \ $result[83] = 1;\n    $result[84] = 1;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpjainpz0g.php on line 104

    '
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    if ($n % 2 ==\
    \ 0) {\n        $result[1] = 1;\n        $result[2] = 2;\n    } else {\n     \
    \   $result[1] = 1;\n        $result[2] = 2;\n        $result[3] = 1;\n    }\n\
    \    for ($i = 4; $i <= $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8serd2z.php:37\n\
    Stack trace:\n#0 /tmp/tmpm8serd2z.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpm8serd2z.php\
    \ on line 37\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $a = $b = 1;\n    $c = 1;\n    $result = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $result[] = $a;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $a + $b;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n5ufs6a.php:34\n\
    Stack trace:\n#0 /tmp/tmp9n5ufs6a.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9n5ufs6a.php\
    \ on line 34\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp1w9ohzh7.php on line 22

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = $result[0] + $result[1]\
    \ + $result[2];\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpm2y9955w.php on line 22\n\n\
    Warning: Undefined array key 2 in /tmp/tmpm2y9955w.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpm2y9955w.php:31\nStack trace:\n\
    #0 /tmp/tmpm2y9955w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm2y9955w.php\
    \ on line 31\n"
  timestamp: 1659979209
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[0] = 3;\n    $result[1] = 1;\n\
    \    $result[2] = 1;\n    $result[3] = 2;\n    $result[4] = 1;\n    $result[5]\
    \ = 1;\n    $result[6] = 2;\n    $result[7] = 1;\n    $result[8] = 1;\n    $result[9]\
    \ = 2;\n    $result[10] = 1;\n    $result[11] = 1;\n    $result[12] = 2;\n   \
    \ $result[13] = 1;\n    $result[14] = 1;\n    $result[15] = 2;\n    $result[16]\
    \ = 1;\n    $result[17] = 1;\n    $result[18] = 2;\n    $result[19] = 1;\n   \
    \ $result[20] = 1;\n    $result[21] = 2;\n    $result[22] = 1;\n    $result[23]\
    \ = 1;\n    $result[24] = 2;\n    $result[25] = 1;\n    $result[26] = 1;\n   \
    \ $result[27] = 2;\n    $result[28] = 1;\n    $result[29] = 1;\n    $result[30]\
    \ = 2;\n    $result[31] = 1;\n    $result[32] = 1;\n    $result[33] = 2;\n   \
    \ $result[34] = 1;\n    $result[35] = 1;\n    $result[36] = 2;\n    $result[37]\
    \ = 1;\n    $result[38] = 1;\n    $result[39] = 2;\n    $result[40] = 1;\n   \
    \ $result[41] = 1;\n    $result[42] = 2;\n    $result[43] = 1;\n    $result[44]\
    \ = 1;\n    $result[45] = 2;\n    $result[46] = 1;\n    $result[47] = 1;\n   \
    \ $result[48] = 2;\n    $result[49] = 1;\n    $result[50] = 1;\n    $result[51]\
    \ = 2;\n    $result[52] = 1;\n    $result[53] = 1;\n    $result[54] = 2;\n   \
    \ $result[55] = 1;\n    $result[56] = 1;\n    $result[57] = 2;\n    $result[58]\
    \ = 1;\n    $result[59] = 1;\n    $result[60] = 2;\n    $result[61] = 1;\n   \
    \ $result[62] = 1;\n    $result[63] = 2;\n    $result[64] = 1;\n    $result[65]\
    \ = 1;\n    $result[66] = 2;\n    $result[67] = 1;\n    $result[68] = 1;\n   \
    \ $result[69] = 2;\n    $result[70] = 1;\n    $result[71] = 1;\n    $result[72]\
    \ = 2;\n    $result[73] = 1;\n    $result[74] = 1;\n    $result[75] = 2;\n   \
    \ $result[76] = 1;\n    $result[77] = 1;\n    $result[78] = 2;\n    $result[79]\
    \ = 1;\n    $result[80] = 1;\n    $result[81] = 2;\n    $result[82] = 1;\n   \
    \ $result[83] = 1;\n    $result[84] = 2;\n    $result[\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpi4mxj8c6.php on line 104

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1;\n        $result[] = $n / 2;\n    } else {\n     \
    \   $result[] = tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp31vqxqg2.php on line 23

    '
  timestamp: 1659979208
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    $result[] = 3;\n    if ($n % 2 == 0)\
    \ {\n        $result[] = 1 + $n / 2;\n    }\n    $result[] = tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n    return $result;\n}\n\n$result = tri(2);\nprint_r($result);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp9px1z40g.php on line 22

    '
  timestamp: 1659979209

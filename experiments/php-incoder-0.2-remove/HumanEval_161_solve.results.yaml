language: php
name: HumanEval_161_solve
results:
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnrbjhha.php:19\n\
    Stack trace:\n#0 /tmp/tmpfnrbjhha.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfnrbjhha.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\necho solve('Hello\
    \ World');\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotf047ki.php:19\n\
    Stack trace:\n#0 /tmp/tmpotf047ki.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpotf047ki.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? \n            strrev($s[$i]) : \n            $s[$i];\n    }\n    return $result;\n\
    }\necho solve(\"hello\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpwo8x9h6h.php:11\nStack trace:\n#0 /tmp/tmpwo8x9h6h.php(17): solve('hello')\n\
    #1 {main}\n  thrown in /tmp/tmpwo8x9h6h.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"a\", \"A\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pf8yowr.php:19\n\
    Stack trace:\n#0 /tmp/tmp1pf8yowr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1pf8yowr.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace('\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmp5w46i5pp.php
    on line 61

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"\
    b\", \"B\", $s);\n    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"\
    d\", \"D\", $s);\n    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"\
    f\", \"F\", $s);\n    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"\
    h\", \"H\", $s);\n    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"\
    j\", \"J\", $s);\n    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"\
    l\", \"L\", $s);\n    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"\
    n\", \"N\", $s);\n    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"\
    p\", \"P\", $s);\n    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"\
    r\", \"R\", $s);\n    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"\
    t\", \"T\", $s);\n    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"\
    v\", \"V\", $s);\n    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"\
    x\", \"X\", $s);\n    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"\
    z\", \"Z\", $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsbcvdjd.php:44\n\
    Stack trace:\n#0 /tmp/tmphsbcvdjd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphsbcvdjd.php\
    \ on line 44\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'Hello\
    \ World';\n$result = solve($string);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws1p_nxi.php:22\n\
    Stack trace:\n#0 /tmp/tmpws1p_nxi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpws1p_nxi.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnrbjhha.php:19\n\
    Stack trace:\n#0 /tmp/tmpfnrbjhha.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfnrbjhha.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = preg_replace('/[^a-z]/i',\
    \ '', $s);\n    return $s;\n}\necho solve(\"Hello World!\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HelloWorld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vkmgxqa.php:18\n\
    Stack trace:\n#0 /tmp/tmp4vkmgxqa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4vkmgxqa.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf" in /tmp/tmpyb83lxt7.php
    on line 95

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = preg_replace('/[^a-z]/i',\
    \ '', $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce28owp5.php:17\n\
    Stack trace:\n#0 /tmp/tmpce28owp5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpce28owp5.php\
    \ on line 17\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(isLetter($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpage4uc1l.php:11\nStack trace:\n#0 /tmp/tmpage4uc1l.php(21): solve('AsDf')\n\
    #1 /tmp/tmpage4uc1l.php(25): candidate('AsDf')\n#2 /tmp/tmpage4uc1l.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpage4uc1l.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strrev($s);\n    return\
    \ $s;\n}\necho solve('hello');\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "olleh\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncbcgnd2.php:20\n\
    Stack trace:\n#0 /tmp/tmpncbcgnd2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpncbcgnd2.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    $s = str_replace(\"0\", \"0\", $s);\n    $s = str_replace(\"1\", \"1\", $s);\n\
    \    $s = str_replace(\"2\", \"2\", $s);\n    $s = str_replace(\"3\", \"3\", $s);\n\
    \    $s = str_replace(\"4\", \"4\", $s);\n    $s = str_replace(\"5\", \"5\", $s);\n\
    \    $s = str_replace(\"6\", \"6\", $s);\n    $s = str_replace(\"7\", \"7\", $s);\n\
    \    $s = str_replace(\"8\", \"8\", $s);\n    $s = str_replace(\"9\", \"9\", $s);\n\
    \    $s = str_replace(\"+\", \"+\", $s);\n    $s = str_replace(\"-\", \"-\", $s);\n\
    \    $s = str_replace(\".\", \".\", $s);\n    $s = str_replace(\",\", \",\", $s);\n\
    \    $s = str_replace(\"?\", \"?\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n\
    \    $s = str_replace(\"$\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmpub_rjdfj.php on line 69

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'Hello\
    \ World';\n$string = 'Hello World!';\n$string = 'Hello World!!';\n$string = 'Hello\
    \ World!!!';\n$string = 'Hello World!!!!';\n$string = 'Hello World!!!!!';\n$string\
    \ = 'Hello World!!!!!!';\n$string = 'Hello World!!!!!!!';\n$string = 'Hello World!!!!!!!';\
    \ \n$string = 'Hello World!!!!!!! ';\n$string = 'Hello World!!!!!!! !';\n$string\
    \ = 'Hello World!!!!!!! ! ';\n$string = 'Hello World!!!!!!! ! !';\n$string = 'Hello\
    \ World!!!!!!! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! !';\n$string = 'Hello\
    \ World!!!!!!! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! !';\n$string\
    \ = 'Hello World!!!!!!! ! ! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! !\
    \ ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! !';\n$string = 'Hello\
    \ World!!!!!!! ! ! ! ! ! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! !\
    \ ! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! ! ! ! ! !';\n$string\
    \ = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! ! ! ! ! ! !';\n$string = 'Hello World!!!!!!!\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ !';\n$string = 'Hello World!!!!!!! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! \nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "Hello World!!!!!!! ! ! !
    ! ! !..." in /tmp/tmpberyvo_f.php on line 43

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    !\", \"\", $s);\n    $s = str_replace(\"?\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    &\", \"\", $s);\n    $s = str_replace(\"(\", \"\", $s);\n    $s = str_replace(\"\
    )\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"{\", \"\", $s);\n    $s = str_replace(\"\
    }\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    '\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    :\", \"\", $s);\n    $s = str_replace(\"&\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\n    $s = str_replace(\"[\", \"\", $s);\n    $s = str_replace(\"\
    ]\", \"\", $s);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmp7hcjj1d3.php on line 75

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\necho solve(\"\
    Hello World!\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqj55qn0.php:19\n\
    Stack trace:\n#0 /tmp/tmpeqj55qn0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpeqj55qn0.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++) {\n      \
    \  $result .= $s[$i];\n        if($s[$i] >= 65 && $s[$i] <= 90) {\n          \
    \  $result .= strtoupper($s[$i]);\n        } elseif($s[$i] >= 97 && $s[$i] <=\
    \ 122) {\n            $result .= strtolower($s[$i]);\n        } else {\n     \
    \       $result .= $s[$i];\n        }\n    }\n    return $result;\n}\necho solve(\"\
    Hello\");\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HHeelllloo\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawlsseom.php:29\n\
    Stack trace:\n#0 /tmp/tmpawlsseom.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpawlsseom.php\
    \ on line 29\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\necho solve('hello');\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jyf99bw.php:20\n\
    Stack trace:\n#0 /tmp/tmp4jyf99bw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4jyf99bw.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmphenppv_i.php:11\nStack trace:\n#0 /tmp/tmphenppv_i.php(16): solve('AsDf')\n\
    #1 /tmp/tmphenppv_i.php(20): candidate('AsDf')\n#2 /tmp/tmphenppv_i.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmphenppv_i.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"\
    B\", \"b\", $s);\n    $s = str_replace(\"C\", \"c\", $s);\n    $s = str_replace(\"\
    D\", \"d\", $s);\n    $s = str_replace(\"E\", \"e\", $s);\n    $s = str_replace(\"\
    F\", \"f\", $s);\n    $s = str_replace(\"G\", \"g\", $s);\n    $s = str_replace(\"\
    H\", \"h\", $s);\n    $s = str_replace(\"I\", \"i\", $s);\n    $s = str_replace(\"\
    J\", \"j\", $s);\n    $s = str_replace(\"K\", \"k\", $s);\n    $s = str_replace(\"\
    L\", \"l\", $s);\n    $s = str_replace(\"M\", \"m\", $s);\n    $s = str_replace(\"\
    N\", \"n\", $s);\n    $s = str_replace(\"O\", \"o\", $s);\n    $s = str_replace(\"\
    P\", \"p\", $s);\n    $s = str_replace(\"Q\", \"q\", $s);\n    $s = str_replace(\"\
    R\", \"r\", $s);\n    $s = str_replace(\"S\", \"s\", $s);\n    $s = str_replace(\"\
    T\", \"t\", $s);\n    $s = str_replace(\"U\", \"u\", $s);\n    $s = str_replace(\"\
    V\", \"v\", $s);\n    $s = str_replace(\"W\", \"w\", $s);\n    $s = str_replace(\"\
    X\", \"x\", $s);\n    $s = str_replace(\"Y\", \"y\", $s);\n    $s = str_replace(\"\
    Z\", \"z\", $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmrbmar5.php:44\n\
    Stack trace:\n#0 /tmp/tmpdmrbmar5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdmrbmar5.php\
    \ on line 44\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxh2l585.php:19\n\
    Stack trace:\n#0 /tmp/tmphxh2l585.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphxh2l585.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strrev($s);\n    $s = strrev($s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplc71jxf5.php:19\n\
    Stack trace:\n#0 /tmp/tmplc71jxf5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplc71jxf5.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxh2l585.php:19\n\
    Stack trace:\n#0 /tmp/tmphxh2l585.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphxh2l585.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmphenppv_i.php:11\nStack trace:\n#0 /tmp/tmphenppv_i.php(16): solve('AsDf')\n\
    #1 /tmp/tmphenppv_i.php(20): candidate('AsDf')\n#2 /tmp/tmphenppv_i.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmphenppv_i.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\n$result = solve(\"Hello World!\");\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HHeelllloo  WWoorrlldd!!\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzq9djqw7.php:30\nStack trace:\n#0 /tmp/tmpzq9djqw7.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzq9djqw7.php on line 30\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if(ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= strtolower($s[$i]);\n        }\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ybxwwbz.php:25\n\
    Stack trace:\n#0 /tmp/tmp2ybxwwbz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2ybxwwbz.php\
    \ on line 25\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n            $result .= strtoupper($s[$i]);\n\
    \        } else if($s[$i] >= 'A' && $s[$i] <= 'Z') {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\n$tests = array(\n    \"abc\",\n    \"aBcdef\",\n    \"aBcDeF\"\
    ,\n    \"aBcDeFg\",\n    \"aBcDeFgH\",\n    \"aBcDeFgHi\",\n    \"aBcDeFgHiJ\"\
    ,\n    \"aBcDeFgHiJk\",\n    \"aBcDeFgHiJkl\",\n    \"aBcDeFgHiJklm\",\n    \"\
    aBcDeFgHiJklmn\",\n    \"aBcDeFgHiJklmnO\",\n    \"aBcDeFgHiJklmnOI\",\n    \"\
    aBcDeFgHiJklmnOIl\",\n    \"aBcDeFgHiJklmnOIlm\",\n    \"aBcDeFgHiJklmnOIlmn\"\
    ,\n    \"aBcDeFgHiJklmnOIlmnO\",\n    \"aBcDeFgHiJklmnOIlmnOI\",\n    \"aBcDeFgHiJklmnOIlmnOIl\"\
    ,\n    \"aBcDeFgHiJklmnOIlmnOIlm\",\n    \"aBcDeFgHiJklmnOIlmnOIlmn\",\n    \"\
    aBcDeFgHiJklmnOIlmnOIlmnO\",\n    \"aBcDeFgHiJklmnOIlmnOIlmnOI\",\n    \"aBcDeFgHiJklmnOIlmnOIlmnOIl\"\
    ,\n    \"aBcDeFgHiJklmnOIlmnOIlmnOIlm\",\n    \"aBcDeFgHiJklmnOIlmnOIlmnOIlmn\"\
    ,\n    \"aBcDeFgHiJklmnO\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting ")" in /tmp/tmpiy4ecwkj.php
    on line 56

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strrev($s);\n    return\
    \ $s;\n}\necho solve(\"Hello World!\");\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "dlrowolleh\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4vgkd_v.php:20\n\
    Stack trace:\n#0 /tmp/tmps4vgkd_v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmps4vgkd_v.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\n\n$tests = array(\n    '',\n    'a',\n    'abc',\n    'abcde',\n   \
    \ 'abcdef',\n    'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n    'abcdefghij',\n\
    \    'abcdefghijk',\n    'abcdefghijkl',\n    'abcdefghijklm',\n    'abcdefghijklmn',\n\
    \    'abcdefghijklmno',\n    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n \
    \   'abcdefghijklmnopqr',\n    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n\
    \    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n\
    \    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n\
    \    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n   \
    \ 'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n  \
    \  'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnop',\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpfjn7t_9h.php on line 57

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    $s = str_replace(\"0\", \"0\", $s);\n    $s = str_replace(\"1\", \"1\", $s);\n\
    \    $s = str_replace(\"2\", \"2\", $s);\n    $s = str_replace(\"3\", \"3\", $s);\n\
    \    $s = str_replace(\"4\", \"4\", $s);\n    $s = str_replace(\"5\", \"5\", $s);\n\
    \    $s = str_replace(\"6\", \"6\", $s);\n    $s = str_replace(\"7\", \"7\", $s);\n\
    \    $s = str_replace(\"8\", \"8\", $s);\n    $s = str_replace(\"9\", \"9\", $s);\n\
    \    $s = str_replace(\"+\", \"+\", $s);\n    $s = str_replace(\"-\", \"-\", $s);\n\
    \    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"/\", \"/\", $s);\n\
    \    $s = str_replace(\"=\", \"=\", $s);\n    $s = str_replace(\"?\", \"?\", $s);\n\
    \    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"@\", \"@\", $s);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmp7l8llxrg.php on line 69

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strtr($s, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F',\
    \ 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N',\
    \ 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n    return strrev($s);\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5ryhj1z.php:18\n\
    Stack trace:\n#0 /tmp/tmpc5ryhj1z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc5ryhj1z.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strtr($s, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F',\
    \ 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N',\
    \ 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n    return strrev($s);\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5ryhj1z.php:18\n\
    Stack trace:\n#0 /tmp/tmpc5ryhj1z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc5ryhj1z.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"\
    b\", \"B\", $s);\n    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"\
    d\", \"D\", $s);\n    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"\
    f\", \"F\", $s);\n    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"\
    h\", \"H\", $s);\n    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"\
    j\", \"J\", $s);\n    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"\
    l\", \"L\", $s);\n    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"\
    n\", \"N\", $s);\n    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"\
    p\", \"P\", $s);\n    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"\
    r\", \"R\", $s);\n    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"\
    t\", \"T\", $s);\n    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"\
    v\", \"V\", $s);\n    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"\
    x\", \"X\", $s);\n    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"\
    z\", \"Z\", $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsbcvdjd.php:44\n\
    Stack trace:\n#0 /tmp/tmphsbcvdjd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphsbcvdjd.php\
    \ on line 44\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"B\", \"b\", $s);\n\
    \    $s = str_replace(\"C\", \"c\", $s);\n    $s = str_replace(\"D\", \"d\", $s);\n\
    \    $s = str_replace(\"E\", \"e\", $s);\n    $s = str_replace(\"F\", \"f\", $s);\n\
    \    $s = str_replace(\"G\", \"g\", $s);\n    $s = str_replace(\"H\", \"h\", $s);\n\
    \    $s = str_replace(\"I\", \"i\", $s);\n    $s = str_replace(\"J\", \"j\", $s);\n\
    \    $s = str_replace(\"K\", \"k\", $s);\n    $s = str_replace(\"L\", \"l\", $s);\n\
    \    $s = str_replace(\"M\", \"m\", $s);\n    $s = str_replace(\"N\", \"n\", $s);\n\
    \    $s = str_replace(\"O\", \"o\", $s);\n    $s = str_replace(\"P\", \"p\", $s);\n\
    \    $s = str_replace(\"Q\", \"q\", $s);\n    $s = str_replace(\"R\", \"r\", $s);\n\
    \    $s = str_replace(\"S\", \"s\", $s);\n    $s = str_replace(\"T\", \"t\", $s);\n\
    \    $s = str_replace(\"U\", \"u\", $s);\n    $s = str_replace(\"V\", \"v\", $s);\n\
    \    $s = str_replace(\"W\", \"w\", $s);\n    $s = str_replace(\"X\", \"x\", $s);\n\
    \    $s = str_replace(\"Y\", \"y\", $s);\n    $s = str_replace(\"Z\", \"z\", $s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmprscuhoq4.php
    on line 54

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_replace(\",\", \"\", $s);\n    $s = str_replace(\"\
    .\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\n    $s = str_replace(\"]\", \"\", $s);\n    $s = str_replace(\"\
    {\", \"\", $s);\n    $s = str_replace(\"}\", \"\", $s);\n    $s = str_replace(\"\
    ;\", \"\", $s);\n    $s = str_replace(\":\", \"\", $s);\n    $s = str_replace(\"\
    ,\", \"\", $s);\n    $s = str_replace(\";\", \"\", $s);\n    $s = str_replace(\"\
    =\", \"\", $s);\n    $s = str_replace(\"!\", \"\", $s);\n    $s = str_replace(\"\
    ?\", \"\", $s);\n    $s = str_replace(\"'\", \"\", $s);\n    $s = str_replace(\"\
    (\", \"\", $s);\n    $s = str_replace(\")\", \"\", $s);\n    $s = str_replace(\"\
    [\", \"\", $s);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmp4n88gy8e.php on line 75

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    $s = str_replace(\"0\", \"0\", $s);\n    $s = str_replace(\"1\", \"1\", $s);\n\
    \    $s = str_replace(\"2\", \"2\", $s);\n    $s = str_replace(\"3\", \"3\", $s);\n\
    \    $s = str_replace(\"4\", \"4\", $s);\n    $s = str_replace(\"5\", \"5\", $s);\n\
    \    $s = str_replace(\"6\", \"6\", $s);\n    $s = str_replace(\"7\", \"7\", $s);\n\
    \    $s = str_replace(\"8\", \"8\", $s);\n    $s = str_replace(\"9\", \"9\", $s);\n\
    \    $s = str_replace(\"+\", \"-\", $s);\n    $s = str_replace(\"/\", \"_\", $s);\n\
    \    $s = str_replace(\"=\", \"+\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n\
    \    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"(\", \"(\", $s);\n\
    \    $s = str_replace(\")\", \")\", $s);\n    $s = str_replace(\",\", \",\", \n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpw9xugwci.php on line 54

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'Hello\
    \ World!';\n$result = solve($string);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48ihmv8o.php:22\n\
    Stack trace:\n#0 /tmp/tmp48ihmv8o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp48ihmv8o.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace('\"', '', $s);\n    $s = str_replace('(', '',\
    \ $s);\n    $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n\
    \    $s = str_replace('}', '', $s);\n    $s = str_replace(']', '', $s);\n    $s\
    \ = str_replace('}', '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace(']',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace('\"', '', $s);\n    $s = str_replace('(', '', $s);\n   \
    \ $s = str_replace(')', '', $s);\n    $s = str_replace('{', '', $s);\n    $s =\
    \ str_replace('}', '', $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('}',\
    \ '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace(']', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace('\"', '', $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')',\
    \ '', $s);\n    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '',\
    \ $s);\n    $s = str_replace(']', '', $s);\n    $s = str_replace('}', '', $s);\n\
    \    $s = str_replace('{', '', $s);\n    $s = str_replace(']', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('\"', '',\
    \ $s);\n    $s = str_replace('(', '', $s);\n    $s = str_replace(')', '', $s);\n\
    \    $s = str_replace('{', '', $s);\n    $s = str_replace('}', '', $s);\n    $s\
    \ = str_replace(']', '', $s);\n    $s = str_replace('}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "}" in /tmp/tmpbqtduomk.php
    on line 60

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('\
    \ ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s = str_replace(',',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(' ', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '',\
    \ \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpdwceswt1.php on line 62

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace('a', 'A', $s);\n   \
    \ $s = str_replace('b', 'B', $s);\n    $s = str_replace('c', 'C', $s);\n    $s\
    \ = str_replace('d', 'D', $s);\n    $s = str_replace('e', 'E', $s);\n    $s =\
    \ str_replace('f', 'F', $s);\n    $s = str_replace('g', 'G', $s);\n    $s = str_replace('h',\
    \ 'H', $s);\n    $s = str_replace('i', 'I', $s);\n    $s = str_replace('j', 'J',\
    \ $s);\n    $s = str_replace('k', 'K', $s);\n    $s = str_replace('l', 'L', $s);\n\
    \    $s = str_replace('m', 'M', $s);\n    $s = str_replace('n', 'N', $s);\n  \
    \  $s = str_replace('o', 'O', $s);\n    $s = str_replace('p', 'P', $s);\n    $s\
    \ = str_replace('q', 'Q', $s);\n    $s = str_replace('r', 'R', $s);\n    $s =\
    \ str_replace('s', 'S', $s);\n    $s = str_replace('t', 'T', $s);\n    $s = str_replace('u',\
    \ 'U', $s);\n    $s = str_replace('v', 'V', $s);\n    $s = str_replace('w', 'W',\
    \ $s);\n    $s = str_replace('x', 'X', $s);\n    $s = str_replace('y', 'Y', $s);\n\
    \    $s = str_replace('z', 'Z', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrqtuxu5.php:44\n\
    Stack trace:\n#0 /tmp/tmpcrqtuxu5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpcrqtuxu5.php\
    \ on line 44\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\necho solve('Hello World!'); // dlroW olleH\necho solve('Hello World!');\
    \ // Hello World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello\
    \ World!'); // Hello World!\necho solve('Hello World!'); // Hello World!\necho\
    \ solve('Hello World!'); // Hello World!\necho solve('Hello World!'); // Hello\
    \ World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello World!');\
    \ // Hello World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello\
    \ World!'); // Hello World!\necho solve('Hello World!'); // Hello World!\necho\
    \ solve('Hello World!'); // Hello World!\necho solve('Hello World!'); // Hello\
    \ World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello World!');\
    \ // Hello World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello\
    \ World!'); // Hello World!\necho solve('Hello World!'); // Hello World!\necho\
    \ solve('Hello World!'); // Hello World!\necho solve('Hello World!'); // Hello\
    \ World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello World!');\
    \ // Hello World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello\
    \ World!'); // Hello World!\necho solve('Hello World!'); // Hello World!\necho\
    \ solve('Hello World!'); // Hello World!\necho solve('Hello World!'); // Hello\
    \ World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello World!');\
    \ // Hello World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello\
    \ World!'); // Hello World!\necho solve('Hello World!'); // Hello World!\necho\
    \ solve('Hello World!'); // Hello World!\necho solve('Hello World!'); // Hello\
    \ World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello World!');\
    \ // Hello World!\necho solve('Hello World!'); // Hello World!\necho solve('Hello\
    \ World!'); // Hello World!\necho solve('Hello World!'); // \nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLDHELLOWORLD\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpk1tm25uq.php:59\nStack\
    \ trace:\n#0 /tmp/tmpk1tm25uq.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpk1tm25uq.php\
    \ on line 59\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= ($s[$i]\
    \ >= 65 && $s[$i] <= 90) ? $s[$i] - 32 : $s[$i];\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsedbojjx.php:20\n\
    Stack trace:\n#0 /tmp/tmpsedbojjx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsedbojjx.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if($s[i] >= 65 &&\
    \ $s[i] <= 90) {\n            $result .= chr($s[i] - 64);\n        } elseif($s[i]\
    \ >= 97 && $s[i] <= 122) {\n            $result .= chr($s[i] - 96);\n        }\
    \ else {\n            $result .= $s[i];\n        }\n    }\n    return $result;\n\
    }\n\n$tests = array(\n    \"hello\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"hello\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting ")" in /tmp/tmpsu6zuz3c.php
    on line 113

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    $s = strtolower($s);\n    return $s;\n}\n\n$tests = array(\n \
    \   '',\n    'a',\n    'abc',\n    'abcde',\n    'abcdef',\n    'abcdefg',\n \
    \   'abcdefgh',\n    'abcdefghi',\n    'abcdefghij',\n    'abcdefghijk',\n   \
    \ 'abcdefghijkl',\n    'abcdefghijklm',\n    'abcdefghijklmn',\n    'abcdefghijklmno',\n\
    \    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n    'abcdefghijklmnopqr',\n\
    \    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n    'abcdefghijklmnopqrstu',\n\
    \    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n    'abcdefghijklmnopqrstuvwx',\n\
    \    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n    'abcdefghijklmnopqrstuvwxyza',\n\
    \    'abcdefghijklmnopqrstuvwxyzab',\n    'abcdefghijklmnopqrstuvwxyzabc',\n \
    \   'abcdefghijklmnopqrstuvwxyzabcd',\n    'abcdefghijklmnopqrstuvwxyzabcde',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdef',\n    'abcdefghijklmnopqrstuvwxyzabcdefg',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnop',\n    'abcdefghijklm\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "abcdefghijklm", expecting
    ")" in /tmp/tmpiozdiut0.php on line 56

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\necho solve(\"hello\"\
    ); // olleh\necho solve(\"a\"); // a\necho solve(\"abc\"); // cba\necho solve(\"\
    ab\"); // b\necho solve(\"abcde\"); // edcba\necho solve(\"abce\"); // e\necho\
    \ solve(\"abcef\"); // ef\necho solve(\"abcefg\"); // efg\necho solve(\"abcefgh\"\
    ); // efgh\necho solve(\"abcefghi\"); // efghi\necho solve(\"abcefghij\"); //\
    \ efghij\necho solve(\"abcefghijk\"); // efghijk\necho solve(\"abcefghijkl\");\
    \ // efghijkl\necho solve(\"abcefghijklm\"); // efghijklm\necho solve(\"abcefghijklmn\"\
    ); // efghijklmno\necho solve(\"abcefghijklmno\"); // efghijklmnop\necho solve(\"\
    abcefghijklmnop\"); // efghijklmnop\necho solve(\"abcefghijklmnop\"); // efghijklmnop\n\
    echo solve(\"abcefghijklmnop\"); // efghijklmnop\necho solve(\"abcefghijklmnop\"\
    ); // efghijklmnop\necho solve(\"abcefghijklmnop\"); // efghijklmnop\necho solve(\"\
    abcefghijklmnop\"); // efghijklmnop\necho solve(\"abcefghijklmnop\"); // efghijklmnop\n\
    echo solve(\"abcefghijklmnop\"); // efghijklmnop\necho solve(\"abcefghijklmnop\"\
    ); // efghijklmnop\necho solve(\"abcefghijklmnop\"); // efghijklmnop\necho solve(\"\
    abcefghijklmnop\"); // efghijklmnop\necho solve(\"abcefghijklmnop\");\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpv4dhpb7l.php:11\nStack trace:\n#0 /tmp/tmpv4dhpb7l.php(15): solve('hello')\n\
    #1 {main}\n  thrown in /tmp/tmpv4dhpb7l.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n     \
    \   $result .= $s[$i];\n        if ($s[$i] >= 'a' && $s[$i] <= 'z') {\n      \
    \      $result .= strtoupper($s[$i]);\n        } else {\n            $result .=\
    \ strtolower($s[$i]);\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh_07qfi.php:26\n\
    Stack trace:\n#0 /tmp/tmprh_07qfi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprh_07qfi.php\
    \ on line 26\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strrev($s);\n    return $s;\n}\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uk8ki53.php:18\n\
    Stack trace:\n#0 /tmp/tmp3uk8ki53.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3uk8ki53.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'Hello\
    \ World';\n$result = solve($string);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws1p_nxi.php:22\n\
    Stack trace:\n#0 /tmp/tmpws1p_nxi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpws1p_nxi.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strtoupper($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpoyvmnbdr.php:11\nStack trace:\n#0 /tmp/tmpoyvmnbdr.php(17): solve('AsDf')\n\
    #1 /tmp/tmpoyvmnbdr.php(21): candidate('AsDf')\n#2 /tmp/tmpoyvmnbdr.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoyvmnbdr.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'hello';\n\
    $result = solve($string);\necho $result;\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hello\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06649tdn.php:22\n\
    Stack trace:\n#0 /tmp/tmp06649tdn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp06649tdn.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qo_kl3b.php:27\n\
    Stack trace:\n#0 /tmp/tmp2qo_kl3b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2qo_kl3b.php\
    \ on line 27\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\necho solve(\"hello\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76p8afsr.php:20\n\
    Stack trace:\n#0 /tmp/tmp76p8afsr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp76p8afsr.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"\
    a\", \"A\", $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppilr3nca.php:20\n\
    Stack trace:\n#0 /tmp/tmppilr3nca.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppilr3nca.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(isLetter($s[$i]))\
    \ {\n            $result .= toUpper($s[$i]) . $s[$i];\n        } else {\n    \
    \        $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpohau8kpw.php:11\nStack trace:\n#0 /tmp/tmpohau8kpw.php(21): solve('AsDf')\n\
    #1 /tmp/tmpohau8kpw.php(25): candidate('AsDf')\n#2 /tmp/tmpohau8kpw.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpohau8kpw.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$tests = array(\n\
    \    '',\n    'a',\n    'abc',\n    'abcde',\n    'abcdef',\n    'abcdefg',\n\
    \    'abcdefgh',\n    'abcdefghi',\n    'abcdefghij',\n    'abcdefghijk'\n);\n\
    \nforeach ($tests as $test) {\n    echo solve($test) . \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\na\nabc\nabcde\nabcdef\nabcdefg\nabcdefgh\nabcdefghi\nabcdefghij\nabcdefghijk\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic8cyq35.php:35\nStack\
    \ trace:\n#0 /tmp/tmpic8cyq35.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpic8cyq35.php\
    \ on line 35\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= ($s[$i]\
    \ >= 65 && $s[$i] <= 90) ? $s[$i] - 32 : $s[$i];\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsedbojjx.php:20\n\
    Stack trace:\n#0 /tmp/tmpsedbojjx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsedbojjx.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qo_kl3b.php:27\n\
    Stack trace:\n#0 /tmp/tmp2qo_kl3b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2qo_kl3b.php\
    \ on line 27\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace(' ', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp5s_4qujy.php
    on line 63

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(isLetter($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpage4uc1l.php:11\nStack trace:\n#0 /tmp/tmpage4uc1l.php(21): solve('AsDf')\n\
    #1 /tmp/tmpage4uc1l.php(25): candidate('AsDf')\n#2 /tmp/tmpage4uc1l.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpage4uc1l.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"\
    b\", \"B\", $s);\n    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"\
    d\", \"D\", $s);\n    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"\
    f\", \"F\", $s);\n    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"\
    h\", \"H\", $s);\n    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"\
    j\", \"J\", $s);\n    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"\
    l\", \"L\", $s);\n    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"\
    n\", \"N\", $s);\n    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"\
    p\", \"P\", $s);\n    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"\
    r\", \"R\", $s);\n    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"\
    t\", \"T\", $s);\n    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"\
    v\", \"V\", $s);\n    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"\
    x\", \"X\", $s);\n    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"\
    z\", \"Z\", $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsbcvdjd.php:44\n\
    Stack trace:\n#0 /tmp/tmphsbcvdjd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphsbcvdjd.php\
    \ on line 44\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"B\", \"b\", $s);\n\
    \    $s = str_replace(\"C\", \"c\", $s);\n    $s = str_replace(\"D\", \"d\", $s);\n\
    \    $s = str_replace(\"E\", \"e\", $s);\n    $s = str_replace(\"F\", \"f\", $s);\n\
    \    $s = str_replace(\"G\", \"g\", $s);\n    $s = str_replace(\"H\", \"h\", $s);\n\
    \    $s = str_replace(\"I\", \"i\", $s);\n    $s = str_replace(\"J\", \"j\", $s);\n\
    \    $s = str_replace(\"K\", \"k\", $s);\n    $s = str_replace(\"L\", \"l\", $s);\n\
    \    $s = str_replace(\"M\", \"m\", $s);\n    $s = str_replace(\"N\", \"n\", $s);\n\
    \    $s = str_replace(\"O\", \"o\", $s);\n    $s = str_replace(\"P\", \"p\", $s);\n\
    \    $s = str_replace(\"Q\", \"q\", $s);\n    $s = str_replace(\"R\", \"r\", $s);\n\
    \    $s = str_replace(\"S\", \"s\", $s);\n    $s = str_replace(\"T\", \"t\", $s);\n\
    \    $s = str_replace(\"U\", \"u\", $s);\n    $s = str_replace(\"V\", \"v\", $s);\n\
    \    $s = str_replace(\"W\", \"w\", $s);\n    $s = str_replace(\"X\", \"x\", $s);\n\
    \    $s = str_replace(\"Y\", \"y\", $s);\n    $s = str_replace(\"Z\", \"z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat610r4y.php:43\n\
    Stack trace:\n#0 /tmp/tmpat610r4y.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpat610r4y.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? \n            strrev($s[$i]) : strrev($s[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp01moxpjx.php:11\nStack trace:\n#0 /tmp/tmp01moxpjx.php(18): solve('AsDf')\n\
    #1 /tmp/tmp01moxpjx.php(22): candidate('AsDf')\n#2 /tmp/tmp01moxpjx.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp01moxpjx.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\n$tests = array(\n\
    \    \"hello\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\",\n    \"helloworld\"\
    ,\n    \"helloworld\",\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpza9lk_hb.php on line 111

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('.', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('.', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(',',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('.', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('.',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('.', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmpatbf6p89.php on line 77

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    $s = str_replace(\"0\", \"0\", $s);\n    $s = str_replace(\"1\", \"1\", $s);\n\
    \    $s = str_replace(\"2\", \"2\", $s);\n    $s = str_replace(\"3\", \"3\", $s);\n\
    \    $s = str_replace(\"4\", \"4\", $s);\n    $s = str_replace(\"5\", \"5\", $s);\n\
    \    $s = str_replace(\"6\", \"6\", $s);\n    $s = str_replace(\"7\", \"7\", $s);\n\
    \    $s = str_replace(\"8\", \"8\", $s);\n    $s = str_replace(\"9\", \"9\", $s);\n\
    \    $s = str_replace(\"+\", \"+\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n\
    \    $s = str_replace(\"?\", \"?\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n\
    \    $s = str_replace(\"*\", \"*\", $s);\n    $s = str_replace(\"(\", \"(\", $s);\n\
    \    $s = str_replace(\")\", \")\", $s);\n    $s = str_replace(\",\", \",\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting ")" in /tmp/tmp_p_nw2ci.php
    on line 59

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return strrev($s);\n}\n\n$result\
    \ = solve('Hello World');\necho $result;\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "elloorld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4le4ggb.php:21\n\
    Stack trace:\n#0 /tmp/tmpg4le4ggb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg4le4ggb.php\
    \ on line 21\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"B\", \"b\", $s);\n\
    \    $s = str_replace(\"C\", \"c\", $s);\n    $s = str_replace(\"D\", \"d\", $s);\n\
    \    $s = str_replace(\"E\", \"e\", $s);\n    $s = str_replace(\"F\", \"f\", $s);\n\
    \    $s = str_replace(\"G\", \"g\", $s);\n    $s = str_replace(\"H\", \"h\", $s);\n\
    \    $s = str_replace(\"I\", \"i\", $s);\n    $s = str_replace(\"J\", \"j\", $s);\n\
    \    $s = str_replace(\"K\", \"k\", $s);\n    $s = str_replace(\"L\", \"l\", $s);\n\
    \    $s = str_replace(\"M\", \"m\", $s);\n    $s = str_replace(\"N\", \"n\", $s);\n\
    \    $s = str_replace(\"O\", \"o\", $s);\n    $s = str_replace(\"P\", \"p\", $s);\n\
    \    $s = str_replace(\"Q\", \"q\", $s);\n    $s = str_replace(\"R\", \"r\", $s);\n\
    \    $s = str_replace(\"S\", \"s\", $s);\n    $s = str_replace(\"T\", \"t\", $s);\n\
    \    $s = str_replace(\"U\", \"u\", $s);\n    $s = str_replace(\"V\", \"v\", $s);\n\
    \    $s = str_replace(\"W\", \"w\", $s);\n    $s = str_replace(\"X\", \"x\", $s);\n\
    \    $s = str_replace(\"Y\", \"y\", $s);\n    $s = str_replace(\"Z\", \"z\", $s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmprscuhoq4.php
    on line 54

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\necho solve('Hello\
    \ World');\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotf047ki.php:19\n\
    Stack trace:\n#0 /tmp/tmpotf047ki.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpotf047ki.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n     \
    \   if ($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= chr($s[$i] - 64);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\n$string = \"Hello World\";\n$result = solve($string);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Hello World\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfsednnj.php:29\n\
    Stack trace:\n#0 /tmp/tmpgfsednnj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgfsednnj.php\
    \ on line 29\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = strtoupper($s);\n    return\
    \ $s;\n}\n\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string = 'hello';\n$string\
    \ = 'hello';\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66o8092s.php:100\n\
    Stack trace:\n#0 /tmp/tmp66o8092s.php(110): test()\n#1 {main}\n  thrown in /tmp/tmp66o8092s.php\
    \ on line 100\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('.',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',',\
    \ '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace('.', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmpgm13gdh5.php on line 78

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ 'a', $s);\n    return $s;\n}\n\n$tests = array(\n    '',\n    'a',\n    'abc',\n\
    \    'abBcCdEfGhIjKlL',\n    'abcABC',\n    'abcABCdef',\n    'abcABCdefGhIjKlL',\n\
    \    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n \
    \   'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n  \
    \  'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n   \
    \ 'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n\
    \    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n \
    \   'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n  \
    \  'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n   \
    \ 'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n\
    \    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n \
    \   'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n    'abcABCdefGhIjKlL',\n  \
    \  '\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "", expecting ")" in /tmp/tmpbutpcnlt.php
    on line 55

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(':', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp4yublka3.php
    on line 62

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\necho solve('hello');\
    \ // olleh\necho solve('Hello World'); // dlrow olleH\necho solve(''); // empty\
    \ string\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hellohelloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn98k8j4y.php:21\n\
    Stack trace:\n#0 /tmp/tmpn98k8j4y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn98k8j4y.php\
    \ on line 21\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if(ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= strtolower($s[$i]);\n        }\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ybxwwbz.php:25\n\
    Stack trace:\n#0 /tmp/tmp2ybxwwbz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2ybxwwbz.php\
    \ on line 25\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(isLetter($s[$i]))\
    \ {\n            $result .= toUpper($s[$i]) . $s[$i];\n        } else {\n    \
    \        $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpohau8kpw.php:11\nStack trace:\n#0 /tmp/tmpohau8kpw.php(21): solve('AsDf')\n\
    #1 /tmp/tmpohau8kpw.php(25): candidate('AsDf')\n#2 /tmp/tmpohau8kpw.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpohau8kpw.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"B\", \"b\", $s);\n\
    \    $s = str_replace(\"C\", \"c\", $s);\n    $s = str_replace(\"D\", \"d\", $s);\n\
    \    $s = str_replace(\"E\", \"e\", $s);\n    $s = str_replace(\"F\", \"f\", $s);\n\
    \    $s = str_replace(\"G\", \"g\", $s);\n    $s = str_replace(\"H\", \"h\", $s);\n\
    \    $s = str_replace(\"I\", \"i\", $s);\n    $s = str_replace(\"J\", \"j\", $s);\n\
    \    $s = str_replace(\"K\", \"k\", $s);\n    $s = str_replace(\"L\", \"l\", $s);\n\
    \    $s = str_replace(\"M\", \"m\", $s);\n    $s = str_replace(\"N\", \"n\", $s);\n\
    \    $s = str_replace(\"O\", \"o\", $s);\n    $s = str_replace(\"P\", \"p\", $s);\n\
    \    $s = str_replace(\"Q\", \"q\", $s);\n    $s = str_replace(\"R\", \"r\", $s);\n\
    \    $s = str_replace(\"S\", \"s\", $s);\n    $s = str_replace(\"T\", \"t\", $s);\n\
    \    $s = str_replace(\"U\", \"u\", $s);\n    $s = str_replace(\"V\", \"v\", $s);\n\
    \    $s = str_replace(\"W\", \"w\", $s);\n    $s = str_replace(\"X\", \"x\", $s);\n\
    \    $s = str_replace(\"Y\", \"y\", $s);\n    $s = str_replace(\"Z\", \"z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat610r4y.php:43\n\
    Stack trace:\n#0 /tmp/tmpat610r4y.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpat610r4y.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ 'a', $s);\n    return $s;\n}\necho solve('hello');\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "aaaaa\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6qevgft.php:20\n\
    Stack trace:\n#0 /tmp/tmph6qevgft.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph6qevgft.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= ($s[$i]\
    \ >= 65 && $s[$i] <= 90) ? $s[$i] - 32 : $s[$i];\n    }\n    return $result;\n\
    }\necho solve(\"hello\"); // \"olleh\"\necho solve(\"HELLO\"); // \"olleh\"\n\
    echo solve(\"helloWorld\"); // \"oWrlleh\"\necho solve(\"HELLOWORLD\"); // \"\
    oWrlleh\"\necho solve(\"helloWorldHELLO\"); // \"oWrlleh\"\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloHELLOhelloWorldHELLOWORLDhelloWorldHELLO\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5v1p1xtt.php:25\nStack trace:\n#0 /tmp/tmp5v1p1xtt.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5v1p1xtt.php on line 25\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\necho solve('hello');\
    \ // olleh\necho solve('Hello World'); // dlrow olleH\necho solve('Hello World!');\
    \ // dlrow olleH !dlrow\necho solve(''); // empty string\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hellohelloworldhelloworld\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp5vcc0hns.php:22\nStack trace:\n#0 /tmp/tmp5vcc0hns.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5vcc0hns.php on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        }\n        else if($s[$i] >= 97 && $s[$i] <= 122) {\n            $result\
    \ .= strtolower($s[$i]);\n        }\n        else {\n            $result .= $s[$i];\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gib8kk4.php:29\n\
    Stack trace:\n#0 /tmp/tmp9gib8kk4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9gib8kk4.php\
    \ on line 29\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++) {\n      \
    \  $result .= $s[$i];\n        if($s[$i] >= 65 && $s[$i] <= 90) {\n          \
    \  $result .= strtoupper($s[$i]);\n        } elseif($s[$i] >= 97 && $s[$i] <=\
    \ 122) {\n            $result .= strtolower($s[$i]);\n        } else {\n     \
    \       $result .= $s[$i];\n        }\n    }\n    return $result;\n}\necho solve(\"\
    Hello\");\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HHeelllloo\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawlsseom.php:29\n\
    Stack trace:\n#0 /tmp/tmpawlsseom.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpawlsseom.php\
    \ on line 29\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('.', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.',\
    \ '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n\
    \    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '',\
    \ $s);\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmp5tioo36w.php on line 78

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++) {\n      \
    \  $result .= ($s[$i] >= 65 && $s[$i] <= 90) ? $s[$i] - 32 : $s[$i];\n    }\n\
    \    return $result;\n}\necho solve(\"Hello\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Hello\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbf47acyq.php:22\n\
    Stack trace:\n#0 /tmp/tmpbf47acyq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbf47acyq.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= ($s[$i]\
    \ >= 65 && $s[$i] <= 90) ? \n            chr($s[$i] - 32) : \n            chr($s[$i]\
    \ + 32);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string +\
    \ int in /tmp/tmpqewkrw_0.php:13\nStack trace:\n#0 /tmp/tmpqewkrw_0.php(18): solve('AsDf')\n\
    #1 /tmp/tmpqewkrw_0.php(22): candidate('AsDf')\n#2 /tmp/tmpqewkrw_0.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqewkrw_0.php on line 13\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++) {\n      \
    \  $result .= isLetter($s[$i]) ? toUpper($s[$i]) : $s[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp4w2n9tn4.php:12\nStack trace:\n#0 /tmp/tmp4w2n9tn4.php(18): solve('AsDf')\n\
    #1 /tmp/tmp4w2n9tn4.php(22): candidate('AsDf')\n#2 /tmp/tmp4w2n9tn4.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4w2n9tn4.php on line 12\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(isLetter($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpjgmnbxcl.php:11\nStack trace:\n#0 /tmp/tmpjgmnbxcl.php(20): solve('AsDf')\n\
    #1 /tmp/tmpjgmnbxcl.php(24): candidate('AsDf')\n#2 /tmp/tmpjgmnbxcl.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjgmnbxcl.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? \n            strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp4nukgnds.php:11\nStack trace:\n#0 /tmp/tmp4nukgnds.php(17): solve('AsDf')\n\
    #1 /tmp/tmp4nukgnds.php(21): candidate('AsDf')\n#2 /tmp/tmp4nukgnds.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4nukgnds.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++) {\n      \
    \  $result .= $s[$i];\n        if($s[$i] >= 'a' && $s[$i] <= 'z') {\n        \
    \    $result .= strtoupper($s[$i]);\n        } elseif($s[$i] >= 'A' && $s[$i]\
    \ <= 'Z') {\n            $result .= strtolower($s[$i]);\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ solve(\"hello\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hHeElLlLoO\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyo2x7xu.php:29\n\
    Stack trace:\n#0 /tmp/tmpkyo2x7xu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkyo2x7xu.php\
    \ on line 29\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strrev($s);\n    return $s;\n}\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uk8ki53.php:18\n\
    Stack trace:\n#0 /tmp/tmp3uk8ki53.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3uk8ki53.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? \n            strrev($s[$i]) : \n            $s[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp9n9ckab_.php:11\nStack trace:\n#0 /tmp/tmp9n9ckab_.php(19): solve('AsDf')\n\
    #1 /tmp/tmp9n9ckab_.php(23): candidate('AsDf')\n#2 /tmp/tmp9n9ckab_.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9n9ckab_.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\necho solve(\"Hello\");\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HHeelllloo\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9v5tetj.php:28\n\
    Stack trace:\n#0 /tmp/tmpi9v5tetj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi9v5tetj.php\
    \ on line 28\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        }\n        if($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .=\
    \ strtolower($s[$i]);\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7bfsw90.php:26\n\
    Stack trace:\n#0 /tmp/tmps7bfsw90.php(36): test()\n#1 {main}\n  thrown in /tmp/tmps7bfsw90.php\
    \ on line 26\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnrbjhha.php:19\n\
    Stack trace:\n#0 /tmp/tmpfnrbjhha.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfnrbjhha.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strtr($s, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F',\
    \ 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N',\
    \ 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsi90kcw.php:18\n\
    Stack trace:\n#0 /tmp/tmpxsi90kcw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxsi90kcw.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if(ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= strtolower($s[$i]);\n        }\n   \
    \ }\n    return $result;\n}\n\n$result = solve(\"hello\");\necho \"The string\
    \ $result should return 'olleh'\";\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The string hHeElLlLoO should return 'olleh'\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_g31edv6.php:28\nStack trace:\n#0 /tmp/tmp_g31edv6.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_g31edv6.php on line 28\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\n\n$string = 'hello';\n$result = solve($string);\n\
    echo $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70bjaopl.php:23\n\
    Stack trace:\n#0 /tmp/tmp70bjaopl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp70bjaopl.php\
    \ on line 23\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'Hello\
    \ World';\n$result = solve($string);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws1p_nxi.php:22\n\
    Stack trace:\n#0 /tmp/tmpws1p_nxi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpws1p_nxi.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qo_kl3b.php:27\n\
    Stack trace:\n#0 /tmp/tmp2qo_kl3b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2qo_kl3b.php\
    \ on line 27\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if(ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\n$result = solve(\"Hello World\");\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HHeElLlLoO  WWoOrRlLdD\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1dslanyd.php:28\nStack trace:\n#0 /tmp/tmp1dslanyd.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1dslanyd.php on line 28\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n     \
    \   $result .= $s[$i];\n        if ($s[$i] >= 'a' && $s[$i] <= 'z') {\n      \
    \      $result .= strtoupper($s[$i]);\n        } else {\n            $result .=\
    \ strtolower($s[$i]);\n        }\n    }\n    return $result;\n}\n\n$string = \"\
    hello\";\n$result = solve($string);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hHeElLlLoO\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapfw1b0q.php:30\n\
    Stack trace:\n#0 /tmp/tmpapfw1b0q.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpapfw1b0q.php\
    \ on line 30\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';', '',\
    \ $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '', $s);\n\
    \    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace(' ', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n\
    \    $s = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace(' ', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace('.', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\n    $s = str\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp5s_4qujy.php
    on line 63

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= ($s[$i]\
    \ >= 65 && $s[$i] <= 90) ? $s[$i] - 32 : $s[$i];\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsedbojjx.php:20\n\
    Stack trace:\n#0 /tmp/tmpsedbojjx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsedbojjx.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'hello';\n\
    $result = solve($string);\necho $result;\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "hello\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06649tdn.php:22\n\
    Stack trace:\n#0 /tmp/tmp06649tdn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp06649tdn.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qo_kl3b.php:27\n\
    Stack trace:\n#0 /tmp/tmp2qo_kl3b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2qo_kl3b.php\
    \ on line 27\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(' ', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('.',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace('.', '', $s);\n    $s\
    \ = str_replace(',', '', $s);\n    $s = str_replace(':', '', $s);\n    $s = str_replace(';',\
    \ '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?', '',\
    \ $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('.', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n    $s\
    \ = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s = str_replace('?',\
    \ '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('.', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '', $s);\n\
    \    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n    $s\
    \ = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n    $s = str_replace('.',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':', '',\
    \ $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '', $s);\n\
    \    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n    $s\
    \ = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace(':',\
    \ '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!', '',\
    \ $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '', $s);\n\
    \    $s = str_replace('.', '', $s);\n    $s = str_replace(';', '', $s);\n    $s\
    \ = str_replace(':', '', $s);\n    $s = str_replace(';', '', $s);\n    $s = str_replace('!',\
    \ '', $s);\n    $s = str_replace('?', '', $s);\n    $s = str_replace(',', '',\
    \ $s);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 8 in /tmp/tmpmkjyeuyi.php on line 77

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ '', $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnrbjhha.php:19\n\
    Stack trace:\n#0 /tmp/tmpfnrbjhha.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfnrbjhha.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strtr($s, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F',\
    \ 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N',\
    \ 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n    return strrev($s);\n}\n\n$result\
    \ = solve('Hello World');\necho $result;\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HELLO WORLD\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7dw741eg.php:21\n\
    Stack trace:\n#0 /tmp/tmp7dw741eg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7dw741eg.php\
    \ on line 21\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"\
    b\", \"B\", $s);\n    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"\
    d\", \"D\", $s);\n    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"\
    f\", \"F\", $s);\n    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"\
    h\", \"H\", $s);\n    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"\
    j\", \"J\", $s);\n    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"\
    l\", \"L\", $s);\n    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"\
    n\", \"N\", $s);\n    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"\
    p\", \"P\", $s);\n    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"\
    r\", \"R\", $s);\n    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"\
    t\", \"T\", $s);\n    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"\
    v\", \"V\", $s);\n    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"\
    x\", \"X\", $s);\n    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"\
    z\", \"Z\", $s);\n    $s = str_replace(\"0\", \"0\", $s);\n    $s = str_replace(\"\
    1\", \"1\", $s);\n    $s = str_replace(\"2\", \"2\", $s);\n    $s = str_replace(\"\
    3\", \"3\", $s);\n    $s = str_replace(\"4\", \"4\", $s);\n    $s = str_replace(\"\
    5\", \"5\", $s);\n    $s = str_replace(\"6\", \"6\", $s);\n    $s = str_replace(\"\
    7\", \"7\", $s);\n    $s = str_replace(\"8\", \"8\", $s);\n    $s = str_replace(\"\
    9\", \"9\", $s);\n    $s = str_replace(\"!\", \"!\", $s);\n    $s = str_replace(\"\
    @\", \"@\", $s);\n    $s = str_replace(\"#\", \"#\", $s);\n    $s = str_replace(\"\
    $\", \"$\", $s);\n    $s = str_replace(\"%\", \"%\", $s);\n    $s = str_replace(\"\
    ^\", \"^\", $s);\n    $s = str_replace(\"&\", \"&\", $s);\n    $s = \nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpl2av4u0w.php on line 55

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strtr($s, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F',\
    \ 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N',\
    \ 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n    return strrev($s);\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5ryhj1z.php:18\n\
    Stack trace:\n#0 /tmp/tmpc5ryhj1z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc5ryhj1z.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= ($s[$i]\
    \ >= 65 && $s[$i] <= 90) ? $s[$i] - 32 : $s[$i];\n    }\n    return $result;\n\
    }\necho solve(\"Hello\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Hello\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_l7vx5d.php:21\n\
    Stack trace:\n#0 /tmp/tmp4_l7vx5d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4_l7vx5d.php\
    \ on line 21\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = str_replace(\"A\", \"a\", $s);\n    $s = str_replace(\"a\", \"A\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pf8yowr.php:19\n\
    Stack trace:\n#0 /tmp/tmp1pf8yowr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1pf8yowr.php\
    \ on line 19\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    $s = str_replace(\"0\", \"0\", $s);\n    $s = str_replace(\"1\", \"1\", $s);\n\
    \    $s = str_replace(\"2\", \"2\", $s);\n    $s = str_replace(\"3\", \"3\", $s);\n\
    \    $s = str_replace(\"4\", \"4\", $s);\n    $s = str_replace(\"5\", \"5\", $s);\n\
    \    $s = str_replace(\"6\", \"6\", $s);\n    $s = str_replace(\"7\", \"7\", $s);\n\
    \    $s = str_replace(\"8\", \"8\", $s);\n    $s = str_replace(\"9\", \"9\", $s);\n\
    \    $s = str_replace(\"+\", \"+\", $s);\n    $s = str_replace(\"=\", \"=\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gsot8md.php:55\n\
    Stack trace:\n#0 /tmp/tmp4gsot8md.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp4gsot8md.php\
    \ on line 55\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strrev($s);\n    return $s;\n}\n\n$string = \"hello\";\n$string = \"\
    hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string\
    \ = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string =\
    \ \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\"\
    ;\n$string = \"hello\";\n$string = \"hello\";\n$string = \"hello\";\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkwr9skz.php:102\n\
    Stack trace:\n#0 /tmp/tmpzkwr9skz.php(112): test()\n#1 {main}\n  thrown in /tmp/tmpzkwr9skz.php\
    \ on line 102\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if($s[$i] >= 65 && $s[$i] <= 90) {\n            $result .= strtoupper($s[$i]);\n\
    \        } elseif($s[$i] >= 97 && $s[$i] <= 122) {\n            $result .= strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qo_kl3b.php:27\n\
    Stack trace:\n#0 /tmp/tmp2qo_kl3b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2qo_kl3b.php\
    \ on line 27\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"b\", \"B\", $s);\n\
    \    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"d\", \"D\", $s);\n\
    \    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"f\", \"F\", $s);\n\
    \    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"h\", \"H\", $s);\n\
    \    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"j\", \"J\", $s);\n\
    \    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"l\", \"L\", $s);\n\
    \    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"n\", \"N\", $s);\n\
    \    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"p\", \"P\", $s);\n\
    \    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"r\", \"R\", $s);\n\
    \    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"t\", \"T\", $s);\n\
    \    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"v\", \"V\", $s);\n\
    \    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"x\", \"X\", $s);\n\
    \    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"z\", \"Z\", $s);\n\
    \    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaigjm1kv.php:43\n\
    Stack trace:\n#0 /tmp/tmpaigjm1kv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpaigjm1kv.php\
    \ on line 43\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= isLetter($s[$i])\
    \ ? strrev($s[$i]) : $s[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmp2ra3032z.php:11\nStack trace:\n#0 /tmp/tmp2ra3032z.php(17): solve('AsDf')\n\
    #1 /tmp/tmp2ra3032z.php(21): candidate('AsDf')\n#2 /tmp/tmp2ra3032z.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ra3032z.php on line 11\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    $s = preg_replace('/[a-z]/',\
    \ 'a', $s);\n    return $s;\n}\necho solve(\"Hello World!\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "aaaaaaaaaa\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsvxmf0h.php:20\n\
    Stack trace:\n#0 /tmp/tmplsvxmf0h.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplsvxmf0h.php\
    \ on line 20\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$string = 'Hello\
    \ World';\n$result = solve($string);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpws1p_nxi.php:22\n\
    Stack trace:\n#0 /tmp/tmpws1p_nxi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpws1p_nxi.php\
    \ on line 22\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    $len = strlen($s);\n    for($i = 0; $i < $len; $i++) {\n      \
    \  if($s[$i] == \"a\") {\n            $result .= \"A\";\n        }\n        if($s[$i]\
    \ == \"b\") {\n            $result .= \"B\";\n        }\n        if($s[$i] ==\
    \ \"c\") {\n            $result .= \"C\";\n        }\n        if($s[$i] == \"\
    d\") {\n            $result .= \"D\";\n        }\n        if($s[$i] == \"e\")\
    \ {\n            $result .= \"E\";\n        }\n        if($s[$i] == \"f\") {\n\
    \            $result .= \"F\";\n        }\n        if($s[$i] == \"g\") {\n   \
    \         $result .= \"G\";\n        }\n        if($s[$i] == \"h\") {\n      \
    \      $result .= \"H\";\n        }\n        if($s[$i] == \"i\") {\n         \
    \   $result .= \"I\";\n        }\n        if($s[$i] == \"j\") {\n            $result\
    \ .= \"J\";\n        }\n        if($s[$i] == \"k\") {\n            $result .=\
    \ \"K\";\n        }\n        if($s[$i] == \"l\") {\n            $result .= \"\
    L\";\n        }\n        if($s[$i] == \"m\") {\n            $result .= \"M\";\n\
    \        }\n        if($s[$i] == \"n\") {\n            $result .= \"N\";\n   \
    \     }\n        if($s[$i] == \"o\") {\n            $result .= \"O\";\n      \
    \  }\n        if($s[$i] == \"p\") {\n            $result .= \"P\";\n        }\n\
    \        if($s[$i] == \"q\") {\n            $result .= \"Q\";\n        }\n   \
    \     if($s[$i] == \"r\") {\n            $result .= \"R\";\n        }\n      \
    \  if($s[$i] == \"s\") {\n            $result .= \"S\";\n        }\n        if($s[$i]\
    \ == \"t\") {\n            $result .= \"T\";\n        }\n        if($s[$i] ==\
    \ \"u\") {\n            $result .= \"U\";\n        }\n        if($s[$i] == \"\
    v\") {\n            $result .= \"V\";\n        }\n        if($s[$i] == \"w\")\
    \ {\n            $result .= \"W\";\n        }\n        if($s[$i] == \"x\") {\n\
    \            $result .= \"X\";\n        }\n        if($s[$i] == \"y\") {\n   \
    \         $result .= \"Y\";\n        }\n        if($s[$i] == \"z\") {\n      \
    \      $result .= \"Z\";\n        }\n        if($s[$i] == \"A\") {\n         \
    \   $result .= \"a\";\n        }\n        if($\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp45s0c16q.php on line 94

    '
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\n\n$result = solve('Hello\
    \ World');\necho $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "helloworld\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjddrv3a.php:21\n\
    Stack trace:\n#0 /tmp/tmphjddrv3a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphjddrv3a.php\
    \ on line 21\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if(ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= strtolower($s[$i]);\n        }\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ybxwwbz.php:25\n\
    Stack trace:\n#0 /tmp/tmp2ybxwwbz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2ybxwwbz.php\
    \ on line 25\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        $result .= $s[$i];\n\
    \        if(ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i]);\n\
    \        } else {\n            $result .= strtolower($s[$i]);\n        }\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ybxwwbz.php:25\n\
    Stack trace:\n#0 /tmp/tmp2ybxwwbz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2ybxwwbz.php\
    \ on line 25\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strrev($s);\n\
    \    $s = strtr($s, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F',\
    \ 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N',\
    \ 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsi90kcw.php:18\n\
    Stack trace:\n#0 /tmp/tmpxsi90kcw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxsi90kcw.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wuaelqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp4wuaelqn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wuaelqn.php\
    \ on line 24\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = preg_replace('/[^a-z]/',\
    \ '', $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppwwd1s21.php:17\n\
    Stack trace:\n#0 /tmp/tmppwwd1s21.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppwwd1s21.php\
    \ on line 17\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = strrev($s);\n    $s = str_replace(\"a\", \"A\", $s);\n    $s = str_replace(\"\
    b\", \"B\", $s);\n    $s = str_replace(\"c\", \"C\", $s);\n    $s = str_replace(\"\
    d\", \"D\", $s);\n    $s = str_replace(\"e\", \"E\", $s);\n    $s = str_replace(\"\
    f\", \"F\", $s);\n    $s = str_replace(\"g\", \"G\", $s);\n    $s = str_replace(\"\
    h\", \"H\", $s);\n    $s = str_replace(\"i\", \"I\", $s);\n    $s = str_replace(\"\
    j\", \"J\", $s);\n    $s = str_replace(\"k\", \"K\", $s);\n    $s = str_replace(\"\
    l\", \"L\", $s);\n    $s = str_replace(\"m\", \"M\", $s);\n    $s = str_replace(\"\
    n\", \"N\", $s);\n    $s = str_replace(\"o\", \"O\", $s);\n    $s = str_replace(\"\
    p\", \"P\", $s);\n    $s = str_replace(\"q\", \"Q\", $s);\n    $s = str_replace(\"\
    r\", \"R\", $s);\n    $s = str_replace(\"s\", \"S\", $s);\n    $s = str_replace(\"\
    t\", \"T\", $s);\n    $s = str_replace(\"u\", \"U\", $s);\n    $s = str_replace(\"\
    v\", \"V\", $s);\n    $s = str_replace(\"w\", \"W\", $s);\n    $s = str_replace(\"\
    x\", \"X\", $s);\n    $s = str_replace(\"y\", \"Y\", $s);\n    $s = str_replace(\"\
    z\", \"Z\", $s);\n    return $s;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsbcvdjd.php:44\n\
    Stack trace:\n#0 /tmp/tmphsbcvdjd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphsbcvdjd.php\
    \ on line 44\n"
  timestamp: 1659978329
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\nfunction solve($s) {\n    $s = strtolower($s);\n\
    \    $s = preg_replace('/[^a-z]/', '', $s);\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91j42o6u.php:18\n\
    Stack trace:\n#0 /tmp/tmp91j42o6u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp91j42o6u.php\
    \ on line 18\n"
  timestamp: 1659978329

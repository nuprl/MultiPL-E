name: HumanEval_30_get_positive
language: php
prompt: "<?php\n// Return only positive numbers in the list.\nfunction get_positive($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
  \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    return array_filter($l, function($v) { return $v > 0; });\n}\n",
  "  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n", "  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "    $positive = array();\n    foreach\
    \ ($l as $item) {\n        if ($item > 0) {\n            $positive[] = $item;\n\
    \        }\n    }\n    return $positive;\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}", "    $positive = array();\n    foreach ($l as $item)\
    \ {\n        if ($item > 0) {\n            $positive[] = $item;\n        }\n \
    \   }\n    return $positive;\n}\n", "  return array_filter($l, function($v) {\
    \ return $v > 0; });\n}", "  $positive = array();\n  foreach ($l as $value) {\n\
    \    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", " \
    \   return array_filter($l, function($v) { return $v > 0; });\n}\n", "  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n", "    return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  $positive = array();\n  foreach\
    \ ($l as $item) {\n    if ($item > 0) {\n      $positive[] = $item;\n    }\n \
    \ }\n  return $positive;\n}\n", "    return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "  return array_filter($l, function($v) { return $v > 0;\
    \ });\n}\n", "  return array_filter($l, function($v) { return $v > 0; });\n}\n",
  "    $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) $positive[]\
    \ = $value;\n    }\n    return $positive;\n}\n", "    $positive = array();\n \
    \   foreach ($l as $item) {\n        if ($item > 0) {\n            $positive[]\
    \ = $item;\n        }\n    }\n    return $positive;\n}\n", "    $positive = [];\n\
    \    foreach ($l as $value) {\n        if ($value > 0) $positive[] = $value;\n\
    \    }\n    return $positive;\n}\n", "    $positive = array();\n    foreach ($l\
    \ as $value) {\n        if ($value > 0)\n            $positive[] = $value;\n \
    \   }\n    return $positive;\n}\n", "  return array_filter($l, function($v) {\
    \ return $v > 0; });\n}\n", "  return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "    return array_filter($l, function($n) {\n        return\
    \ $n > 0;\n    });\n}\n", "    return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "  $positive = [];\n  foreach ($l as $value) {\n    if ($value\
    \ > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", "    return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  $positive = [];\n  foreach ($l as\
    \ $value) {\n    if ($value > 0) {\n      $positive[] = $value;\n    }\n  }\n\
    \  return $positive;\n}\n", "  return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "  $positive = array();\n  foreach ($l as $value) {\n    if\
    \ ($value > 0) {\n      $positive[] = $value;\n    }\n  }\n  return $positive;\n\
    }\n", "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "    return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "    return array_filter($l, function($n)\
    \ {\n        return $n > 0;\n    });\n}\n", "    return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "  return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "    return array_filter($l, function($n) {\n        return\
    \ $n > 0;\n    });\n}\n", "  $positives = array();\n  foreach ($l as $value) {\n\
    \    if ($value > 0) $positives[] = $value;\n  }\n  return $positives;\n}\n",
  "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[]\
    \ = $item;\n    }\n  }\n  return $positive;\n}", "    $positive = [];\n    foreach\
    \ ($l as $value) {\n        if ($value > 0) {\n            $positive[] = $value;\n\
    \        }\n    }\n    return $positive;\n}\n", "  $positive = array();\n  foreach\
    \ ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n\
    }\n", "  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n",
  "    return array_filter($l, function($n) {\n        return $n > 0;\n    });\n}\n",
  "    $positive = [];\n    foreach ($l as $value) {\n        if ($value > 0) {\n\
    \            $positive[] = $value;\n        }\n    }\n    return $positive;\n}",
  "    $positive = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $positive[] = $item;\n        }\n    }\n    return $positive;\n}\n",
  "    return array_filter($l, function($item) {\n        return $item > 0;\n    });\n\
    }\n", "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n\
    \  }\n  return $positive;\n}\n", "  return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $value) {\n\
    \        if ($value > 0) {\n            $positive[] = $value;\n        }\n   \
    \ }\n    return $positive;\n}\n", "  return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $item) {\n\
    \        if ($item > 0) {\n            $positive[] = $item;\n        }\n    }\n\
    \    return $positive;\n}\n", "  $positive = array();\n  foreach ($l as $item)\
    \ {\n    if ($item > 0) {\n      $positive[] = $item;\n    }\n  }\n  return $positive;\n\
    }\n", "    $positive = [];\n    foreach ($l as $value) {\n        if ($value >\
    \ 0)\n            $positive[] = $value;\n    }\n    return $positive;\n}\n", " \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n", "    $positive\
    \ = array();\n    foreach ($l as $value) {\n        if ($value > 0)\n        \
    \    $positive[] = $value;\n    }\n    return $positive;\n}\n", "  $positive =\
    \ array();\n  foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n\
    \  }\n  return $positive;\n}\n", "    return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "  $positive = array();\n  foreach ($l as $value) {\n   \
    \ if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", "   \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "    $positive = array();\n    foreach\
    \ ($l as $value) {\n        if ($value > 0) {\n            $positive[] = $value;\n\
    \        }\n    }\n    return $positive;\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "  return array_filter($l, function($n) {\n    return\
    \ $n > 0;\n  });\n}\n", "  $positive = array();\n  foreach ($l as $value) {\n\
    \    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", " \
    \   $positive = array();\n    foreach ($l as $item) {\n        if ($item > 0)\
    \ {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n", "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "  \
    \  return array_filter($l, function($v) { return $v > 0; });\n}\n", "    return\
    \ array_filter($l, function($n) {\n        return $n > 0;\n    });\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $value) {\n    if ($value > 0)\n      $positive[]\
    \ = $value;\n  }\n  return $positive;\n}\n", "    $positive = array();\n    foreach\
    \ ($l as $value) {\n        if ($value > 0) {\n            $positive[] = $value;\n\
    \        }\n    }\n    return $positive;\n}", "  $positive = array();\n  foreach\
    \ ($l as $value) {\n    if ($value > 0) {\n      $positive[] = $value;\n    }\n\
    \  }\n  return $positive;\n}", "  $positive = array();\n  foreach ($l as $value)\
    \ {\n    if ($value > 0) {\n      $positive[] = $value;\n    }\n  }\n  return\
    \ $positive;\n}\n", "  return array_filter($l, function($n) {\n    return $n >\
    \ 0;\n  });\n}\n", "    return array_filter($l, function($n) {\n        return\
    \ $n > 0;\n    });\n}\n", "  return array_filter($l, function($n) {\n    return\
    \ $n > 0;\n  });\n}\n", "  return array_filter($l, function($v) { return $v >\
    \ 0; });\n}\n", "  return array_filter($l, function($v) { return $v > 0; });\n\
    }\n", "    return array_filter($l, function($n) {\n        return $n > 0;\n  \
    \  });\n}\n", "    return array_filter($l, function($v) { return $v > 0; });\n\
    }\n", "  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0)\n\
    \      $positive[] = $value;\n  }\n  return $positive;\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $value)\
    \ {\n        if ($value > 0) $positive[] = $value;\n    }\n    return $positive;\n\
    }\n", "    return array_filter($l, function($v) { return $v > 0; });\n}", "  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "    return array_filter($l,\
    \ function($n) {\n        return $n > 0;\n    });\n}\n", "    $positives = array();\n\
    \    foreach ($l as $value) {\n        if ($value > 0)\n            $positives[]\
    \ = $value;\n    }\n    return $positives;\n}\n", "    $positive = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $positive[]\
    \ = $item;\n        }\n    }\n    return $positive;\n}\n", "    $positive = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $positive[]\
    \ = $item;\n        }\n    }\n    return $positive;\n}\n", "    return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $value)\
    \ {\n        if ($value > 0) {\n            $positive[] = $value;\n        }\n\
    \    }\n    return $positive;\n}\n", "    return array_filter($l, function($n)\
    \ {\n        return $n > 0;\n    });\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "    $positive = [];\n    foreach ($l as $value)\
    \ {\n        if ($value > 0) $positive[] = $value;\n    }\n    return $positive;\n\
    }\n", "  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0)\
    \ $positive[] = $value;\n  }\n  return $positive;\n}\n", "  return array_filter($l,\
    \ function($n) {\n    return $n > 0;\n  });\n}", "  $positive = array();\n  foreach\
    \ ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n\
    }\n", "    return array_filter($l, function($n) {\n        return $n > 0;\n  \
    \  });\n}\n", "  return array_filter($l, function($v) { return $v > 0; });\n}",
  "    return array_filter($l, function($v) { return $v > 0; });\n}", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "    return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "  return array_filter($l, function($v) { return\
    \ $v > 0; });\n}", "    $positive = array();\n    foreach ($l as $value) {\n \
    \       if ($value > 0) {\n            $positive[] = $value;\n        }\n    }\n\
    \    return $positive;\n}\n", "    return array_filter($l, function($n) {\n  \
    \      return $n > 0;\n    });\n}\n", "    return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "  $positive = array();\n  foreach ($l as $item)\
    \ {\n    if ($item > 0) {\n      $positive[] = $item;\n    }\n  }\n  return $positive;\n\
    }\n", "    return array_filter($l, function($n) {\n        return $n > 0;\n  \
    \  });\n}\n", "    return array_filter($l, function($v) { return $v > 0; });\n\
    }\n", "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n\
    \  }\n  return $positive;\n}\n", "    $positive = array();\n    foreach ($l as\
    \ $value) {\n        if ($value > 0)\n            $positive[] = $value;\n    }\n\
    \    return $positive;\n}\n", "  return array_filter($l, function($item) {\n \
    \   return $item > 0;\n  });\n}\n", "  return array_filter($l, function($n) {\n\
    \    return $n > 0;\n  });\n}\n", "    $positive = array();\n    foreach ($l as\
    \ $value) {\n        if ($value > 0)\n            $positive[] = $value;\n    }\n\
    \    return $positive;\n}\n", "    $positive = array();\n    foreach ($l as $value)\
    \ {\n        if ($value > 0)\n            $positive[] = $value;\n    }\n    return\
    \ $positive;\n}\n", "    return array_filter($l, function($v) { return $v > 0;\
    \ });\n}", "  $positive = array();\n  foreach ($l as $item) {\n    if ($item >\
    \ 0) {\n      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n", " \
    \ $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n    \
    \  $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n", "    return array_filter($l,\
    \ function($n) {\n        return $n > 0;\n    });\n}", "  $positive = array();\n\
    \  foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n  }\n\
    \  return $positive;\n}\n", "  return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "  $positive = array();\n  foreach ($l as $value) {\n    if\
    \ ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n\
    \  }\n  return $positive;\n}\n", "    return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "  $positives = array();\n  foreach ($l as $value) {\n  \
    \  if ($value > 0)\n      $positives[] = $value;\n  }\n  return $positives;\n\
    }\n", "    return array_filter($l, function($v) { return $v > 0; });\n}\n", " \
    \   return array_filter($l, function($v) { return $v > 0; });\n}\n", "    return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "    $positive = array();\n\
    \    foreach ($l as $value) {\n        if ($value > 0)\n            $positive[]\
    \ = $value;\n    }\n    return $positive;\n}\n", "    $positive = array();\n \
    \   foreach ($l as $item) {\n        if ($item > 0) {\n            $positive[]\
    \ = $item;\n        }\n    }\n    return $positive;\n}\n", "  $positive = array();\n\
    \  foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n  }\n\
    \  return $positive;\n}\n", "  return array_filter($l, function($n) {\n    return\
    \ $n > 0;\n  });\n}\n", "    return array_filter($l, function($v) { return $v\
    \ > 0; });\n}", "    return array_filter($l, function($v) { return $v > 0; });\n\
    }\n", "  $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0)\
    \ $positive[] = $value;\n  }\n  return $positive;\n}\n", "  $positive = array();\n\
    \  foreach ($l as $item) {\n    if ($item > 0) {\n      $positive[] = $item;\n\
    \    }\n  }\n  return $positive;\n}\n", "  $positive = array();\n  foreach ($l\
    \ as $item) {\n    if ($item > 0) {\n      $positive[] = $item;\n    }\n  }\n\
    \  return $positive;\n}\n", "  return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "  $positive = array();\n  foreach ($l as $item) {\n    if ($item\
    \ > 0) {\n      $positive[] = $item;\n    }\n  }\n  return $positive;\n}\n", " \
    \   $positive = [];\n    foreach ($l as $item) {\n        if ($item > 0) {\n \
    \           $positive[] = $item;\n        }\n    }\n    return $positive;\n}\n",
  "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "    return\
    \ array_filter($l, function($item) {\n        return $item > 0;\n    });\n}\n",
  "    return array_filter($l, function($v) { return $v > 0; });\n}\n", "  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n", "    return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "    return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "    $positive = array();\n    foreach\
    \ ($l as $value) {\n        if ($value > 0)\n            $positive[] = $value;\n\
    \    }\n    return $positive;\n}\n", "  $positive = array();\n  foreach ($l as\
    \ $item) {\n    if ($item > 0) {\n      $positive[] = $item;\n    }\n  }\n  return\
    \ $positive;\n}\n", "    $positive = array();\n    foreach ($l as $item) {\n \
    \       if ($item > 0) {\n            $positive[] = $item;\n        }\n    }\n\
    \    return $positive;\n}\n", "  return array_filter($l, function($n) {\n    return\
    \ $n > 0;\n  });\n}\n", "  return array_filter($l, function($n) {\n    return\
    \ $n > 0;\n  });\n}\n", "  return array_filter($l, function($n) {\n    return\
    \ $n > 0;\n  });\n}\n", "    return array_filter($l, function($n) {\n        return\
    \ $n > 0;\n    });\n}\n", "  $positive = array();\n  foreach ($l as $value) {\n\
    \    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", " \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n", "    $positive\
    \ = array();\n    foreach ($l as $value) {\n        if ($value > 0)\n        \
    \    $positive[] = $value;\n    }\n    return $positive;\n}", "  return array_filter($l,\
    \ function($n) {\n    return $n > 0;\n  });\n}\n", "    return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  return array_filter($l, function($n)\
    \ {\n    return $n > 0;\n  });\n}\n", "  $positive = array();\n  foreach ($l as\
    \ $value) {\n    if ($value > 0)\n      $positive[] = $value;\n  }\n  return $positive;\n\
    }\n", "    $positive = [];\n    foreach ($l as $item) {\n        if ($item > 0)\
    \ {\n            $positive[] = $item;\n        }\n    }\n    return $positive;\n\
    }\n", "  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $positive[] = $item;\n    }\n  }\n  return $positive;\n}", "  return array_filter($l,\
    \ function($n) {\n    return $n > 0;\n  });\n}\n", "  $positive = array();\n \
    \ foreach ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n  }\n \
    \ return $positive;\n}\n", "  $positive = array();\n  foreach ($l as $value) {\n\
    \    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n", " \
    \ $positive = array();\n  foreach ($l as $value) {\n    if ($value > 0) $positive[]\
    \ = $value;\n  }\n  return $positive;\n}\n", "  $positive = [];\n  foreach ($l\
    \ as $item) {\n    if ($item > 0) {\n      $positive[] = $item;\n    }\n  }\n\
    \  return $positive;\n}\n", "  return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "  return array_filter($l, function($v) { return $v > 0; });\n\
    }\n", "  return array_filter($l, function($v) { return $v > 0; });\n}\n", "  return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "    return array_filter($l,\
    \ function($n) {\n        return $n > 0;\n    });\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  return array_filter($l, function($n)\
    \ {\n    return $n > 0;\n  });\n}\n", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $item)\
    \ {\n        if ($item > 0) {\n            $positive[] = $item;\n        }\n \
    \   }\n    return $positive;\n}\n", "  return array_filter($l, function($n) {\n\
    \    return $n > 0;\n  });\n}\n", "    return array_filter($l, function($v) {\
    \ return $v > 0; });\n}\n", "    return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "    $positive = array();\n    foreach ($l as $value) {\n\
    \        if ($value > 0) {\n            $positive[] = $value;\n        }\n   \
    \ }\n    return $positive;\n}\n", "  $positive = array();\n  foreach ($l as $value)\
    \ {\n    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n}\n",
  "  $positive = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n     \
    \ $positive[] = $item;\n    }\n  }\n  return $positive;\n}", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "    $positive = [];\n    foreach ($l\
    \ as $item) {\n        if ($item > 0) {\n            $positive[] = $item;\n  \
    \      }\n    }\n    return $positive;\n}", "  return array_filter($l, function($v)\
    \ { return $v > 0; });\n}\n", "  return array_filter($l, function($v) { return\
    \ $v > 0; });\n}\n", "  $positive = array();\n  foreach ($l as $item) {\n    if\
    \ ($item > 0) {\n      $positive[] = $item;\n    }\n  }\n  return $positive;\n\
    }\n", "    return array_filter($l, function($v) { return $v > 0; });\n}\n", " \
    \ return array_filter($l, function($v) { return $v > 0; });\n}\n", "    return\
    \ array_filter($l, function($v) { return $v > 0; });\n}\n", "  return array_filter($l,\
    \ function($v) { return $v > 0; });\n}\n", "  $positive = array();\n  foreach\
    \ ($l as $value) {\n    if ($value > 0) $positive[] = $value;\n  }\n  return $positive;\n\
    }", "  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n",
  "    $positive = array();\n    foreach ($l as $value) {\n        if ($value > 0)\
    \ {\n            $positive[] = $value;\n        }\n    }\n    return $positive;\n\
    }\n", "    return array_filter($l, function($item) {\n        return $item > 0;\n\
    \    });\n}\n", "  return array_filter($l, function($v) { return $v > 0; });\n\
    }"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

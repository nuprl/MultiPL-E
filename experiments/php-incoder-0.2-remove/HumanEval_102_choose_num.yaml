name: HumanEval_102_choose_num
language: php
prompt: "<?php\n// This function takes two positive numbers x and y and returns the\n\
  // biggest even integer number that is in the range [x, y] inclusive. If \n// there's\
  \ no such number, then the function should return -1.\n// For example:\nfunction\
  \ choose_num($x, $y) {\n"
tests: "function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n       \
    \ $y = $temp;\n    }\n    \n    $even = 0;\n    \n    for ($i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $even++;\n        }\n    }\n\
    \    \n    if ($even > 0) {\n        return $x;\n    } else {\n        return\
    \ -1;\n    }\n}\n\n$x = choose_num(7, 9);\necho \"The biggest even number between\
    \ 7 and 9 is $x\";", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    while ($x >= $y) {\n        $x = $x - $y;\n        $y = $y + $y;\n    }\n\
    \    return $x;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x =\
    \ $y;\n        $y = $temp;\n    }\n    while ($x < $y) {\n        if ($x % 2 ==\
    \ 0) {\n            $x = $x + 1;\n        } else {\n            $x = $x - 1;\n\
    \        }\n    }\n    return $x;\n}\n\n$x = choose_num(7, 11);\necho \"The biggest\
    \ even number between 7 and 11 is $x\\n\";", "    if ($x < $y) {\n        $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $x = $x - 1;\n    $y\
    \ = $y - 1;\n    while ($x >= $y) {\n        $x = $x - 2;\n        $y = $y - 2;\n\
    \    }\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $x = $x\
    \ + 1;\n        } else {\n            $y = $y - 1;\n        }\n    }\n    return\
    \ $x;\n}\n\n$x = choose_num(100, 200);\necho $x;", "    if ($x > $y) {\n     \
    \   $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $max_num =\
    \ $x;\n    $min_num = $y;\n    \n    while ($min_num < $max_num) {\n        $max_num\
    \ += 2;\n        $min_num += 2;\n        if ($max_num > $min_num) {\n        \
    \    $max_num = $min_num;\n        }\n    }\n    return $max_num;\n}\n\n$x = choose_num(5,10);\n\
    echo \"The biggest even number between 5 and 10 is: $x\";", "    if ($x > $y)\
    \ {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if\
    \ ($x == $y) {\n        return $x;\n    }\n    if ($x % 2 == 0) {\n        $x\
    \ = $x - 1;\n    }\n    if ($y % 2 == 0) {\n        $y = $y - 1;\n    }\n    if\
    \ ($x == $y) {\n        return $x;\n    }\n    if ($x > $y) {\n        $temp =\
    \ $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n   \
    \     return $x;\n    }\n    if ($x % 2 == 0) {\n        $x = $x - 1;\n    }\n\
    \    if ($y % 2 == 0) {\n        $y = $y - 1;\n    }\n    if ($x == $y) {\n  \
    \      return $x;\n    }\n    if ($x > $y) {\n        $temp = $x;\n        $x\
    \ = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n\
    \    }\n    if ($x % 2 == 0) {\n        $x = $x - 1;\n    }\n    if ($y % 2 ==\
    \ 0) {\n        $y = $y - 1;\n    }\n    if ($x == $y) {\n        return $x;\n\
    \    }\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y\
    \ = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x\
    \ % 2 == 0) {\n        $x = $x - 1;\n    }\n    if ($y % 2 == 0) {\n        $y\
    \ = $y - 1;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x\
    \ > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    if ($x == $y) {\n        return $x;\n    }\n    if ($x % 2 == 0) {\n    \
    \    $x = $x - 1;\n    }\n    if ($y % 2 == 0) {\n        $y = $y - 1;\n    }\n\
    \    if ($x == $y) {\n        return $x;\n    }\n    if ($x > $y) {\n        $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n \
    \       return $x;\n    }\n    if ($x % 2 == 0) {\n        $x = $x - 1;\n    }\n\
    \    if ($y % 2 == 0) {\n        $y = $y - 1;\n    }\n    if ($x == $y) {\n  \
    \      return $x;\n    }\n    if ($x > $y) {\n        $temp = $x;\n        $x\
    \ = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n\
    \    }\n    if ($x % 2 == 0) {\n        $", "    if ($x < $y) {\n        $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $temp = $x;\n    $x\
    \ = $y;\n    $y = $temp;\n    while ($x >= $y) {\n        $x = $x - $y;\n    \
    \    $y = $y + $y;\n    }\n    return $x;\n}\n\n$x = choose_num(6, 8);\necho \"\
    The biggest even number between 6 and 8 is $x.\";", "    if ($x < $y) {\n    \
    \    $min = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n      \
    \  $max = $x;\n    }\n    \n    while ($min < $max) {\n        $mid = ($min +\
    \ $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n   \
    \     } else {\n            $max = $mid;\n        }\n    }\n    return $min;\n\
    }\n\n$x = choose_num(7, 8);\necho $x;", "    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    $result = -1;\n    while ($x\
    \ <= $y) {\n        if ($x % 2 == 0) {\n            $result = $x;\n          \
    \  break;\n        }\n        $x = $x + 1;\n    }\n    return $result;\n}", " \
    \   if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $x = $x\
    \ + 1;\n        } else {\n            $x = $x - 1;\n        }\n    }\n    return\
    \ $x;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    $result = -1;\n    for($i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n   \
    \ return $result;\n}\n\n$x = choose_num(7, 11);\necho \"The biggest even number\
    \ between 7 and 11 is $x\";", "    if ($x < $y) {\n        $min = $x;\n      \
    \  $max = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n\n\
    \    $evens = array();\n    $odds = array();\n\n    for ($i = $min; $i <= $max;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n        } else\
    \ {\n            $odds[] = $i;\n        }\n    }\n\n    if (count($evens) > 0)\
    \ {\n        return $evens[array_search(max($evens), $evens)];\n    } else if\
    \ (count($odds) > 0) {\n        return $odds[array_search(max($odds), $odds)];\n\
    \    } else {\n        return -1;\n    }\n}\n", "    $result = -1;\n    if ($x\
    \ > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    do {\n        $result = $x + $y;\n        $x = $y - $result * $x;\n     \
    \   $y = $result;\n    } while ($x > $y);\n    return $result;\n}", "    $max_num\
    \ = $x;\n    $min_num = $y;\n    \n    while($max_num < $min_num) {\n        $max_num\
    \ += $max_num;\n        $min_num += $min_num;\n    }\n    \n    return $max_num;\n\
    }\n\n$result = choose_num(7, 3);\necho \"The biggest even number between 7 and\
    \ 3 is: \" . $result;", "    if ($x > $y) {\n        $temp = $x;\n        $x =\
    \ $y;\n        $y = $temp;\n    }\n    $result = -1;\n    for($i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = -1;\n    if ($x > $y) {\n  \
    \      $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    while ($x\
    \ <= $y) {\n        if ($x % 2 == 0) {\n            $result = $x;\n          \
    \  break;\n        }\n        $x = $x + 1;\n    }\n    return $result;\n}\n\n\
    $x = choose_num(7, 5);\necho \"$x\\n\";", "    if ($x < $y) {\n        $temp =\
    \ $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $max = $x;\n    $min\
    \ = $y;\n    while ($min < $max) {\n        $mid = ($min + $max) >> 1;\n     \
    \   if ($mid * $mid > $x * $x) {\n            $min = $mid + 1;\n        } else\
    \ {\n            $max = $mid;\n        }\n    }\n    return $min;\n}", "    if\
    \ ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n  \
    \  }\n    \n    if ($x == $y) {\n        return $x;\n    }\n    \n    if ($x %\
    \ 2 == 0) {\n        return $x;\n    }\n    \n    $even = $x / 2;\n    \n    if\
    \ ($y % 2 == 0) {\n        return $even;\n    }\n    \n    $odd = $y / 2;\n  \
    \  \n    if ($even > $odd) {\n        return $even;\n    }\n    \n    return $odd;\n\
    }\n\n$x = choose_num(7, 11);\necho \"$x\\n\";", "    $result = -1;\n    if ($x\
    \ > $y) {\n        $result = $x;\n        $x = $y;\n        $y = $result;\n  \
    \  }\n    do {\n        $result = $x + ($y % 2);\n        $y = $y / 2;\n     \
    \   $x = $result;\n    } while ($x > $y);\n    return $result;\n}\n", "    if\
    \ ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n  \
    \  }\n    \n    $max_num = $x;\n    $min_num = $y;\n    \n    while ($min_num\
    \ < $max_num) {\n        $max_num += 2;\n        $min_num += 2;\n    }\n    \n\
    \    if ($max_num > $y) {\n        return $max_num;\n    }\n    \n    return -1;\n\
    }\n\n$x = choose_num(7, 10);\necho \"$x\\n\";", "    if ($x < $y) {\n        $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    $result = -1;\n\
    \    \n    if ($x % 2 == 0) {\n        $result = $x;\n    }\n    \n    if ($y\
    \ % 2 == 0) {\n        $result = $y;\n    }\n    \n    return $result;\n}\n",
  "    $result = -1;\n    if ($x < $y) {\n        for ($i = $x; $i <= $y; $i++) {\n\
    \            if ($i % 2 == 0) {\n                $result = $i;\n            }\n\
    \        }\n    }\n    return $result;\n}", "    $result = -1;\n    if ($x < $y)\
    \ {\n        $result = $x;\n        while ($result < $y) {\n            $result\
    \ += 2;\n        }\n    } else {\n        $result = $y;\n        while ($result\
    \ > $x) {\n            $result -= 2;\n        }\n    }\n    return $result;\n\
    }\n", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y =\
    \ $temp;\n    }\n    \n    $max_num = $x;\n    $min_num = $y;\n    \n    while\
    \ ($max_num > $min_num) {\n        $max_num = $max_num - $min_num;\n        $min_num\
    \ = $min_num + $max_num;\n    }\n    \n    if ($max_num % 2 == 0) {\n        return\
    \ $max_num;\n    } else {\n        return -1;\n    }\n}", "    if ($x < $y) {\n\
    \        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $result\
    \ = -1;\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $result\
    \ = $x;\n            break;\n        }\n        $x = $x + 1;\n    }\n    return\
    \ $result;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    \n    $max_num = $x;\n    \n    for ($i = $y;\
    \ $i >= $x; $i--) {\n        if ($i % 2 == 0) {\n            $max_num = $i;\n\
    \        }\n    }\n    \n    return $max_num;\n}\n", "    if ($x > $y) {\n   \
    \     $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x ==\
    \ $y) {\n        return $x;\n    }\n    if ($x > $y && $x % 2 == 0) {\n      \
    \  return $x;\n    }\n    if ($y > $x && $y % 2 == 0) {\n        return $y;\n\
    \    }\n    if ($x == $y && $x % 2 == 0) {\n        return $x;\n    }\n    if\
    \ ($y == $x && $y % 2 == 0) {\n        return $y;\n    }\n    if ($x == $y &&\
    \ $x % 2 != 0) {\n        return $x;\n    }\n    if ($y == $x && $y % 2 != 0)\
    \ {\n        return $y;\n    }\n    if ($x == $y && $x % 2 != 0) {\n        return\
    \ $x;\n    }\n    if ($y == $x && $y % 2 != 0) {\n        return $y;\n    }\n\
    \    return -1;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x =\
    \ $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n\
    \    }\n    \n    $x_even = $x_odd = $y;\n    \n    while ($x_even % 2 == 0) {\n\
    \        $x_even /= 2;\n    }\n    \n    while ($x_odd % 2 == 0) {\n        $x_odd\
    \ /= 2;\n    }\n    \n    if ($x_even > $x_odd) {\n        return $x_even;\n \
    \   } else {\n        return $x_odd;\n    }\n}", "    if ($x < $y) {\n       \
    \ $min = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n        $max\
    \ = $x;\n    }\n    \n    do {\n        $mid = ($min + $max) / 2;\n        if\
    \ ($mid % 2 == 0) {\n            $min = $mid + 1;\n        } else {\n        \
    \    $max = $mid;\n        }\n    } while ($min < $max);\n    \n    return $min;\n\
    }", "    $evens = array();\n    $odds = array();\n    $result = -1;\n    \n  \
    \  for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens[]\
    \ = $i;\n        } else {\n            $odds[] = $i;\n        }\n    }\n    \n\
    \    if (count($evens) > 0) {\n        $result = max($evens);\n    }\n    \n \
    \   if (count($odds) > 0) {\n        $result = min($odds);\n    }\n    \n    return\
    \ $result;\n}\n\n$x = choose_num(7, 11);\necho \"The biggest even number between\
    \ 7 and 11 is $x\";", "    if ($x < $y) {\n        $min = $x;\n        $max =\
    \ $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n    do {\n\
    \        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n           \
    \ $min = $mid + 1;\n        } else {\n            $max = $mid;\n        }\n  \
    \  } while ($min < $max);\n    return $min;\n}", "    $evens = array();\n    $odds\
    \ = array();\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $evens[] = $i;\n        } else {\n            $odds[] = $i;\n   \
    \     }\n    }\n    if (count($evens) > count($odds)) {\n        return $evens[count($evens)\
    \ - 1];\n    } else {\n        return $odds[count($odds) - 1];\n    }\n}", " \
    \   if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n   \
    \     $min = $y;\n        $max = $x;\n    }\n    do {\n        $mid = ($min +\
    \ $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n   \
    \     } else {\n            $max = $mid - 1;\n        }\n    } while ($min <=\
    \ $max);\n    return $min;\n}", "    $evens = array();\n    $odds = array();\n\
    \    $x = $x - 1;\n    $y = $y - 1;\n    for($i = $x; $i <= $y; $i++) {\n    \
    \    if($i % 2 == 0) {\n            $evens[] = $i;\n        } else {\n       \
    \     $odds[] = $i;\n        }\n    }\n    sort($evens);\n    sort($odds);\n \
    \   foreach($evens as $even) {\n        if($even > $odds[0]) {\n            return\
    \ $even;\n        }\n    }\n    return -1;\n}\n", "    if ($x > $y) {\n      \
    \  $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    $max =\
    \ $x;\n    $min = $y;\n    \n    while ($min < $y) {\n        $max++;\n      \
    \  $min++;\n    }\n    \n    return $max;\n}\n\n$x = choose_num(7, 11);\n$y =\
    \ choose_num(7, 11);\n$z = choose_num(7, 11);\n\necho \"$x $y $z\\n\";", "   \
    \ $result = -1;\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n \
    \       $y = $temp;\n    }\n    if ($x == $y) {\n        $result = $x;\n    }\n\
    \    $max_num = $x;\n    for ($i = 1; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            if ($i > $max_num) {\n                $max_num = $i;\n   \
    \         }\n        }\n    }\n    return $result;\n}", "    if ($x < $y) {\n\
    \        $min = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n  \
    \      $max = $x;\n    }\n    \n    while ($min < $max) {\n        $mid = ($min\
    \ + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n \
    \       } else {\n            $max = $mid;\n        }\n    }\n    return $min;\n\
    }\n", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else\
    \ {\n        $min = $y;\n        $max = $x;\n    }\n    $evens = 0;\n    while\
    \ ($min < $max) {\n        $mid = ($min + $max) / 2;\n        if ($mid % 2 ==\
    \ 0) {\n            $evens++;\n        }\n        if ($mid > $x) {\n         \
    \   $min = $mid + 1;\n        } else {\n            $max = $mid;\n        }\n\
    \    }\n    if ($evens == 0) {\n        return -1;\n    } else {\n        return\
    \ $min;\n    }\n}", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    while ($x <= $y) {\n        if ($x % 2 == 0)\
    \ {\n            $x = $x + 1;\n        } else {\n            $x = $x - 1;\n  \
    \      }\n    }\n    return $x;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n   \
    \     return $x;\n    }\n    \n    if ($x % 2 == 0) {\n        $even = $x / 2;\n\
    \        $even = choose_num($even, $y);\n        if ($even != -1) {\n        \
    \    return $even;\n        }\n    }\n    \n    if ($y % 2 == 0) {\n        $even\
    \ = $y / 2;\n        $even = choose_num($x, $even);\n        if ($even != -1)\
    \ {\n            return $even;\n        }\n    }\n    \n    return -1;\n}\n",
  "    $result = -1;\n    if ($x < $y) {\n        $result = $x;\n        $x = $y;\n\
    \        $y = $result;\n    }\n    do {\n        $result = $x + ($y % 2);\n  \
    \      $y = $y / 2;\n    } while ($y > 0);\n    return $result;\n}", "    if ($x\
    \ > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    \n    if ($x == $y) {\n        return $x;\n    }\n    \n    if ($x % 2 ==\
    \ 0) {\n        $even = $x / 2;\n        $temp = $x;\n        $x = $even;\n  \
    \      $y = $temp;\n    }\n    \n    if ($y % 2 == 0) {\n        $even = $y /\
    \ 2;\n        $temp = $y;\n        $x = $even;\n        $y = $temp;\n    }\n \
    \   \n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y =\
    \ $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n    }\n    \n\
    \    if ($x % 2 == 0) {\n        $even = $x / 2;\n        $temp = $x;\n      \
    \  $x = $even;\n        $y = $temp;\n    }\n    \n    if ($y % 2 == 0) {\n   \
    \     $even = $y / 2;\n        $temp = $y;\n        $x = $even;\n        $y =\
    \ $temp;\n    }\n    \n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n \
    \   }\n    \n    if ($x % 2 == 0) {\n        $even = $x / 2;\n        $temp =\
    \ $x;\n        $x = $even;\n        $y = $temp;\n    }\n    \n    if ($y % 2 ==\
    \ 0) {\n        $even = $y / 2;\n        $temp = $y;\n        $x = $even;\n  \
    \      $y = $temp;\n    }\n    \n    if ($x > $y) {\n        $temp = $x;\n   \
    \     $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n      \
    \  return $x;\n    }\n    \n    if ($x % 2 == 0) {\n        $even = $x / 2;\n\
    \        $temp = $x;\n        $x = $even;\n        $y = $temp;\n    }\n    \n\
    \    if ($y % 2 == 0) {\n        $even = $y / 2;\n        $temp = $y;\n      \
    \  $x = $even;\n        $y = $temp;\n    }\n    \n    if ($x > $y) {\n       \
    \ $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x\
    \ == $y) {\n        return $x;\n    }\n    \n    if ($x % 2 == 0) {\n        $even\
    \ = $x / 2;\n        $temp = $x;\n        $x = $even;\n        $y = $temp;\n \
    \   }\n    \n    if ($", "    $even = 0;\n    $odd = 0;\n    \n    for($i = $x;\
    \ $i <= $y; $i++) {\n        if($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    \n    if($even > $odd)\
    \ {\n        return $even;\n    } else {\n        return $odd;\n    }\n}\n\n$x\
    \ = choose_num(7, 10);\necho $x;", "    $even = 0;\n    $odd = 0;\n    \n    if\
    \ ($x > $y) {\n        $x = $y;\n        $y = $x;\n    }\n    \n    if ($x ==\
    \ 0) {\n        return -1;\n    }\n    \n    if ($y == 0) {\n        return -1;\n\
    \    }\n    \n    if ($x % 2 == 0) {\n        $even = $x;\n    } else {\n    \
    \    $odd = $x;\n    }\n    \n    $x = $x - $even;\n    $y = $y - $odd;\n    \n\
    \    while ($x > 0 && $y > 0) {\n        if ($x % 2 == 0) {\n            $even\
    \ = $even * 2 + $x;\n            $x = $x - $even;\n        } else {\n        \
    \    $odd = $odd * 2 + $y;\n            $y = $y - $odd;\n        }\n    }\n  \
    \  \n    if ($x == 0) {\n        return $even;\n    } else {\n        return $odd;\n\
    \    }\n}", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n     \
    \   $y = $temp;\n    }\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n \
    \           $x = $x + 1;\n        } else {\n            $x = $x - 1;\n       \
    \ }\n    }\n    return $x;\n}", "    if ($x < $y) {\n        $temp = $x;\n   \
    \     $x = $y;\n        $y = $temp;\n    }\n    while ($x <= $y) {\n        if\
    \ ($x % 2 == 0) {\n            $x = $x + 1;\n        } else {\n            $x\
    \ = $x - 1;\n        }\n    }\n    return $x;\n}", "    if ($x < $y) {\n     \
    \   $min = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n       \
    \ $max = $x;\n    }\n    \n    $counter = 0;\n    \n    while ($min < $max) {\n\
    \        $counter++;\n        $min = $min + $max;\n    }\n    \n    if ($counter\
    \ == 0) {\n        return -1;\n    }\n    \n    return $min;\n}\n\n$x = choose_num(7,\
    \ 9);\n$y = choose_num(8, 10);\n$z = choose_num(9, 10);\n$w = choose_num(11, 12);\n\
    $v = choose_num(12, 13);\n$u = choose_num(13, 14);\n$t = choose_num(15, 16);\n\
    $s = choose_num(16, 17);\n$r = choose_num(17, 18);\n$q = choose_num(18, 19);\n\
    $p = choose_num(19, 20);\n$m = choose_num(20, 21);\n$l = choose_num(21, 22);\n\
    $k = choose_num(22, 23);\n$j = choose_num(23, 24);\n$i = choose_num(24, 25);\n\
    $h = choose_num(25, 26);\n$g = choose_num(26, 27);\n$f = choose_num(27, 28);\n\
    $e = choose_num(28, 29);\n$d = choose_num(29, 30);\n$c = choose_num(30, 31);\n\
    $b = choose_num(31, 32);\n$a = choose_num(32, 33);\n$j = choose_num(33, 34);\n\
    $i = choose_num(34, 35);\n$h = choose_num(35, 36);\n$g = choose_num(36, 37);\n\
    $f = choose_num(37, 38);\n$e = choose_num(38, 39);\n$d = choose_num(39, 40);\n\
    $c = choose_num(40, 41);\n$b = choose_num(41, 42);\n$a = choose_num(42, 43);\n\
    $j = choose_num(43, 44);\n$i = choose_num(44, 45);\n$h = choose_num(45, 46);\n\
    $g = choose_num(46, 47);\n$f = choose_num(47, 48);\n$e = choose_num(48, 49);\n\
    $d = choose_num(49, 50);\n$c = choose_num(50, 51);\n$b = choose_num(51, 52);\n\
    $a = choose_num(52, 5", "    if ($x < $y) {\n        $min = $x;\n        $max\
    \ = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n    \n \
    \   $even = 0;\n    \n    for ($i = $min; $i <= $max; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $even++;\n        }\n    }\n    \n    if ($even > 0)\
    \ {\n        return $min;\n    } else {\n        return -1;\n    }\n}\n", "  \
    \  if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n    \
    \    $min = $y;\n        $max = $x;\n    }\n    do {\n        $mid = ($min + $max)\
    \ / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n        }\
    \ else {\n            $max = $mid - 1;\n        }\n    } while ($min <= $max);\n\
    \    return $min;\n}", "    if ($x < $y) {\n        $temp = $x;\n        $x =\
    \ $y;\n        $y = $temp;\n    }\n    $result = -1;\n    while ($x >= $y) {\n\
    \        $result = $result * 2 + $x % 2;\n        $x = floor($x / 2);\n    }\n\
    \    return $result;\n}", "    if ($x < $y) {\n        $temp = $x;\n        $x\
    \ = $y;\n        $y = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    while ($x >= $y) {\n        $x = $x - $y;\n        $y = $y + $y;\n    }\n\
    \    return $x;\n}\n\n$x = choose_num(7, 10);\necho \"$x\\n\";", "    $evens =\
    \ array();\n    $odds = array();\n    for($i = $x; $i <= $y; $i++) {\n       \
    \ if($i % 2 == 0) {\n            $evens[] = $i;\n        } else {\n          \
    \  $odds[] = $i;\n        }\n    }\n    sort($evens);\n    sort($odds);\n    foreach($evens\
    \ as $even) {\n        if($even > $odds[0]) {\n            return $even;\n   \
    \     }\n    }\n    return -1;\n}", "    $evens = array();\n    for($i = $x; $i\
    \ <= $y; $i++) {\n        if($i % 2 == 0) {\n            $evens[] = $i;\n    \
    \    }\n    }\n    sort($evens);\n    for($i = 0; $i < count($evens); $i++) {\n\
    \        if($evens[$i] >= $x && $evens[$i] <= $y) {\n            return $evens[$i];\n\
    \        }\n    }\n    return -1;\n}\n", "    $evens = array();\n    for($i =\
    \ $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        }\n    }\n    sort($evens);\n    foreach($evens as $even) {\n       \
    \ if($even % 2 == 0) {\n            return $even;\n        }\n    }\n    return\
    \ -1;\n}\n", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n   \
    \ } else {\n        $min = $y;\n        $max = $x;\n    }\n    do {\n        $mid\
    \ = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid\
    \ + 1;\n        } else {\n            $max = $mid;\n        }\n    } while ($min\
    \ < $max);\n    return $min;\n}\n\n$x = choose_num(7, 11);\n$y = choose_num(7,\
    \ 11);\necho \"The biggest even number between $x and $y is $x\";", "    if ($x\
    \ < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n        $min\
    \ = $y;\n        $max = $x;\n    }\n    do {\n        $mid = ($min + $max) / 2;\n\
    \        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n        } else {\n\
    \            $max = $mid;\n        }\n    } while ($min < $max);\n    return $min;\n\
    }", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x > $y) {\n \
    \       return -1;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n  \
    \  while ($x % 2 == 0) {\n        $x = $x / 2;\n    }\n    while ($y % 2 == 0)\
    \ {\n        $y = $y / 2;\n    }\n    while ($x > $y) {\n        $x = $x - $y;\n\
    \        $y = $y + $x;\n    }\n    return $x;\n}\n", "    $result = -1;\n    if\
    \ ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n  \
    \  }\n    do {\n        $result = $x + $y;\n        $x = $y - $result * $x;\n\
    \        $y = $result;\n    } while ($x > $y);\n    return $result;\n}\n", " \
    \   if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n   \
    \     $min = $y;\n        $max = $x;\n    }\n    \n    do {\n        $mid = ($min\
    \ + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n \
    \       } else {\n            $max = $mid;\n        }\n    } while ($min < $max);\n\
    \    \n    return $min;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n    \
    \    $x = $y;\n        $y = $temp;\n    }\n    \n    $max_num = $x;\n    \n  \
    \  while ($max_num < $y) {\n        $max_num += 2;\n    }\n    \n    return $max_num;\n\
    }\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y =\
    \ $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    while ($x\
    \ != 0) {\n        if ($x % 2 == 0) {\n            $x = $x - 1;\n        } else\
    \ {\n            $x = $x * 2;\n        }\n    }\n    $temp = $x;\n    $x = $y;\n\
    \    $y = $temp;\n    while ($y != 0) {\n        if ($y % 2 == 0) {\n        \
    \    $y = $y - 1;\n        } else {\n            $y = $y * 2;\n        }\n   \
    \ }\n    if ($x == $y) {\n        return $x;\n    } else {\n        return -1;\n\
    \    }\n}", "    $result = -1;\n    if ($x >= $y) {\n        $result = $x;\n \
    \   } else {\n        $result = $y;\n    }\n    while ($result >= $x && $result\
    \ <= $y) {\n        if ($result % 2 == 0) {\n            $result = $result / 2;\n\
    \        } else {\n            $result = $result * 3 + 1;\n        }\n    }\n\
    \    return $result;\n}", "    if ($x < $y) {\n        $min = $x;\n        $max\
    \ = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($min < $max) {\n        if ($min % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $min++;\n    }\n    if ($even > $odd) {\n        return $even;\n    } else\
    \ {\n        return $odd;\n    }\n}", "    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    $max = $x;\n    while ($max\
    \ < $y) {\n        $max++;\n        if ($max % 2 == 0) {\n            $max++;\n\
    \        }\n    }\n    return $max;\n}\n", "    if ($x > $y) {\n        $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y)\
    \ {\n        return $x;\n    }\n    \n    if ($x % 2 == 0) {\n        $even =\
    \ $x / 2;\n        return $even + choose_num($even, $y);\n    }\n    \n    $odd\
    \ = $x + 1;\n    return $odd * choose_num($x, $y-1);\n}\n\n$x = choose_num(7,\
    \ 11);\necho \"$x\\n\";", "    if ($x < $y) {\n        $min = $x;\n        $max\
    \ = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n    do {\n\
    \        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n           \
    \ $min = $mid + 1;\n        } else {\n            $max = $mid;\n        }\n  \
    \  } while ($min <= $max);\n    return $min;\n}", "    $even = 0;\n    $odd =\
    \ 0;\n    \n    if ($x > $y) {\n        $even = $x;\n        $odd = $y;\n    }\
    \ else {\n        $even = $y;\n        $odd = $x;\n    }\n    \n    while ($even\
    \ > 0 && $odd > 0) {\n        if ($even % 2 == 0) {\n            $even = $even\
    \ / 2;\n        } else {\n            $even = $even / 2;\n        }\n        if\
    \ ($odd % 2 == 0) {\n            $odd = $odd / 2;\n        } else {\n        \
    \    $odd = $odd / 2;\n        }\n    }\n    \n    if ($even > 0 && $odd > 0)\
    \ {\n        return $even;\n    } else {\n        return -1;\n    }\n}", "   \
    \ $result = -1;\n    if ($x >= $y) {\n        $result = $x;\n        $x = $y;\n\
    \        $y = $result;\n    }\n    while ($x >= $y) {\n        $x = $x - 2;\n\
    \        $y = $y - 2;\n    }\n    while ($x <= $y) {\n        $x = $x + 2;\n \
    \       $y = $y + 2;\n    }\n    return $result;\n}", "    if ($x < $y) {\n  \
    \      $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    $max_num\
    \ = $x;\n    \n    while ($max_num < $y) {\n        $max_num += 2;\n    }\n  \
    \  \n    return $max_num;\n}\n\n$x = choose_num(7, 8);\necho $x;", "    if ($x\
    \ < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n        $min\
    \ = $y;\n        $max = $x;\n    }\n    \n    while ($min < $max) {\n        $mid\
    \ = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid\
    \ + 1;\n        } else {\n            $max = $mid;\n        }\n    }\n    return\
    \ $min;\n}", "    $max_num = -1;\n    for($i = $x; $i <= $y; $i++) {\n       \
    \ if($i % 2 == 0) {\n            $max_num = $i;\n        }\n    }\n    return\
    \ $max_num;\n}", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n\
    \    } else {\n        $min = $y;\n        $max = $x;\n    }\n    \n    while\
    \ ($min < $max) {\n        $mid = $min + ($max - $min) / 2;\n        if ($mid\
    \ % 2 == 0) {\n            $min = $mid + 1;\n        } else {\n            $max\
    \ = $mid;\n        }\n    }\n    \n    return $min;\n}\n", "    $result = -1;\n\
    \    if ($x > $y) {\n        $result = $x;\n        $x = $y;\n        $y = $result;\n\
    \    }\n    while($x <= $y) {\n        $result = $x + $y;\n        $x = $result;\n\
    \        $y = $result;\n    }\n    return $result;\n}\n", "    $even = 0;\n  \
    \  $odd = 0;\n    \n    if ($x > $y) {\n        $x = $y;\n        $y = $even;\n\
    \        $even = 1;\n    }\n    \n    if ($x % 2 == 0) {\n        $even = $even\
    \ + 1;\n    }\n    \n    if ($y % 2 == 0) {\n        $odd = $odd + 1;\n    }\n\
    \    \n    if ($even > $odd) {\n        return $even;\n    }\n    \n    return\
    \ $odd;\n}\n\n$x = choose_num(20, 30);\necho $x;", "    $even = 0;\n    $odd =\
    \ 0;\n    \n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n  \
    \          $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    \n    if($even > $odd) {\n        return $even;\n    } else {\n        return\
    \ $odd;\n    }\n}\n", "    if ($x < $y) {\n        $min = $x;\n        $max =\
    \ $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n    \n   \
    \ do {\n        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n    \
    \        $min = $mid + 1;\n        } else {\n            $max = $mid - 1;\n  \
    \      }\n    } while ($min <= $max);\n    \n    return $min;\n}\n", "    $evens\
    \ = array();\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $evens[] = $i;\n        }\n    }\n    if (count($evens) == 0) {\n\
    \        return -1;\n    }\n    $max = max($evens);\n    for ($i = 0; $i < count($evens);\
    \ $i++) {\n        if ($evens[$i] == $max) {\n            return $max;\n     \
    \   }\n    }\n    return -1;\n}", "    if ($x < $y) {\n        $temp = $x;\n \
    \       $x = $y;\n        $y = $temp;\n    }\n    \n    $x = $x - 1;\n    $y =\
    \ $y - 1;\n    \n    while ($x >= $y) {\n        $x = $x - 2;\n        $y = $y\
    \ - 2;\n    }\n    \n    return $x + 1;\n}\n\n$x = choose_num(7, 5);\necho \"\
    The biggest even number between 7 and 5 is: $x\\n\";", "    $max_num = 0;\n  \
    \  $max_even = -1;\n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0)\
    \ {\n            $max_num = $i;\n            $max_even = $i;\n        }\n    }\n\
    \    return $max_even;\n}\n\n$x = choose_num(1, 100);\n$y = choose_num(100, 1000);\n\
    echo \"$x is the biggest even number between $x and $y inclusive.\\n\";\necho\
    \ \"$y is the biggest even number between $x and $y inclusive.\\n\";", "    if\
    \ ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n  \
    \  }\n    \n    if ($x == $y) {\n        return $x;\n    }\n    \n    if ($x %\
    \ 2 == 0) {\n        $x = $x - 1;\n        $y = $y - 1;\n    }\n    \n    $x =\
    \ $x + 1;\n    $y = $y + 1;\n    \n    while ($x <= $y) {\n        if ($x % 2\
    \ == 0) {\n            $x = $x + 1;\n        } else {\n            $y = $y - 1;\n\
    \        }\n    }\n    \n    return $x;\n}\n\n$x = choose_num(7, 10);\necho $x;",
  "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n    \
    \    $min = $y;\n        $max = $x;\n    }\n    \n    while ($min < $max) {\n\
    \        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n           \
    \ $min = $mid + 1;\n        } else {\n            $max = $mid;\n        }\n  \
    \  }\n    \n    return $min;\n}\n\n$x = choose_num(7, 9);\necho $x;", "    if\
    \ ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n  \
    \  }\n    $even = 0;\n    $odd = 0;\n    \n    while ($x <= $y) {\n        if\
    \ ($x % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $x++;\n    }\n    \n    if ($even > $odd) {\n        return\
    \ $even;\n    } else {\n        return $odd;\n    }\n}\n\n$x = choose_num(8, 10);\n\
    echo $x;", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    }\
    \ else {\n        $min = $y;\n        $max = $x;\n    }\n    $even = 0;\n    $odd\
    \ = 1;\n    while ($min < $max) {\n        if ($min % 2 == 0) {\n            $even++;\n\
    \        }\n        if ($max % 2 == 1) {\n            $odd++;\n        }\n   \
    \     $min++;\n        $max++;\n    }\n    if ($even > $odd) {\n        return\
    \ $even;\n    } else {\n        return $odd;\n    }\n}\n", "    if ($x > $y) {\n\
    \        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x\
    \ == $y) {\n        return $x;\n    }\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    while ($x %\
    \ 2 == 0) {\n        $x = $x / 2;\n    }\n    while ($y % 2 == 0) {\n        $y\
    \ = $y / 2;\n    }\n    return $x + $y;\n}", "    $evens = array();\n    $odds\
    \ = array();\n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n\
    \            $evens[] = $i;\n        } else {\n            $odds[] = $i;\n   \
    \     }\n    }\n    sort($evens);\n    sort($odds);\n    $evens = array_reverse($evens);\n\
    \    $odds = array_reverse($odds);\n    foreach($evens as $even) {\n        if($even\
    \ > $odds[0]) {\n            return $even;\n        }\n    }\n    return -1;\n\
    }\n\n$x = choose_num(7, 11);\necho \"$x\\n\";", "    $result = -1;\n    if ($x\
    \ > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n           \
    \ $result = $i;\n            break;\n        }\n    }\n    return $result;\n}\n\
    \n$x = choose_num(7, 11);\necho \"The biggest even number between 7 and 11 is\
    \ $x\\n\";", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    \n    $even = 0;\n    \n    for ($i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $even++;\n        }\n    }\n\
    \    \n    if ($even > 0) {\n        return $x;\n    }\n    \n    return -1;\n\
    }", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n\
    \        $min = $y;\n        $max = $x;\n    }\n    do {\n        $mid = ($min\
    \ + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n \
    \       } else {\n            $max = $mid - 1;\n        }\n    } while ($min <=\
    \ $max);\n    return $min;\n}", "    if ($x < $y) {\n        $min = $x;\n    \
    \    $max = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n\
    \    \n    do {\n        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0)\
    \ {\n            $min = $mid + 1;\n        } else {\n            $max = $mid -\
    \ 1;\n        }\n    } while ($min <= $max);\n    \n    return $min;\n}", "  \
    \  $evens = array();\n    $odds = array();\n    \n    for ($i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n        } else\
    \ {\n            $odds[] = $i;\n        }\n    }\n    \n    if (count($evens)\
    \ > 0) {\n        return max($evens);\n    } else {\n        return -1;\n    }\n\
    }\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y =\
    \ $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n    }\n    \n\
    \    if ($x % 2 == 0) {\n        return $x;\n    }\n    \n    if ($y % 2 == 0)\
    \ {\n        return $y;\n    }\n    \n    $evens = $x % 2;\n    $odds = $y % 2;\n\
    \    \n    if ($evens > $odds) {\n        return $x;\n    } else {\n        return\
    \ $y;\n    }\n}\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    while ($x >= $y) {\n        $x = $x - $y;\n        $y = $y + $y;\n    }\n\
    \    return $x;\n}\n\n$x = choose_num(7, 11);\necho \"The biggest even number\
    \ between 7 and 11 is $x.\";", "    if ($x < $y) {\n        $min = $x;\n     \
    \   $max = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n\
    \    \n    while ($min <= $max) {\n        $mid = $min + ($max - $min) / 2;\n\
    \        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n        } else {\n\
    \            $max = $mid;\n        }\n    }\n    return $min;\n}\n\n$x = choose_num(7,\
    \ 10);\necho $x;", "    $evens = array();\n    $odds = array();\n    for ($i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        } else {\n            $odds[] = $i;\n        }\n    }\n    if (count($evens)\
    \ > count($odds)) {\n        return $evens[count($evens) - 1];\n    } else {\n\
    \        return $odds[count($odds) - 1];\n    }\n}", "    if ($x < $y) {\n   \
    \     $min = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n     \
    \   $max = $x;\n    }\n    \n    $evens = array();\n    \n    for ($i = $min;\
    \ $i <= $max; $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        }\n    }\n    \n    if (count($evens) == 0) {\n        return -1;\n \
    \   }\n    \n    $max = max($evens);\n    \n    for ($i = $min; $i <= $max; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n        }\n    }\n\
    \    \n    $max = max($evens);\n    \n    return $max;\n}\n\n$x = choose_num(7,\
    \ 9);\necho $x;", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n\
    \    } else {\n        $min = $y;\n        $max = $x;\n    }\n    \n    while\
    \ ($min < $max) {\n        $mid = ($min + $max) / 2;\n        if ($mid % 2 ==\
    \ 0) {\n            $min = $mid + 1;\n        } else {\n            $max = $mid;\n\
    \        }\n    }\n    return $min;\n}\n\n$x = choose_num(7, 5);\n$y = choose_num(7,\
    \ 5);\necho \"The biggest even number between $x and $y is $x.\";", "    $result\
    \ = -1;\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y\
    \ = $temp;\n    }\n    do {\n        $result++;\n        $temp = $x + $y;\n  \
    \      $x = $y - $temp;\n        $y = $temp;\n    } while ($x != $y);\n    return\
    \ $result;\n}\n", "    $even = 0;\n    $odd = 0;\n    \n    for($i = $x; $i <=\
    \ $y; $i++) {\n        if($i % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    \n    if($even > $odd) {\n   \
    \     return $even;\n    } else {\n        return $odd;\n    }\n}\n\n$x = choose_num(7,\
    \ 9);\necho $x;", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n \
    \   }\n    \n    if ($x % 2 == 0) {\n        $x = $x - 1;\n    }\n    \n    if\
    \ ($y % 2 == 0) {\n        $y = $y - 1;\n    }\n    \n    $x = $x + 1;\n    $y\
    \ = $y + 1;\n    \n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n      \
    \      $x = $x + 1;\n        }\n        \n        if ($y % 2 == 0) {\n       \
    \     $y = $y + 1;\n        }\n        \n        if ($x == $y) {\n           \
    \ return $x;\n        }\n        \n        $x = $x + 1;\n        $y = $y + 1;\n\
    \    }\n    \n    return -1;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n\
    \    $y = $temp;\n    while ($x >= $y) {\n        $x = $x - $y;\n        $y =\
    \ $y + $y;\n    }\n    return $x;\n}", "    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n   \
    \     return $x;\n    }\n    \n    if ($x > $y) {\n        $temp = $x;\n     \
    \   $x = $y;\n        $y = $temp;\n    }\n    \n    $temp = $x;\n    \n    while\
    \ ($x % 2 == 0) {\n        $x = $x / 2;\n    }\n    \n    while ($y % 2 == 0)\
    \ {\n        $y = $y / 2;\n    }\n    \n    if ($x == $y) {\n        return $x;\n\
    \    }\n    \n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    \n    $temp = $x;\n    \n    while ($x % 2 == 0)\
    \ {\n        $x = $x / 2;\n    }\n    \n    while ($y % 2 == 0) {\n        $y\
    \ = $y / 2;\n    }\n    \n    if ($x == $y) {\n        return $x;\n    }\n   \
    \ \n    return -1;\n}", "    if ($x > $y) {\n        $temp = $x;\n        $x =\
    \ $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n \
    \   }\n    if ($x % 2 == 0) {\n        $x = $x - 1;\n    }\n    if ($y % 2 ==\
    \ 0) {\n        $y = $y - 1;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    while ($x != 0) {\n        if ($x % 2 == 0) {\n            $x = $x - 1;\n\
    \        }\n        if ($y % 2 == 0) {\n            $y = $y - 1;\n        }\n\
    \        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    return\
    \ $y;\n}", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n      \
    \  $y = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n    if\
    \ ($x > $y) {\n        return -1;\n    }\n    $temp = $x;\n    $x = $y;\n    $y\
    \ = $temp;\n    while ($x != 0) {\n        if ($x % 2 == 0) {\n            $x\
    \ = $x / 2;\n        } else {\n            $x = $x * 3 + 1;\n        }\n    }\n\
    \    return $y;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n        $x =\
    \ $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n\
    \    }\n    \n    $even = 0;\n    $odd = 0;\n    \n    if ($x % 2 == 0) {\n  \
    \      $even = $x;\n    } else {\n        $odd = $x;\n    }\n    \n    $temp =\
    \ $even;\n    \n    while ($odd < $y) {\n        $even = $even + $odd;\n     \
    \   $odd = $even + $odd;\n    }\n    \n    return $even;\n}\n", "    if ($x >\
    \ $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n \
    \   \n    if ($x == $y) {\n        return $x;\n    }\n    \n    if ($x % 2 ==\
    \ 0) {\n        $even = $x / 2;\n        return choose_num($even, $y);\n    }\n\
    \    \n    if ($y % 2 == 0) {\n        $even = $y / 2;\n        return choose_num($x,\
    \ $even);\n    }\n    \n    $even = $x / 2;\n    $odd = $y / 2;\n    \n    if\
    \ ($even > $odd) {\n        return choose_num($even, $y);\n    }\n    \n    return\
    \ choose_num($x, $odd);\n}\n\n$x = choose_num(6, 8);\necho \"The biggest even\
    \ number between 6 and 8 is $x\";", "    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    $even = 0;\n    $odd = 0;\n\
    \    \n    for($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n      \
    \      $even++;\n        } else {\n            $odd++;\n        }\n    }\n   \
    \ \n    if ($even > $odd) {\n        return $x;\n    } else {\n        return\
    \ $y;\n    }\n}", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n \
    \   }\n    \n    $even = 0;\n    $odd = 0;\n    \n    for ($i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    \n    if ($even > $odd) {\n      \
    \  return $x;\n    } else {\n        return $y;\n    }\n}\n\n$x = choose_num(8,\
    \ 10);\necho $x;", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    \n    if ($x == 0) {\n        return -1;\n  \
    \  }\n    \n    if ($y == 0) {\n        return -1;\n    }\n    \n    if ($x ==\
    \ $y) {\n        return $x;\n    }\n    \n    $x_even = $x % 2 == 0;\n    $y_even\
    \ = $y % 2 == 0;\n    \n    if ($x_even && $y_even) {\n        return $x;\n  \
    \  }\n    \n    if ($x_even && !$y_even) {\n        return $y;\n    }\n    \n\
    \    if (!$x_even && $y_even) {\n        return $y;\n    }\n    \n    return -1;\n\
    }", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    if ($x == $y) {\n        return $x;\n    }\n    if ($x % 2 == 0) {\n\
    \        return $x;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n \
    \   while ($x % 2 == 0) {\n        $x = $x / 2;\n    }\n    while ($y % 2 == 0)\
    \ {\n        $y = $y / 2;\n    }\n    return $x + $y;\n}\n", "    $evens = array();\n\
    \    $odds = array();\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $evens[] = $i;\n        } else {\n            $odds[] =\
    \ $i;\n        }\n    }\n    if (count($evens) > count($odds)) {\n        return\
    \ $evens[count($evens) - 1];\n    } else {\n        return $odds[count($odds)\
    \ - 1];\n    }\n}\n", "    $result = -1;\n    if ($x > $y) {\n        $tmp = $x;\n\
    \        $x = $y;\n        $y = $tmp;\n    }\n    for ($i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $result = $i;\n            break;\n\
    \        }\n    }\n    return $result;\n}", "    $result = -1;\n    if ($x >=\
    \ $y) {\n        $result = $x;\n    } else {\n        $result = $y;\n    }\n \
    \   while($result >= 0) {\n        $result = $result / 2;\n        if ($result\
    \ % 2 == 0) {\n            $result = $result + 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    \n    $max_num = $x;\n    \n    while ($max_num\
    \ < $y) {\n        $max_num += 2;\n    }\n    \n    return $max_num;\n}", "  \
    \  $even = 0;\n    $odd = 0;\n    \n    for($i = $x; $i <= $y; $i++) {\n     \
    \   if($i % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    \n    if($even > $odd) {\n        return $even;\n    }\
    \ else {\n        return $odd;\n    }\n}\n\n$x = choose_num(1, 100);\n$y = choose_num(100,\
    \ 1);\n\necho $x.\"\\n\";\necho $y;", "    if ($x < $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n   \
    \     return $x;\n    }\n    \n    $evens = 0;\n    $odds = 0;\n    \n    for\
    \ ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    \n    if ($evens\
    \ > $odds) {\n        return $x;\n    } else {\n        return $y;\n    }\n}\n",
  "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    \n    $result = -1;\n    \n    do {\n        $result = $result * 2\
    \ + $x;\n        $x = $y - $result / $x;\n    } while ($x >= $y);\n    \n    return\
    \ $result;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    $result = -1;\n    while ($x <= $y) {\n     \
    \   if ($x % 2 == 0) {\n            $result = $x;\n            break;\n      \
    \  }\n        $x = $x + 1;\n    }\n    return $result;\n}\n", "    if ($x > $y)\
    \ {\n        $tmp = $x;\n        $x = $y;\n        $y = $tmp;\n    }\n    if ($x\
    \ == $y) {\n        return $x;\n    }\n    if ($x == 0) {\n        return -1;\n\
    \    }\n    if ($y == 0) {\n        return -1;\n    }\n    if ($x % 2 == 0) {\n\
    \        return choose_num($x / 2, $y);\n    }\n    return choose_num($x, $y /\
    \ 2);\n}\n\n$result = choose_num(6, 8);\necho \"The biggest even number between\
    \ 6 and 8 is $result.\\n\";", "    $result = -1;\n    if ($x < $y) {\n       \
    \ for ($i = $x; $i <= $y; $i++) {\n            if ($i % 2 == 0) {\n          \
    \      $result = $i;\n            }\n        }\n    } else {\n        for ($i\
    \ = $y; $i <= $x; $i++) {\n            if ($i % 2 == 0) {\n                $result\
    \ = $i;\n            }\n        }\n    }\n    return $result;\n}", "    if ($x\
    \ < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $x = $x + 1;\n\
    \        } else {\n            $x = $x - 1;\n        }\n    }\n    return $x;\n\
    }", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n\
    \        $min = $y;\n        $max = $x;\n    }\n\n    $evens = array();\n    for\
    \ ($i = $min; $i <= $max; $i++) {\n        if ($i % 2 == 0) {\n            $evens[]\
    \ = $i;\n        }\n    }\n\n    if (count($evens) == 0) {\n        return -1;\n\
    \    }\n\n    $result = $evens[0];\n    for ($i = 1; $i < count($evens); $i++)\
    \ {\n        if ($evens[$i] > $result) {\n            $result = $evens[$i];\n\
    \        }\n    }\n\n    return $result;\n}", "    $evens = array();\n    for($i\
    \ = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        }\n    }\n    if(count($evens) == 0) {\n        return -1;\n    }\n \
    \   $max = max($evens);\n    for($i = 0; $i < count($evens); $i++) {\n       \
    \ if($evens[$i] == $max) {\n            return $max;\n        }\n    }\n    return\
    \ -1;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    while\
    \ ($x >= $y) {\n        $x = $x - $y;\n        $y = $y + $y;\n    }\n    return\
    \ $x;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    while ($x < $y) {\n        if ($x % 2 == 0) {\n \
    \           $x = $x + 1;\n        } else {\n            $x = $x - 1;\n       \
    \ }\n    }\n    return $x;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n \
    \       $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n    \
    \    return $x;\n    }\n    \n    if ($x % 2 == 0) {\n        return $x;\n   \
    \ }\n    \n    $even = $x / 2;\n    $odd = $x % 2;\n    \n    if ($odd > $y) {\n\
    \        return $even;\n    }\n    \n    return $odd;\n}", "    if ($x > $y) {\n\
    \        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $temp\
    \ = $x;\n    $x = $y;\n    $y = $temp;\n    while ($x >= $y) {\n        $x = $x\
    \ - $y;\n        $y = $y + $y;\n    }\n    return $x;\n}\n\n$x = choose_num(6,\
    \ 8);\necho $x;", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    $x = $x - 1;\n    $y = $y - 1;\n    while ($x\
    \ >= $y) {\n        $x = $x - 2;\n        $y = $y - 2;\n    }\n    return $x;\n\
    }\n", "    $evens = array();\n    for($i = $x; $i <= $y; $i++) {\n        if($i\
    \ % 2 == 0) {\n            $evens[] = $i;\n        }\n    }\n    if(count($evens)\
    \ == 0) {\n        return -1;\n    }\n    $max = max($evens);\n    for($i = 0;\
    \ $i < count($evens); $i++) {\n        if($evens[$i] == $max) {\n            return\
    \ $max;\n        }\n    }\n    return -1;\n}\n\n$x = choose_num(8, 10);\necho\
    \ $x;", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y\
    \ = $temp;\n    }\n    \n    if ($x == $y) {\n        return $x;\n    }\n    \n\
    \    if ($x % 2 == 0) {\n        $x = $x - 1;\n    } else {\n        $x = $x +\
    \ 1;\n    }\n    \n    if ($y % 2 == 0) {\n        $y = $y - 1;\n    } else {\n\
    \        $y = $y + 1;\n    }\n    \n    while ($x <= $y) {\n        if ($x % 2\
    \ == 0) {\n            $x = $x + 1;\n        } else {\n            $x = $x - 1;\n\
    \        }\n        \n        if ($y % 2 == 0) {\n            $y = $y + 1;\n \
    \       } else {\n            $y = $y - 1;\n        }\n    }\n    \n    return\
    \ $x;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n\
    \            $x = $x + 1;\n        } else {\n            $x = $x - 1;\n      \
    \  }\n    }\n    return $x;\n}", "    if ($x < $y) {\n        $temp = $x;\n  \
    \      $x = $y;\n        $y = $temp;\n    }\n    $result = -1;\n    while ($x\
    \ >= $y) {\n        $x = $x - $y;\n        $result = $x + $y;\n    }\n    return\
    \ $result;\n}", "    $evens = array();\n    $odds = array();\n    \n    for ($i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens[] =\
    \ $i;\n        } else {\n            $odds[] = $i;\n        }\n    }\n    \n \
    \   if (count($evens) > 0) {\n        return max($evens);\n    } elseif (count($odds)\
    \ > 0) {\n        return min($odds);\n    } else {\n        return -1;\n    }\n\
    }", "    $even = 0;\n    $odd = 0;\n    \n    for($i = $x; $i <= $y; $i++) {\n\
    \        if($i % 2 == 0) {\n            $even++;\n        } else {\n         \
    \   $odd++;\n        }\n    }\n    \n    if($even > $odd) {\n        return $even;\n\
    \    } else {\n        return $odd;\n    }\n}\n", "    $result = -1;\n    if ($x\
    \ > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    \n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $result\
    \ = $x;\n            break;\n        }\n        $x = $x + 1;\n    }\n    \n  \
    \  return $result;\n}\n\n$x = choose_num(7, 10);\necho \"The biggest even number\
    \ between 7 and 10 is $x.\";", "    if ($x < $y) {\n        $temp = $x;\n    \
    \    $x = $y;\n        $y = $temp;\n    }\n    \n    $max_num = $x;\n    \n  \
    \  for ($i = $y; $i >= $x; $i--) {\n        if ($i % 2 == 0) {\n            $max_num\
    \ = $i;\n        }\n    }\n    \n    return $max_num;\n}\n\n$x = choose_num(7,\
    \ 9);\necho \"The biggest even number between 7 and 9 is $x\";", "    if ($x >\
    \ $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n \
    \   \n    $result = -1;\n    \n    if ($x % 2 == 0) {\n        $result = $x;\n\
    \    } else {\n        $result = $x + 1;\n    }\n    \n    while ($result < $y)\
    \ {\n        if ($result % 2 == 0) {\n            $result = $result + 1;\n   \
    \     } else {\n            $result = $result + 2;\n        }\n    }\n    \n \
    \   return $result;\n}\n", "    $evens = array();\n    for($i = $x; $i <= $y;\
    \ $i++) {\n        if($i % 2 == 0) {\n            $evens[] = $i;\n        }\n\
    \    }\n    sort($evens);\n    foreach($evens as $even) {\n        if($even %\
    \ 2 == 0) {\n            return $even;\n        }\n    }\n    return -1;\n}\n\n\
    $x = choose_num(7, 11);\necho \"The biggest even number between 7 and 11 is $x\\\
    n\";", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else\
    \ {\n        $min = $y;\n        $max = $x;\n    }\n    \n    do {\n        $mid\
    \ = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid\
    \ + 1;\n        } else {\n            $max = $mid;\n        }\n    } while ($min\
    \ < $max);\n    \n    return $min;\n}\n", "    $max = $x;\n    $min = $y;\n  \
    \  while($min < $max) {\n        $max = ($min + $max) / 2;\n        $min = ($min\
    \ + $max) / 2;\n    }\n    return $max;\n}", "    $even = 0;\n    $odd = 0;\n\
    \    \n    if ($x >= $y) {\n        $even = $x;\n        $odd = $y;\n    } else\
    \ {\n        $even = $y;\n        $odd = $x;\n    }\n    \n    while($even > 0\
    \ && $odd > 0) {\n        if ($even % 2 == 0) {\n            $even = $even / 2;\n\
    \        } else {\n            $even = $even - 1;\n        }\n        \n     \
    \   if ($odd % 2 == 0) {\n            $odd = $odd / 2;\n        } else {\n   \
    \         $odd = $odd - 1;\n        }\n    }\n    \n    if ($even > 0 && $odd\
    \ > 0) {\n        return $even;\n    } else {\n        return -1;\n    }\n}\n",
  "    $result = -1;\n    if ($x < $y) {\n        for ($i = $x; $i <= $y; $i++) {\n\
    \            if ($i % 2 == 0) {\n                $result = $i;\n            }\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = -1;\n    if ($x <\
    \ $y) {\n        for ($i = $x; $i <= $y; $i++) {\n            if ($i % 2 == 0)\
    \ {\n                $result = $i;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    $evens = array();\n    for ($i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $evens[] = $i;\n        }\n    }\n  \
    \  if (count($evens) > 0) {\n        return max($evens);\n    } else {\n     \
    \   return -1;\n    }\n}\n", "    $evens = array();\n    $odds = array();\n  \
    \  \n    // Find even numbers between x and y\n    for ($i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n        }\n    }\n\
    \    \n    // Find odd numbers between x and y\n    for ($i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 != 0) {\n            $odds[] = $i;\n        }\n    }\n\
    \    \n    // Return the biggest even number if there's one\n    if (count($evens)\
    \ > 0) {\n        return max($evens);\n    }\n    \n    // Return the biggest\
    \ odd number if there's one\n    if (count($odds) > 0) {\n        return max($odds);\n\
    \    }\n    \n    // Return -1\n    return -1;\n}\n", "    if ($x > $y) {\n  \
    \      $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $temp =\
    \ $x;\n    $x = $y;\n    $y = $temp;\n    while ($x >= $y) {\n        $x = $x\
    \ - $y;\n        $y = $y + $y;\n    }\n    return $x;\n}\n\n$x = choose_num(7,\
    \ 5);\necho $x;", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n\
    \        $y = $temp;\n    }\n    while ($x < $y) {\n        if ($x % 2 == 0) {\n\
    \            $x = $x + 1;\n        } else {\n            $x = $x - 1;\n      \
    \  }\n    }\n    return $x;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    $even = 0;\n    $odd\
    \ = 0;\n    \n    if ($x % 2 == 0) {\n        $even = $x;\n    } else {\n    \
    \    $odd = $x;\n    }\n    \n    $x = $x - $even;\n    $y = $y - $odd;\n    \n\
    \    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    \n    $even = 0;\n    $odd = 0;\n    \n    if ($x % 2 == 0) {\n  \
    \      $even = $x;\n    } else {\n        $odd = $x;\n    }\n    \n    $x = $x\
    \ - $even;\n    $y = $y - $odd;\n    \n    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    $even = 0;\n    $odd\
    \ = 0;\n    \n    if ($x % 2 == 0) {\n        $even = $x;\n    } else {\n    \
    \    $odd = $x;\n    }\n    \n    $x = $x - $even;\n    $y = $y - $odd;\n    \n\
    \    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    \n    $even = 0;\n    $odd = 0;\n    \n    if ($x % 2 == 0) {\n  \
    \      $even = $x;\n    } else {\n        $odd = $x;\n    }\n    \n    $x = $x\
    \ - $even;\n    $y = $y - $odd;\n    \n    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    $even = 0;\n    $odd\
    \ = 0;\n    \n    if ($x % 2 == 0) {\n        $even = $x;\n    } else {\n    \
    \    $odd = $x;\n    }\n    \n    $x = $x - $even;\n    $y = $y - $odd;\n    \n\
    \    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    \n    $even = 0;\n    $odd = 0;\n    \n    if ($x % 2 == 0) {\n  \
    \      $even = $x;\n    } else {\n        $odd = $x;\n    }\n    \n    $x = $x\
    \ - $even;\n    $y = $y - $odd;\n    \n    if ($x > $y) {\n        $temp = $x;\n\
    \        $x = $y;\n        $y = $temp;\n    }\n    \n    $even = 0;\n    $odd\
    \ = 0;\n    \n    if ($x % 2 == 0) {\n        $", "    if ($x > $y) {\n      \
    \  $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x == $y)\
    \ {\n        return $x;\n    }\n    if ($x % 2 == 0) {\n        $x = $x - 1;\n\
    \    }\n    if ($y % 2 == 0) {\n        $y = $y - 1;\n    }\n    while ($x !=\
    \ $y) {\n        if ($x % 2 == 0) {\n            $x = $x - 1;\n        }\n   \
    \     if ($y % 2 == 0) {\n            $y = $y - 1;\n        }\n    }\n    return\
    \ $x;\n}", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    }\
    \ else {\n        $min = $y;\n        $max = $x;\n    }\n    do {\n        $mid\
    \ = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid\
    \ + 1;\n        } else {\n            $max = $mid;\n        }\n    } while ($min\
    \ < $max);\n    return $min;\n}", "    $evens = array();\n    $odds = array();\n\
    \    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n           \
    \ $evens[] = $i;\n        } else {\n            $odds[] = $i;\n        }\n   \
    \ }\n    $evens = array_unique($evens);\n    $odds = array_unique($odds);\n  \
    \  if (count($evens) > 0) {\n        return $evens[0];\n    } else {\n       \
    \ return -1;\n    }\n}", "    if ($x < $y) {\n        $min = $x;\n        $max\
    \ = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n    }\n    \n \
    \   while ($min < $max) {\n        $mid = ($min + $max) / 2;\n        if ($mid\
    \ % 2 == 0) {\n            $min = $mid + 1;\n        } else {\n            $max\
    \ = $mid;\n        }\n    }\n    \n    return $min;\n}\n", "    $evens = array();\n\
    \    $odds = array();\n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 ==\
    \ 0) {\n            $evens[] = $i;\n        } else {\n            $odds[] = $i;\n\
    \        }\n    }\n    sort($evens);\n    sort($odds);\n    foreach($evens as\
    \ $even) {\n        if($even > $odds[0]) {\n            return $even;\n      \
    \  }\n    }\n    return -1;\n}\n\n$x = choose_num(7, 11);\necho $x;", "    if\
    \ ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n        $min\
    \ = $y;\n        $max = $x;\n    }\n    \n    $evens = array();\n    \n    for\
    \ ($i = $min; $i <= $max; $i++) {\n        if ($i % 2 == 0) {\n            $evens[]\
    \ = $i;\n        }\n    }\n    \n    if (count($evens) == 0) {\n        return\
    \ -1;\n    }\n    \n    return max($evens);\n}\n\n$result = choose_num(7, 11);\n\
    echo \"The biggest even number between 7 and 11 is $result.\";", "    if ($x >\
    \ $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n \
    \   if ($x == $y) {\n        return $x;\n    }\n    if ($x > $y) {\n        $temp\
    \ = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n \
    \       return $x;\n    }\n    if ($x == 0) {\n        return -1;\n    }\n   \
    \ $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n\
    \    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp =\
    \ $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y =\
    \ $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n  \
    \  $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n\
    \    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp =\
    \ $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y =\
    \ $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n  \
    \  $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n\
    \    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp =\
    \ $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y =\
    \ $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n  \
    \  $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n\
    \    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    $temp = $x;\n    $x = $y;\n\
    \    $y = $temp;\n    $temp = $x;\n    $x = $y;\n    $y = $temp", "    if ($x\
    \ < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    \n    $result = -1;\n    \n    if ($x % 2 == 0) {\n        $result = $x;\n\
    \    }\n    \n    if ($y % 2 == 0) {\n        $result = $y;\n    }\n    \n   \
    \ while ($result < $x || $result > $y) {\n        if ($result % 2 == 0) {\n  \
    \          $result = $result + 1;\n        }\n        else {\n            $result\
    \ = $result - 1;\n        }\n    }\n    \n    return $result;\n}", "    if ($x\
    \ < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    \n    $max_num = $x;\n    $min_num = $y;\n    \n    while ($min_num < $max_num)\
    \ {\n        $max_num += 2;\n        $min_num += 2;\n    }\n    \n    if ($max_num\
    \ > $y) {\n        $max_num = $y;\n    }\n    \n    return $max_num;\n}\n\n$result\
    \ = choose_num(8, 9);\necho \"The biggest even number between 8 and 9 is $result.\"\
    ;", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n\
    \        $min = $y;\n        $max = $x;\n    }\n    \n    do {\n        $mid =\
    \ ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid +\
    \ 1;\n        } else {\n            $max = $mid;\n        }\n    } while ($min\
    \ <= $max);\n    \n    return $min;\n}\n\n$x = choose_num(7, 10);\necho $x;",
  "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n    \
    \    $min = $y;\n        $max = $x;\n    }\n    do {\n        $mid = ($min + $max)\
    \ / 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n        }\
    \ else {\n            $max = $mid - 1;\n        }\n    } while ($min < $max);\n\
    \    return $min;\n}\n", "    $evens = array();\n    $odds = array();\n    $x\
    \ = $x - 1;\n    $y = $y - 1;\n    for($i = 0; $i < $y; $i++) {\n        $evens[]\
    \ = $x;\n        $x = $x + 1;\n    }\n    for($i = 0; $i < $x; $i++) {\n     \
    \   $odds[] = $y;\n        $y = $y - 1;\n    }\n    sort($evens);\n    sort($odds);\n\
    \    for($i = 0; $i < count($evens); $i++) {\n        if($evens[$i] % 2 == 0)\
    \ {\n            return $evens[$i];\n        }\n    }\n    for($i = 0; $i < count($odds);\
    \ $i++) {\n        if($odds[$i] % 2 == 1) {\n            return $odds[$i];\n \
    \       }\n    }\n    return -1;\n}", "    if ($x < $y) {\n        $min = $x;\n\
    \        $max = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n  \
    \  }\n    \n    while ($min < $max) {\n        $mid = ($min + $max) / 2;\n   \
    \     if ($mid % 2 == 0) {\n            $min = $mid + 1;\n        } else {\n \
    \           $max = $mid;\n        }\n    }\n    \n    return $min;\n}\n\n$x =\
    \ choose_num(7, 10);\necho \"The biggest even number between 7 and 10 is $x.\"\
    ;", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    \n    if ($x == $y) {\n        return $x;\n    }\n    \n    if ($x\
    \ % 2 == 0) {\n        return $x;\n    }\n    \n    $even = $x / 2;\n    $odd\
    \ = $x - $even;\n    \n    if ($even > $y) {\n        return $even;\n    }\n \
    \   \n    return $odd;\n}", "    if ($x > $y) {\n        $temp = $x;\n       \
    \ $x = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n\
    \    }\n    if ($x == 0) {\n        return -1;\n    }\n    if ($y == 0) {\n  \
    \      return -1;\n    }\n    $x_even = $x % 2 == 0;\n    $y_even = $y % 2 ==\
    \ 0;\n    if ($x_even && $y_even) {\n        return $x;\n    }\n    if ($x_even\
    \ && !$y_even) {\n        return $y;\n    }\n    if (!$x_even && $y_even) {\n\
    \        return $y;\n    }\n    return -1;\n}", "    $result = -1;\n    if ($x\
    \ < $y) {\n        $result = $x;\n        $x = $y;\n        $y = $result;\n  \
    \  }\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $x = $x\
    \ + 1;\n        } else {\n            $x = $x - 1;\n        }\n        if ($x\
    \ == $y) {\n            $result = $x;\n        }\n    }\n    return $result;\n\
    }", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    \n    $max_num = $x;\n    $min_num = $y;\n    \n    while ($max_num\
    \ < $min_num) {\n        $max_num += 2;\n        $min_num -= 2;\n    }\n    \n\
    \    while ($max_num > $min_num) {\n        $max_num -= 2;\n        $min_num +=\
    \ 2;\n    }\n    \n    return $max_num;\n}\n", "    if ($x < $y) {\n        $min\
    \ = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n        $max =\
    \ $x;\n    }\n    \n    while ($min < $max) {\n        $mid = ($min + $max) /\
    \ 2;\n        if ($mid % 2 == 0) {\n            $min = $mid + 1;\n        } else\
    \ {\n            $max = $mid;\n        }\n    }\n    return $min;\n}\n", "   \
    \ if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    \n    while ($x >=\
    \ $y) {\n        $x = $x - $y;\n        $y = $y + $x;\n    }\n    \n    return\
    \ $y;\n}\n", "    $evens = array();\n    $odds = array();\n    \n    for ($i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        } else {\n            $odds[] = $i;\n        }\n    }\n    \n    if (count($evens)\
    \ > 0) {\n        return max($evens);\n    } else {\n        return -1;\n    }\n\
    }\n", "    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y =\
    \ $temp;\n    }\n    \n    $max_num = $x;\n    \n    while ($max_num < $y) {\n\
    \        $max_num += 2;\n    }\n    \n    return $max_num;\n}\n\n$x = choose_num(7,\
    \ 10);\necho \"The biggest even number between 7 and 10 is $x\";", "    $evens\
    \ = array();\n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n\
    \            $evens[] = $i;\n        }\n    }\n    if(count($evens) == 0) {\n\
    \        return -1;\n    }\n    $max = max($evens);\n    foreach($evens as $even)\
    \ {\n        if($even != $max) {\n            return $max;\n        }\n    }\n\
    \    return -1;\n}\n\n$x = choose_num(7, 11);\n$y = choose_num(7, 11);\necho \"\
    $x $y\\n\";", "    $evens = array();\n    $odds = array();\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        } else {\n            $odds[] = $i;\n        }\n    }\n    $evens = array_merge($evens,\
    \ $odds);\n    sort($evens);\n    sort($odds);\n    $even = array_pop($evens);\n\
    \    $odd = array_pop($odds);\n    if ($even > $odd) {\n        return $even;\n\
    \    } else {\n        return $odd;\n    }\n}\n\n$x = choose_num(8, 15);\necho\
    \ $x;", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y\
    \ = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    while ($x\
    \ >= $y) {\n        $x = $x - $y;\n        $y = $y + $y;\n    }\n    return $x;\n\
    }\n\n$x = choose_num(7, 11);\necho $x;", "    if ($x > $y) {\n        $temp =\
    \ $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == 0) {\n\
    \        return -1;\n    }\n    \n    if ($y == 0) {\n        return -1;\n   \
    \ }\n    \n    $temp = $x;\n    \n    while ($temp != 0) {\n        $temp = $temp\
    \ / 2;\n        if ($temp % 2 == 0) {\n            $x = $x - $temp;\n        }\
    \ else {\n            $y = $y - $temp;\n        }\n    }\n    \n    return $x;\n\
    }\n\n$result = choose_num(7, 3);\necho $result;", "    $evens = array();\n   \
    \ $odds = array();\n    $x = $x - 1;\n    $y = $y - 1;\n    for($i = $x; $i <=\
    \ $y; $i++) {\n        if($i % 2 == 0) {\n            $evens[] = $i;\n       \
    \ } else {\n            $odds[] = $i;\n        }\n    }\n    $evens = array_merge($evens,\
    \ $odds);\n    sort($evens);\n    sort($odds);\n    for($i = 0; $i < count($evens);\
    \ $i++) {\n        if($evens[$i] > $odds[$i]) {\n            return $evens[$i];\n\
    \        }\n    }\n    return -1;\n}", "    $evens = array();\n    $odds = array();\n\
    \    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n            $evens[]\
    \ = $i;\n        } else {\n            $odds[] = $i;\n        }\n    }\n    sort($evens);\n\
    \    sort($odds);\n    foreach($evens as $even) {\n        if($even > $odds[0])\
    \ {\n            return $even;\n        }\n    }\n    return -1;\n}", "    if\
    \ ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n  \
    \  }\n    $even = 0;\n    $odd = 0;\n    while ($x <= $y) {\n        if ($x %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n        $x++;\n    }\n    if ($even > $odd) {\n        return $even;\n\
    \    } else {\n        return $odd;\n    }\n}", "    if ($x < $y) {\n        $min\
    \ = $x;\n        $max = $y;\n    } else {\n        $min = $y;\n        $max =\
    \ $x;\n    }\n    $ans = -1;\n    while ($min <= $max) {\n        $mid = ($min\
    \ + $max) / 2;\n        if ($mid % 2 == 0) {\n            $ans = $mid;\n     \
    \       break;\n        }\n        if ($mid > $max) {\n            $max = $mid;\n\
    \        } else {\n            $min = $mid + 1;\n        }\n    }\n    return\
    \ $ans;\n}\n", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n  \
    \      $y = $temp;\n    }\n    if ($x == $y) {\n        return $x;\n    }\n  \
    \  if ($x % 2 == 0) {\n        return $x + choose_num($x + 1, $y);\n    }\n  \
    \  return choose_num($x + 1, $y);\n}", "    $even = 0;\n    $odd = 0;\n    \n\
    \    for($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    \n    if ($even\
    \ > $odd) {\n        return $even;\n    } else {\n        return $odd;\n    }\n\
    }\n\n$x = choose_num(7, 10);\necho $x;", "    if ($x < $y) {\n        $min = $x;\n\
    \        $max = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n  \
    \  }\n\n    $even = 0;\n    $odd = 0;\n    while ($min < $max) {\n        $mid\
    \ = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $even = $mid\
    \ + 1;\n        } else {\n            $odd = $mid;\n        }\n        if ($even\
    \ > $odd) {\n            $min = $mid + 1;\n        } else {\n            $max\
    \ = $mid;\n        }\n    }\n    return $even;\n}\n", "    if ($x > $y) {\n  \
    \      $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $result\
    \ = -1;\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $result\
    \ = $x;\n            break;\n        }\n        $x = $x + 1;\n    }\n    return\
    \ $result;\n}", "    $result = -1;\n    if ($x < $y) {\n        $result = $x;\n\
    \    } else {\n        $result = $y;\n    }\n    while($result < $x || $result\
    \ > $y) {\n        $result = $result + $result;\n    }\n    return $result;\n}",
  "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n    \
    \    $min = $y;\n        $max = $x;\n    }\n    \n    $even = 0;\n    \n    while\
    \ ($min < $max) {\n        $even++;\n        $min++;\n        $max--;\n    }\n\
    \    \n    return $even;\n}\n", "    if ($x > $y) {\n        $temp = $x;\n   \
    \     $x = $y;\n        $y = $temp;\n    }\n    if ($x == $y) {\n        return\
    \ $x;\n    }\n    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n    \
    \    $y = $temp;\n    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    while\
    \ ($x > $y) {\n        $x = $x - 2;\n        $y = $y - 2;\n    }\n    while ($x\
    \ < $y) {\n        $x = $x + 2;\n        $y = $y + 2;\n    }\n    return $x;\n\
    }", "    if ($x < $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    $temp = $x;\n    $x = $y;\n    $y = $temp;\n    while ($x > $y) {\n\
    \        $x = $x - $y;\n        $y = $y + $y;\n    }\n    return $x;\n}", "  \
    \  if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n\
    \    }\n    $result = -1;\n    while ($x <= $y) {\n        if ($x % 2 == 0) {\n\
    \            $result = $x;\n            break;\n        }\n        $x = $x + 1;\n\
    \    }\n    return $result;\n}\n", "    if ($x < $y) {\n        $min = $x;\n \
    \       $max = $y;\n    } else {\n        $min = $y;\n        $max = $x;\n   \
    \ }\n    do {\n        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n\
    \            $min = $mid + 1;\n        } else {\n            $max = $mid;\n  \
    \      }\n    } while ($min < $max);\n    return $min;\n}", "    $even = 0;\n\
    \    $odd = 0;\n    \n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    \n    if($even > $odd) {\n        return $even;\n    } else {\n  \
    \      return $odd;\n    }\n}\n\n$x = choose_num(7, 11);\n$y = choose_num(7, 11);\n\
    echo \"$x $y\\n\";", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n\
    \    } else {\n        $min = $y;\n        $max = $x;\n    }\n    \n    while($min\
    \ < $max) {\n        $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n\
    \            $min = $mid + 1;\n        } else {\n            $max = $mid;\n  \
    \      }\n    }\n    \n    return $min;\n}\n\n$x = choose_num(8, 10);\n$y = choose_num(9,\
    \ 10);\necho \"$x is even, and $y is odd\\n\";", "    if ($x < $y) {\n       \
    \ $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n    $temp = $x;\n\
    \    $x = $y;\n    $y = $temp;\n    while ($x >= $y) {\n        $x = $x - $y;\n\
    \        $y = $y + $y;\n    }\n    return $x;\n}\n\n$num1 = choose_num($x, $y);\n\
    $num2 = choose_num($x, $y);\n$num3 = choose_num($x, $y);\n$num4 = choose_num($x,\
    \ $y);\n$num5 = choose_num($x, $y);\n$num6 = choose_num($x, $y);\n$num7 = choose_num($x,\
    \ $y);\n$num8 = choose_num($x, $y);\n$num9 = choose_num($x, $y);\n$num10 = choose_num($x,\
    \ $y);\n$num11 = choose_num($x, $y);\n$num12 = choose_num($x, $y);\n$num13 = choose_num($x,\
    \ $y);\n$num14 = choose_num($x, $y);\n$num15 = choose_num($x, $y);\n$num16 = choose_num($x,\
    \ $y);\n$num17 = choose_num($x, $y);\n$num18 = choose_num($x, $y);\n$num19 = choose_num($x,\
    \ $y);\n$num20 = choose_num($x, $y);\n$num21 = choose_num($x, $y);\n$num22 = choose_num($x,\
    \ $y);\n$num23 = choose_num($x, $y);\n$num24 = choose_num($x, $y);\n$num25 = choose_num($x,\
    \ $y);\n$num26 = choose_num($x, $y);\n$num27 = choose_num($x, $y);\n$num28 = choose_num($x,\
    \ $y);\n$num29 = choose_num($x, $y);\n$num30 = choose_num($x, $y);\n$num31 = choose_num($x,\
    \ $y);\n$num32 = choose_num($x, $y);\n$num33 = choose_num($x, $y);\n$num34 = choose_num($x,\
    \ $y);\n$num35 = choose_num($x, $y);\n$num36 = choose_num($x, $y);\n$num37 = choose_num($x,\
    \ $y);\n$num38 = choose_num($x, $y);\n", "    $evens = array();\n    $odds = array();\n\
    \    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n            $evens[]\
    \ = $i;\n        } else {\n            $odds[] = $i;\n        }\n    }\n    sort($evens);\n\
    \    sort($odds);\n    if(count($evens) > count($odds)) {\n        return $evens[count($evens)\
    \ - 1];\n    } else {\n        return $odds[count($odds) - 1];\n    }\n}", " \
    \   $evens = array();\n    $odds = array();\n    for($i = $x; $i <= $y; $i++)\
    \ {\n        if($i % 2 == 0) {\n            $evens[] = $i;\n        } else {\n\
    \            $odds[] = $i;\n        }\n    }\n    sort($evens);\n    sort($odds);\n\
    \    foreach($evens as $even) {\n        if($even > $odds[0]) {\n            return\
    \ $even;\n        }\n    }\n    return -1;\n}", "    $evens = array();\n    $odds\
    \ = array();\n    for($i = $x; $i <= $y; $i++) {\n        if($i % 2 == 0) {\n\
    \            $evens[] = $i;\n        } else {\n            $odds[] = $i;\n   \
    \     }\n    }\n    sort($evens);\n    sort($odds);\n    $even = array_pop($evens);\n\
    \    $odd = array_pop($odds);\n    if($even > $odd) {\n        return $even;\n\
    \    } else {\n        return $odd;\n    }\n}\n", "    $result = -1;\n    if ($x\
    \ > $y) {\n        $temp = $x;\n        $x = $y;\n        $y = $temp;\n    }\n\
    \    while ($x <= $y) {\n        if ($x % 2 == 0) {\n            $result = $x;\n\
    \            break;\n        }\n        $x = $x + 1;\n    }\n    return $result;\n\
    }", "    $evens = array();\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $evens[] = $i;\n        }\n    }\n    if (count($evens)\
    \ > 0) {\n        return max($evens);\n    } else {\n        return -1;\n    }\n\
    }\n\n$x = choose_num(7, 15);\necho \"The biggest even number between 7 and 15\
    \ is $x\\n\";", "    $evens = array();\n    $odds = array();\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n\
    \        } else {\n            $odds[] = $i;\n        }\n    }\n    if (count($evens)\
    \ > count($odds)) {\n        return $evens[count($evens) - 1];\n    } else {\n\
    \        return $odds[count($odds) - 1];\n    }\n}\n", "    $result = -1;\n  \
    \  if ($x > $y) {\n        $result = $x;\n        $x = $y;\n        $y = $result;\n\
    \    }\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n    \
    \        $result = $i;\n            break;\n        }\n    }\n    return $result;\n\
    }", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n\
    \        $min = $y;\n        $max = $x;\n    }\n    $even = 0;\n    $odd = 1;\n\
    \    while ($min <= $max) {\n        $mid = ($min + $max) / 2;\n        if ($mid\
    \ % 2 == 0) {\n            $even = $mid;\n        } else {\n            $odd =\
    \ $mid;\n        }\n        if ($even > $odd) {\n            $min = $mid + 1;\n\
    \        } else {\n            $max = $mid - 1;\n        }\n    }\n    return\
    \ $even;\n}", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n  \
    \  } else {\n        $min = $y;\n        $max = $x;\n    }\n    do {\n       \
    \ $mid = ($min + $max) / 2;\n        if ($mid % 2 == 0) {\n            $min =\
    \ $mid + 1;\n        } else {\n            $max = $mid;\n        }\n    } while\
    \ ($min <= $max);\n    return $min;\n}", "    if ($x > $y) {\n        $temp =\
    \ $x;\n        $x = $y;\n        $y = $temp;\n    }\n    \n    if ($x == $y) {\n\
    \        return $x;\n    }\n    \n    if ($x % 2 == 0) {\n        $even = $x /\
    \ 2;\n        return $choose_num($even, $y);\n    }\n    \n    if ($y % 2 == 0)\
    \ {\n        $even = $y / 2;\n        return $choose_num($x, $even);\n    }\n\
    \    \n    if ($x == $y % 2) {\n        return $x;\n    }\n    \n    return -1;\n\
    }", "    if ($x < $y) {\n        $min = $x;\n        $max = $y;\n    } else {\n\
    \        $min = $y;\n        $max = $x;\n    }\n    \n    for($i = $min; $i <=\
    \ $max; $i++) {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n\
    \    }\n    return -1;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

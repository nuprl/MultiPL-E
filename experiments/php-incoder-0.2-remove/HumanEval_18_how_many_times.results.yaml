language: php
name: HumanEval_18_how_many_times
results:
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4lyz9eu.php:18\n\
    Stack trace:\n#0 /tmp/tmpg4lyz9eu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpg4lyz9eu.php\
    \ on line 18\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5piqd93.php:20\n\
    Stack trace:\n#0 /tmp/tmpc5piqd93.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc5piqd93.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring) {\n      \
    \      $overlap++;\n        }\n    }\n    return $count + $overlap;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprst44w5f.php:19\n\
    Stack trace:\n#0 /tmp/tmprst44w5f.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprst44w5f.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = substr_count($string,\
    \ $substring, 0, $count);\n    return $count + $overlap;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysamy_fw.php:14\n\
    Stack trace:\n#0 /tmp/tmpysamy_fw.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpysamy_fw.php\
    \ on line 14\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rhcx7jv.php:19\n\
    Stack trace:\n#0 /tmp/tmp5rhcx7jv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5rhcx7jv.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $pos = strpos($string, $substring, $i);\n\
    \        if ($pos !== false) {\n            $overlap++;\n            $i = $pos;\n\
    \        }\n    }\n    return $overlap;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fnb02fg.php:22\n\
    Stack trace:\n#0 /tmp/tmp8fnb02fg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8fnb02fg.php\
    \ on line 22\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    $len = strlen($string);\n    while ($pos\
    \ < $len) {\n        $pos = strpos($string, $substring, $pos);\n        if ($pos\
    \ === false) {\n            break;\n        }\n        $count++;\n        $pos++;\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    $len = strlen($string);\n    while ($pos\
    \ < $len) {\n        $pos = strpos($string, $substring, $pos);\n        if ($pos\
    \ === false) {\n            break;\n        }\n        $count++;\n        $pos++;\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    $len = strlen($string);\n    while ($pos\
    \ < $len) {\n        $pos = strpos($string, $substring, $pos);\n        if ($pos\
    \ === false) {\n            break;\n        }\n        $count++;\n        $pos++;\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring[0]) {\n   \
    \         $overlap++;\n        }\n        if ($char == $substring[strlen($substring)\
    \ - 1]) {\n            $overlap--;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahqgsc77.php:24\n\
    Stack trace:\n#0 /tmp/tmpahqgsc77.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpahqgsc77.php\
    \ on line 24\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i\
    \ + $j] != $substring[$j]) {\n                    break;\n                }\n\
    \            }\n            if ($j == $sublen) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = substr_count($string,\
    \ $substring, 0, $count);\n    return $count + $overlap;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqltspqs5.php:15\n\
    Stack trace:\n#0 /tmp/tmpqltspqs5.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpqltspqs5.php\
    \ on line 15\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = substr_count($string,\
    \ $substring, 0, $count);\n    return $count + $overlap;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqltspqs5.php:15\n\
    Stack trace:\n#0 /tmp/tmpqltspqs5.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpqltspqs5.php\
    \ on line 15\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] === $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] !== $substring[$j]) {\n                 \
    \   break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpteidoud7.php:27\n\
    Stack trace:\n#0 /tmp/tmpteidoud7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpteidoud7.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring) {\n      \
    \      $overlap++;\n        }\n        if ($overlap == $count) {\n           \
    \ return $count;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiycixnda.php:23\n\
    Stack trace:\n#0 /tmp/tmpiycixnda.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiycixnda.php\
    \ on line 23\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i\
    \ + $j] != $substring[$j]) {\n                    break;\n                }\n\
    \            }\n            if ($j == $sublen) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < strlen($string); $i++) {\n        if($string[$i] == $substring[$i])\
    \ {\n            $overlap++;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol6y5_ll.php:20\n\
    Stack trace:\n#0 /tmp/tmpol6y5_ll.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpol6y5_ll.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5piqd93.php:20\n\
    Stack trace:\n#0 /tmp/tmpc5piqd93.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc5piqd93.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < strlen($string); $i++) {\n        if($string[$i] == $substring[0])\
    \ {\n            $overlap += 1;\n        }\n        if($string[$i] == $substring[$i])\
    \ {\n            $overlap += 1;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5z3mrl2.php:23\n\
    Stack trace:\n#0 /tmp/tmpw5z3mrl2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw5z3mrl2.php\
    \ on line 23\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring) {\n      \
    \      $overlap++;\n        }\n    }\n    return $count + $overlap;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_8da3b6.php:20\n\
    Stack trace:\n#0 /tmp/tmpf_8da3b6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf_8da3b6.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < $count; $i++) {\n        $overlap = substr_count($string, $substring,\
    \ $i);\n        if($overlap) {\n            break;\n        }\n    }\n    return\
    \ $overlap;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn13k4cw_.php:22\n\
    Stack trace:\n#0 /tmp/tmpn13k4cw_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpn13k4cw_.php\
    \ on line 22\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = substr_count($string,\
    \ $substring, 0, $count);\n    return $count + $overlap;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqltspqs5.php:15\n\
    Stack trace:\n#0 /tmp/tmpqltspqs5.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpqltspqs5.php\
    \ on line 15\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $overlap = substr_count($string, $substring,\
    \ $i);\n        if ($overlap) {\n            break;\n        }\n    }\n    return\
    \ $overlap;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf4i6w04.php:21\n\
    Stack trace:\n#0 /tmp/tmpgf4i6w04.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgf4i6w04.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring[0]) {\n   \
    \         $overlap++;\n        }\n        if ($char == $substring[strlen($substring)\
    \ - 1]) {\n            $overlap--;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahqgsc77.php:24\n\
    Stack trace:\n#0 /tmp/tmpahqgsc77.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpahqgsc77.php\
    \ on line 24\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < $count; $i++) {\n        $pos = strpos($string, $substring, $i);\n\
    \        if($pos === false) {\n            $overlap++;\n        } else {\n   \
    \         $overlap = min($overlap, strlen($substring) - $pos);\n        }\n  \
    \  }\n    return $overlap;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9otjhfta.php:23\n\
    Stack trace:\n#0 /tmp/tmp9otjhfta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9otjhfta.php\
    \ on line 23\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i\
    \ + $j] != $substring[$j]) {\n                    break;\n                }\n\
    \            }\n            $count += $j - 1;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtlxsvrh.php:26\n\
    Stack trace:\n#0 /tmp/tmpxtlxsvrh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxtlxsvrh.php\
    \ on line 26\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rhcx7jv.php:19\n\
    Stack trace:\n#0 /tmp/tmp5rhcx7jv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5rhcx7jv.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    if ($count > 1) {\n\
    \        $count = $count + substr_count($string, strtolower($substring));\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2__6pwj.php:17\n\
    Stack trace:\n#0 /tmp/tmpe2__6pwj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpe2__6pwj.php\
    \ on line 17\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < strlen($string); $i++) {\n        if($string[$i] == $substring[0])\
    \ {\n            $overlap++;\n        }\n        if($string[$i] == $substring[$i])\
    \ {\n            $overlap++;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzw864i4.php:23\n\
    Stack trace:\n#0 /tmp/tmplzw864i4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplzw864i4.php\
    \ on line 23\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += strlen($substring);\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2r4goc.php:20\n\
    Stack trace:\n#0 /tmp/tmp3u2r4goc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3u2r4goc.php\
    \ on line 20\n"
  timestamp: 1659730660
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkssvslw7.php:15\n\
    Stack trace:\n#0 /tmp/tmpkssvslw7.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkssvslw7.php\
    \ on line 15\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (explode(' ', $string) as $word) {\n        if ($word == $substring) {\n   \
    \         $overlap++;\n        }\n    }\n    return $count + $overlap;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4nlb2epx.php:21\n\
    Stack trace:\n#0 /tmp/tmp4nlb2epx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4nlb2epx.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring[0]) {\n   \
    \         $overlap++;\n        }\n        if ($char == $substring[strlen($substring)\
    \ - 1]) {\n            $overlap++;\n        }\n    }\n    return $count + $overlap;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzb847vzc.php:22\n\
    Stack trace:\n#0 /tmp/tmpzb847vzc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzb847vzc.php\
    \ on line 22\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    return $count;\n}\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfmp7j26.php:14\n\
    Stack trace:\n#0 /tmp/tmplfmp7j26.php(18): test()\n#1 {main}\n  thrown in /tmp/tmplfmp7j26.php\
    \ on line 14\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $count++;\n            for ($j = 1; $j < $sublen; $j++) {\n \
    \               if ($string[$i + $j] != $substring[$j]) {\n                  \
    \  break;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxvvy3l.php:27\n\
    Stack trace:\n#0 /tmp/tmpbfxvvy3l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbfxvvy3l.php\
    \ on line 27\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i\
    \ + $j] != $substring[$j]) {\n                    break;\n                }\n\
    \            }\n            if ($j == $sublen) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for\
    \ ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[$i])\
    \ {\n            $overlap++;\n        } else {\n            $overlap = 0;\n  \
    \      }\n        if ($overlap == strlen($substring) - 1) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuahr0iro.php:25\n\
    Stack trace:\n#0 /tmp/tmpuahr0iro.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuahr0iro.php\
    \ on line 25\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkssvslw7.php:15\n\
    Stack trace:\n#0 /tmp/tmpkssvslw7.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkssvslw7.php\
    \ on line 15\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (str_split($string) as $char) {\n        if ($char == $substring[0]) {\n   \
    \         $overlap++;\n        }\n        if ($char == $substring[strlen($substring)\
    \ - 1]) {\n            $overlap++;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmczif34h.php:23\n\
    Stack trace:\n#0 /tmp/tmpmczif34h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmczif34h.php\
    \ on line 23\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i\
    \ + $j] != $substring[$j]) {\n                    break;\n                }\n\
    \            }\n            if ($j == $sublen) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $overlap = substr_count($string, $substring,\
    \ $i);\n        if ($overlap) {\n            $count += $overlap;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nWarning: substr_count(): Offset not contained in string in /tmp/tmptuoy0amw.php\
    \ on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptuoy0amw.php:21\n\
    Stack trace:\n#0 /tmp/tmptuoy0amw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptuoy0amw.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    foreach\
    \ (explode($substring, $string) as $substring) {\n        if ($substring != $string)\
    \ {\n            $overlap += substr_count($string, $substring);\n        }\n \
    \   }\n    return $count + $overlap;\n}\n\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: substr_count(): Empty substring in /tmp/tmptlyub3xd.php on line\
    \ 8\n\nWarning: substr_count(): Empty substring in /tmp/tmptlyub3xd.php on line\
    \ 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlyub3xd.php:20\n\
    Stack trace:\n#0 /tmp/tmptlyub3xd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptlyub3xd.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4lyz9eu.php:18\n\
    Stack trace:\n#0 /tmp/tmpg4lyz9eu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpg4lyz9eu.php\
    \ on line 18\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < strlen($string); $i++) {\n        if($string[$i] == $substring[$i])\
    \ {\n            $overlap++;\n        }\n    }\n    return $count + $overlap;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol6y5_ll.php:20\n\
    Stack trace:\n#0 /tmp/tmpol6y5_ll.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpol6y5_ll.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < $count; $i++) {\n        $pos = strpos($string, $substring, $i);\n\
    \        if($pos === false) {\n            $overlap++;\n        } else {\n   \
    \         $overlap = min($overlap, strlen($substring) - $pos);\n        }\n  \
    \  }\n    return $overlap;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9otjhfta.php:23\n\
    Stack trace:\n#0 /tmp/tmp9otjhfta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9otjhfta.php\
    \ on line 23\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    $overlap = 0;\n    for($i\
    \ = 0; $i < strlen($string); $i++) {\n        if($string[$i] == $substring[0])\
    \ {\n            $overlap += 1;\n        }\n        if($string[$i] == $substring[$i])\
    \ {\n            $overlap += 1;\n        }\n    }\n    return $count + $overlap;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurzbif6p.php:22\n\
    Stack trace:\n#0 /tmp/tmpurzbif6p.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpurzbif6p.php\
    \ on line 22\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos += strlen($substring);\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph07uovh3.php:19\n\
    Stack trace:\n#0 /tmp/tmph07uovh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph07uovh3.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = substr_count($string, $substring);\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkssvslw7.php:15\n\
    Stack trace:\n#0 /tmp/tmpkssvslw7.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkssvslw7.php\
    \ on line 15\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    $len = strlen($string);\n    while ($pos\
    \ < $len) {\n        $pos = strpos($string, $substring, $pos);\n        if ($pos\
    \ === false) {\n            break;\n        }\n        $count++;\n        $pos++;\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = strpos($string, $substring);\n    while ($pos\
    \ !== false) {\n        $count++;\n        $pos = strpos($string, $substring,\
    \ $pos + 1);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mime93g.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mime93g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6mime93g.php\
    \ on line 21\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (strpos($string, $substring,\
    \ $i) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5piqd93.php:20\n\
    Stack trace:\n#0 /tmp/tmpc5piqd93.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc5piqd93.php\
    \ on line 20\n"
  timestamp: 1659730734
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $pos = 0;\n    while ($pos = strpos($string, $substring,\
    \ $pos)) {\n        $count++;\n        $pos = $pos + strlen($substring);\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz73_gg8.php:19\n\
    Stack trace:\n#0 /tmp/tmpkz73_gg8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkz73_gg8.php\
    \ on line 19\n"
  timestamp: 1659730734
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\nfunction how_many_times($string, $substring)\
    \ {\n    $count = 0;\n    $len = strlen($string);\n    $sublen = strlen($substring);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (substr($string, $i, $sublen)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730734

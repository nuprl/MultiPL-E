name: HumanEval_117_select_words
language: php
prompt: "<?php\n// Given a string s and a natural number n, you have been tasked to\
  \ implement \n// a function that returns a list of all words from string s that\
  \ contain exactly \n// n consonants, in order these words appear in the string s.\n\
  // If the string s is empty then the function should return an empty list.\n// Note:\
  \ you may assume the input string contains only letters and spaces.\n// Examples:\n\
  function select_words($s, $n) {\n"
tests: "function candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
  little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
  \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4)\
  \ !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"\
  )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    // Your code here\n}", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_helper($s, $n, 0));\n    return $words;\n}\n", "    $words = array();\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $vowel_count = count($vowels);\n    $consonant_count =\
    \ count($consonants);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n  \
    \  $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n\
    \    $s = 0;\n    $t = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n\
    \    $z = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $word_found\
    \ = false;\n    $word = \"\";\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $word_found = false;\n    $word = \"\";\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    $word_found = false;\n\
    \    $word = \"\";\n    $vowel_found = false;\n    $consonant_found = false;\n\
    \    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $word_found = false;\n    $word = \"\";\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    $word_found = false;\n\
    \    $word = \"\";\n    $vowel_found = false;\n    $consonant_found = false;\n\
    \    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $word_found = false;\n    $word = \"\";\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    $word_found = false;\n\
    \    $word = \"\";\n    $vowel_found = false;\n    $consonant_found = false;\n\
    \    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $word_found = false;\n    $word = \"\";\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $word_found = false;\n    $word = \"\";\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    $word_found = false;\n\
    \    $word = \"\";\n    $vowel_found = false;\n    $consonant_found = false;\n\
    \    $word_found = false;\n    $", "    // Your code here\n}", "    $words = array();\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $s = preg_replace('/[^a-z]/', '', $s);\n    $words = explode('\
    \ ', $s);\n    foreach ($words as $word) {\n        $word = preg_replace('/[^a-z]/',\
    \ '', $word);\n        if (strlen($word) == 0) {\n            continue;\n    \
    \    }\n        $count = 0;\n        foreach ($vowels as $vowel) {\n         \
    \   if (strpos($word, $vowel) !== false) {\n                $count++;\n      \
    \      }\n        }\n        if ($count == $n) {\n            $words[] = $word;\n\
    \        }\n    }\n    return $words;\n}", "    $words = array();\n    $words\
    \ = explode(' ', $s);\n    $words = array_filter($words, 'is_string');\n    $words\
    \ = array_filter($words, 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n\
    \    $words = array_filter($words, 'is_alnum');\n    $words = array_filter($words,\
    \ 'is_space');\n    $words = array_filter($words, 'is_numeric');\n    $words =\
    \ array_filter($words, 'is_string');\n    $words = array_filter($words, 'is_array');\n\
    \    $words = array_filter($words, 'is_object');\n    $words = array_filter($words,\
    \ 'is_callable');\n    $words = array_filter($words, 'is_bool');\n    $words =\
    \ array_filter($words, 'is_scalar');\n    $words = array_filter($words, 'is_int');\n\
    \    $words = array_filter($words, 'is_numeric');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_array');\n    $words =\
    \ array_filter($words, 'is_object');\n    $words = array_filter($words, 'is_callable');\n\
    \    $words = array_filter($words, 'is_bool');\n    $words = array_filter($words,\
    \ 'is_scalar');\n    $words = array_filter($words, 'is_int');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_string');\n    $words\
    \ = array_filter($words, 'is_array');\n    $words = array_filter($words, 'is_object');\n\
    \    $words = array_filter($words, 'is_callable');\n    $words = array_filter($words,\
    \ 'is_bool');\n    $words = array_filter($words, 'is_scalar');\n    $words = array_filter($words,\
    \ 'is_int');\n    $words = array_filter($words, 'is_numeric');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_array');\n    $words =\
    \ array_filter($words, 'is_object');\n    $words = array_filter($words, 'is_callable');\n\
    \    $words = array_filter($words, 'is_bool');\n    $words = array_filter($words,\
    \ 'is_scalar');\n    $words = array_filter($words, 'is_int');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_string');\n    $words\
    \ = array_filter($words, 'is_array');\n    $words = array_filter($words, 'is_object');\n\
    \    $words = array_filter($words, 'is_callable');\n    $words = array_filter($words,\
    \ 'is_bool');\n    $words = array_filter($words, 'is_scalar');\n    $words = array_filter($words,\
    \ 'is_int');\n    $words = array_", "    // Your code here\n}\n\n$tests = array(\n\
    \    array(\n        's' => '',\n        'n' => 0,\n    ),\n    array(\n     \
    \   's' => 'a',\n        'n' => 1,\n    ),\n    array(\n        's' => 'ab',\n\
    \        'n' => 1,\n    ),\n    array(\n        's' => 'abc',\n        'n' =>\
    \ 2,\n    ),\n    array(\n        's' => 'abcd',\n        'n' => 2,\n    ),\n\
    \    array(\n        's' => 'abcde',\n        'n' => 2,\n    ),\n    array(\n\
    \        's' => 'abcdef',\n        'n' => 2,\n    ),\n    array(\n        's'\
    \ => 'abcdefg',\n        'n' => 3,\n    ),\n    array(\n        's' => 'abcdefgh',\n\
    \        'n' => 3,\n    ),\n    array(\n        's' => 'abcdefghi',\n        'n'\
    \ => 3,\n    ),\n    array(\n        's' => 'abcdefghij',\n        'n' => 3,\n\
    \    ),\n    array(\n        's' => 'abcdefghijk',\n        'n' => 3,\n    ),\n\
    \    array(\n        's' => 'abcdefghijkl',\n        'n' => 3,\n    ),\n    array(\n\
    \        's' => 'abcdefghijklm',\n        'n' => 3,\n    ),\n    array(\n    \
    \    's' => 'abcdefghijklmn',\n        'n' => 3,\n    ),\n    array(\n       \
    \ 's' => 'abcdefghijklmno',\n        'n' => 3,\n    ),\n    array(\n        's'\
    \ => 'abcdefghijklmnop',\n        'n' => 3,\n    ),\n    array(\n        's' =>\
    \ 'abcdefghijklmnopq',\n        'n' => 3,\n    ),\n    array(\n        's' =>\
    \ 'abcdefghijklmnopqr',\n        'n' => 3,\n    ),\n    array(\n        's' =>\
    \ 'abcdefghijklmnopqrst',\n        'n' => 3,\n    ),\n    array(\n        's'\
    \ => 'abcdefghijklmnopqrstu',\n        'n' => 3,\n    ),\n    array(\n       \
    \ 's' => 'abcdefghijklmnopqrstuv',\n        'n' => 3,\n    ),\n    array(\n  \
    \      's' => 'abcdefghijklmnopqrstuvw',\n        'n' => 3,\n    ),\n    array(\n\
    \        's' => 'abcdefghijklmnopqrstuvwx',\n        'n' => 3,\n    ),\n    array(\n\
    \        's' => 'abcdefghijklmnopqrstuvwxy',\n        'n' => 3,\n    ),\n    array(\n\
    \        's' => 'abcdefghij", '}', "    // Your code here\n}", "    $words = array();\n\
    \    $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (strlen($word)\
    \ == $n) {\n            $words[] = $word;\n        }\n    }\n    return $words;\n\
    }", "    // Your code here\n}", "    $words = array();\n    \n    // Your code\
    \ here\n    \n    return $words;\n}\n\n$tests = array(\n    array('abba', 2),\n\
    \    array('abba', 3),\n    array('abba', 4),\n    array('abba', 5),\n    array('abba',\
    \ 6),\n    array('abba', 7),\n    array('abba', 8),\n    array('abba', 9),\n \
    \   array('abba', 10),\n    array('abba', 11),\n    array('abba', 12),\n    array('abba',\
    \ 13),\n    array('abba', 14),\n    array('abba', 15),\n    array('abba', 16),\n\
    \    array('abba', 17),\n    array('abba', 18),\n    array('abba', 19),\n    array('abba',\
    \ 20),\n    array('abba', 21),\n    array('abba', 22),\n    array('abba', 23),\n\
    \    array('abba', 24),\n    array('abba', 25),\n    array('abba', 26),\n    array('abba',\
    \ 27),\n    array('abba', 28),\n    array('abba', 29),\n    array('abba', 30),\n\
    \    array('abba', 31),\n    array('abba', 32),\n    array('abba', 33),\n    array('abba',\
    \ 34),\n    array('abba', 35),\n    array('abba', 36),\n    array('abba', 37),\n\
    \    array('abba', 38),\n    array('abba', 39),\n    array('abba', 40),\n    array('abba',\
    \ 41),\n    array('abba', 42),\n    array('abba', 43),\n    array('abba', 44),\n\
    \    array('abba', 45),\n    array('abba', 46),\n    array('abba', 47),\n    array('abba',\
    \ 48),\n    array('abba', 49),\n    array('abba', 50),\n    array('abba', 51),\n\
    \    array('abba', 52),\n    array('abba', 53),\n    array('abba', 54),\n    array('abba',\
    \ 55),\n    array('abba', 56),", "    // Your code here\n}", "    // Your code\
    \ here\n}\n\n$tests = array(\n    array('abba', 2),\n    array('abba', 3),\n \
    \   array('abba', 4),\n    array('abba', 5),\n    array('abba', 6),\n    array('abba',\
    \ 7),\n    array('abba', 8),\n    array('abba', 9),\n    array('abba', 10),\n\
    \    array('abba', 11),\n    array('abba', 12),\n    array('abba', 13),\n    array('abba',\
    \ 14),\n    array('abba', 15),\n    array('abba', 16),\n    array('abba', 17),\n\
    \    array('abba', 18),\n    array('abba', 19),\n    array('abba', 20),\n    array('abba',\
    \ 21),\n    array('abba', 22),\n    array('abba', 23),\n    array('abba', 24),\n\
    \    array('abba', 25),\n    array('abba', 26),\n    array('abba', 27),\n    array('abba',\
    \ 28),\n    array('abba', 29),\n    array('abba', 30),\n    array('abba', 31),\n\
    \    array('abba', 32),\n    array('abba', 33),\n    array('abba', 34),\n    array('abba',\
    \ 35),\n    array('abba', 36),\n    array('abba', 37),\n    array('abba', 38),\n\
    \    array('abba', 39),\n    array('abba', 40),\n    array('abba', 41),\n    array('abba',\
    \ 42),\n    array('abba', 43),\n    array('abba', 44),\n    array('abba', 45),\n\
    \    array('abba', 46),\n    array('abba', 47),\n    array('abba', 48),\n    array('abba',\
    \ 49),\n    array('abba', 50),\n    array('abba', 51),\n    array('abba', 52),\n\
    \    array('abba', 53),\n    array('abba', 54),\n    array('abba', 55),\n    array('abba',\
    \ 56),\n    array('abba', 57),\n    array('ab", "    $words = array();\n    //\
    \ Your code here\n    return $words;\n}\n\n$tests = array(\n    array('abba',\
    \ 3),\n    array('abba', 2),\n    array('abba', 1),\n    array('abba', 0),\n \
    \   array('abba', -1),\n    array('abba', -2),\n    array('abba', -3),\n    array('abba',\
    \ -4),\n    array('abba', -5),\n    array('abba', -6),\n    array('abba', -7),\n\
    \    array('abba', -8),\n    array('abba', -9),\n    array('abba', -10),\n   \
    \ array('abba', -11),\n    array('abba', -12),\n    array('abba', -13),\n    array('abba',\
    \ -14),\n    array('abba', -15),\n    array('abba', -16),\n    array('abba', -17),\n\
    \    array('abba', -18),\n    array('abba', -19),\n    array('abba', -20),\n \
    \   array('abba', -21),\n    array('abba', -22),\n    array('abba', -23),\n  \
    \  array('abba', -24),\n    array('abba', -25),\n    array('abba', -26),\n   \
    \ array('abba', -27),\n    array('abba', -28),\n    array('abba', -29),\n    array('abba',\
    \ -30),\n    array('abba', -31),\n    array('abba', -32),\n    array('abba', -33),\n\
    \    array('abba', -34),\n    array('abba', -35),\n    array('abba', -36),\n \
    \   array('abba', -37),\n    array('abba', -38),\n    array('abba', -39),\n  \
    \  array('abba', -40),\n    array('abba', -41),\n    array('abba', -42),\n   \
    \ array('abba', -43),\n    array('abba', -44),\n    array('abba', -45),\n    array('abba',\
    \ -46),\n    array('abba', -47),\n    array('abba', -48),\n    array('", '}',
  "    $words = array();\n    $words = array_merge($words, select_words($s, $n-1));\n\
    \    $words = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n-1));\n    $words = array_merge($words, select_words($s,\
    \ $n-1));\n    $words = array_merge($words, select_words($s, $n-1));\n    $words\
    \ = array_merge($words, select_words($s, $n", "    $words = array();\n    $words\
    \ = array_merge($words, select_words_helper($s, $n, 0));\n    return $words;\n\
    }\n", "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    $s = preg_replace(\"/[^a-zA-Z ]/\", \"\", $s);\n    $words = explode(\"\
    \ \", $s);\n    foreach ($words as $word) {\n        if (strlen($word) == 0) {\n\
    \            continue;\n        }\n        $count = 0;\n        $vowel_count =\
    \ 0;\n        $consonant_count = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (strpos($vowels, $word[$i]) !== false) {\n         \
    \       $vowel_count++;\n            }\n            if (strpos($consonants, $word[$i])\
    \ !== false) {\n                $consonant_count++;\n            }\n        }\n\
    \        if ($consonant_count == $n) {\n            $words[$i] = $words[$i] .\
    \ \" \" . $words[$i + 1];\n            $words[$i + 1] = \"\";\n        }\n   \
    \     if ($vowel_count == $n) {\n            $words[$i] = $words[$i] . \" \" .\
    \ $words[$i + 1];\n            $words[$i + 1] = \"\";\n        }\n    }\n    return\
    \ $words;\n}", "    $words = array();\n    $i = 0;\n    while($i < strlen($s))\
    \ {\n        $words[] = substr($s, $i, 1);\n        $i += 1;\n    }\n    return\
    \ $words;\n}", '}', "}\n", '}', "    $words = array();\n    $vowels = \"aeiou\"\
    ;\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $len = strlen($s);\n    for($i\
    \ = 0; $i < $len; $i++) {\n        $letter = $s[$i];\n        if(in_array($letter,\
    \ $vowels)) {\n            $words[] = $letter;\n        }\n        else if(in_array($letter,\
    \ $consonants)) {\n            $words[] = $letter;\n        }\n        else {\n\
    \            $words[] = $letter;\n        }\n    }\n    return $words;\n}", " \
    \   $words = array();\n    $i = 0;\n    while(isset($s[$i])) {\n        if($s[$i]\
    \ == ' ') {\n            $words[] = substr($s, 0, $i);\n            $s = substr($s,\
    \ $i + 1);\n            $i = 0;\n        } else {\n            $i++;\n       \
    \ }\n    }\n    if($s != '') {\n        $words[] = $s;\n    }\n    return $words;\n\
    }\n\n$tests = array('', 'a', 'ab', 'abc', 'abbbc', 'abbbccc');\nforeach($tests\
    \ as $s) {\n    foreach(select_words($s, 2) as $word) {\n        echo $word .\
    \ \"\\n\";\n    }\n}", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_by_count($s, 0));\n    return $words;\n}\n", "    $words = array();\n\
    \    $words = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n));\n    return $words;\n}", "    $words = array();\n   \
    \ foreach (str_split($s) as $letter) {\n        if (strlen($letter) == $n) {\n\
    \            $words[] = $letter;\n        }\n    }\n    return $words;\n}", " \
    \   $words = array();\n    $i = 0;\n    $len = strlen($s);\n    while($i < $len)\
    \ {\n        $consonants = count_consonants($s, $i);\n        if($consonants ==\
    \ $n) {\n            $words[] = substr($s, $i, $i - $n);\n            $i += $n\
    \ - 1;\n        }\n        $i++;\n    }\n    return $words;\n}\n", "    $words\
    \ = array();\n    $words = array_filter($s);\n    return $words;\n}", "    $words\
    \ = array();\n    $words = array_merge($words, select_words_helper($s, 0, $n));\n\
    \    return $words;\n}\n", "    $words = array();\n    $i = 0;\n    $len = strlen($s);\n\
    \    while($i < $len) {\n        $cons = substr($s, $i, 1);\n        $i++;\n \
    \       $j = 0;\n        $len2 = strlen($s);\n        while($j < $len2) {\n  \
    \          $cons2 = substr($s, $j, 1);\n            if($cons == $cons2) {\n  \
    \              $words[] = $cons;\n                $j++;\n            } else {\n\
    \                $j++;\n            }\n        }\n        $i++;\n    }\n    return\
    \ $words;\n}", "    $words = array();\n    $consonants = array('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z');\n    \n    // Your code here\n    \n    return $words;\n}", "   \
    \ // Your code here\n}", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_helper($s, 0, $n));\n    return $words;\n}\n", "    $words = array();\n\
    \    $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (count($word)\
    \ == $n) {\n            $words[] = $word;\n        }\n    }\n    return $words;\n\
    }\n", "    $words = array();\n    $words = explode(' ', $s);\n    foreach ($words\
    \ as $word) {\n        if (strlen($word) == $n) {\n            $words[] = $word;\n\
    \        }\n    }\n    return $words;\n}", '}', '}', "    // Your code here\n}",
  "    $words = array();\n    $words = array_merge($words, select_words($s, $n-1));\n\
    \    $words = array_merge($words, select_words($s, $n));\n    return $words;\n\
    }\n", "    // Your code here\n}", "    $words = array();\n    // Your code here\n\
    \    return $words;\n}", "    $words = array();\n    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n   \
    \ $s = strtolower($s);\n    $n = intval($n);\n    if ($s == '') {\n        return\
    \ $words;\n    }\n    $words = explode(' ', $s);\n    foreach ($words as $word)\
    \ {\n        if (strlen($word) == 0) {\n            continue;\n        }\n   \
    \     $word = strtolower($word);\n        $len = strlen($word);\n        for ($i\
    \ = 0; $i < $len; $i++) {\n            if (in_array($word[$i], $vowels)) {\n \
    \               continue;\n            }\n            if (in_array($word[$i],\
    \ $consonants)) {\n                $words[$i] = $words[$i] . $word[$i];\n    \
    \        }\n        }\n        $words = array_unique($words);\n        if (count($words)\
    \ == $n) {\n            $words[] = $word;\n        }\n    }\n    return $words;\n\
    }\n", "    // Your code here\n}", "    $words = array();\n    $vowels = \"aeiou\"\
    ;\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $s = strtolower($s);\n  \
    \  $n = intval($n);\n    if ($s == \"\") {\n        return $words;\n    }\n  \
    \  $words = explode(\" \", $s);\n    foreach ($words as $word) {\n        $word\
    \ = strtolower($word);\n        $n = strlen($word);\n        if ($n == 0) {\n\
    \            continue;\n        }\n        $vowel_count = count(str_split($word));\n\
    \        $consonant_count = count(str_split($consonants));\n        if ($vowel_count\
    \ < $consonant_count) {\n            $words[] = $word;\n        }\n    }\n   \
    \ return $words;\n}", "    // Your code here\n}", "    $words = array();\n   \
    \ $len = strlen($s);\n    $i = 0;\n    while($i < $len) {\n        $word = substr($s,\
    \ $i, 1);\n        $j = 0;\n        while($j < $n) {\n            $word .= substr($s,\
    \ $i + $j + 1, 1);\n            $j++;\n        }\n        $words[] = $word;\n\
    \        $i += $n;\n    }\n    return $words;\n}\n\n$tests = array(\n    '',\n\
    \    'a',\n    'ab',\n    'abc',\n    'abcd',\n    'abcde',\n    'abcdef',\n \
    \   'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n    'abcdefghij',\n    'abcdefghijk',\n\
    \    'abcdefghijkl',\n    'abcdefghijklm',\n    'abcdefghijklmn',\n    'abcdefghijklmno',\n\
    \    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n    'abcdefghijklmnopqr',\n\
    \    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n    'abcdefghijklmnopqrstu',\n\
    \    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n    'abcdefghijklmnopqrstuvwx',\n\
    \    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n    'abcdefghijklmnopqrstuvwxyza',\n\
    \    'abcdefghijklmnopqrstuvwxyzab',\n    'abcdefghijklmnopqrstuvwxyzabc',\n \
    \   'abcdefghijklmnopqrstuvwxyzabcd',\n    'abcdefghijklmnopqrstuvwxyzabcde',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdef',\n    'abcdefghijklmnopqrstuvwxyzabcdefg',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijk",
  "    // Your code here\n}", "    $words = array();\n    $words = explode(\" \",\
    \ $s);\n    $words = array_filter($words);\n    $words = array_unique($words);\n\
    \    $words = array_slice($words, 0, $n);\n    return $words;\n}", "    $words\
    \ = array();\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants =\
    \ array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $vowels_count = count($vowels);\n \
    \   $consonants_count = count($consonants);\n    $vowels_index = array_search($n,\
    \ $vowels);\n    $consonants_index = array_search($n, $consonants);\n    $vowels_count\
    \ = count($vowels);\n    $consonants_count = count($consonants);\n    $i = 0;\n\
    \    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $p = 0;\n\
    \    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $v = 0;\n    $w = 0;\n\
    \    $x = 0;\n    $y = 0;\n    $z = 0;\n    $vowels_count = count($vowels);\n\
    \    $consonants_count = count($consonants);\n    $vowels_index = array_search($n,\
    \ $vowels);\n    $consonants_index = array_search($n, $consonants);\n    $vowels_count\
    \ = count($vowels);\n    $consonants_count = count($consonants);\n    $vowels_index\
    \ = array_search($n, $vowels);\n    $consonants_index = array_search($n, $consonants);\n\
    \    $vowels_count = count($vowels);\n    $consonants_count = count($consonants);\n\
    \    $vowels_index = array_search($n, $vowels);\n    $consonants_index = array_search($n,\
    \ $consonants);\n    $vowels_count = count($vowels);\n    $consonants_count =\
    \ count($consonants);\n    $vowels_index = array_search($n, $vowels);\n    $consonants_index\
    \ = array_search($n, $consonants);\n    $vowels_count = count($vowels);\n    $consonants_count\
    \ = count($consonants);\n    $vowels_index = array_search($n, $vowels);\n    $consonants_index\
    \ = array_search($n, $consonants);\n    $vowels_count = count($vowels);\n    $consonants_count\
    \ = count($consonants);\n    $vowels_index = array_search($n, $vowels);\n    $consonants_index\
    \ = array_search($n, $consonants);\n    $vowels_count = count($vowels);\n    $consonants_count\
    \ = count($consonants);\n    $vowel", "    // Your code here\n}", "    // Your\
    \ code here\n}\n\n$tests = array(\n    array('abba', 2),\n    array('abba', 1),\n\
    \    array('abba', 0),\n    array('abba', -1),\n    array('abba', -2),\n    array('abba',\
    \ -3)\n);\n\nforeach ($tests as $test) {\n    echo select_words($test[0], $test[1])\
    \ . \"\\n\";\n}", '}', "    // Your code here\n}\n\n$tests = array(\n    \"a\"\
    \ => 1,\n    \"ab\" => 1,\n    \"abc\" => 1,\n    \"abcd\" => 1,\n    \"abcde\"\
    \ => 1,\n    \"abcdef\" => 1,\n    \"abcdefg\" => 1,\n    \"abcdefgh\" => 1,\n\
    \    \"abcdefghi\" => 1,\n    \"abcdefghij\" => 1,\n    \"abcdefghijk\" => 1,\n\
    \    \"abcdefghijkl\" => 1,\n    \"abcdefghijklm\" => 1,\n    \"abcdefghijklmn\"\
    \ => 1,\n    \"abcdefghijklmno\" => 1,\n    \"abcdefghijklmnop\" => 1,\n    \"\
    abcdefghijklmnopq\" => 1,\n    \"abcdefghijklmnopqr\" => 1,\n    \"abcdefghijklmnopqrs\"\
    \ => 1,\n    \"abcdefghijklmnopqrst\" => 1,\n    \"abcdefghijklmnopqrstu\" =>\
    \ 1,\n    \"abcdefghijklmnopqrstuv\" => 1,\n    \"abcdefghijklmnopqrstuvw\" =>\
    \ 1,\n    \"abcdefghijklmnopqrstuvwx\" => 1,\n    \"abcdefghijklmnopqrstuvwxy\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyz\" => 1,\n    \"abcdefghijklmnopqrstuvwxyza\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyzab\" => 1,\n    \"abcdefghijklmnopqrstuvwxyzabc\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcd\" => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcde\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdef\" => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefg\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefgh\" => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefghi\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefghij\" => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefghijk\"\
    \ => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefghijkl\" => 1,\n    \"abcdefghijklmnopqrstuvwxyzabcdefgh",
  "    $words = array();\n    $words = explode(' ', $s);\n    foreach ($words as $word)\
    \ {\n        if (strlen($word) == $n) {\n            $words[] = $word;\n     \
    \   }\n    }\n    return $words;\n}", "    // Your code here\n}", "}\n", '}',
  "    // Your code here\n}", "    // Your code here\n}\n\n$tests = array(\n    '',\n\
    \    'a',\n    'ab',\n    'abc',\n    'abcd',\n    'abcde',\n    'abcdef',\n \
    \   'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n    'abcdefghij',\n    'abcdefghijk',\n\
    \    'abcdefghijkl',\n    'abcdefghijklm',\n    'abcdefghijklmn',\n    'abcdefghijklmno',\n\
    \    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n    'abcdefghijklmnopqr',\n\
    \    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n    'abcdefghijklmnopqrstu',\n\
    \    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n    'abcdefghijklmnopqrstuvwx',\n\
    \    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n    'abcdefghijklmnopqrstuvwxyza',\n\
    \    'abcdefghijklmnopqrstuvwxyzab',\n    'abcdefghijklmnopqrstuvwxyzabc',\n \
    \   'abcdefghijklmnopqrstuvwxyzabcd',\n    'abcdefghijklmnopqrstuvwxyzabcde',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdef',\n    'abcdefghijklmnopqrstuvwxyzabcdefg',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnop',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijk",
  "    $words = array();\n    $words = explode(' ', $s);\n    foreach ($words as $word)\
    \ {\n        if (strlen($word) == $n) {\n            $words[] = $word;\n     \
    \   }\n    }\n    return $words;\n}", "    // Your code here\n}", "    $words\
    \ = array();\n    $words = array_merge($words, select_words_helper($s, $n, 0));\n\
    \    return $words;\n}\n", "    $words = array();\n    $words = explode(' ', $s);\n\
    \    foreach ($words as $word) {\n        if (count($word) == $n) {\n        \
    \    $words[] = $word;\n        }\n    }\n    return $words;\n}\n", "    $words\
    \ = array();\n    $words = explode(' ', $s);\n    foreach ($words as $word) {\n\
    \        if (strlen($word) == $n) {\n            $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n            $consonants = array_flip($consonants);\n      \
    \      $consonants = array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = array_flip($consonants);\n            $consonants =\
    \ array_filter($consonants);\n            $consonants = array_keys($consonants);\n\
    \            $consonants = ", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_helper($s, $n));\n    return $words;\n}\n", "    $words = array();\n\
    \    foreach (str_split($s) as $char) {\n        if ($char == ' ') {\n       \
    \     $words[] = $char;\n        }\n    }\n    return $words;\n}", "    // Your\
    \ code here\n}", "    // Your code here\n}\n\n$tests = array(\n    array('abba',\
    \ 2),\n    array('abba', 1),\n    array('abba', 3),\n    array('abba', 4),\n \
    \   array('abba', 5),\n    array('abba', 6),\n    array('abba', 7),\n    array('abba',\
    \ 8),\n    array('abba', 9),\n    array('abba', 10),\n    array('abba', 11),\n\
    \    array('abba', 12),\n    array('abba', 13),\n    array('abba', 14),\n    array('abba',\
    \ 15),\n    array('abba', 16),\n    array('abba', 17),\n    array('abba', 18),\n\
    \    array('abba', 19),\n    array('abba', 20),\n    array('abba', 21),\n    array('abba',\
    \ 22),\n    array('abba', 23),\n    array('abba', 24),\n    array('abba', 25),\n\
    \    array('abba', 26),\n    array('abba', 27),\n    array('abba', 28),\n    array('abba',\
    \ 29),\n    array('abba', 30),\n    array('abba', 31),\n    array('abba', 32),\n\
    \    array('abba', 33),\n    array('abba', 34),\n    array('abba', 35),\n    array('abba',\
    \ 36),\n    array('abba', 37),\n    array('abba', 38),\n    array('abba', 39),\n\
    \    array('abba', 40),\n    array('abba', 41),\n    array('abba', 42),\n    array('abba',\
    \ 43),\n    array('abba', 44),\n    array('abba', 45),\n    array('abba', 46),\n\
    \    array('abba', 47),\n    array('abba', 48),\n    array('abba', 49),\n    array('abba',\
    \ 50),\n    array('abba', 51),\n    array('abba', 52),\n    array('abba', 53),\n\
    \    array('abba', 54),\n    array('abba', 55),\n    array('abba', 56),\n    array('abba",
  "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    $s = preg_replace(\"/[^a-zA-Z ]/\", \"\", $s);\n    $words = explode(\"\
    \ \", $s);\n    $n = intval($n);\n    foreach ($words as $word) {\n        if\
    \ (strlen($word) == 0) {\n            continue;\n        }\n        $count = 0;\n\
    \        foreach (str_split($word) as $char) {\n            if (in_array($char,\
    \ $consonants)) {\n                $count++;\n            }\n        }\n     \
    \   if ($count == $n) {\n            $words[] = $word;\n        }\n    }\n   \
    \ return $words;\n}\n", "    // Your code here\n}", "    $words = array();\n \
    \   // Your code here\n}", "    $words = array();\n    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n   \
    \ $vowels_count = count($vowels);\n    $consonants_count = count($consonants);\n\
    \    $n = $n % $vowels_count;\n    $s = strtolower($s);\n    $words = explode('\
    \ ', $s);\n    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_array');\n    $words =\
    \ array_filter($words, 'is_null');\n    $words = array_filter($words, 'is_bool');\n\
    \    $words = array_filter($words, 'is_object');\n    $words = array_filter($words,\
    \ 'is_scalar');\n    $words = array_filter($words, 'is_callable');\n    $words\
    \ = array_filter($words, 'is_resource');\n    $words = array_filter($words, 'is_scalar');\n\
    \    $words = array_filter($words, 'is_array');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_numeric');\n    $words\
    \ = array_filter($words, 'is_callable');\n    $words = array_filter($words, 'is_object');\n\
    \    $words = array_filter($words, 'is_scalar');\n    $words = array_filter($words,\
    \ 'is_resource');\n    $words = array_filter($words, 'is_null');\n    $words =\
    \ array_filter($words, 'is_bool');\n    $words = array_filter($words, 'is_scalar');\n\
    \    $words = array_filter($words, 'is_array');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_numeric');\n    $words\
    \ = array_filter($words, 'is_callable');\n    $words = array_filter($words, 'is_object');\n\
    \    $words = array_filter($words, 'is_scalar');\n    $words = array_filter($words,\
    \ 'is_resource');\n    $words = array_filter($words, 'is_null');\n    $words =\
    \ array_filter($words, 'is_bool');\n    $words = array_filter($words, 'is_scalar');\n\
    \    $words = array_filter($words, 'is_array');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_numeric');\n    $words\
    \ = array_filter($words, 'is_callable');\n    $words = array_filter($words, 'is_object');\n\
    \    $words = array_filter($words, 'is_scalar');\n    $words = array_filter($words,\
    \ 'is_resource');\n    $words = array_filter", "    // Your code here\n}", " \
    \   // Your code here\n}\n\n$tests = array(\n    \"a\" => 1,\n    \"ab\" => 2,\n\
    \    \"abc\" => 3,\n    \"abcd\" => 4,\n    \"abcde\" => 5,\n    \"abcdef\" =>\
    \ 6,\n    \"abcdefg\" => 7,\n    \"abcdefgh\" => 8,\n    \"abcdefghi\" => 9,\n\
    \    \"abcdefghij\" => 10,\n    \"abcdefghijk\" => 11,\n    \"abcdefghijkl\" =>\
    \ 12,\n    \"abcdefghijklm\" => 13,\n    \"abcdefghijklmn\" => 14,\n    \"abcdefghijklmno\"\
    \ => 15,\n    \"abcdefghijklmnop\" => 16,\n    \"abcdefghijklmnopq\" => 17,\n\
    \    \"abcdefghijklmnopqrs\" => 18,\n    \"abcdefghijklmnopqrsj\" => 19,\n   \
    \ \"abcdefghijklmnopqrsjk\" => 20,\n    \"abcdefghijklmnopqrsjkl\" => 21,\n  \
    \  \"abcdefghijklmnopqrsjklm\" => 22,\n    \"abcdefghijklmnopqrsjklmn\" => 23,\n\
    \    \"abcdefghijklmnopqrsjklmnj\" => 24,\n    \"abcdefghijklmnopqrsjklmnjk\"\
    \ => 25,\n    \"abcdefghijklmnopqrsjklmnjkl\" => 26,\n    \"abcdefghijklmnopqrsjklmnjklm\"\
    \ => 27,\n    \"abcdefghijklmnopqrsjklmnjklmn\" => 28,\n    \"abcdefghijklmnopqrsjklmnjklmnj\"\
    \ => 29,\n    \"abcdefghijklmnopqrsjklmnjklmnjk\" => 30,\n    \"abcdefghijklmnopqrsjklmnjklmnjkl\"\
    \ => 31,\n    \"abcdefghijklmnopqrsjklmnjklmnjklm\" => 32,\n    \"abcdefghijklmnopqrsjklmnjklmnjklmn\"\
    \ => 33,\n    \"abcdefghijklmnopqrsjklmnjklmnjklmnj\" => 34,\n    \"abcdefghijklmnopqrsjklmnjklmnjklmnjk\"\
    \ => 35,\n    \"abcdefghijklmnopqrsjklmnjklmnjk", "    $words = array();\n   \
    \ // Your code here\n    return $words;\n}", "    $words = array();\n    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n    $vowels_count = count($vowels);\n    $consonants_count = count($consonants);\n\
    \    $s_length = strlen($s);\n    $n = $n % $consonants_count;\n    $consonant_count\
    \ = $consonants_count - $n;\n    $vowel_count = $vowels_count - $n;\n    $i =\
    \ 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o\
    \ = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $v\
    \ = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_count = 0;\n    $vowels_count = count($vowels);\n    $consonants_count\
    \ = count($consonants);\n    $s_length = strlen($s);\n    $i = 0;\n    $j = 0;\n\
    \    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n\
    \    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $v = 0;\n    $w = 0;\n\
    \    $x = 0;\n    $y = 0;\n    $z = 0;\n    $consonant_count = 0;\n    $vowel_count\
    \ = 0;\n    $vowels_count = count($vowels);\n    $consonants_count = count($consonants);\n\
    \    $s_length = strlen($s);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l =\
    \ 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r\
    \ = 0;\n    $s = 0;\n    $t = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y\
    \ = 0;\n    $z = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n    $vowels_count\
    \ = count($vowels);\n    $consonants_count = count($consonants);\n    $s_length\
    \ = strlen($s);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m =\
    \ 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s\
    \ = 0;\n    $t = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z\
    \ = 0;\n    $consonant_count = 0;\n    $", "    // Your code here\n}", "    $words\
    \ = array();\n    $len = strlen($s);\n    if ($len == 0) {\n        return $words;\n\
    \    }\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $len = strlen($s);\n    $i = 0;\n    $j = 0;\n   \
    \ $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n \
    \   $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $v = 0;\n    $w = 0;\n\
    \    $x = 0;\n    $y = 0;\n    $z = 0;\n    $consonant_count = 0;\n    $vowel_count\
    \ = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n\
    \    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n\
    \    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n   \
    \ $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n  \
    \  $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n\
    \    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n\
    \    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n   \
    \ $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n  \
    \  $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n\
    \    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n\
    \    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n   \
    \ $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n  \
    \  $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count\
    \ = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n\
    \    $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n\
    \    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n   \
    \ $consonant_count = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n  \
    \  $vowel_count = 0;\n    $conson", "    $words = array();\n    $i = 0;\n    $len\
    \ = strlen($s);\n    while ($i < $len) {\n        $words[] = substr($s, $i, 1);\n\
    \        $i += 1;\n    }\n    return $words;\n}", "    $words = array();\n   \
    \ $len = strlen($s);\n    $i = 0;\n    while ($i < $len) {\n        $word = '';\n\
    \        $j = 0;\n        while ($j < $n) {\n            if ($s[$i] == ' ') {\n\
    \                $word .= ' ';\n                $j++;\n            } else {\n\
    \                $word .= $s[$i];\n                $j++;\n            }\n    \
    \    }\n        $words[] = $word;\n        $i++;\n    }\n    return $words;\n}",
  "    // Your code here\n}", '}', "    $words = array();\n    $words = explode('\
    \ ', $s);\n    foreach ($words as $word) {\n        $count = count($word);\n \
    \       if ($count == $n) {\n            $words[] = $word;\n        }\n    }\n\
    \    return $words;\n}", '}', "    $words = array();\n    $vowels = \"aeiou\"\
    ;\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    \n    if ($s == \"\") {\n\
    \        return $words;\n    }\n    \n    $words = explode(\" \", $s);\n    \n\
    \    foreach ($words as $word) {\n        if (strlen($word) == 0) {\n        \
    \    continue;\n        }\n        \n        $chars = str_split($word);\n    \
    \    \n        $count = 0;\n        \n        foreach ($chars as $char) {\n  \
    \          if (in_array($char, $vowels)) {\n                $count++;\n      \
    \      }\n            \n            if (in_array($char, $consonants)) {\n    \
    \            $count++;\n            }\n        }\n        \n        if ($count\
    \ == $n) {\n            $words[] = $word;\n        }\n    }\n    \n    return\
    \ $words;\n}", "    $words = array();\n    // Your code here\n    return $words;\n\
    }", "    $words = array();\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n  \
    \  $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $s = strtolower($s);\n\
    \    $n = intval($n);\n    if ($s == '') {\n        return $words;\n    }\n  \
    \  $words = explode(' ', $s);\n    $words = array_filter($words, 'is_string');\n\
    \    $words = array_filter($words, 'is_numeric');\n    $words = array_filter($words,\
    \ 'is_array');\n    $words = array_filter($words, 'is_alpha');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_array');\n    $words =\
    \ array_filter($words, 'is_numeric');\n    $words = array_filter($words, 'is_string');\n\
    \    $words = array_filter($words, 'is_array');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_string');\n    $words\
    \ = array_filter($words, 'is_array');\n    $words = array_filter($words, 'is_numeric');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_array');\n    $words = array_filter($words, 'is_numeric');\n    $words =\
    \ array_filter($words, 'is_string');\n    $words = array_filter($words, 'is_array');\n\
    \    $words = array_filter($words, 'is_numeric');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_array');\n    $words =\
    \ array_filter($words, 'is_numeric');\n    $words = array_filter($words, 'is_string');\n\
    \    $words = array_filter($words, 'is_array');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_string');\n    $words\
    \ = array_filter($words, 'is_array');\n    $words = array_filter($words, 'is_numeric');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_array');\n    $words = array_filter($words, 'is_numeric');\n    $words =\
    \ array_filter($words, 'is_string');\n    $words = array_filter($words, 'is_array');\n\
    \    $words = array_filter($words, 'is_numeric');\n    $words = array_filter($words,\
    \ 'is_string');\n    $words = array_filter($words, 'is_array');\n    $words =\
    \ array_filter($words, 'is_numeric');\n    $words = array_filter($words, 'is_string');\n\
    \    $words = array_filter", "    // Your code here\n}\n\n$words = \"abc def ghi\
    \ jkl mno pqr stu vwx yz\";\n$result = select_words($words, 3);\nprint_r($result);",
  '}', "    $words = array();\n    $words = array_merge($words, select_words_helper($s,\
    \ 0, $n));\n    return $words;\n}\n", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_helper($s, $n, 0));\n    return $words;\n}\n", "    // Your code\
    \ here\n}\n\n$tests = array(\n    '',\n    'a',\n    'ab',\n    'abc',\n    'abcd',\n\
    \    'abcde',\n    'abcdef',\n    'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n\
    \    'abcdefghij',\n    'abcdefghijk',\n    'abcdefghijkl',\n    'abcdefghijklm',\n\
    \    'abcdefghijklmn',\n    'abcdefghijklmno',\n    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n\
    \    'abcdefghijklmnopqr',\n    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n\
    \    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n\
    \    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n\
    \    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n   \
    \ 'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n  \
    \  'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnop',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm", "    $words = array();\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n    $s = strtolower($s);\n\
    \    $n = intval($n);\n    if ($s == \"\") {\n        return $words;\n    }\n\
    \    $words = explode(\" \", $s);\n    foreach ($words as $word) {\n        $word\
    \ = strtolower($word);\n        if (strlen($word) == 0) {\n            continue;\n\
    \        }\n        $count = 0;\n        $vowel_count = 0;\n        $consonant_count\
    \ = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            $char =\
    \ substr($word, $i, 1);\n            if (in_array($char, $consonants)) {\n   \
    \             $consonant_count++;\n            }\n            if (in_array($char,\
    \ $vowels)) {\n                $vowel_count++;\n            }\n        }\n   \
    \     if ($consonant_count == $n) {\n            $words[$i] = $words[$i] . \"\
    \ \" . $words[$i + 1];\n            $words[$i + 1] = \"\";\n            $words[$i]\
    \ = substr($word, 0, $i);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $i - 1);\n            $words[$i] =\
    \ substr($word, 0, $i - 1);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $i - 1);\n            $words[$i] =\
    \ substr($word, 0, $i - 1);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $i - 1);\n            $words[$i] =\
    \ substr($word, 0, $i - 1);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $i - 1);\n            $words[$i] =\
    \ substr($word, 0, $i - 1);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $i - 1);\n            $words[$i] =\
    \ substr($word, 0, $i - 1);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $i - 1);\n            $words[$i] =\
    \ substr($word, 0, $i - 1);\n            $words[$i] = substr($word, 0, $i - 1);\n\
    \            $words[$i] = substr($word, 0, $", "    // Your code here\n}", " \
    \   $words = array();\n    // Your code here\n    return $words;\n}", "    $words\
    \ = array();\n    // Your code here\n    return $words;\n}", "    $words = array();\n\
    \    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $n\
    \ = strlen($s);\n    $i = 0;\n    while ($i < $n) {\n        $j = 0;\n       \
    \ while ($j < strlen($s)) {\n            if ($s[$j] == $vowels[$i]) {\n      \
    \          $words[] = $s;\n                break;\n            }\n           \
    \ if ($s[$j] == $consonants[$i]) {\n                $words[] = $s;\n         \
    \       break;\n            }\n            $j++;\n        }\n        $i++;\n \
    \   }\n    return $words;\n}", '}', "    // Your code here\n}", "    // Your code\
    \ here\n}", "    $words = array();\n    // Your code here\n    return $words;\n\
    }", "    // Your code here\n}", "    $words = array();\n    $words = explode(\"\
    \ \", $s);\n    $words = array_filter($words);\n    $words = array_unique($words);\n\
    \    $words = array_slice($words, 0, $n);\n    return $words;\n}", "    $words\
    \ = array();\n    $words = array_merge($words, select_words_helper($s, $n, 0));\n\
    \    return $words;\n}\n", "    $words = array();\n    $words = explode(\" \"\
    , $s);\n    $words = array_filter($words);\n    $words = array_unique($words);\n\
    \    $words = array_filter($words);\n    $words = array_values($words);\n    $words\
    \ = array_count_values($words);\n    $words = array_filter($words);\n    $words\
    \ = array_keys($words);\n    $words = array_filter($words);\n    $words = array_values($words);\n\
    \    $words = array_count_values($words);\n    $words = array_filter($words);\n\
    \    $words = array_keys($words);\n    $words = array_filter($words);\n    $words\
    \ = array_values($words);\n    $words = array_count_values($words);\n    $words\
    \ = array_filter($words);\n    $words = array_keys($words);\n    $words = array_filter($words);\n\
    \    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($words);\n    $words = array_keys($words);\n    $words\
    \ = array_filter($words);\n    $words = array_values($words);\n    $words = array_count_values($words);\n\
    \    $words = array_filter($", '}', "    // Your code here\n}", "    $words =\
    \ array();\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    $vowels_count = count($vowels);\n    $consonants_count\
    \ = count($consonants);\n    $s = strtolower($s);\n    $n = intval($n);\n    if\
    \ ($s == '') {\n        return $words;\n    }\n    $words = explode(' ', $s);\n\
    \    foreach ($words as $word) {\n        $word_count = count(explode(',', $word));\n\
    \        if ($word_count == $n) {\n            $words[] = $word;\n        }\n\
    \    }\n    return $words;\n}\n$tests = array(\n    '',\n    'a',\n    'ab',\n\
    \    'abc',\n    'abcd',\n    'abcde',\n    'abcdef',\n    'abcdefg',\n    'abcdefgh',\n\
    \    'abcdefghi',\n    'abcdefghij',\n    'abcdefghijk',\n    'abcdefghijkl',\n\
    \    'abcdefghijklm',\n    'abcdefghijklmn',\n    'abcdefghijklmno',\n    'abcdefghijklmnop',\n\
    \    'abcdefghijklmnopq',\n    'abcdefghijklmnopqs',\n    'abcdefghijklmnopqrs',\n\
    \    'abcdefghijklmnopqrst',\n    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n\
    \    'abcdefghijklmnopqrstuvw',\n    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n\
    \    'abcdefghijklmnopqrstuvwxyz',\n    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n\
    \    'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvw", "    // Your code here\n}", "    $words = array();\n\
    \    $words = explode(\" \", $s);\n    foreach ($words as $word) {\n        if\
    \ (strlen($word) == $n) {\n            $words[] = $word;\n        }\n    }\n \
    \   return $words;\n}", "    // Your code here\n}", '}', "    $words = array();\n\
    \    $words = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n));\n    return $words;\n}", "    // Your code here\n}",
  "    $words = array();\n    \n    // Your code here\n    \n    return $words;\n\
    }\n\n$tests = array(\n    '',\n    'a',\n    'ab',\n    'abc',\n    'abcd',\n\
    \    'abcde',\n    'abcdef',\n    'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n\
    \    'abcdefghij',\n    'abcdefghijk',\n    'abcdefghijkl',\n    'abcdefghijklm',\n\
    \    'abcdefghijklmn',\n    'abcdefghijklmno',\n    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n\
    \    'abcdefghijklmnopqr',\n    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n\
    \    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n\
    \    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n\
    \    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n   \
    \ 'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n  \
    \  'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnop',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopq',\n",
  "    $words = array();\n    $words = array_merge($words, select_words($s, $n - 1));\n\
    \    $words = array_merge($words, select_words($s, $n - 2));\n    $words = array_merge($words,\
    \ select_words($s, $n - 3));\n    $words = array_merge($words, select_words($s,\
    \ $n - 4));\n    $words = array_merge($words, select_words($s, $n - 5));\n   \
    \ $words = array_merge($words, select_words($s, $n - 6));\n    $words = array_merge($words,\
    \ select_words($s, $n - 7));\n    $words = array_merge($words, select_words($s,\
    \ $n - 8));\n    $words = array_merge($words, select_words($s, $n - 9));\n   \
    \ $words = array_merge($words, select_words($s, $n - 10));\n    $words = array_merge($words,\
    \ select_words($s, $n - 11));\n    $words = array_merge($words, select_words($s,\
    \ $n - 12));\n    $words = array_merge($words, select_words($s, $n - 13));\n \
    \   $words = array_merge($words, select_words($s, $n - 14));\n    $words = array_merge($words,\
    \ select_words($s, $n - 15));\n    $words = array_merge($words, select_words($s,\
    \ $n - 16));\n    $words = array_merge($words, select_words($s, $n - 17));\n \
    \   $words = array_merge($words, select_words($s, $n - 18));\n    $words = array_merge($words,\
    \ select_words($s, $n - 19));\n    $words = array_merge($words, select_words($s,\
    \ $n - 20));\n    $words = array_merge($words, select_words($s, $n - 21));\n \
    \   $words = array_merge($words, select_words($s, $n - 22));\n    $words = array_merge($words,\
    \ select_words($s, $n - 23));\n    $words = array_merge($words, select_words($s,\
    \ $n - 24));\n    $words = array_merge($words, select_words($s, $n - 25));\n \
    \   $words = array_merge($words, select_words($s, $n - 26));\n    $words = array_merge($words,\
    \ select_words($s, $n - 27));\n    $words = array_merge($words, select_words($s,\
    \ $n - 28));\n    $words = array_merge($words, select_words($s, $n - 29));\n \
    \   $words = array_merge($words, select_words($s, $n - 30));\n    $words = array_merge($words,\
    \ select_words($s, $n - 31));\n    $words = array_merge($words, select_words($s,\
    \ $n - 32));\n    $words = array_merge($words, select_words($s, $n - 33));\n \
    \   $words = array_merge($words, select_words($s, $n - 34));", '}', "    $words\
    \ = array();\n    $words = explode(\" \", $s);\n    $words = array_filter($words);\n\
    \    $words = array_unique($words);\n    $words = array_map(\"trim\", $words);\n\
    \    $words = array_map(\"ucfirst\", $words);\n    $words = array_map(\"strlen\"\
    , $words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($word", "    $words = array();\n\
    \    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    foreach ($consonants as $consonant) {\n        if (strpos($s,\
    \ $consonant) !== false) {\n            $words[] = $consonant;\n        }\n  \
    \  }\n    return $words;\n}", "    $words = array();\n    \n    // Your code here\n\
    \    \n    return $words;\n}", "    $words = array();\n    $vowels = \"aeiou\"\
    ;\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $s = strtolower($s);\n  \
    \  $n = intval($n);\n    if ($s == \"\") {\n        return $words;\n    }\n  \
    \  $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n        $char = substr($s,\
    \ $i, 1);\n        if (in_array($char, $vowels)) {\n            $words[] = $char;\n\
    \        }\n    }\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        $char = substr($s, $i, 1);\n        if (in_array($char, $consonants))\
    \ {\n            $words[] = $char;\n        }\n    }\n    $len = strlen($s);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $char = substr($s, $i, 1);\n   \
    \     if (in_array($char, $consonants) && in_array($char, $vowels)) {\n      \
    \      $words[] = $char;\n        }\n    }\n    $len = strlen($s);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $char = substr($s, $i, 1);\n        if (in_array($char,\
    \ $consonants) && in_array($char, $vowels) && in_array($char, $vowels)) {\n  \
    \          $words[] = $char;\n        }\n    }\n    $len = strlen($s);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $char = substr($s, $i, 1);\n        if\
    \ (in_array($char, $consonants) && in_array($char, $vowels) && in_array($char,\
    \ $vowels) && in_array($char, $vowels)) {\n            $words[] = $char;\n   \
    \     }\n    }\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        $char = substr($s, $i, 1);\n        if (in_array($char, $consonants)\
    \ && in_array($char, $vowels) && in_array($char, $vowels) && in_array($char, $vowels)\
    \ && in_array($char, $vowels)) {\n            $words[] = $char;\n        }\n \
    \   }\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n        $char\
    \ = substr($s, $i, 1);\n        if (in_array($char, $consonants) && in_array($char,\
    \ $vowels) && in_array($char, $vowels) && in_array($char, $vowels) && in_array($char,\
    \ $vowels) && in_array($char, $vowel", "    // Your code here\n}", "    $words\
    \ = array();\n    $words = array_merge($words, select_words_helper($s, $n));\n\
    \    return $words;\n}\n", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_by_consonant($s, $n));\n    $words = array_merge($words, select_words_by_vowel($s,\
    \ $n));\n    $words = array_merge($words, select_words_by_consonant_and_vowel($s,\
    \ $n));\n    return $words;\n}\n", "    // Your code here\n}", "    $words = array();\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    \n    if ($s == '') {\n        return $words;\n    }\n\
    \    \n    $len = strlen($s);\n    \n    for ($i = 0; $i < $len; $i++) {\n   \
    \     $char = substr($s, $i, 1);\n        \n        if (in_array($char, $vowels))\
    \ {\n            $words[] = $char;\n        }\n        \n        if (in_array($char,\
    \ $consonants)) {\n            $words[] = $char;\n        }\n    }\n    \n   \
    \ return $words;\n}", "    // Your code here\n}", "    // Your code here\n}\n\n\
    $tests = array(\n    array('abba', 1),\n    array('abba', 2),\n    array('abba',\
    \ 3),\n    array('abba', 4),\n    array('abba', 5),\n    array('abba', 6),\n \
    \   array('abba', 7),\n    array('abba', 8),\n    array('abba', 9),\n    array('abba',\
    \ 10),\n    array('abba', 11),\n    array('abba', 12),\n    array('abba', 13),\n\
    \    array('abba', 14),\n    array('abba', 15),\n    array('abba', 16),\n    array('abba',\
    \ 17),\n    array('abba', 18),\n    array('abba', 19),\n    array('abba', 20),\n\
    \    array('abba', 21),\n    array('abba', 22),\n    array('abba', 23),\n    array('abba',\
    \ 24),\n    array('abba', 25),\n    array('abba', 26),\n    array('abba', 27),\n\
    \    array('abba', 28),\n    array('abba', 29),\n    array('abba', 30),\n    array('abba',\
    \ 31),\n    array('abba', 32),\n    array('abba', 33),\n    array('abba', 34),\n\
    \    array('abba', 35),\n    array('abba', 36),\n    array('abba', 37),\n    array('abba',\
    \ 38),\n    array('abba', 39),\n    array('abba', 40),\n    array('abba', 41),\n\
    \    array('abba', 42),\n    array('abba', 43),\n    array('abba', 44),\n    array('abba',\
    \ 45),\n    array('abba', 46),\n    array('abba', 47),\n    array('abba', 48),\n\
    \    array('abba', 49),\n    array('abba', 50),\n    array('abba', 51),\n    array('abba',\
    \ 52),\n    array('abba', 53),\n    array('abba', 54),\n    array('abba', 55),\n\
    \    array('abba', 56),\n    array('abba", "    $words = array();\n    $i = 0;\n\
    \    $len = strlen($s);\n    while ($i < $len) {\n        $words[] = substr($s,\
    \ $i, 1);\n        $i += 1;\n    }\n    return $words;\n}", "    $words = array();\n\
    \    \n    // Your code here\n    \n    return $words;\n}\n\n$tests = array(\n\
    \    \"abracadabra\",\n    \"a\",\n    \"abracadabra\",\n    \"abracadabra\",\n\
    \    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\",\n    \"abracadabra\"\
    ,\n    \"abracadabra\",\n    \"abrac", '}', "    $words = array();\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    \n    if ($s == \"\") {\n        return $words;\n    }\n    \n    $words\
    \ = explode(\" \", $s);\n    \n    foreach ($words as $word) {\n        $word_count\
    \ = count(explode(\" \", $word));\n        \n        if ($word_count == $n) {\n\
    \            $words[] = $word;\n        }\n    }\n    \n    return $words;\n}\n\
    \n$result = select_words(\"a b c d e f g h i j k l m n p q r s t v w x y z\",\
    \ 3);\nprint_r($result);", "    $words = array();\n    $words = explode(' ', $s);\n\
    \    foreach ($words as $word) {\n        if (strlen($word) == $n) {\n       \
    \     $words[] = $word;\n        }\n    }\n    return $words;\n}\n", "    $words\
    \ = array();\n    foreach (str_split($s) as $letter) {\n        if (strlen($letter)\
    \ == $n) {\n            $words[] = $letter;\n        }\n    }\n    return $words;\n\
    }\n\n$tests = array(\n    '',\n    'a',\n    'ab',\n    'abc',\n    'abcd',\n\
    \    'abcde',\n    'abcdef',\n    'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n\
    \    'abcdefghij',\n    'abcdefghijk',\n    'abcdefghijkl',\n    'abcdefghijklm',\n\
    \    'abcdefghijklmn',\n    'abcdefghijklmno',\n    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n\
    \    'abcdefghijklmnopqr',\n    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n\
    \    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n\
    \    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n\
    \    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n   \
    \ 'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n  \
    \  'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',", "    $words = array();\n \
    \   $words = array_merge($words, select_words_helper($s, $n, 0));\n    return\
    \ $words;\n}\n", "    $words = array();\n    $words = explode(\" \", $s);\n  \
    \  $words = array_filter($words);\n    $words = array_unique($words);\n    $words\
    \ = array_map(\"trim\", $words);\n    $words = array_map(\"strtolower\", $words);\n\
    \    $words = array_filter($words);\n    $words = array_map(\"strlen\", $words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($words);\n\
    \    $words = array_filter($words);\n    $words = array_filter($words);\n    $words\
    \ = array_filter($words);\n    $words = array_filter($words);\n    $words = array_filter($word",
  "    $words = array();\n    $words = explode(' ', $s);\n    sort($words);\n    $words\
    \ = array_unique($words);\n    $words = array_slice($words, 0, $n);\n    return\
    \ $words;\n}\n", "    $words = array();\n    $words = explode(\" \", $s);\n  \
    \  foreach ($words as $word) {\n        if (strlen($word) == $n) {\n         \
    \   $words[] = $word;\n        }\n    }\n    return $words;\n}", "    $words =\
    \ array();\n    // Your code here\n    return $words;\n}", "    $words = array();\n\
    \    \n    // Your code goes here\n    \n    return $words;\n}\n\n$tests = array(\n\
    \    array('abacaba', 2),\n    array('abacaba', 3),\n    array('abacaba', 4),\n\
    \    array('abacaba', 5),\n    array('abacaba', 6),\n    array('abacaba', 7),\n\
    \    array('abacaba', 8),\n    array('abacaba', 9),\n    array('abacaba', 10),\n\
    \    array('abacaba', 11),\n    array('abacaba', 12),\n    array('abacaba', 13),\n\
    \    array('abacaba', 14),\n    array('abacaba', 15),\n    array('abacaba', 16),\n\
    \    array('abacaba', 17),\n    array('abacaba', 18),\n    array('abacaba', 19),\n\
    \    array('abacaba', 20),\n    array('abacaba', 21),\n    array('abacaba', 22),\n\
    \    array('abacaba', 23),\n    array('abacaba', 24),\n    array('abacaba', 25),\n\
    \    array('abacaba', 26),\n    array('abacaba', 27),\n    array('abacaba', 28),\n\
    \    array('abacaba', 29),\n    array('abacaba', 30),\n    array('abacaba', 31),\n\
    \    array('abacaba', 32),\n    array('abacaba', 33),\n    array('abacaba', 34),\n\
    \    array('abacaba', 35),\n    array('abacaba', 36),\n    array('abacaba', 37),\n\
    \    array('abacaba', 38),\n    array('abacaba', 39),\n    array('abacaba', 40),\n\
    \    array('abacaba', 41),\n    array('abacaba', 42),\n    array('abacaba', 43),\n\
    \    array('abacaba', 44),\n    array('abacaba', 45),\n    array('abacaba', 46),\n\
    \    array('abacaba', 47),\n    array('abacaba', 48),\n    array('abacaba', 49),\n\
    \    array('abacaba', 50),\n    array('", "    $words = array();\n    $words =\
    \ array_merge($words, select_words_by_count($s, $n, 0));\n    return $words;\n\
    }\n", "    $words = array();\n    $words = array_merge($words, select_words_helper($s,\
    \ 0, $n));\n    return $words;\n}\n", "    $words = array();\n    // Your code\
    \ here\n    return $words;\n}", "    $words = array();\n    $words = explode(\"\
    \ \", $s);\n    foreach ($words as $word) {\n        if (strlen($word) == 0) {\n\
    \            continue;\n        }\n        $consonants = count_consonants($word);\n\
    \        if ($consonants == $n) {\n            $words[] = $word;\n        }\n\
    \    }\n    return $words;\n}\n", "    $words = array();\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n\
    \    \n    // Write your code here\n    \n    return $words;\n}\n\n$tests = array(\n\
    \    '',\n    'a',\n    'ab',\n    'abc',\n    'abcd',\n    'abcde',\n    'abcdef',\n\
    \    'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n    'abcdefghij',\n    'abcdefghijk',\n\
    \    'abcdefghijkl',\n    'abcdefghijklm',\n    'abcdefghijklmn',\n    'abcdefghijklmno',\n\
    \    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n    'abcdefghijklmnopqrs',\n\
    \    'abcdefghijklmnopqrst',\n    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n\
    \    'abcdefghijklmnopqrstuvw',\n    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n\
    \    'abcdefghijklmnopqrstuvwxyz',\n    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n\
    \    'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n\
    \    'abcdefgh", "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n    $len = strlen($s);\n    if ($len == 0) {\n\
    \        return $words;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $char\
    \ = substr($s, $i, 1);\n        if (in_array($char, $vowels)) {\n            $words[]\
    \ = $char;\n        }\n        if (in_array($char, $consonants)) {\n         \
    \   $words[] = $char;\n        }\n    }\n    return $words;\n}", "    $words =\
    \ array();\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    $s = preg_replace('/[^a-zA-Z\\s]/', '', $s);\n   \
    \ $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (strlen($word)\
    \ == 0) {\n            continue;\n        }\n        $word = strtolower($word);\n\
    \        $count = count($word);\n        $vowel_count = count(preg_grep('/[aeiou]/i',\
    \ $word));\n        $consonant_count = count(preg_grep('/[^aeiou]/i', $word));\n\
    \        if ($count == $n && $vowel_count == 0 && $consonant_count == 0) {\n \
    \           $words[] = $word;\n        }\n    }\n    return $words;\n}", "   \
    \ $words = array();\n    \n    // Your code here\n    \n    return $words;\n}\n\
    \n$tests = array(\n    array(\"\", 0),\n    array(\"a\", 0),\n    array(\"ab\"\
    , 1),\n    array(\"aba\", 2),\n    array(\"abac\", 2),\n    array(\"abaca\", 2),\n\
    \    array(\"abacab\", 3),\n    array(\"abacaba\", 3),\n    array(\"abacabac\"\
    , 3),\n    array(\"abacabaca\", 3),\n    array(\"abacabacab\", 3),\n    array(\"\
    abacabacaba\", 3),\n    array(\"abacabacabac\", 3),\n    array(\"abacabacabaca\"\
    , 3),\n    array(\"abacabacabacab\", 3),\n    array(\"abacabacabacaba\", 3),\n\
    \    array(\"abacabacabacabac\", 3),\n    array(\"abacabacabacabaca\", 3),\n \
    \   array(\"abacabacabacabacab\", 3),\n    array(\"abacabacabacabacaba\", 3),\n\
    \    array(\"abacabacabacabacabac\", 3),\n    array(\"abacabacabacabacabaca\"\
    , 3),\n    array(\"abacabacabacabacabacab\", 3),\n    array(\"abacabacabacabacabacaba\"\
    , 3),\n    array(\"abacabacabacabacabacabac\", 3),\n    array(\"abacabacabacabacabacabaca\"\
    , 3),\n    array(\"abacabacabacabacabacabacab\", 3),\n    array(\"abacabacabacabacabacabacaba\"\
    , 3),\n    array(\"abacabacabacabacabacabacabac\", 3),\n    array(\"abacabacabacabacabacabacabaca\"\
    , 3),\n    array(\"abacabacabacabacabacabacabacab\", 3),\n    array(\"abacabacabacabacabacabacabacaba\"\
    , 3),\n    array(\"abacabacabacabacabacabacabacabac\", 3),\n    array(\"abacabacabacabacabacabacabacabaca\"\
    , 3),\n    array(\"abacabacabacabac", '}', "    $words = array();\n    $words\
    \ = explode(' ', $s);\n    $words = array_filter($words);\n    $words = array_unique($words);\n\
    \    $words = array_slice($words, 0, $n);\n    return $words;\n}\n", '}', "  \
    \  $words = array();\n    $words = array_merge($words, select_words_helper($s,\
    \ 0, $n));\n    return $words;\n}\n", "    // Your code here\n}\n\n$result = select_words('abracadabra',\
    \ 2);\nprint_r($result);", "    $words = array();\n    $words = array_filter($s,\
    \ function($word) use ($n) {\n        return count(preg_grep('/[bcdfghjklmnpqrstvwxyz]{'\
    \ . $n . '}/', $word)) == $n;\n    });\n    return $words;\n}\n\n$string = 'abracadabra';\n\
    $n = 3;\nprint_r(select_words($string, $n));", "    // Your code here\n}", " \
    \   $words = array();\n    $words = explode(' ', $s);\n    sort($words);\n   \
    \ $words = array_unique($words);\n    $words = array_slice($words, 0, $n);\n \
    \   return $words;\n}\n", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_by_consonant($s, $n));\n    $words = array_merge($words, select_words_by_vowel($s,\
    \ $n));\n    return $words;\n}\n", "    $words = array();\n    $vowels = \"aeiou\"\
    ;\n    $consonants = \"bcdfghjklmnpqrstvwxyz\";\n    $n = strlen($s);\n    for($i\
    \ = 0; $i < $n; $i++) {\n        $word = \"\";\n        for($j = 0; $j < strlen($s);\
    \ $j++) {\n            if($s[$j] == $consonants[$i]) {\n                $word\
    \ .= $consonants[$i];\n            }\n        }\n        if($word == $s) {\n \
    \           $words[] = $word;\n        }\n    }\n    return $words;\n}", "   \
    \ // Your code here\n}\n\n$tests = array(\n    array('abba', 2),\n    array('abba',\
    \ 1),\n    array('abba', 0),\n    array('abba', -1),\n    array('abba', 4),\n\
    \    array('abba', 5),\n    array('abba', 6),\n    array('abba', 7),\n    array('abba',\
    \ 8),\n    array('abba', 9),\n    array('abba', 10),\n    array('abba', 11),\n\
    \    array('abba', 12),\n    array('abba', 13),\n    array('abba', 14),\n    array('abba',\
    \ 15),\n    array('abba', 16),\n    array('abba', 17),\n    array('abba', 18),\n\
    \    array('abba', 19),\n    array('abba', 20),\n    array('abba', 21),\n    array('abba',\
    \ 22),\n    array('abba', 23),\n    array('abba', 24),\n    array('abba', 25),\n\
    \    array('abba', 26),\n    array('abba', 27),\n    array('abba', 28),\n    array('abba',\
    \ 29),\n    array('abba', 30),\n    array('abba', 31),\n    array('abba', 32),\n\
    \    array('abba', 33),\n    array('abba', 34),\n    array('abba', 35),\n    array('abba',\
    \ 36),\n    array('abba', 37),\n    array('abba', 38),\n    array('abba', 39),\n\
    \    array('abba', 40),\n    array('abba', 41),\n    array('abba', 42),\n    array('abba',\
    \ 43),\n    array('abba', 44),\n    array('abba', 45),\n    array('abba', 46),\n\
    \    array('abba', 47),\n    array('abba', 48),\n    array('abba', 49),\n    array('abba',\
    \ 50),\n    array('abba', 51),\n    array('abba', 52),\n    array('abba', 53),\n\
    \    array('abba', 54),\n    array('abba', 55),\n    array('abba', ", "    $words\
    \ = array();\n    $words = array_merge($words, select_words_helper($s, 0, $n));\n\
    \    return $words;\n}\n", "    // Your code here\n}", "    // Your code here\n\
    }\n\n$tests = array(\n    '',\n    'a',\n    'ab',\n    'abc',\n    'abcd',\n\
    \    'abcde',\n    'abcdef',\n    'abcdefg',\n    'abcdefgh',\n    'abcdefghi',\n\
    \    'abcdefghij',\n    'abcdefghijk',\n    'abcdefghijkl',\n    'abcdefghijklm',\n\
    \    'abcdefghijklmn',\n    'abcdefghijklmno',\n    'abcdefghijklmnop',\n    'abcdefghijklmnopq',\n\
    \    'abcdefghijklmnopqr',\n    'abcdefghijklmnopqrs',\n    'abcdefghijklmnopqrst',\n\
    \    'abcdefghijklmnopqrstu',\n    'abcdefghijklmnopqrstuv',\n    'abcdefghijklmnopqrstuvw',\n\
    \    'abcdefghijklmnopqrstuvwx',\n    'abcdefghijklmnopqrstuvwxy',\n    'abcdefghijklmnopqrstuvwxyz',\n\
    \    'abcdefghijklmnopqrstuvwxyza',\n    'abcdefghijklmnopqrstuvwxyzab',\n   \
    \ 'abcdefghijklmnopqrstuvwxyzabc',\n    'abcdefghijklmnopqrstuvwxyzabcd',\n  \
    \  'abcdefghijklmnopqrstuvwxyzabcde',\n    'abcdefghijklmnopqrstuvwxyzabcdef',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefg',\n    'abcdefghijklmnopqrstuvwxyzabcdefgh',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghi',\n    'abcdefghijklmnopqrstuvwxyzabcdefghij',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijkl',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklm',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmn',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijklmno',\n    'abcdefghijklmnopqrstuvwxyzabcdefghijklmnop',\n\
    \    'abcdefghijklmnopqrstuvwxyzabcdefghijk", "}\n", "    $words = array();\n\
    \    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    foreach (str_split($s)\
    \ as $char) {\n        if (in_array($char, $consonants)) {\n            $words[]\
    \ = $char;\n        }\n    }\n    return $words;\n}", "    // Your code here\n\
    }\n\n$tests = array(\n    array(\n        's' => '',\n        'n' => 0,\n    ),\n\
    \    array(\n        's' => 'a',\n        'n' => 1,\n    ),\n    array(\n    \
    \    's' => 'ab',\n        'n' => 1,\n    ),\n    array(\n        's' => 'abc',\n\
    \        'n' => 1,\n    ),\n    array(\n        's' => 'abcd',\n        'n' =>\
    \ 1,\n    ),\n    array(\n        's' => 'abcde',\n        'n' => 1,\n    ),\n\
    \    array(\n        's' => 'abcdef',\n        'n' => 1,\n    ),\n    array(\n\
    \        's' => 'abcdefg',\n        'n' => 1,\n    ),\n    array(\n        's'\
    \ => 'abcdefgh',\n        'n' => 1,\n    ),\n    array(\n        's' => 'abcdefghi',\n\
    \        'n' => 1,\n    ),\n    array(\n        's' => 'abcdefghij',\n       \
    \ 'n' => 1,\n    ),\n    array(\n        's' => 'abcdefghijk',\n        'n' =>\
    \ 1,\n    ),\n    array(\n        's' => 'abcdefghijkl',\n        'n' => 1,\n\
    \    ),\n    array(\n        's' => 'abcdefghijklm',\n        'n' => 1,\n    ),\n\
    \    array(\n        's' => 'abcdefghijklmn',\n        'n' => 1,\n    ),\n   \
    \ array(\n        's' => 'abcdefghijklmn',\n        'n' => 2,\n    ),\n    array(\n\
    \        's' => 'abcdefghijklmn',\n        'n' => 3,\n    ),\n    array(\n   \
    \     's' => 'abcdefghijklmn',\n        'n' => 4,\n    ),\n    array(\n      \
    \  's' => 'abcdefghijklmn',\n        'n' => 5,\n    ),\n    array(\n        's'\
    \ => 'abcdefghijklmn',\n        'n' => 6,\n    ),\n    array(\n        's' =>\
    \ 'abcdefghijklmn',\n        'n' => 7,\n    ),\n    array(\n        's' => 'abcdefghijklmn',\n\
    \        'n' => 8,\n    ),\n    array(\n        's' => 'abcdefghijklmn',\n   \
    \     'n' => 9,\n    ),\n    array(\n        's' => 'abcdefghijklmn',\n      \
    \  'n' => 10,\n    ),\n    array(\n        's' => 'abcdefghijklmn',\n        'n'\
    \ => 11,\n    ),\n    array(\n        's' => 'abcdefghijklmn',\n        'n' =>\
    \ 12,\n    ),\n    array(\n        's' => 'abcdefghijklmn',\n        'n' => 13,\n\
    \    ),\n    array(\n", "    $words = array();\n    $i = 0;\n    $len = strlen($s);\n\
    \    while ($i < $len) {\n        $cons = substr($s, $i, 1);\n        $i++;\n\
    \        $j = 0;\n        $len2 = strlen($s);\n        while ($j < $len2) {\n\
    \            $cons2 = substr($s, $j, 1);\n            $j++;\n            if ($cons\
    \ == $cons2) {\n                $words[] = $cons;\n            }\n        }\n\
    \    }\n    return $words;\n}", "    // Your code here\n}", "    $words = array();\n\
    \    $words = array_merge($words, select_words_helper($s, 0, $n));\n    return\
    \ $words;\n}\n", "    $words = array();\n    $words = explode(' ', $s);\n    foreach\
    \ ($words as $word) {\n        if (strlen($word) == $n) {\n            $words[]\
    \ = $word;\n        }\n    }\n    return $words;\n}", "    // Your code here\n\
    }", "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    $s = strtolower($s);\n    $n = intval($n);\n    if ($s == \"\") {\n   \
    \     return $words;\n    }\n    $words = explode(\" \", $s);\n    foreach ($words\
    \ as $word) {\n        $word = strtolower($word);\n        if (strlen($word) ==\
    \ 0) {\n            continue;\n        }\n        $letters = str_split($word);\n\
    \        $count = 0;\n        foreach ($letters as $letter) {\n            if\
    \ (in_array($letter, $vowels)) {\n                $count++;\n            }\n \
    \           if (in_array($letter, $consonants)) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $words[] =\
    \ $word;\n        }\n    }\n    return $words;\n}", '}', "    // Your code here\n\
    }", "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    $s = preg_replace(\"/[^a-zA-Z ]/\", \"\", $s);\n    $words = preg_split(\"\
    /\\s+/\", $s);\n    $words = array_filter($words, \"is_string\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_array\");\n    $words = array_filter($words, \"is_null\");\n    $words = array_filter($words,\
    \ \"is_bool\");\n    $words = array_filter($words, \"is_object\");\n    $words\
    \ = array_filter($words, \"is_scalar\");\n    $words = array_filter($words, \"\
    is_callable\");\n    $words = array_filter($words, \"is_resource\");\n    $words\
    \ = array_filter($words, \"is_scalar\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_string\");\n    $words\
    \ = array_filter($words, \"is_array\");\n    $words = array_filter($words, \"\
    is_null\");\n    $words = array_filter($words, \"is_bool\");\n    $words = array_filter($words,\
    \ \"is_object\");\n    $words = array_filter($words, \"is_scalar\");\n    $words\
    \ = array_filter($words, \"is_callable\");\n    $words = array_filter($words,\
    \ \"is_resource\");\n    $words = array_filter($words, \"is_scalar\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_string\");\n    $words = array_filter($words, \"is_array\");\n    $words =\
    \ array_filter($words, \"is_null\");\n    $words = array_filter($words, \"is_bool\"\
    );\n    $words = array_filter($words, \"is_object\");\n    $words = array_filter($words,\
    \ \"is_scalar\");\n    $words = array_filter($words, \"is_callable\");\n    $words\
    \ = array_filter($words, \"is_resource\");\n    $words = array_filter($words,\
    \ \"is_scalar\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_string\");\n    $words = array_filter($words, \"\
    is_array\");\n    $words = array_filter($words, \"is_null\");\n    $words = array_filter($words,\
    \ \"is_bool\");\n    $words = array_filter($words, \"is_object\");\n    $words\
    \ = array_filter($words, \"is_scalar\");\n    $words = array_filter($words, \"\
    is_callable\");\n    $words = array_filter($words, \"is_resource\");\n    $words\
    \ = array_filter($words, \"is_scalar\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($word", "    // Your code here\n}",
  "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    $s = strtolower($s);\n    $n = intval($n);\n    if ($s == \"\") {\n   \
    \     return $words;\n    }\n    $words = explode(\" \", $s);\n    foreach ($words\
    \ as $word) {\n        $word = trim($word);\n        if (strlen($word) == 0) {\n\
    \            continue;\n        }\n        $vowel_count = substr_count($word,\
    \ $vowels);\n        $consonant_count = substr_count($word, $consonants);\n  \
    \      if ($vowel_count == $n) {\n            $words[] = $word;\n        }\n \
    \       if ($consonant_count == $n) {\n            $words[] = $word;\n       \
    \ }\n    }\n    return $words;\n}", "    $words = array();\n    foreach (str_split($s)\
    \ as $letter) {\n        if (strlen($letter) == $n) {\n            $words[] =\
    \ $letter;\n        }\n    }\n    return $words;\n}", "    // Your code here\n\
    }", "    // Your code here\n}\n\n$tests = array(\n    array('ab', 1),\n    array('ab',\
    \ 2),\n    array('ab', 3),\n    array('ab', 4),\n    array('ab', 5),\n    array('ab',\
    \ 6),\n    array('ab', 7),\n    array('ab', 8),\n    array('ab', 9),\n    array('ab',\
    \ 10),\n    array('ab', 11),\n    array('ab', 12),\n    array('ab', 13),\n   \
    \ array('ab', 14),\n    array('ab', 15),\n    array('ab', 16),\n    array('ab',\
    \ 17),\n    array('ab', 18),\n    array('ab', 19),\n    array('ab', 20),\n   \
    \ array('ab', 21),\n    array('ab', 22),\n    array('ab', 23),\n    array('ab',\
    \ 24),\n    array('ab', 25),\n    array('ab', 26),\n    array('ab', 27),\n   \
    \ array('ab', 28),\n    array('ab', 29),\n    array('ab', 30),\n    array('ab',\
    \ 31),\n    array('ab', 32),\n    array('ab', 33),\n    array('ab', 34),\n   \
    \ array('ab', 35),\n    array('ab', 36),\n    array('ab', 37),\n    array('ab',\
    \ 38),\n    array('ab', 39),\n    array('ab', 40),\n    array('ab', 41),\n   \
    \ array('ab', 42),\n    array('ab', 43),\n    array('ab', 44),\n    array('ab',\
    \ 45),\n    array('ab', 46),\n    array('ab', 47),\n    array('ab', 48),\n   \
    \ array('ab', 49),\n    array('ab', 50),\n    array('ab', 51),\n    array('ab',\
    \ 52),\n    array('ab', 53),\n    array('ab', 54),\n    array('ab', 55),\n   \
    \ array('ab', 56),\n    array('ab', 57),\n    array('ab', 58),\n    array('ab',\
    \ 59),\n    array('ab', 60),\n    array('ab', 61),\n    array('ab', 62),\n   \
    \ array('ab', 63),\n    array('ab', ", "    // Your code here\n}", "    // Your\
    \ code here\n}", '}', "    // Your code here\n}\n\n$tests = array(\n    \"aardvark\"\
    ,\n    \"abacus\",\n    \"abbey\",\n    \"abbot\",\n    \"abby\",\n    \"abe\"\
    ,\n    \"abhor\",\n    \"abiding\",\n    \"ability\",\n    \"ablaze\",\n    \"\
    able\",\n    \"abnormal\",\n    \"aboard\",\n    \"abode\",\n    \"abominable\"\
    ,\n    \"abominate\",\n    \"abomination\",\n    \"abort\",\n    \"aborted\",\n\
    \    \"aborting\",\n    \"aborts\",\n    \"abrasive\",\n    \"abrasives\",\n \
    \   \"abreast\",\n    \"abreasts\",\n    \"abroad\",\n    \"abruptly\",\n    \"\
    absence\",\n    \"absences\",\n    \"absent\",\n    \"absentees\",\n    \"absenteeism\"\
    ,\n    \"absently\",\n    \"absinthe\",\n    \"absinthism\",\n    \"absinthisms\"\
    ,\n    \"absorb\",\n    \"absorbed\",\n    \"absorbing\",\n    \"absorbs\",\n\
    \    \"abstain\",\n    \"abstained\",\n    \"abstaining\",\n    \"abstains\",\n\
    \    \"abstract\",\n    \"abstracted\",\n    \"abstraction\",\n    \"abstractions\"\
    ,\n    \"absurd\",\n    \"abundance\",\n    \"abundances\",\n    \"abuse\",\n\
    \    \"abused\",\n    \"abuses\",\n    \"abusive\",\n    \"abusively\",\n    \"\
    abusiveness\",\n    \"academic\",\n    \"academically\",\n    \"academician\"\
    ,\n    \"academicians\",\n    \"academicist\",\n    \"academicists\",\n    \"\
    academy\",\n    \"acajou\",\n    \"acalypha\",\n    \"acanthaceae\",\n    \"acanthaceous\"\
    ,\n    \"acantharia\",\n    \"acantharian\",\n    \"acantharians\",\n    \"acantharii\"\
    ,\n    \"acantharius\",\n    \"acantharus\",\n    \"acanthopterygii\",\n    \"\
    acanthopterygius\",\n    \"acanthous\",\n    \"acanthus\",\n    \"acanthuses\"\
    ,\n    \"acanthyia\",\n    \"acanthy", "    // Your code here\n}", "    $words\
    \ = array();\n    // Your code here\n    return $words;\n}", "    $words = array();\n\
    \    // Your code here\n    return $words;\n}\n", "    $words = array();\n   \
    \ $words = array_merge($words, select_words_helper($s, 0, $n));\n    return $words;\n\
    }\n", "    // Your code here\n}", "    $words = array();\n    $words = array_merge($words,\
    \ select_words_by_consonants($s, $n));\n    $words = array_merge($words, select_words_by_vowels($s,\
    \ $n));\n    return $words;\n}\n", "    $words = array();\n    $words = explode(\"\
    \ \", $s);\n    $words = array_filter($words, \"is_string\");\n    $words = array_filter($words,\
    \ \"is_numeric\");\n    $words = array_filter($words, \"is_alpha\");\n    $words\
    \ = array_filter($words, \"is_alnum\");\n    $words = array_filter($words, \"\
    is_space\");\n    $words = array_filter($words, \"is_numeric\");\n    $words =\
    \ array_filter($words, \"is_string\");\n    $words = array_filter($words, \"is_string\"\
    );\n    $words = array_filter($words, \"is_numeric\");\n    $words = array_filter($words,\
    \ \"is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $words = array_filter($words, \"\
    is_numeric\");\n    $words = array_filter($words, \"is_numeric\");\n    $words\
    \ = array_filter($words, \"is_numeric\");\n    $", "    $words = array();\n  \
    \  $words = array_merge($words, select_words_helper($s, $n, 0));\n    return $words;\n\
    }\n", "    $words = array();\n    $vowels = \"aeiou\";\n    $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    $len = strlen($s);\n    $i = 0;\n    while($i < $len) {\n        $word\
    \ = substr($s, $i, 1);\n        if(strpos($vowels, $word) !== false) {\n     \
    \       $words[] = $word;\n        }\n        if(strpos($consonants, $word) !==\
    \ false) {\n            $words[] = $word;\n        }\n        $i++;\n    }\n \
    \   return $words;\n}", "    $words = array();\n    $words = explode(' ', $s);\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($words, 'is_space');\n\
    \    $words = array_filter($words, 'is_string');\n    $words = array_filter($words,\
    \ 'is_numeric');\n    $words = array_filter($words, 'is_alpha');\n    $words =\
    \ array_filter($words, 'is_alnum');\n    $words = array_filter($word", "    $words\
    \ = array();\n    $words = explode(\" \", $s);\n    foreach ($words as $word)\
    \ {\n        if (strlen($word) == $n) {\n            $words[] = $word;\n     \
    \   }\n    }\n    return $words;\n}", '}', "    $words = array();\n    $words\
    \ = array_merge($words, select_words($s, $n-1));\n    $words = array_merge($words,\
    \ select_words($s, $n));\n    return $words;\n}\n", '}', "    $words = array();\n\
    \    $words = array_merge($words, select_words_helper($s, 0, $n));\n    return\
    \ $words;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_49_modp
language: php
prompt: "<?php\n// Return 2^n modulo p (be aware of numerics).\nfunction modp($n,\
  \ $p) {\n"
tests: "function candidate(...$args) {\n    return modp(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(3, 5) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1101, 101) !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(0, 101) !== 1) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(3, 11) !== 8) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100, 101) !== 1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(30, 5) !== 4) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(31, 5) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $p\
    \ - ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($p\
    \ == 0) {\n    return 0;\n  }\n  if ($n == $p) {\n    return 1;\n  }\n  if ($n\
    \ % $p == 0) {\n    return $p;\n  }\n  return modp($n / $p, $p);\n}\n", "  return\
    \ pow($n, $p) % $p;\n}\n", "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n\
    \ == 0 || $p == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return\
    \ $p;\n    }\n    if ($p == 1) {\n        return $n;\n    }\n    if ($p > $n)\
    \ {\n        return modp($n, $p);\n    }\n    $r = $n % $p;\n    if ($r == 0)\
    \ {\n        return $p;\n    }\n    return modp($n, $p);\n}\n", "  return pow($n,\
    \ $p) % $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "  $n = (int) $n;\n  $p\
    \ = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n == 1)\
    \ {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p > $n)\
    \ {\n    return $p;\n  }\n  if ($p < $n) {\n    return $n;\n  }\n  $m = (int)\
    \ ($n / $p);\n  $r = $n % $p;\n  return $p * modp($m, $p) + $r;\n}\n", "    return\
    \ ($n % $p) + $p;\n}\n", "    return $n % $p;\n}\n", "  return $n % $p;\n}\n",
  "    return $n % $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "    return $n %\
    \ $p;\n}\n", "  $r = 1;\n  for ($i = 0; $i < $p; $i++) {\n    $r *= $n;\n    $r\
    \ %= $p;\n  }\n  return $r;\n}\n", "    $r = 1;\n    while ($n > 0) {\n      \
    \  $r = $r * $p % $n;\n        $n = ($n - $r) / $p;\n    }\n    return $r;\n}\n",
  "    return ($n & ($p-1)) == 0 ? $n : $n % $p;\n}\n", "  return pow($n, $p - 2,\
    \ $p);\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n\
    \    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n\
    \    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  $r = $n % $p;\n\
    \  if ($r == 0) {\n    return $p;\n  }\n  return $n;\n}\n", "  return pow($n,\
    \ $p, MATH_BIGINTEGER_MODE);\n}\n", "  return pow($n, $p) % $p;\n}\n", "  return\
    \ ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return pow($n, $p - 2, $p);\n}\n", "    return ($n % $p) + $p;\n}\n", "  $n\
    \ = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n\
    \  }\n  if ($p < 0) {\n    return $modp($n, $p);\n  }\n  $r = $n % $p;\n  if ($r\
    \ == 0) {\n    return $p;\n  }\n  return $modp($n, $p) - $p;\n}\n", "    $n =\
    \ (int) $n;\n    $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return $p;\n    }\n    if ($p == 1) {\n\
    \        return $n;\n    }\n    if ($p > $n) {\n        return modp($n, $p);\n\
    \    }\n    if ($p < $n) {\n        return modp($p, $n);\n    }\n    $r = 1;\n\
    \    $m = $n;\n    while ($m & 1) {\n        $r *= $p;\n        $m >>= 1;\n  \
    \  }\n    while ($m > 0) {\n        $r *= $p;\n        $m >>= 1;\n    }\n    return\
    \ $r;\n}\n", "  return pow($n, $p) % $p;\n}\n", "  return $n % $p;\n}\n", "  $n\
    \ = (int) $n;\n  $p = (int) $p;\n  if ($n <= 0 || $p <= 0) {\n    return 0;\n\
    \  }\n  if ($n >= $p) {\n    return $p;\n  }\n  if ($n === 0) {\n    return 1;\n\
    \  }\n  if ($p === 1) {\n    return $n;\n  }\n  if ($p === 2) {\n    return $n\
    \ % 2 ? $n : $n + 1;\n  }\n  if ($p === 3) {\n    return $n % 3 ? $n : $n + 1;\n\
    \  }\n  if ($p === 4) {\n    return $n % 4 ? $n : $n + 1;\n  }\n  if ($p === 5)\
    \ {\n    return $n % 5 ? $n : $n + 1;\n  }\n  if ($p === 6) {\n    return $n %\
    \ 6 ? $n : $n + 1;\n  }\n  if ($p === 7) {\n    return $n % 7 ? $n : $n + 1;\n\
    \  }\n  if ($p === 8) {\n    return $n % 8 ? $n : $n + 1;\n  }\n  if ($p === 9)\
    \ {\n    return $n % 9 ? $n : $n + 1;\n  }\n  if ($p === 10) {\n    return $n\
    \ % 10 ? $n : $n + 1;\n  }\n  if ($p === 11) {\n    return $n % 11 ? $n : $n +\
    \ 1;\n  }\n  if ($p === 12) {\n    return $n % 12 ? $n : $n + 1;\n  }\n  if ($p\
    \ === 13) {\n    return $n % 13 ? $n : $n + 1;\n  }\n  if ($p === 14) {\n    return\
    \ $n % 14 ? $n : $n + 1;\n  }\n  if ($p === 15) {\n    return $n % 15 ? $n : $n\
    \ + 1;\n  }\n  if ($p === 16) {\n    return $n % 16 ? $n : $n + 1;\n  }\n  if\
    \ ($p === 17) {\n    return $n % 17 ? $n : $n + 1;\n  }\n  if ($p === 18) {\n\
    \    return $n % 18 ? $n : $n + 1;\n  }\n  if ($p === 19) {\n    return $n % 19\
    \ ? $n : $n + 1;\n  }\n  if ($p === 20) {\n    return $n % 20 ? $n : $n + 1;\n\
    \  }\n  if ($p === 21) {\n    return $n % 21 ? $n : $n + 1;\n  }\n  if ($p ===\
    \ 22) {\n    return $n % 22 ? $n : $n + 1;\n  }\n  if ($p === 23) {\n    return\
    \ $n % 23 ? $n : $n + 1;\n  }\n  if ($p === 24) {\n    return $n % ", "  return\
    \ pow($n, $p) % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0)\
    \ {\n    return $p + ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n    return $n;\n\
    \  }\n  if ($n == 0) {\n    return 0;\n  }\n  if ($p == 0) {\n    return 1;\n\
    \  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($p < $n) {\n    return $n %\
    \ $p;\n  }\n  $r = $n % $p;\n  return $r == 0 ? $p : $r;\n}", "  $n = (int) $n;\n\
    \  $p = (int) $p;\n  if ($n < 0) {\n    return $p - ($n * modp($n, $p));\n  }\n\
    \  if ($p < 0) {\n    return $n;\n  }\n  if ($n == 0) {\n    return 0;\n  }\n\
    \  if ($p == 0) {\n    return 1;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n\
    \  $m = (int) ($p / $n);\n  return ($n % $p == 0) ? $m : modp($n, $p);\n}\n",
  "  return $n % $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "  return pow($n, $p\
    \ - 2, $p);\n}\n", "  return pow($n, $p % $p, $p);\n}\n", "    return ($n % $p)\
    \ + $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return\
    \ $p - ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($p\
    \ === 0) {\n    return 1;\n  }\n  if ($p === 1) {\n    return $n;\n  }\n  if ($p\
    \ === 2) {\n    return $n * $n;\n  }\n  if ($p === 3) {\n    return $n * $n *\
    \ $n;\n  }\n  if ($p === 4) {\n    return $n * $n * $n * $n;\n  }\n  if ($p ===\
    \ 5) {\n    return $n * $n * $n * $n * $n;\n  }\n  if ($p === 6) {\n    return\
    \ $n * $n * $n * $n * $n * $n;\n  }\n  if ($p === 7) {\n    return $n * $n * $n\
    \ * $n * $n * $n * $n;\n  }\n  if ($p === 8) {\n    return $n * $n * $n * $n *\
    \ $n * $n * $n * $n;\n  }\n  if ($p === 9) {\n    return $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n;\n  }\n  if ($p === 10) {\n    return $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p === 11) {\n    return $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p === 12) {\n   \
    \ return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if\
    \ ($p === 13) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n *\
    \ $n * $n * $n;\n  }\n  if ($p === 14) {\n    return $n * $n * $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p === 15) {\n    return\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n\
    \  }\n  if ($p === 16) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p === 17) {\n    return $n * $n\
    \ * $n * ", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) return\
    \ 0;\n  if ($n == 1) return 1;\n  if ($p == 1) return $n;\n  if ($p < $n) return\
    \ $p;\n  if ($p > $n) return $n;\n  $m = (int) ($n / $p);\n  return ($n % $p)\
    \ * modp($m, $p);\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 ||\
    \ $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if\
    \ ($p == 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return modp($n, $p);\n\
    \  }\n  $m = (int) ($n / $p);\n  $r = modp($n % $p, $p);\n  return ($r * $m) %\
    \ $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n\
    \    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n\
    \    return $n;\n  }\n  if ($p > $n) {\n    return modp($n, $p);\n  }\n  $r =\
    \ $n % $p;\n  if ($r == 0) {\n    return $p;\n  }\n  return modp($n, $p);\n}\n",
  "  $r = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $r *= $p;\n    $r %= $p;\n  }\n\
    \  return $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0) {\n \
    \   return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 0) {\n\
    \    return $n;\n  }\n  if ($p == 1) {\n    return $n % 2 ? $n : $n - 1;\n  }\n\
    \  $r = $n % $p;\n  if ($r == 0) {\n    return $n;\n  }\n  return $p - $r;\n}\n",
  "  return pow($n, $p) % $p;\n}\n", "  return pow($n, $p, MATH_BIGINTEGER_MODE);\n\
    }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return\
    \ 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return\
    \ $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  $r = $n % $p;\n  if ($r ==\
    \ 0) {\n    return $p;\n  }\n  return $p;\n}\n", "  return pow($n, $p) % $p;\n\
    }\n", "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return $p;\n    }\n   \
    \ if ($p == 1) {\n        return $n;\n    }\n    if ($p > $n) {\n        return\
    \ modp($n, $p);\n    }\n    $m = (int) ($n / $p);\n    $r = modp($n % $p, $p);\n\
    \    return ($m == $r) ? $m : $m + pow($r, $p - $m, $p);\n}\n", "  $n = (int)\
    \ $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if\
    \ ($n == 1) {\n    return 1;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if\
    \ ($p > $n) {\n    return $n % $p;\n  }\n  $r = $n % $p;\n  return $r == 0 ? $p\
    \ : $r;\n}\n", "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n < 0) {\n  \
    \      $n = -$n;\n        $p = -$p;\n    }\n    if ($p == 0) {\n        return\
    \ 1;\n    }\n    if ($p == 1) {\n        return $n;\n    }\n    if ($p == 2) {\n\
    \        return $n % 2 ? $n : $n + 1;\n    }\n    if ($p < 2 * $n) {\n       \
    \ return $n % $p ? $n : $n + modp($n / $p, $p);\n    }\n    return $n % $p ? modp($n\
    \ / $p, $p) : $n;\n}", "    return ($n % $p) + $p;\n}\n", "    return $n % $p;\n\
    }\n", "  return pow($n, $p) % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n\
    \  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return\
    \ $p;\n  }\n  if ($p < 0) {\n    return $modp($n, -$p);\n  }\n  $r = 1;\n  for\
    \ ($i = 0; $i < $p; $i++) {\n    $r *= $n;\n    $r %= $p;\n  }\n  return $r;\n\
    }\n", "  return pow($n, $p % $p, $p);\n}\n", "  return pow($n, $p) % $p;\n}\n",
  "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n <= 0 || $p <= 0) {\n    return 0;\n\
    \  }\n  if ($n == 1 && $p == 1) {\n    return 1;\n  }\n  if ($n == $p) {\n   \
    \ return 1;\n  }\n  if ($n == ($p - 1)) {\n    return $n;\n  }\n  $t = $n;\n \
    \ $n = $p - 1;\n  for ($i = 0; $i < $p; $i++) {\n    $t = $t * $n + $i;\n  }\n\
    \  return $t;\n}\n", "    return ($n % $p + $p) % $p;\n}\n", "  $n = (int) $n;\n\
    \  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n ==\
    \ 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p >\
    \ $n) {\n    return modp($n, $p);\n  }\n  if ($p < $n) {\n    return modp($p,\
    \ $n);\n  }\n  $m = (int) ($n / $p);\n  $r = modp($n % $p, $p);\n  return $m *\
    \ $r + $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "    return ($n & ($p - 1))\
    \ == 0 ? $n : $n + modp($n >> $p, $p);\n}\n", "    $n = (int) $n;\n    $p = (int)\
    \ $p;\n    if ($n == 0 || $p == 0) {\n        return 0;\n    }\n    if ($n ==\
    \ 1) {\n        return $p;\n    }\n    if ($p == 1) {\n        return $n;\n  \
    \  }\n    if ($p > $n) {\n        return modp($n, $p);\n    }\n    $r = 1;\n \
    \   $m = 1;\n    while ($n != 0) {\n        $r = $r * $m % $p;\n        $m = ($m\
    \ / $p) % $n;\n        $n = ($n / $p) % $p;\n    }\n    return $r;\n}\n", "  $r\
    \ = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $r *= $p;\n    $r %= $p;\n  }\n \
    \ return $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p ==\
    \ 0) {\n    return 0;\n  }\n  if ($n < 0) {\n    return -modp($n, $p);\n  }\n\
    \  if ($p < 0) {\n    return modp($n, $p);\n  }\n  if ($p == 1) {\n    return\
    \ 1;\n  }\n  if ($p == 2) {\n    return $n;\n  }\n  if ($p == 3) {\n    return\
    \ $n * $n;\n  }\n  if ($p == 6) {\n    return $n * $n * $n;\n  }\n  if ($p ==\
    \ 8) {\n    return $n * $n * $n * $n;\n  }\n  if ($p == 2) {\n    return $n *\
    \ $n;\n  }\n  if ($p == 4) {\n    return $n * $n * $n;\n  }\n  if ($p == 6) {\n\
    \    return $n * $n * $n * $n;\n  }\n  if ($p == 8) {\n    return $n * $n * $n\
    \ * $n * $n;\n  }\n  if ($p == 9) {\n    return $n * $n * $n * $n * $n * $n;\n\
    \  }\n  if ($p == 10) {\n    return $n * $n * $n * $n * $n * $n * $n;\n  }\n \
    \ if ($p == 11) {\n    return $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if\
    \ ($p == 12) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n\
    \  if ($p == 13) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n\
    \  }\n  if ($p == 14) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n;\n  }\n  if ($p == 15) {\n    return $n * $n * $n * $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 16) {\n    return $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 17) {\n\
    \    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n\
    \  }\n  if ($p == 18) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n;\n  }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if\
    \ ($n < 0) {\n    return $p - ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n   \
    \ return $n;\n  }\n  if ($n == 0) {\n    return 0;\n  }\n  if ($p == 0) {\n  \
    \  return 1;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($p < $n) {\n \
    \   return $n % $p;\n  }\n  $m = (int) ($n / $p);\n  return $m * modp($n, $p);\n\
    }\n", "    return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "    return\
    \ ($n % $p) + $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n <= 0 ||\
    \ $p <= 0) {\n    return 0;\n  }\n  if ($n >= $p) {\n    return $p;\n  }\n  if\
    \ ($p % 4 == 0) {\n    return pow($n, $p - 2);\n  }\n  if ($p % 3 == 0) {\n  \
    \  return pow($n, $p - 3);\n  }\n  return pow($n, $p - 4);\n}\n", "  $n = (int)\
    \ $n;\n  $p = (int) $p;\n  if ($n <= 0 || $p <= 0) {\n    return 0;\n  }\n  if\
    \ ($n >= $p) {\n    return 1;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if\
    \ ($p == 1) {\n    return $n;\n  }\n  if ($p % 2 == 0) {\n    return modp($n /\
    \ 2, $p) * modp($n, $p) % $p;\n  }\n  return modp($n / 2, $p) * modp($n, $p) +\
    \ modp($n / 2, $p - 1) * modp($n, $p - 1);\n}\n", "  $n = (int) $n;\n  $p = (int)\
    \ $p;\n  if ($n < 0) {\n    return $p - modp($n, $p);\n  }\n  if ($p < 0) {\n\
    \    return $n;\n  }\n  if ($n == 0) {\n    return 0;\n  }\n  if ($p == 0) {\n\
    \    return 1;\n  }\n  if ($p > $n) {\n    return $p - modp($n, $p);\n  }\n  $m\
    \ = $n % $p;\n  if ($m == 0) {\n    return $p;\n  }\n  return modp($n, $p) % $p;\n\
    }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return\
    \ 0;\n  }\n  if ($n < 0) {\n    return -modp($n, $p);\n  }\n  if ($p < 0) {\n\
    \    return modp($n, $p);\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p\
    \ == 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return modp($n, $p);\n \
    \ }\n  $m = (int) ($p * log($n) / log($p));\n  return $n % $p ? modp($n, $p) -\
    \ $m : $m;\n}", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0)\
    \ {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1)\
    \ {\n    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  $m = (int)\
    \ ($p * log($n) / log($p));\n  return $n % $p ? $m : $n;\n}\n", "    $n = (int)\
    \ $n;\n    $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n        return 0;\n\
    \    }\n    if ($n == 1) {\n        return $p;\n    }\n    if ($p == 1) {\n  \
    \      return $n;\n    }\n    if ($p > $n) {\n        return modp($n, $p);\n \
    \   }\n    $r = 1;\n    $t = $n;\n    while ($t != 0) {\n        if ($t % $p ==\
    \ 0) {\n            $r *= $p;\n        }\n        $t /= $p;\n    }\n    return\
    \ $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n\
    \    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n\
    \    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($p < $n) {\n\
    \    return $n;\n  }\n  $r = $n % $p;\n  if ($r == 0) {\n    return $p;\n  }\n\
    \  return $n;\n}\n", "  return pow($n, $p) % $p;\n}\n", "  return $n % $p;\n}\n",
  "  return $n % $p;\n}\n", "    return $n % $p;\n}\n", "  return ($n % $p) + $p;\n\
    }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $p - ($n\
    \ * modp($n, $p));\n  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($n == 0)\
    \ {\n    return 0;\n  }\n  if ($p == 0) {\n    return 1;\n  }\n  if ($p > $n)\
    \ {\n    return $p;\n  }\n  if ($p < $n) {\n    return $n % $p;\n  }\n  $m = (int)\
    \ ($p / $n);\n  if ($m == 0) {\n    return $n;\n  }\n  if ($m == $n) {\n    return\
    \ $p;\n  }\n  return ($n % $p + $m) % $p;\n}\n", "  return pow($n, $p - 2, $p);\n\
    }\n", "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return $p;\n    }\n   \
    \ if ($p == 1) {\n        return $n;\n    }\n    if ($p > $n) {\n        return\
    \ modp($n, $p);\n    }\n    $r = 1;\n    while ($p > 1) {\n        $r *= $p;\n\
    \        $p -= 1;\n    }\n    return $r % $n;\n}\n", "  return pow($n, $p) % $p;\n\
    }\n", "    return $n % $p;\n}\n", "  $r = 1;\n  for ($i = 0; $i < $n; $i++) {\n\
    \    $r *= $p;\n    $r %= $p;\n  }\n  return $r;\n}\n", "  return $n % $p;\n}\n",
  "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n\
    \  }\n  if ($p > $n) {\n    return $p;\n  }\n  $m = ($p + $n) % $p;\n  if ($m\
    \ == 0) {\n    return $p;\n  }\n  return $m;\n}\n", "  $n = (int) $n;\n  $p =\
    \ (int) $p;\n  if ($n <= 0 || $p <= 0) {\n    return 0;\n  }\n  $x = 1;\n  for\
    \ ($i = 0; $i < $p; $i++) {\n    $x = ($x * $n) % $p;\n  }\n  return $x;\n}\n",
  "    return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 ||\
    \ $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return 1;\n  }\n  if ($p\
    \ == 1) {\n    return $n;\n  }\n  if ($p < 0) {\n    return modp($n, $p - 1);\n\
    \  }\n  $r = 1;\n  for ($i = 0; $i < $p; $i++) {\n    $r *= $n;\n    $r %= $p;\n\
    \  }\n  return $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 ||\
    \ $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if\
    \ ($p == 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  $r\
    \ = $n % $p;\n  if ($r == 0) {\n    return $p;\n  }\n  return $p;\n}\n", "  return\
    \ pow($n, $p) % $p;\n}\n", "  return pow($n, $p) % $p;\n}\n", "  $n = (int) $n;\n\
    \  $p = (int) $p;\n  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n  \
    \  return $p;\n  }\n  if ($p < 0) {\n    return $modp($n, -$p);\n  }\n  $x = 0;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $x = $x * $p % $n;\n  }\n  return $x;\n\
    }\n", "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n\
    \        return 0;\n    }\n    if ($n == 1) {\n        return $p;\n    }\n   \
    \ if ($p == 1) {\n        return $n;\n    }\n    if ($n < 0) {\n        return\
    \ modp($n * -$p, $p);\n    }\n    if ($p < 0) {\n        return modp($n, $p *\
    \ -$n);\n    }\n    if ($p > $n) {\n        return modp($n, $p);\n    }\n    $r\
    \ = 1;\n    $t = $n;\n    while ($t > 0) {\n        if ($t % 2 == 1) {\n     \
    \       $r += $p;\n        }\n        $t /= 2;\n        $p *= $p;\n    }\n   \
    \ return $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n   \
    \ $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($p\
    \ > $n) {\n    return $n;\n  }\n  $x = 1;\n  while ($p > 0) {\n    if ($n & $p)\
    \ {\n      $x = ($x * $x) % $p;\n    }\n    $p = ($p * $p) % $n;\n  }\n  return\
    \ $x;\n}\n", "  $r = 1;\n  for ($i = 0; $i < $p; ++$i) {\n    $r *= $n;\n    $r\
    \ %= $p;\n  }\n  return $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ < 0) {\n    $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0) {\n    return $n;\n\
    \  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($n == $p) {\n    return 0;\n\
    \  }\n  if ($n == 0) {\n    return 1;\n  }\n  if ($n == 1) {\n    return $p;\n\
    \  }\n  if ($n == 2) {\n    return $p + modp($p - 1, $p);\n  }\n  if ($n == 3)\
    \ {\n    return $p + modp($p - 2, $p) + modp($p - 1, $p);\n  }\n  if ($n == 4)\
    \ {\n    return $p + modp($p - 3, $p) + modp($p - 2, $p) + modp($p - 1, $p);\n\
    \  }\n  if ($n == 5) {\n    return $p + modp($p - 4, $p) + modp($p - 3, $p) +\
    \ modp($p - 2, $p) + modp($p - 1, $p);\n  }\n  if ($n == 6) {\n    return $p +\
    \ modp($p - 5, $p) + modp($p - 4, $p) + modp($p - 3, $p) + modp($p - 2, $p) +\
    \ modp($p - 1, $p);\n  }\n  if ($n == 7) {\n    return $p + modp($p - 6, $p) +\
    \ modp($p - 5, $p) + modp($p - 4, $p) + modp($p - 3, $p) + modp($p - 2, $p) +\
    \ modp($p - 1, $p);\n  }\n  if ($n == 8) {\n    return $p + modp($p - 7, $p) +\
    \ modp($p - 6, $p) + modp($p - 5, $p) + modp($p - 4, $p) + modp($p - 3, $p) +\
    \ modp($p - 2, $p) + modp($p - 1, $p);\n  }\n  if ($n == 9) {\n    return $p +\
    \ modp($p - 8, $p) + modp($p - 7, $p) + modp($p - 6, $p) + modp($p - 5, $p) +\
    \ modp($p - 4, $p) + modp($p - 3, $p) + modp($p - 2, $p) + modp($p - 1, $p);\n\
    \  }\n  if ($n == 10) {\n    return $p + modp($p - 9, $p) + modp($p - 8, $p) +\
    \ modp($p - 7, $p) + modp($p - 6, ", "  $r = 1;\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    $r *= $p;\n    $r %= $p;\n  }\n  return $r;\n}\n", "    $n = (int) $n;\n\
    \    $p = (int) $p;\n    if ($n < 0) {\n        $n = -$n;\n        $p = -$p;\n\
    \    }\n    if ($p < 0) {\n        return -modp($n, $p);\n    }\n    if ($p ===\
    \ 0) {\n        return 1;\n    }\n    if ($p === 1) {\n        return $n;\n  \
    \  }\n    if ($p === 2) {\n        return $n * $n;\n    }\n    if ($p === 3) {\n\
    \        return $n * $n * $n;\n    }\n    if ($p === 4) {\n        return $n *\
    \ $n * $n * $n;\n    }\n    if ($p === 5) {\n        return $n * $n * $n * $n\
    \ * $n;\n    }\n    if ($p === 6) {\n        return $n * $n * $n * $n * $n * $n;\n\
    \    }\n    if ($p === 7) {\n        return $n * $n * $n * $n * $n * $n * $n;\n\
    \    }\n    if ($p === 8) {\n        return $n * $n * $n * $n * $n * $n * $n *\
    \ $n;\n    }\n    if ($p === 9) {\n        return $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n;\n    }\n    if ($p === 10) {\n        return $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p === 11) {\n        return\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p ===\
    \ 12) {\n        return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n *\
    \ $n * $n;\n    }\n    if ($p === 13) {\n        return $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p === 14) {\n    \
    \    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n\
    \    }\n    if ($p === 15) {\n        return $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p === 16) {\n\
    \        return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n;\n    }\n    if ($p ", "  return pow($n, $p - 2, $p);\n}\n",
  "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0) {\n    return 0;\n  }\n  if\
    \ ($n == 1) {\n    return 1;\n  }\n  if ($p < 0) {\n    return $modp($n, -$p);\n\
    \  }\n  if ($p > $n) {\n    return $modp($n, $p);\n  }\n  $r = 1;\n  for ($i =\
    \ 0; $i < $n; $i++) {\n    $r *= $p;\n    $r %= $p;\n  }\n  return $r;\n}\n",
  "    return pow($n, $p) % $p;\n}\n", "  return pow($n, $p, MATH_BIGINTEGER_MODE);\n\
    }\n", "  return $n % $p;\n}\n", "    return $n % $p;\n}\n", "  return pow($n,\
    \ $p % $p, $p);\n}\n", "  return pow($n, $p - 2, $p);\n}\n", "  return $n % $p;\n\
    }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    $n = (-$n) % $p;\n\
    \    if ($n < 0)\n      $n = (-$n) + $p;\n  }\n  return $n;\n}\n", "  $n = (int)\
    \ $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if\
    \ ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if\
    \ ($p > $n) {\n    return modp($n, $p);\n  }\n  $m = (int) ($n / $p);\n  $r =\
    \ modp($n % $p, $p);\n  return $m * $r + $p;\n}\n", "  $n = (int) $n;\n  $p =\
    \ (int) $p;\n  if ($n < 0) {\n    $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0)\
    \ {\n    return $n;\n  }\n  if ($p > $n) {\n    return $n;\n  }\n  $r = $n % $p;\n\
    \  if ($r == 0) {\n    return $p;\n  }\n  return $r;\n}\n", "    $n = (int) $n;\n\
    \    $p = (int) $p;\n    if ($n < 0) {\n        $n = -$n;\n        $p = -$p;\n\
    \    }\n    if ($p < 0) {\n        return $n;\n    }\n    if ($p == 0) {\n   \
    \     return 1;\n    }\n    if ($p == 1) {\n        return $n;\n    }\n    if\
    \ ($p == 2) {\n        return ($n % 2) ? $n : $n + 1;\n    }\n    $res = 1;\n\
    \    $p2 = $p >> 1;\n    $p4 = $p2 >> 2;\n    $p8 = $p4 >> 3;\n    $p16 = $p8\
    \ >> 4;\n    $p32 = $p16 >> 5;\n    $p64 = $p32 >> 6;\n    while ($n > 0) {\n\
    \        if ($n & 1) {\n            $res = (2 * $res) % $p;\n        }\n     \
    \   $n = ($n >> 1) & $p2;\n        $p = ($p >> 1) & $p4;\n        $p2 = ($p2 >>\
    \ 1) & $p8;\n        $p4 = ($p4 >> 1) & $p16;\n        $p8 = ($p8 >> 1) & $p32;\n\
    \        $p16 = ($p16 >> 1) & $p64;\n        $p32 = ($p32 >> 1) & $p128;\n   \
    \     $p64 = ($p64 >> 1) & $p256;\n    }\n    return $res;\n}\n", "    return\
    \ ($n % $p) + $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "  return bcmod($n,\
    \ $p);\n}\n", "    return $n % $p;\n}\n", "    return ($n % $p) + $p;\n}\n", " \
    \   return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0\
    \ || $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n \
    \ if ($p == 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n\
    \  if ($p < $n) {\n    return $n;\n  }\n  $r = $n % $p;\n  if ($r == 0) {\n  \
    \  return $p;\n  }\n  return $n;\n}\n", "    return pow($n, $p, MATH_BIGINTEGER_MODE);\n\
    }\n", "  return pow($n, $p % $p, $p);\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n\
    \  if ($n < 0) {\n    return $p - ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n\
    \    return $n;\n  }\n  if ($n == 0) {\n    return 0;\n  }\n  if ($p == 0) {\n\
    \    return 1;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($p < $n) {\n\
    \    return $n;\n  }\n  $m = (int) ($p / $n);\n  $r = $n % $p;\n  return $m *\
    \ modp($n, $p) + $r;\n}\n", "    return $n % $p;\n}\n", "  $n = (int) $n;\n  $p\
    \ = (int) $p;\n  if ($n == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return\
    \ 1;\n  }\n  if ($p < 0) {\n    return $n % $p;\n  }\n  if ($p > 0) {\n    return\
    \ ($n % $p) + $p;\n  }\n  return $n % $p;\n}\n", "    return ($n % $p) + $p;\n\
    }\n", "    return ($n % $p) + $p;\n}\n", "    return $n % $p;\n}\n", "  $n = (int)\
    \ $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0)\n    return 0;\n  if ($n ==\
    \ 1)\n    return 1;\n  if ($p == 1)\n    return $n;\n  if ($p > $n)\n    return\
    \ modp($n, $p);\n  $r = 1;\n  for ($i = 0; $i < $n; $i++)\n    $r *= $p;\n  return\
    \ $r;\n}\n", "  return pow($n, $p) % $p;\n}\n", "    return $n % $p;\n}\n", " \
    \ return pow($n, $p) % $p;\n}\n", "  return pow($n, $p - 2, $p);\n}\n", "  $n\
    \ = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $p - modp($n, $p);\n\
    \  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($n == 0) {\n    return 0;\n\
    \  }\n  if ($p == 0) {\n    return 1;\n  }\n  if ($p > $n) {\n    return $p;\n\
    \  }\n  if ($p < $n) {\n    return $n;\n  }\n  $m = (int) ($n / $p);\n  $r = $n\
    \ % $p;\n  return $p * modp($m, $p) + $r;\n}\n", "    $n = (int) $n;\n    $p =\
    \ (int) $p;\n    if ($n < 0) {\n        $n = -$n;\n        $p = -$p;\n    }\n\
    \    if ($p < 0) {\n        return $n;\n    }\n    if ($p > $n) {\n        return\
    \ $p;\n    }\n    if ($n == $p) {\n        return $n;\n    }\n    if ($n == 0)\
    \ {\n        return 1;\n    }\n    if ($n == 1) {\n        return $p;\n    }\n\
    \    if ($p == 1) {\n        return $n;\n    }\n    if ($p == 2) {\n        return\
    \ $n * $n;\n    }\n    if ($p == 3) {\n        return $n * $n * $n;\n    }\n \
    \   if ($p == 4) {\n        return $n * $n * $n * $n;\n    }\n    if ($p == 6)\
    \ {\n        return $n * $n * $n * $n * $n;\n    }\n    if ($p == 8) {\n     \
    \   return $n * $n * $n * $n * $n * $n;\n    }\n    if ($p == $p - 1) {\n    \
    \    return $n * $n * $n * $n * $n * $n;\n    }\n    if ($p == $p - 2) {\n   \
    \     return $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p == $p - 3) {\n\
    \        return $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p == $p\
    \ - 4) {\n        return $n * $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n\
    \    if ($p == $p - 5) {\n        return $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n;\n    }\n    if ($p == $p - 6) {\n        return $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p == $p - 7) {\n      \
    \  return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if\
    \ ($p == $p - 8) {\n        return $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n;\n    }\n    if ($p == $p - 9) {\n        return $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n    }\n    if ($p == $p\
    \ - 10) {\n        return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * ",
  "  return pow($n, $p) % $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "    return\
    \ ($n % $p) + $p;\n}\n", "  return pow($n, $p) % $p;\n}\n", "  $n = (int) $n;\n\
    \  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n ==\
    \ 1) {\n    return 1;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p <\
    \ 0) {\n    return $modp($n, $p - 1);\n  }\n  $x = $modp($n, $p);\n  if ($x <\
    \ $p) {\n    return $x;\n  }\n  return $modp($n, $p - $x);\n}", "  $n = (int)\
    \ $n;\n  $p = (int) $p;\n  if ($n <= 0 || $p <= 0) {\n    return $n;\n  }\n  if\
    \ ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if\
    \ ($n == $p) {\n    return $n;\n  }\n  if ($n % 2 == 0) {\n    return $n % $p;\n\
    \  }\n  return modp($n / 2, $p) * $p + $n % $p;\n}\n", "  return pow($n, $p, MATH_BIGINTEGER_MODE);\n\
    }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $p - ($n\
    \ * modp($n, $p));\n  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($n == 0)\
    \ {\n    return 0;\n  }\n  if ($p == 0) {\n    return 1;\n  }\n  if ($p > $n)\
    \ {\n    return $p;\n  }\n  if ($p < $n) {\n    return $n % $p;\n  }\n  $r = $n\
    \ % $p;\n  return $r == 0 ? $p : $r;\n}\n", "    return ($n % $p) + $p;\n}\n",
  "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return 1;\n  }\n  if ($p < 0) {\n    return $modp($n,\
    \ $p - 1);\n  }\n  if ($p > 0) {\n    return $modp($n, $p + 1);\n  }\n  if ($n\
    \ == $p) {\n    return 1;\n  }\n  if ($n == ($p << 1)) {\n    return $n;\n  }\n\
    \  if ($n == ($p << 2)) {\n    return $n + ($p << 1);\n  }\n  if ($n == ($p <<\
    \ 3)) {\n    return $n + ($p << 1) + 1;\n  }\n  if ($n == ($p << 4)) {\n    return\
    \ $n + ($p << 1) + 2;\n  }\n  if ($n == ($p << 5)) {\n    return $n + ($p << 1)\
    \ + 3;\n  }\n  if ($n == ($p << 6)) {\n    return $n + ($p << 1) + 4;\n  }\n \
    \ if ($n == ($p << 7)) {\n    return $n + ($p << 1) + 5;\n  }\n  if ($n == ($p\
    \ << 8)) {\n    return $n + ($p << 1) + 6;\n  }\n  if ($n == ($p << 9)) {\n  \
    \  return $n + ($p << 1) + 7;\n  }\n  if ($n == ($p << 10)) {\n    return $n +\
    \ ($p << 1) + 8;\n  }\n  if ($n == ($p << 11)) {\n    return $n + ($p << 1) +\
    \ 9;\n  }\n  if ($n == ($p << 12)) {\n    return $n + ($p << 1) + 10;\n  }\n \
    \ if ($n == ($p << 13)) {\n    return $n + ($p << 1) + 11;\n  }\n  if ($n == ($p\
    \ << 14)) {\n    return $n + ($p << 1) + 12;\n  }\n  if ($n == ($p << 15)) {\n\
    \    return $n + ($p << 1) + 13;\n  }\n  if ($n == ($p << 16)) {\n    return $n\
    \ + ($p << 1) + 14;\n  }\n  if ($n == ($p << 17)) {\n    return $n + ($p << 1)\
    \ + 15;\n  }\n  if ($n == ($p << 18)) {\n    return $n + ($p << 1) + 16;\n  }\n\
    \  if ($n == ($p << 19)) {\n    return $n + ($p << 1) + 17;\n  }\n  if ($n ==\
    \ ($p << 20)) {\n    return $n + ($p << 1) + 18;\n  }\n  if ($n == ($p << 21))\
    \ {\n    return $n + ($p << ", "    return ($n % $p) + $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "    return ($n & ($p-1)) == 0 ? $n : $n % $p;\n}\n", "  return\
    \ pow($n, $p - 2, $p);\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n ==\
    \ 0 || $p == 0) {\n    return 0;\n  }\n  if ($p > $n) {\n    return $n % $p;\n\
    \  }\n  return ($n % $p) + $p;\n}\n", "    return ($n % $p + $p) % $p;\n}\n",
  "    return ($n % $p) + $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ < 0) {\n    return $p - ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n    return\
    \ $n;\n  }\n  if ($p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return\
    \ 1;\n  }\n  if ($n == 0) {\n    return $p;\n  }\n  if ($p > $n) {\n    return\
    \ $p;\n  }\n  if ($p < $n) {\n    return $n;\n  }\n  $m = (int) ($p / $n);\n \
    \ $r = $n % $p;\n  return $p * modp($m, $p) + $r;\n}", "    $n = (int) $n;\n \
    \   $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n        return 0;\n    }\n\
    \    if ($n == 1) {\n        return $p;\n    }\n    if ($p == 1) {\n        return\
    \ $n;\n    }\n    if ($p > $n) {\n        return modp($n, $p);\n    }\n    $m\
    \ = ($p + $n) % $p;\n    if ($m == 0) {\n        return $p;\n    }\n    return\
    \ modp($m, $p);\n}\n", "  return pow($n, $p) % $p;\n}\n", "  $n = (int) $n;\n\
    \  $p = (int) $p;\n  if ($n < 0) {\n    return $p - ($n * modp($n, $p));\n  }\n\
    \  if ($p < 0) {\n    return $n;\n  }\n  if ($n == $p) {\n    return 0;\n  }\n\
    \  if ($n == 0) {\n    return 1;\n  }\n  if ($p == 0) {\n    return $n;\n  }\n\
    \  if ($p == 1) {\n    return $n;\n  }\n  if ($p == 2) {\n    return $n % 2 ?\
    \ $n : $n + 1;\n  }\n  if ($p % 2 == 0) {\n    return $n + ($p / 2);\n  }\n  return\
    \ $n + ($p / 2) + ($p % 2);\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n \
    \ }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p < 0) {\n    return $modp($n,\
    \ $p);\n  }\n  $t = $modp($n, $p);\n  if ($t < 0) {\n    return $t;\n  }\n  return\
    \ $modp($t, $p);\n}", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p\
    \ == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p\
    \ == 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  $r =\
    \ $n % $p;\n  return $r == 0 ? $p : $r;\n}\n", "    $n = (int) $n;\n    $p = (int)\
    \ $p;\n    if ($n == 0 || $p == 0) {\n        return 0;\n    }\n    if ($n ==\
    \ 1) {\n        return $p;\n    }\n    if ($p == 1) {\n        return $n;\n  \
    \  }\n    if ($p > $n) {\n        return modp($n, $p);\n    }\n    if ($p < $n)\
    \ {\n        return modp($n, $p);\n    }\n    $r = 1;\n    while ($p > 1) {\n\
    \        $r = $r * $p;\n        $p = $p / 2;\n    }\n    return $r;\n}\n", " \
    \ return bcmod($n, $p);\n}\n", "    $n = (int) $n;\n    $p = (int) $p;\n    if\
    \ ($n < 0) {\n        $n = -$n;\n        $p = -$p;\n    }\n    if ($p == 0) {\n\
    \        return 1;\n    }\n    if ($p == 1) {\n        return $n;\n    }\n   \
    \ $res = 1;\n    while ($n > 0) {\n        if ($n & 1) {\n            $res *=\
    \ $p;\n        }\n        $n >>= 1;\n        $p *= $p;\n    }\n    return $res;\n\
    }\n", "  $r = 1;\n  while ($n > 0) {\n    if ($n % $p == 0) {\n      $r *= $p;\n\
    \      $r %= $p;\n    }\n    $n = (int) ($n / $p);\n  }\n  return $r;\n}\n", " \
    \   return ($n % $p) + $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n \
    \ }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p < 0) {\n    return modp($n,\
    \ $p - 1);\n  }\n  if ($p > $n) {\n    return modp($n, $p + 1);\n  }\n  $m = (int)\
    \ ($p * log($n) / log($p));\n  return $n % $p ? modp($n, $p + $m) : modp($n, $p);\n\
    }\n", "    return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ == 0 || $p == 0)\n    return 0;\n  if ($n == 1)\n    return 1;\n  if ($p ==\
    \ 1)\n    return $n;\n  if ($p > $n)\n    return modp($n, $p);\n  if ($p < -$n)\n\
    \    return modp($n, $p);\n  $r = 1;\n  for ($i = 0; $i < $n; $i++)\n    $r *=\
    \ $p;\n  return $r;\n}\n", "  return pow($n, $p) % $p;\n}\n", "  $n = (int) $n;\n\
    \  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n ==\
    \ 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p >\
    \ $n) {\n    return modp($n, $p);\n  }\n  $m = (int) ($n / $p);\n  $r = modp($n\
    \ % $p, $p);\n  return $m * $r + $p;\n}\n", "    return ($n % $p) + $p;\n}\n",
  "  return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n\
    \    return $p - modp($n * -$p, $p);\n  }\n  if ($p < 0) {\n    return $n;\n \
    \ }\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n == 1 && $p == 1)\
    \ {\n    return 1;\n  }\n  if ($n == $p) {\n    return 1;\n  }\n  if ($n == ($p\
    \ << 1)) {\n    return $n;\n  }\n  if ($n == ($p << 2)) {\n    return $n * $n;\n\
    \  }\n  if ($n == ($p << 3)) {\n    return $n * $n * $n;\n  }\n  if ($n == ($p\
    \ << 4)) {\n    return $n * $n * $n * $n;\n  }\n  if ($n == ($p << 5)) {\n   \
    \ return $n * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 6)) {\n    return $n\
    \ * $n * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 7)) {\n    return $n * $n\
    \ * $n * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 8)) {\n    return $n * $n\
    \ * $n * $n * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 9)) {\n    return $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 10)) {\n \
    \   return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($n ==\
    \ ($p << 11)) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n *\
    \ $n;\n  }\n  if ($n == ($p << 12)) {\n    return $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 13)) {\n    return $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($n\
    \ == ($p << 14)) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n;\n  }\n  if ($n == ($p << 15)) {\n    return $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $", "  $r = 1;\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $r *= $p;\n    $r %= $p;\n  }\n  return $r;\n}\n",
  "  $r = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $r *= $p;\n    $r %= $p;\n  }\n\
    \  return $r;\n}\n", "  return bcmod($n, $p);\n}\n", "    return ($n % $p) + $p;\n\
    }\n", "    return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ <= 0 || $p <= 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n \
    \ }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return modp($n,\
    \ $p);\n  }\n  $m = (int) ($n / $p);\n  $r = $n % $p;\n  return modp($m, $p) +\
    \ $r;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n\
    \    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n\
    \    return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($p < $n) {\n\
    \    return $n;\n  }\n  $r = $n % $p;\n  if ($r == 0) {\n    return $p;\n  }\n\
    \  return $n;\n}\n", "  return $n % $p;\n}\n", "    return ($n % $p) + $p;\n}\n",
  "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n == 0 || $p == 0) {\n       \
    \ return 0;\n    }\n    if ($n < 0) {\n        $n = -$n;\n        $p = -$p;\n\
    \    }\n    if ($p < 0) {\n        $p = -$p;\n    }\n    if ($p > $n) {\n    \
    \    return 0;\n    }\n    if ($p < $n) {\n        return $n;\n    }\n    if ($n\
    \ == 1) {\n        return 1;\n    }\n    $m = $n;\n    $r = 1;\n    while ($m\
    \ > 0) {\n        $r = $r * $m % $p;\n        $m = (int) ($m / $p);\n    }\n \
    \   return $r;\n}\n", "  return bcmod($n, $p);\n}\n", "    return ($n % $p + $p)\
    \ % $p;\n}\n", "  $r = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $r *= $p;\n  \
    \  $r %= $p;\n  }\n  return $r;\n}\n", "    return ($n % $p) + $p;\n}\n", "  $n\
    \ = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $p - modp($n, $p);\n\
    \  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($n == $p) {\n    return 0;\n\
    \  }\n  if ($n == 0) {\n    return 1;\n  }\n  if ($p == 0) {\n    return $n;\n\
    \  }\n  if ($p > $n) {\n    return $p - modp($n, $p);\n  }\n  $m = (int) ($p /\
    \ $n);\n  $r = $p % $n;\n  return $m * modp($n, $m) + $r;\n}\n", "  $n = (int)\
    \ $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $p - ($n * modp($n, $p));\n\
    \  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($n == 0) {\n    return 0;\n\
    \  }\n  if ($p == 0) {\n    return 1;\n  }\n  if ($p > $n) {\n    return $p;\n\
    \  }\n  if ($p < $n) {\n    return $n;\n  }\n  $m = (int) ($n / $p);\n  $r = $n\
    \ % $p;\n  return $p * modp($m, $p) + $r;\n}", "  return pow($n, $p) % $p;\n}\n",
  "    $n = (int) $n;\n    $p = (int) $p;\n    if ($n < 0) {\n        $n = -$n;\n\
    \        $p = -$p;\n    }\n    if ($p < 0) {\n        return -modp($n, $p);\n\
    \    }\n    if ($p == 0) {\n        return 1;\n    }\n    if ($p == 1) {\n   \
    \     return $n;\n    }\n    if ($n == $p) {\n        return $n;\n    }\n    if\
    \ ($n == ($p << 1)) {\n        return $n;\n    }\n    $n1 = $n & -p;\n    $n2\
    \ = $n >> $p;\n    $n3 = $n1 >> 1;\n    $n4 = ($n1 & 1) << 1;\n    $n5 = ($n2\
    \ & 1) << 1;\n    $n6 = ($n3 & 1) << 1;\n    $n7 = ($n4 & 1) << 1;\n    $n8 =\
    \ ($n5 & 1) << 1;\n    $n9 = ($n6 & 1) << 1;\n    $n10 = ($n7 & 1) << 1;\n   \
    \ $n11 = ($n8 & 1) << 1;\n    $n12 = ($n9 & 1) << 1;\n    $n13 = ($n10 & 1) <<\
    \ 1;\n    $n14 = ($n11 & 1) << 1;\n    $n15 = ($n12 & 1) << 1;\n    $n16 = ($n13\
    \ & 1) << 1;\n    $n17 = ($n14 & 1) << 1;\n    $n18 = ($n15 & 1) << 1;\n    $n19\
    \ = ($n16 & 1) << 1;\n    $n20 = ($n17 & 1) << 1;\n    $n21 = ($n18 & 1) << 1;\n\
    \    $n22 = ($n19 & 1) << 1;\n    $n23 = ($n20 & 1) << 1;\n    $n24 = ($n21 &\
    \ 1) << 1;\n    $n25 = ($n22 & 1) << 1;\n    $n26 = ($n23 & 1) << 1;\n    $n27\
    \ = ($n24 & 1) << 1;\n    $n28 = ($n25 & 1) << 1;\n    $n29 = ($n26 & 1) << 1;\n\
    \    $n30 = ($n27 & 1) << 1;\n    $n31 = ($n28 & 1) << 1;\n    $n32 = ($n29 &\
    \ 1) << 1;\n    $n33 = ($n30 & 1) << 1;\n    $n34 = ($n31 & 1) << 1;\n    $n35\
    \ = ($n32 & 1) << 1;\n    $n36", "  $r = 1;\n  for ($i = 0; $i < $p; $i++) {\n\
    \    $r *= $n;\n    $r %= $p;\n  }\n  return $r;\n}\n", "  return $n % $p;\n}\n",
  "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return 1;\n  }\n  if ($p < 0) {\n    return $n % $p;\n\
    \  }\n  return ($n % $p) / $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if\
    \ ($n == 0 || $p == 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return 1;\n\
    \  }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p < 0) {\n    return $n %\
    \ $p;\n  }\n  return ($n % $p) / $p;\n}\n", "    $n = (int) $n;\n    $p = (int)\
    \ $p;\n    if ($n < 0) {\n        $n = -$n;\n        $p = -$p;\n    }\n    if\
    \ ($p < 0) {\n        $p = -$p;\n    }\n    if ($n == 0 || $p == 0) {\n      \
    \  return 0;\n    }\n    if ($n == 1) {\n        return $p;\n    }\n    if ($p\
    \ == 1) {\n        return $n;\n    }\n    if ($p == 2) {\n        return $n %\
    \ $n;\n    }\n    if ($p == 3) {\n        return ($n % $n) * $n;\n    }\n    if\
    \ ($p == 4) {\n        return ($n % $n) * ($n % $n);\n    }\n    if ($p == 6)\
    \ {\n        return ($n % $n) * (($n % $n) * ($n % $n));\n    }\n    if ($p ==\
    \ 8) {\n        return ($n % $n) * (($n % $n) * (($n % $n) * ($n % $n)));\n  \
    \  }\n    if ($p == 9) {\n        return ($n % $n) * (($n % $n) * (($n % $n) *\
    \ (($n % $n) * ($n % $n))));\n    }\n    if ($p == 16) {\n        return ($n %\
    \ $n) * (($n % $n) * (($n % $n) * (($n % $n) * (($n % $n) * ($n % $n)))));\n \
    \   }\n    if ($p == 25) {\n        return ($n % $n) * (($n % $n) * (($n % $n)\
    \ * (($n % $n) * (($n % $n) * (($n % $n) * ($n % $n))))));\n    }\n    if ($p\
    \ == 64) {\n        return ($n % $n) * (($n % $n) * (($n % $n) * (($n % $n) *\
    \ (($n % $n) * (($n % $n) * (($n % $n) * ($n % $n))))));\n    }\n    if ($p ==\
    \ 128) {\n        return ($n % $n) * (($n % $n) * (($n % $n) * (($n % $n) * (($n\
    \ % $n) * (($n % $n) * (($n % $n) * (($n % $n) * ($n % $n))))));\n    }\n    if\
    \ ($p == 256) {\n        return ($n % $n) * (($n % $n) * (($n % $n) * (($n % $n)\
    \ * (($n % $n) * (($n % $n) * (($n % $n) * (($n % $n) * (($n % $n) * ($n % $n))))));\n\
    \    }\n    if ($p == 512) {\n        return ($n % $n) * (($n % $n) * (($n % $n)\
    \ * (($n % $n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return\
    \ $p - ($n * modp($n, $p));\n  }\n  if ($p < 0) {\n    return $n;\n  }\n  if ($n\
    \ == 0) {\n    return 0;\n  }\n  if ($p == 0) {\n    return 1;\n  }\n  if ($p\
    \ > $n) {\n    return $p;\n  }\n  $m = (int) ($n / $p);\n  return $n * modp($m,\
    \ $p);\n}\n", "  return pow($n, $p) % $p;\n}\n", "    return ($n % $p) + $p;\n\
    }\n", "  return ($n % $p) + $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n \
    \ if ($n < 0) {\n    $n = -$n;\n    $p = -$p;\n  }\n  if ($p == 0) {\n    return\
    \ 1;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n  if ($p == 2) {\n    return\
    \ $n % 2 ? $n : $n + 1;\n  }\n  $res = $n;\n  for ($i = 3; $i >= 0; $i--) {\n\
    \    $res = ($n % $p) * $p + ($res / $p);\n  }\n  return $res;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

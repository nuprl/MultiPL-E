name: HumanEval_43_pairs_sum_to_zero
language: pl
prompt: "# pairs_sum_to_zero takes a list of integers as an input.\n# it returns True\
  \ if there are two distinct elements in the list that\n# sum to zero, and False\
  \ otherwise.\n# >>> pairs_sum_to_zero([1, 3, 5, 0])\n# \"\"\n# >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n# \"\"\n# >>> pairs_sum_to_zero([1, 2, 3, 7])\n# \"\"\n# >>> pairs_sum_to_zero([2,\
  \ 4, -5, 3, 5, 7])\n# 1\n# >>> pairs_sum_to_zero([1])\n# \"\"\nsub pairs_sum_to_zero\
  \ {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pairs_sum_to_zero;\n\
  \        if(eq_deeply($candidate->([1, 3, 5, 0]),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 3, -2,\
  \ 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([1, 2, 3, 7]),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, -5, 3, 5,\
  \ 7]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3,\
  \ 9, -1, 3, 2, 30]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([-3, 9, -1, 3, 2, 31]),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3,\
  \ 9, -1, 4, 2, 30]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([-3, 9, -1, 4, 2, 31]),\"\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n    while\
    \ ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \         $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return 0;\n\
    }", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if\
    \ (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n    my %hash;\n    foreach\
    \ my $i (@list) {\n        if (exists $hash{$i}) {\n            return 1;\n  \
    \      }\n        $hash{-$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $len = scalar(@$l);\n    while ($i < $len) {\n       \
    \ $j = $i + 1;\n        while ($j < $len) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n            $j++;\n     \
    \   }\n        $i++;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n      \
    \  }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n      \
    \  }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i\
    \ = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n    \
    \    $j = $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n            $j = $j + 1;\n\
    \        }\n        $i = $i + 1;\n    }\n    return \"\";\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] +\
    \ $l->[$j] == 0) {\n                return 1;\n            }\n        }\n    }\n\
    \    return 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n        if (exists\
    \ $seen{-$i}) {\n            return 1;\n        }\n        $seen{$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n   \
    \ my $n = scalar(@$l);\n    my $found = 0;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                $found = 1;\n                last;\n            }\n\
    \        }\n        if ($found) {\n            last;\n        }\n    }\n    return\
    \ $found;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n \
    \   for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n\
    \            }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j\
    \ = 0;\n    my $len = scalar(@$l);\n    while ($i < $len) {\n        $j = $i +\
    \ 1;\n        while ($j < $len) {\n            if ($l->[$i] + $l->[$j] == 0) {\n\
    \                return 1;\n            }\n            $j++;\n        }\n    \
    \    $i++;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my\
    \ $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j =\
    \ $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return 0;\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = 0;\n    my $m = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $n = 0;\n    my $m = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $n = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;", "    my %hash\
    \ = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n       \
    \     return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}",
  "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n  \
    \          return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n\
    }", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    # your code here\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n  \
    \  my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc\
    \ = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n \
    \   my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll\
    \ = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n \
    \   my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu\
    \ = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n \
    \   my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my\
    \ $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh\
    \ = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n\
    \    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my\
    \ $qqq = 0;\n    my $rrr = 0;\n    my $sss", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    for my $i (@$l) {\n\
    \        if (exists $h{$i}) {\n            return 1;\n        } else {\n     \
    \       $h{-$i} = 1;\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n \
    \   my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n  \
    \              last;\n            }\n        }\n        if ($found) {\n      \
    \      last;\n        }\n    }\n    return $found;\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my @list = @$l;\n    my %hash;\n    foreach my $i (@list) {\n \
    \       if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len\
    \ = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i +\
    \ 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n       \
    \         return 1;\n            }\n        }\n    }\n    return 0;\n}", "   \
    \ my %hash = ();\n    foreach my $num (@$l) {\n        if (exists $hash{$num})\
    \ {\n            return 1;\n        }\n        $hash{-$num} = 1;\n    }\n    return\
    \ 0;\n}", "    my @list = @$l;\n    my $i = 0;\n    my $j = 0;\n    my $len =\
    \ scalar @list;\n    while ($i < $len) {\n        $j = $i + 1;\n        while\
    \ ($j < $len) {\n            if ($list[$i] + $list[$j] == 0) {\n             \
    \   return 1;\n            }\n            $j = $j + 1;\n        }\n        $i\
    \ = $i + 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my\
    \ $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n         \
    \       return 1;\n            }\n        }\n    }\n    return 0;\n}", "    my\
    \ %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n      \
    \      return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}",
  "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my %h;\n    for my $i (@$l) {\n        if (exists $h{-$i}) {\n\
    \            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n\
    }", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $len = scalar(@$l);\n\
    \    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n\
    \    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n\
    \    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n        \
    \    }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n   \
    \ return 0;\n}", "    my @list = @$l;\n    my %hash;\n    foreach my $i (@list)\
    \ {\n        if (exists $hash{$i}) {\n            return 1;\n        }\n     \
    \   $hash{-$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $n = scalar(@$l);\n    my $result = 0;\n    for($i = 0;\
    \ $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n            if($l->[$i]\
    \ + $l->[$j] == 0) {\n                $result = 1;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my %hash;\n    foreach my $i (@$l) {\n \
    \       if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n    my %hash;\n    for\
    \ my $i (0..$#list) {\n        if (exists $hash{-$list[$i]}) {\n            return\
    \ 1;\n        }\n        $hash{$list[$i]} = 1;\n    }\n    return 0;\n}", "  \
    \  my %h = ();\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n   \
    \         return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}",
  "    my %h = ();\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n   \
    \         return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}",
  "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $result = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while\
    \ ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $result\
    \ = 1;\n            }\n            $j = $j + 1;\n        }\n        $i = $i +\
    \ 1;\n    }\n    return $result;\n}", "    my %hash;\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n      \
    \  }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i;\n    my\
    \ $j;\n    for ($i = 0; $i < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l;\
    \ $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return\
    \ 1;\n            }\n        }\n    }\n    return 0;\n}", "    my %hash;\n   \
    \ foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    while ($i\
    \ < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n            $j\
    \ = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return \"\";\n}", " \
    \   my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n \
    \           return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n\
    }", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return 0;\n}", "    my %h;\n    for my $i (@$l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len = @$l;\n    while\
    \ ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n         \
    \   if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \            $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $len = scalar(@$l);\n\
    \    my $sum = 0;\n    my $flag = 0;\n    for ($i = 0; $i < $len; $i++) {\n  \
    \      for ($j = $i + 1; $j < $len; $j++) {\n            $sum = $l->[$i] + $l->[$j];\n\
    \            if ($sum == 0) {\n                $flag = 1;\n                last;\n\
    \            }\n        }\n    }\n    return $flag;\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $sum = 0;\n    for ($i = 0; $i < scalar(@list);\
    \ $i++) {\n        for ($j = 0; $j < scalar(@list); $j++) {\n            if ($i\
    \ != $j) {\n                $sum = $list[$i] + $list[$j];\n                if\
    \ ($sum == 0) {\n                    return 1;\n                }\n          \
    \  }\n        }\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n    my $len\
    \ = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i +\
    \ 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n       \
    \         return 1;\n            }\n        }\n    }\n    return 0;\n}", "   \
    \ my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;", "    my $i =\
    \ 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return 0;\n}", "    my @l = @$l;\n    my %h;\n    foreach my $x (@l)\
    \ {\n        if (exists $h{-$x}) {\n            return 1;\n        }\n       \
    \ $h{$x} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i\
    \ (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n\
    \        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j\
    \ = 0;\n    for ($i = 0; $i < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l;\
    \ $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return\
    \ 1;\n            }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n  \
    \  my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n        $j = $i\
    \ + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0) {\n\
    \                return 1;\n            }\n            $j++;\n        }\n    \
    \    $i++;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my @list = @$l;\n    my\
    \ %hash;\n    foreach my $item (@list) {\n        if (exists $hash{-$item}) {\n\
    \            return 1;\n        }\n        $hash{$item} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n        \
    \    }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n   \
    \ return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists\
    \ $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my $i;\n    my $j;\n    for ($i = 0; $i < @$l; $i++)\
    \ {\n        for ($j = $i + 1; $j < @$l; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my $n = scalar(@$l);\n \
    \   my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n       \
    \         return 1;\n            }\n        }\n    }\n    return 0;\n}", "   \
    \ my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n\
    \    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n\
    \            if (($l->[$i] + $l->[$j]) == 0) {\n                return 1;\n  \
    \          }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n\
    \    return \"\";\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n \
    \   for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n\
    \            }\n        }\n    }\n    return 0;\n}", "    my $n = scalar(@$l);\n\
    \    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n\
    \            }\n        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found\
    \ = 0;\n    while ($i < $n && $found == 0) {\n        $j = $i + 1;\n        while\
    \ ($j < $n && $found == 0) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              $found = 1;\n            }\n            $j = $j + 1;\n        }\n\
    \        $i = $i + 1;\n    }\n    return $found;\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found = 0;\n    while\
    \ ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n                last;\n\
    \            }\n            $j = $j + 1;\n        }\n        if ($found) {\n \
    \           last;\n        }\n        $i = $i + 1;\n    }\n    return $found;\n\
    }", "    my @list = @$l;\n    my %hash = ();\n    foreach my $i (@list) {\n  \
    \      if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n    my\
    \ $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j =\
    \ $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return 0;\n}",
  "    my %h = ();\n    foreach my $n (@$l) {\n        if (exists $h{-$n}) {\n   \
    \         return 1;\n        }\n        $h{$n} = 1;\n    }\n    return 0;\n}",
  "    my @l = @$l;\n    my %h;\n    for my $i (@l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $found = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n         \
    \       $found = 1;\n                last;\n            }\n        }\n       \
    \ if ($found) {\n            last;\n        }\n    }\n    return $found;\n}",
  "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n  \
    \          return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n\
    }", "    my %hash;\n    foreach my $i (@$l) {\n        if (defined $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n       \
    \         $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n  \
    \          return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}",
  "    my %hash = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n\
    \            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n\
    }", "    my @l = @$l;\n    my $i = 0;\n    my $j = 0;\n    my $len = scalar @l;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my $sum = 0;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    $sum = $l->[$i] + $l->[$j];\n            if ($sum == 0) {\n             \
    \   return 1;\n            }\n        }\n    }\n    return 0;\n}", "    my %h\
    \ = ();\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n          \
    \  return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my\
    \ @list = @$l;\n    my %hash;\n    foreach my $i (@list) {\n        if (exists\
    \ $hash{$i}) {\n            return 1;\n        }\n        $hash{-$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n \
    \   for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j =\
    \ 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found = 0;\n    while\
    \ ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n                last;\n\
    \            }\n            $j = $j + 1;\n        }\n        if ($found) {\n \
    \           last;\n        }\n        $i = $i + 1;\n    }\n    return $found;\n\
    }", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my @list = @$l;\n    my %hash;\n    foreach my $num (@list) {\n\
    \        if (exists $hash{$num}) {\n            return 1;\n        }\n       \
    \ $hash{-$num} = 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n    my %hash\
    \ = ();\n    foreach my $i (@list) {\n        if (exists $hash{-$i}) {\n     \
    \       return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    my $found = 0;\n\
    \    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n  \
    \              last;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $found;\n}", "    my @list = @$l;\n    my %hash = ();\n   \
    \ foreach my $i (@list) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $found\
    \ = 1;\n                last;\n            }\n        }\n        if ($found) {\n\
    \            last;\n        }\n    }\n    return $found;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $sum = 0;\n    my $len = @$l;\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            $sum = $l->[$i]\
    \ + $l->[$j];\n            if ($sum == 0) {\n                return 1;\n     \
    \       }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    while ($i < $n)\
    \ {\n        $j = $i + 1;\n        while ($j < $n) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j\
    \ = 0;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n\
    \                return 1;\n            }\n        }\n    }\n    return 0;\n}",
  "    my %hash = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n\
    \            return 1;\n        } else {\n            $hash{$i} = 1;\n       \
    \ }\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n   \
    \     if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n    my %hash = ();\n \
    \   for my $i (0..$#list) {\n        if (exists $hash{-$list[$i]}) {\n       \
    \     return 1;\n        }\n        $hash{$list[$i]} = 1;\n    }\n    return 0;\n\
    }", "    my %hash = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my @list = @$l;\n    my %hash;\n    foreach my $i (@list) {\n \
    \       if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my @l = @$l;\n    my %h;\n    for my $i\
    \ (@l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n  \
    \      $h{$i} = 1;\n    }\n    return 0;\n}", "    my $sum = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 =\
    \ 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n   \
    \ my $o1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 =\
    \ 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n   \
    \ my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 =\
    \ 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n   \
    \ my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 =\
    \ 0;\n    my $m2 = 0;\n    my $n2 = 0;\n    my $o2 = 0;\n    my $p2 = 0;\n   \
    \ my $q2 = 0;\n    my $r2 =", "    my %h;\n    foreach my $i (@$l) {\n       \
    \ if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return 0;\n}", "    my $len = scalar(@$l);\n    for (my $i = 0; $i\
    \ < $len; $i++) {\n        for (my $j = $i + 1; $j < $len; $j++) {\n         \
    \   if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return 0;\n}", "    my %hash = ();\n    my $i = 0;\n  \
    \  my $j = 0;\n    my $len = scalar(@$l);\n    my $result = 0;\n    for($i = 0;\
    \ $i < $len; $i++){\n        $hash{$l->[$i]} = 1;\n    }\n    for($i = 0; $i <\
    \ $len; $i++){\n        if(exists($hash{-$l->[$i]})){\n            $result = 1;\n\
    \            last;\n        }\n    }\n    return $result;\n}", "    my @l = @$l;\n\
    \    my %h;\n    for my $i (@l) {\n        if (exists $h{-$i}) {\n           \
    \ return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my\
    \ @list = @$l;\n    my %hash = ();\n    foreach my $i (@list) {\n        if (exists\
    \ $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if\
    \ (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n     \
    \   if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my $n = scalar(@$l);\n    my $i = 0;\n  \
    \  my $j = 0;\n    my $k = 0;\n    my $sum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            $sum = $l->[$i] +\
    \ $l->[$j];\n            if ($sum == 0) {\n                return 1;\n       \
    \     }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n\
    \    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for\
    \ ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n        }\n    }\n    return 0;\n\
    }", "    my %h = ();\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $h{$l->[$i]} = 1;\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $k = $l->[$i];\n        if ($h{-$k}) {\n\
    \            return 1;\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n        $j =\
    \ $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n            $j++;\n        }\n\
    \        $i++;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $n = @$l;\n    my $sum = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            $sum = $l->[$i] +\
    \ $l->[$j];\n            if ($sum == 0) {\n                return 1;\n       \
    \     }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $len = scalar(@$l);\n    while ($i < $len) {\n       \
    \ $j = $i + 1;\n        while ($j < $len) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n            $j = $j + 1;\n\
    \        }\n        $i = $i + 1;\n    }\n    return 0;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $len = scalar(@$l);\n    my $found = 0;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n\
    \                last;\n            }\n        }\n        if ($found) {\n    \
    \        last;\n        }\n    }\n    return $found;\n}", "    my @list = @$l;\n\
    \    my %hash;\n    my $i;\n    for ($i = 0; $i < @list; $i++) {\n        $hash{$list[$i]}\
    \ = 1;\n    }\n    for ($i = 0; $i < @list; $i++) {\n        if ($hash{-$list[$i]})\
    \ {\n            return 1;\n        }\n    }\n    return 0;\n}", "    my $i =\
    \ 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n      \
    \  $j = $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n            $j = $j + 1;\n\
    \        }\n        $i = $i + 1;\n    }\n    return \"\";\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n        $j =\
    \ $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n            $j = $j + 1;\n    \
    \    }\n        $i = $i + 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $sum = 0;\n    my $len = scalar(@$l);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n\
    \            $sum = $l->[$i] + $l->[$j];\n            if ($sum == 0) {\n     \
    \           return 1;\n            }\n        }\n    }\n    return 0;\n}", " \
    \   my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;", "    my $i =\
    \ 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n\
    \            }\n        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $found = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while\
    \ ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $found\
    \ = 1;\n                $k = $j;\n            }\n            $j = $j + 1;\n  \
    \      }\n        $i = $i + 1;\n    }\n    return $found;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] +\
    \ $l->[$j] == 0) {\n                return 1;\n            }\n        }\n    }\n\
    \    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists\
    \ $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n\
    \    while ($i < $n) {\n        while ($j < $n) {\n            if ($i != $j &&\
    \ $l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n    \
    \        $j++;\n        }\n        $i++;\n    }\n    return 0;\n}", "    my $i;\n\
    \    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my %hash = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h = ();\n    foreach my\
    \ $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n\
    \        $h{$i} = 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n    my %hash\
    \ = ();\n    foreach my $i (@list) {\n        if (exists $hash{-$i}) {\n     \
    \       return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my\
    \ $found = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n               \
    \ $found = 1;\n                last;\n            }\n        }\n        if ($found)\
    \ {\n            last;\n        }\n    }\n    return $found;\n}", "    my @list\
    \ = @$l;\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    for ($i = 0;\
    \ $i < @list; $i++) {\n        for ($j = $i + 1; $j < @list; $j++) {\n       \
    \     if ($list[$i] + $list[$j] == 0) {\n                $found = 1;\n       \
    \     }\n        }\n    }\n    return $found;\n}", "    my $i;\n    my $j;\n \
    \   for ($i = 0; $i < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n\
    \            }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found = 0;\n    while\
    \ ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n                $k\
    \ = $j;\n            }\n            $j = $j + 1;\n        }\n        $i = $i +\
    \ 1;\n    }\n    return $found;\n}", "    my %hash;\n    my $i;\n    for ($i =\
    \ 0; $i < @$l; $i++) {\n        if (exists $hash{-$l->[$i]}) {\n            return\
    \ 1;\n        }\n        $hash{$l->[$i]} = 1;\n    }\n    return 0;\n}", "   \
    \ my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n   \
    \         return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n\
    }", "    my @list = @$l;\n    my %hash;\n    foreach my $i (@list) {\n       \
    \ if (exists $hash{$i}) {\n            return 1;\n        }\n        $hash{-$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n    for ($i = 0; $i\
    \ < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l; $j++) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \     }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 1;\n    my $n\
    \ = scalar(@$l);\n    while ($i < $n) {\n        while ($j < $n) {\n         \
    \   if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \            $j++;\n        }\n        $i++;\n        $j = $i + 1;\n    }\n  \
    \  return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n\
    \    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n            $j++;\n        }\n        $i++;\n    }\n    return 0;\n\
    }", "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i <\
    \ $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n            $j\
    \ = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return 0;\n}", "    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found\
    \ = 0;\n    while ($i < $n && $found == 0) {\n        $j = $i + 1;\n        while\
    \ ($j < $n && $found == 0) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              $found = 1;\n            }\n            $j = $j + 1;\n        }\n\
    \        $i = $i + 1;\n    }\n    return $found;\n}", "    my $i;\n    my $j;\n\
    \    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return 0;\n}",
  "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n   \
    \ my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n       \
    \         return 1;\n            }\n        }\n    }\n    return 0;\n}", "   \
    \ my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    my $found = 0;\n\
    \    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n  \
    \              last;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $found;\n}", "    my %hash = ();\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $len\
    \ = scalar(@$l);\n    while ($i < $len) {\n        $j = $i + 1;\n        while\
    \ ($j < $len) {\n            if ($l->[$i] + $l->[$j] == 0) {\n               \
    \ return 1;\n            }\n            $j++;\n        }\n        $i++;\n    }\n\
    \    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists\
    \ $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n   \
    \ my $n = scalar(@$l);\n    my $found = 0;\n    while ($i < $n) {\n        $j\
    \ = $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                $found = 1;\n                last;\n            }\n  \
    \          $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return $found;\n\
    }", "    my $i = 0;\n    my $j = 0;\n    my $sum = 0;\n    my $length = @$l;\n\
    \    for ($i = 0; $i < $length; $i++) {\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            $sum = $l->[$i] + $l->[$j];\n            if ($sum == 0)\
    \ {\n                return 1;\n            }\n        }\n    }\n    return 0;\n\
    }", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n      \
    \  }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my\
    \ $j = 0;\n    my $sum = 0;\n    my $n = @$l;\n    while ($i < $n) {\n       \
    \ $j = $i + 1;\n        while ($j < $n) {\n            $sum = $l->[$i] + $l->[$j];\n\
    \            if ($sum == 0) {\n                return 1;\n            }\n    \
    \        $j++;\n        }\n        $i++;\n    }\n    return 0;\n}", "    my %hash\
    \ = ();\n    foreach my $num (@$l) {\n        if (exists $hash{-$num}) {\n   \
    \         return 1;\n        }\n        $hash{$num} = 1;\n    }\n    return 0;\n\
    }", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \     }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n\
    \ = scalar(@$l);\n    for $i (0..$n-1) {\n        for $j ($i+1..$n-1) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n        \
    \    }\n        }\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n\
    \    my $found = 0;\n    for ($i = 0; $i < scalar(@$l); $i++) {\n        for ($j\
    \ = $i + 1; $j < scalar(@$l); $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                $found = 1;\n                last;\n            }\n  \
    \      }\n        if ($found) {\n            last;\n        }\n    }\n    return\
    \ $found;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $sum = 0;\n    my $found = 0;\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            $sum = $l->[$i] + $l->[$j];\n\
    \            if ($sum == 0) {\n                $found = 1;\n                last;\n\
    \            }\n        }\n        if ($found) {\n            last;\n        }\n\
    \    }\n    return $found;\n}", "    my %hash = ();\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash;\n    my $i;\n  \
    \  my $j;\n    my $sum;\n    for ($i = 0; $i < scalar(@$l); $i++) {\n        $hash{$l->[$i]}\
    \ = 1;\n    }\n    for ($i = 0; $i < scalar(@$l); $i++) {\n        if (exists($hash{-$l->[$i]}))\
    \ {\n            return 1;\n        }\n    }\n    return 0;\n}", "    my $n =\
    \ scalar(@$l);\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i\
    \ + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n       \
    \         return 1;\n            }\n        }\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n         \
    \   return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "   \
    \ my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my\
    \ $found = 0;\n    while ($i < $n && $found == 0) {\n        $j = $i + 1;\n  \
    \      while ($j < $n && $found == 0) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                $found = 1;\n            }\n            $j = $j + 1;\n\
    \        }\n        $i = $i + 1;\n    }\n    return $found;\n}", "    my @list\
    \ = @$l;\n    my $i = 0;\n    my $j = 0;\n    my $len = scalar @list;\n    while\
    \ ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n         \
    \   if ($list[$i] + $list[$j] == 0) {\n                return 1;\n           \
    \ }\n            $j++;\n        }\n        $i++;\n    }\n    return 0;\n}", " \
    \   my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    while ($i < $len)\
    \ {\n        $j = $i + 1;\n        while ($j < $len) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return 0;\n}", "    my(@l) = @$l;\n    my(%h);\n\
    \    for my $i (0..$#l) {\n        $h{$l[$i]} = $i;\n    }\n    for my $i (0..$#l)\
    \ {\n        if (exists $h{-$l[$i]} && $h{-$l[$i]} != $i) {\n            return\
    \ 1;\n        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n\
    \    my $len = scalar(@$l);\n    while ($i < $len) {\n        $j = $i + 1;\n \
    \       while ($j < $len) {\n            if ($l->[$i] + $l->[$j] == 0) {\n   \
    \             return 1;\n            }\n            $j++;\n        }\n       \
    \ $i++;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j = 0;\n    my $n =\
    \ scalar(@$l);\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j\
    \ < $n) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return\
    \ 1;\n            }\n            $j = $j + 1;\n        }\n        $i = $i + 1;\n\
    \    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n       \
    \ if (exists $hash{$i}) {\n            return 1;\n        }\n        $hash{-$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_34_unique
language: pl
prompt: "# Return sorted unique elements in a list\n# >>> unique([5, 3, 5, 2, 3, 3,\
  \ 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\nsub unique {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&unique;\n\
  \        if(eq_deeply($candidate->([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9,\
  \ 123])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my(%h, @u);\n    foreach (@$l) {\n        push(@u, $_) unless $h{$_}++;\n\
    \    }\n    return @u;\n}", "    my(%h, @u);\n    foreach (@$l) {\n        $h{$_}\
    \ = 1;\n    }\n    @u = sort keys %h;\n    return \\@u;\n}", "    my %s;\n   \
    \ @s{@$l} = ();\n    return [sort {$a <=> $b} keys %s];\n}", "    my %h;\n   \
    \ foreach my $e (@$l) {\n        $h{$e} = 1;\n    }\n    return [sort keys %h];\n\
    }", "    my %h;\n    foreach (@$l) {\n        $h{$_} = 1;\n    }\n    return sort\
    \ { $a <=> $b } keys %h;\n}", "    my %h;\n    foreach (@$l) {\n        $h{$_}\
    \ = 1;\n    }\n    return [sort keys %h];\n}", "    my %h;\n    foreach (@$l)\
    \ {\n        $h{$_} = 1;\n    }\n    return [ sort { $a <=> $b } keys %h ];\n}",
  "    my %h;\n    foreach my $e (@$l) {\n        $h{$e} = 1;\n    }\n    return [sort\
    \ {$a <=> $b} keys %h];\n}", "    my %s;\n    return sort { $a <=> $b } grep {\
    \ !$s{$_}++ } @$l;\n}", "    my(%h, @u);\n    foreach (@$l) {\n        $h{$_}\
    \ = 1;\n    }\n    @u = sort keys %h;\n    return \\@u;\n}", "    my %h;\n   \
    \ @h{@$l} = ();\n    return [sort {$a <=> $b} keys %h];\n}", "    my(%h, @u);\n\
    \    foreach (@$l) {\n        push(@u, $_) unless $h{$_}++;\n    }\n    return\
    \ \\@u;\n}", "    my(%seen, @uniq);\n    foreach my $e (@$l) {\n        push(@uniq,\
    \ $e) unless $seen{$e}++;\n    }\n    return \\@uniq;\n}", "    my %h;\n    foreach\
    \ (@$l) {\n        $h{$_} = 1;\n    }\n    return [sort keys %h];\n}", "    my\
    \ %h;\n    foreach (@$l) {\n        $h{$_} = 1;\n    }\n    my @u = sort { $a\
    \ <=> $b } keys %h;\n    return \\@u;\n}", "    my(%h, @r);\n    foreach (@$l)\
    \ {\n        push(@r, $_) unless $h{$_}++;\n    }\n    return @r;\n}", "    my\
    \ %h;\n    foreach (@$l) {\n        $h{$_} = 1;\n    }\n    return [sort {$a <=>\
    \ $b} keys %h];\n}", "    my %h;\n    @h{@$l} = ();\n    return [sort {$a <=>\
    \ $b} keys %h];\n}", "    my %h;\n    foreach (@$l) {\n        $h{$_} = 1;\n \
    \   }\n    return [sort {$a <=> $b} keys %h];\n}", "    my %h;\n    foreach (@$l)\
    \ {\n        $h{$_} = 1;\n    }\n    return [ sort keys %h ];\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_46_fib4
language: pl
prompt: "# The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n# fib4(0) -> 0\n# fib4(1) -> 0\n# fib4(2) -> 2\n#\
  \ fib4(3) -> 0\n# fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n# Please\
  \ write a function to efficiently compute the n-th element of the fib4 number sequence.\
  \  Do not use recursion.\n# >>> fib4(5)\n# 4\n# >>> fib4(6)\n# 8\n# >>> fib4(7)\n\
  # 14\nsub fib4 {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib4;\n \
  \       if(eq_deeply($candidate->(5),4)) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n        if(eq_deeply($candidate->(8),28)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),104))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),386))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n    my $fib4_2 = 2;\n   \
    \ my $fib4_3 = 0;\n    my $fib4_n = 0;\n    if ($n == 0) {\n        return $fib4_0;\n\
    \    }\n    elsif ($n == 1) {\n        return $fib4_1;\n    }\n    elsif ($n ==\
    \ 2) {\n        return $fib4_2;\n    }\n    elsif ($n == 3) {\n        return\
    \ $fib4_3;\n    }\n    else {\n        for (my $i = 4; $i <= $n; $i++) {\n   \
    \         $fib4_n = $fib4_0 + $fib4_1 + $fib4_2 + $fib4_3;\n            $fib4_0\
    \ = $fib4_1;\n            $fib4_1 = $fib4_2;\n            $fib4_2 = $fib4_3;\n\
    \            $fib4_3 = $fib4_n;\n        }\n        return $fib4_n;\n    }\n}",
  "    my @fib4 = (0, 0, 2, 0);\n    return $fib4[$n] if $n < 4;\n    for (my $i =\
    \ 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}", "    my @fib4 = (0, 0, 2,\
    \ 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1]\
    \ + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}",
  "    my @fib4 = (0, 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i]\
    \ = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return\
    \ $fib4[$n];\n}", "    my $fib4 = [0, 0, 2, 0];\n    for (my $i = 4; $i <= $n;\
    \ $i++) {\n        $fib4->[$i] = $fib4->[$i-1] + $fib4->[$i-2] + $fib4->[$i-3]\
    \ + $fib4->[$i-4];\n    }\n    return $fib4->[$n];\n}", "    my($fib4_0, $fib4_1,\
    \ $fib4_2, $fib4_3, $fib4_4) = (0, 0, 2, 0, 0);\n    for(my $i = 0; $i < $n; $i++)\
    \ {\n        $fib4_4 = $fib4_3 + $fib4_2 + $fib4_1 + $fib4_0;\n        $fib4_0\
    \ = $fib4_1;\n        $fib4_1 = $fib4_2;\n        $fib4_2 = $fib4_3;\n       \
    \ $fib4_3 = $fib4_4;\n    }\n    return $fib4_4;\n}", "    my @fib4 = (0, 0, 2,\
    \ 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1]\
    \ + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}",
  "    my @fib4 = (0, 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i]\
    \ = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return\
    \ $fib4[$n];\n}", "    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n    my $fib4_2 =\
    \ 2;\n    my $fib4_3 = 0;\n    my $fib4_n = 0;\n    if ($n == 0) {\n        return\
    \ $fib4_0;\n    }\n    if ($n == 1) {\n        return $fib4_1;\n    }\n    if\
    \ ($n == 2) {\n        return $fib4_2;\n    }\n    if ($n == 3) {\n        return\
    \ $fib4_3;\n    }\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0\
    \ + $fib4_1 + $fib4_2 + $fib4_3;\n        $fib4_0 = $fib4_1;\n        $fib4_1\
    \ = $fib4_2;\n        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_n;\n    }\n\
    \    return $fib4_n;\n}", "    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n    my $fib4_2\
    \ = 2;\n    my $fib4_3 = 0;\n    my $fib4_n = 0;\n    for (my $i = 4; $i <= $n;\
    \ $i++) {\n        $fib4_n = $fib4_0 + $fib4_1 + $fib4_2 + $fib4_3;\n        $fib4_0\
    \ = $fib4_1;\n        $fib4_1 = $fib4_2;\n        $fib4_2 = $fib4_3;\n       \
    \ $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n}", "    my($fib4_1, $fib4_2,\
    \ $fib4_3, $fib4_4, $fib4_n);\n    $fib4_1 = 0;\n    $fib4_2 = 0;\n    $fib4_3\
    \ = 2;\n    $fib4_4 = 0;\n    $fib4_n = 0;\n    for (my $i = 4; $i <= $n; $i++)\
    \ {\n        $fib4_n = $fib4_1 + $fib4_2 + $fib4_3 + $fib4_4;\n        $fib4_1\
    \ = $fib4_2;\n        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_4;\n       \
    \ $fib4_4 = $fib4_n;\n    }\n    return $fib4_n;\n}", "    my @fib4 = (0, 0, 2,\
    \ 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1]\
    \ + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}",
  "    my($f0, $f1, $f2, $f3, $f4) = (0, 0, 2, 0, 0);\n    for(my $i = 4; $i <= $n;\
    \ $i++) {\n        $f4 = $f3 + $f2 + $f1 + $f0;\n        $f0 = $f1;\n        $f1\
    \ = $f2;\n        $f2 = $f3;\n        $f3 = $f4;\n    }\n    return $f4;\n}",
  "    my @fib4 = (0, 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i]\
    \ = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return\
    \ $fib4[$n];\n}", "    my @fib4 = (0, 0, 2, 0);\n    for (my $i = 4; $i <= $n;\
    \ $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n\
    \    }\n    return $fib4[$n];\n}", "    my @fib4 = (0, 0, 2, 0);\n    for (my\
    \ $i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}", "    my @fib4 = (0, 0, 2,\
    \ 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1]\
    \ + $fib4[$i-2] + $fib4[$i-3] + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}",
  "    my($fib4_n, $fib4_n_1, $fib4_n_2, $fib4_n_3, $fib4_n_4) = (0, 0, 2, 0, 0);\n\
    \    for (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_n_1 + $fib4_n_2\
    \ + $fib4_n_3 + $fib4_n_4;\n        $fib4_n_4 = $fib4_n_3;\n        $fib4_n_3\
    \ = $fib4_n_2;\n        $fib4_n_2 = $fib4_n_1;\n        $fib4_n_1 = $fib4_n;\n\
    \    }\n    return $fib4_n;\n}", "    my @fib4 = (0, 0, 2, 0);\n    for (my $i\
    \ = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}", "    my @fib4 = (0, 0, 2,\
    \ 0);\n    for (4..$n) {\n        push @fib4, $fib4[-1] + $fib4[-2] + $fib4[-3]\
    \ + $fib4[-4];\n    }\n    return $fib4[$n];\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_111_histogram
language: pl
prompt: "# Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n# of the letter with the most repetition and containing the corresponding\
  \ count.\n# If several letters have the same occurrence, return all of them.\n#\
  \ Example:\n# >>> histogram(\"a b c\")\n# {\"a\" => 1, \"b\" => 1, \"c\" => 1}\n\
  # >>> histogram(\"a b b a\")\n# {\"a\" => 2, \"b\" => 2}\n# >>> histogram(\"a b\
  \ c a b\")\n# {\"a\" => 2, \"b\" => 2}\n# >>> histogram(\"b b b b a\")\n# {\"b\"\
  \ => 4}\n# >>> histogram(\"\")\n# {}\nsub histogram {\n    my($test) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&histogram;\n\
  \        if(eq_deeply($candidate->(\"a b b a\"),{\"a\" => 2, \"b\" => 2})) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  a b c a b\"),{\"a\" => 2, \"b\" => 2})) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->(\"a b c d g\"),{\"a\" =>\
  \ 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1})) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"r t g\"\
  ),{\"r\" => 1, \"t\" => 1, \"g\" => 1})) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n        if(eq_deeply($candidate->(\"b b b b a\"),{\"b\"\
  \ => 4})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  r t g\"),{\"r\" => 1, \"t\" => 1, \"g\" => 1})) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\"),{})) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  a\"),{\"a\" => 1})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"
completions: ["    my %hash = ();\n    my @array = split(\" \", $test);\n    foreach\
    \ my $i (@array) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n\
    \        } else {\n            $hash{$i} = 1;\n        }\n    }\n    return %hash;\n\
    }", "    my @letters = split(/ /, $test);\n    my %count;\n    foreach my $letter\
    \ (@letters) {\n        $count{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $key (keys %count) {\n        if ($count{$key} > $max) {\n            $max\
    \ = $count{$key};\n        }\n    }\n    my %result;\n    foreach my $key (keys\
    \ %count) {\n        if ($count{$key} == $max) {\n            $result{$key} =\
    \ $max;\n        }\n    }\n    return %result;\n}", "    my %hash = ();\n    my\
    \ @array = split(' ', $test);\n    foreach my $i (@array) {\n        if (exists\
    \ $hash{$i}) {\n            $hash{$i}++;\n        } else {\n            $hash{$i}\
    \ = 1;\n        }\n    }\n    my $max = 0;\n    my %result = ();\n    foreach\
    \ my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n            $max\
    \ = $hash{$key};\n        }\n    }\n    foreach my $key (keys %hash) {\n     \
    \   if ($hash{$key} == $max) {\n            $result{$key} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my %histogram = ();\n    my @letters = split(/\
    \ /, $test);\n    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my @test = split(/\
    \ /, $test);\n    my %histogram;\n    foreach my $letter (@test) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %result;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %histogram;\n    my @letters = split / /, $test;\n   \
    \ foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n   \
    \ return \\%histogram;\n}", "    my @test = split(/ /, $test);\n    my %test;\n\
    \    foreach my $test (@test) {\n        $test{$test}++;\n    }\n    return %test;\n\
    }", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my\
    \ $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n\
    \    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter} >\
    \ $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my %result;\n\
    \    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter} ==\
    \ $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %hist;\n    my @letters = split(/\\s+/, $test);\n    foreach\
    \ my $letter (@letters) {\n        $hist{$letter}++;\n    }\n    my $max = 0;\n\
    \    foreach my $key (keys %hist) {\n        $max = $hist{$key} if $hist{$key}\
    \ > $max;\n    }\n    my %result;\n    foreach my $key (keys %hist) {\n      \
    \  $result{$key} = $hist{$key} if $hist{$key} == $max;\n    }\n    return %result;\n\
    }", "    my %hash;\n    my @array = split(\" \", $test);\n    foreach my $i (@array)\
    \ {\n        $hash{$i}++;\n    }\n    my $max = 0;\n    my %result;\n    foreach\
    \ my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n            $max\
    \ = $hash{$key};\n        }\n    }\n    foreach my $key (keys %hash) {\n     \
    \   if ($hash{$key} == $max) {\n            $result{$key} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my %hash;\n    my @arr = split(/ /, $test);\n\
    \    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    my $max = 0;\n \
    \   foreach my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n      \
    \      $max = $hash{$key};\n        }\n    }\n    my %result;\n    foreach my\
    \ $key (keys %hash) {\n        if ($hash{$key} == $max) {\n            $result{$key}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %hash;\n    my @array\
    \ = split(' ', $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n \
    \   }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ > $max) {\n            $max = $hash{$i};\n        }\n    }\n    my %result;\n\
    \    foreach my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n        \
    \    $result{$i} = $max;\n        }\n    }\n    return %result;\n}", "    my %hash;\n\
    \    my @array = split(' ', $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n\
    \    }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ > $max) {\n            $max = $hash{$i};\n        }\n    }\n    my %result;\n\
    \    foreach my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n        \
    \    $result{$i} = $max;\n        }\n    }\n    return %result;\n}", "    my @test\
    \ = split(/ /, $test);\n    my %histogram;\n    foreach my $letter (@test) {\n\
    \        if (exists $histogram{$letter}) {\n            $histogram{$letter}++;\n\
    \        } else {\n            $histogram{$letter} = 1;\n        }\n    }\n  \
    \  my @max = sort {$histogram{$b} <=> $histogram{$a}} keys %histogram;\n    my\
    \ $max = $histogram{$max[0]};\n    my %max;\n    foreach my $key (keys %histogram)\
    \ {\n        if ($histogram{$key} == $max) {\n            $max{$key} = $max;\n\
    \        }\n    }\n    return %max;\n}", "    my %hash;\n    my @array = split(\"\
    \ \", $test);\n    foreach my $i (@array) {\n        if (exists $hash{$i}) {\n\
    \            $hash{$i} += 1;\n        } else {\n            $hash{$i} = 1;\n \
    \       }\n    }\n    my $max = 0;\n    my @max_keys;\n    foreach my $key (keys\
    \ %hash) {\n        if ($hash{$key} > $max) {\n            $max = $hash{$key};\n\
    \            @max_keys = ($key);\n        } elsif ($hash{$key} == $max) {\n  \
    \          push(@max_keys, $key);\n        }\n    }\n    my %result;\n    foreach\
    \ my $key (@max_keys) {\n        $result{$key} = $max;\n    }\n    return %result;\n\
    }", "    my %hash;\n    my @array = split(' ', $test);\n    foreach my $i (@array)\
    \ {\n        $hash{$i}++;\n    }\n    my %result;\n    my $max = 0;\n    foreach\
    \ my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n            $max\
    \ = $hash{$key};\n        }\n    }\n    foreach my $key (keys %hash) {\n     \
    \   if ($hash{$key} == $max) {\n            $result{$key} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my %histogram;\n    my @letters = split(/\
    \ /, $test);\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    my @max_letters;\n    foreach my $letter (keys %histogram)\
    \ {\n        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            @max_letters = ($letter);\n        } elsif ($histogram{$letter} ==\
    \ $max) {\n            push(@max_letters, $letter);\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (@max_letters) {\n        $result{$letter}\
    \ = $max;\n    }\n    return %result;\n}", "    my %histogram = ();\n    my @letters\
    \ = split(' ', $test);\n    foreach my $letter (@letters) {\n        if (exists\
    \ $histogram{$letter}) {\n            $histogram{$letter}++;\n        } else {\n\
    \            $histogram{$letter} = 1;\n        }\n    }\n    return %histogram;\n\
    }", "    my %counts;\n    my %max;\n    my $max = 0;\n    foreach my $char (split(/\
    \ /, $test)) {\n        $counts{$char}++;\n        if ($counts{$char} > $max)\
    \ {\n            $max = $counts{$char};\n            %max = ($char => $max);\n\
    \        } elsif ($counts{$char} == $max) {\n            $max{$char} = $max;\n\
    \        }\n    }\n    return %max;\n}", "    my @letters = split(/ /, $test);\n\
    \    my %histogram;\n    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my @words = split(/\
    \ /, $test);\n    my %count;\n    foreach my $word (@words) {\n        $count{$word}++;\n\
    \    }\n    my $max = 0;\n    my %result;\n    foreach my $key (keys %count) {\n\
    \        if ($count{$key} > $max) {\n            $max = $count{$key};\n      \
    \      %result = ($key => $count{$key});\n        } elsif ($count{$key} == $max)\
    \ {\n            $result{$key} = $count{$key};\n        }\n    }\n    return %result;\n\
    }", "    my %hash;\n    my @array = split(/ /, $test);\n    foreach my $item (@array)\
    \ {\n        if (exists $hash{$item}) {\n            $hash{$item} += 1;\n    \
    \    } else {\n            $hash{$item} = 1;\n        }\n    }\n    return %hash;\n\
    }", "    my @letters = split(' ', $test);\n    my %histogram;\n    foreach my\
    \ $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    return %histogram;\n\
    }", "    my %count;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $count{$letter}++;\n    }\n    my $max = max(values %count);\n\
    \    my @max_letters = grep { $count{$_} == $max } keys %count;\n    my %result;\n\
    \    foreach my $letter (@max_letters) {\n        $result{$letter} = $max;\n \
    \   }\n    return %result;\n}", "    my %hash;\n    my @array = split(/ /, $test);\n\
    \    foreach my $i (@array) {\n        if (exists $hash{$i}) {\n            $hash{$i}\
    \ += 1;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    my\
    \ $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n\
    \            $max = $hash{$i};\n        }\n    }\n    my %result;\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n            $result{$i}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %histogram;\n  \
    \  my @letters = split(' ', $test);\n    foreach my $letter (@letters) {\n   \
    \     $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach my $key (keys\
    \ %histogram) {\n        if ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n\
    \        }\n    }\n    my %result;\n    foreach my $key (keys %histogram) {\n\
    \        if ($histogram{$key} == $max) {\n            $result{$key} = $max;\n\
    \        }\n    }\n    return %result;\n}", "    my %histogram;\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    my @max_letters;\n    foreach my $letter (keys %histogram)\
    \ {\n        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            @max_letters = ($letter);\n        } elsif ($histogram{$letter} ==\
    \ $max) {\n            push(@max_letters, $letter);\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (@max_letters) {\n        $result{$letter}\
    \ = $max;\n    }\n    return %result;\n}", "    my @test = split(/ /, $test);\n\
    \    my %test;\n    foreach my $i (@test) {\n        $test{$i}++;\n    }\n   \
    \ my $max = 0;\n    my %result;\n    foreach my $i (keys %test) {\n        if\
    \ ($test{$i} > $max) {\n            $max = $test{$i};\n        }\n    }\n    foreach\
    \ my $i (keys %test) {\n        if ($test{$i} == $max) {\n            $result{$i}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my @test = split(/\
    \ /, $test);\n    my %histogram;\n    foreach my $letter (@test) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %max_histogram;\n    foreach my $key (keys %histogram) {\n    \
    \    if ($histogram{$key} == $max) {\n            $max_histogram{$key} = $max;\n\
    \        }\n    }\n    return %max_histogram;\n}", "    my %histogram;\n    my\
    \ @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n       \
    \ $histogram{$letter}++;\n    }\n    return %histogram;\n}", "    my @test = split(/\
    \ /, $test);\n    my %count;\n    foreach my $word (@test) {\n        $count{$word}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %count) {\n        if ($count{$key}\
    \ > $max) {\n            $max = $count{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %count) {\n        if ($count{$key} == $max) {\n  \
    \          $result{$key} = $max;\n        }\n    }\n    return %result;\n}", " \
    \   my %hist;\n    my @letters = split(/\\s+/, $test);\n    foreach my $letter\
    \ (@letters) {\n        $hist{$letter}++;\n    }\n    my %max;\n    my $max =\
    \ 0;\n    foreach my $letter (keys %hist) {\n        if ($hist{$letter} > $max)\
    \ {\n            $max = $hist{$letter};\n            %max = ();\n            $max{$letter}\
    \ = $hist{$letter};\n        } elsif ($hist{$letter} == $max) {\n            $max{$letter}\
    \ = $hist{$letter};\n        }\n    }\n    return %max;\n}", "    my %hash = ();\n\
    \    my @array = split(/ /, $test);\n    foreach my $i (@array) {\n        if\
    \ (exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n         \
    \   $hash{$i} = 1;\n        }\n    }\n    my $max = 0;\n    foreach my $i (keys\
    \ %hash) {\n        if ($hash{$i} > $max) {\n            $max = $hash{$i};\n \
    \       }\n    }\n    my %result = ();\n    foreach my $i (keys %hash) {\n   \
    \     if ($hash{$i} == $max) {\n            $result{$i} = $max;\n        }\n \
    \   }\n    return %result;\n}", "    my %histogram;\n    my @letters = split(/\
    \ /, $test);\n    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter}++;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %histogram;\n  \
    \  my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n   \
    \     $histogram{$letter}++;\n    }\n    return %histogram;\n}", "    my %count;\n\
    \    my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n \
    \       $count{$letter}++;\n    }\n    my $max = 0;\n    foreach my $key (keys\
    \ %count) {\n        if ($count{$key} > $max) {\n            $max = $count{$key};\n\
    \        }\n    }\n    my %result;\n    foreach my $key (keys %count) {\n    \
    \    if ($count{$key} == $max) {\n            $result{$key} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my %hist;\n    my @letters = split(/\\s+/,\
    \ $test);\n    foreach my $letter (@letters) {\n        $hist{$letter}++;\n  \
    \  }\n    my $max = 0;\n    foreach my $key (keys %hist) {\n        if ($hist{$key}\
    \ > $max) {\n            $max = $hist{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %hist) {\n        if ($hist{$key} == $max) {\n    \
    \        $result{$key} = $max;\n        }\n    }\n    return %result;\n}", " \
    \   my @test = split(/ /, $test);\n    my %test;\n    foreach my $i (@test) {\n\
    \        $test{$i}++;\n    }\n    my %result;\n    my $max = 0;\n    foreach my\
    \ $i (keys %test) {\n        if ($test{$i} > $max) {\n            $max = $test{$i};\n\
    \        }\n    }\n    foreach my $i (keys %test) {\n        if ($test{$i} ==\
    \ $max) {\n            $result{$i} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my\
    \ $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} > $max)\
    \ {\n            $max = $histogram{$key};\n        }\n    }\n    my %max_histogram;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} == $max)\
    \ {\n            $max_histogram{$key} = $max;\n        }\n    }\n    return %max_histogram;\n\
    }", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my\
    \ $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} > $max)\
    \ {\n            $max = $histogram{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} == $max)\
    \ {\n            $result{$key} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %hist;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $hist{$letter}++;\n    }\n    my $max = max(values %hist);\n\
    \    my @max_letters = grep { $hist{$_} == $max } keys %hist;\n    my %result;\n\
    \    foreach my $letter (@max_letters) {\n        $result{$letter} = $max;\n \
    \   }\n    return %result;\n}", "    my %hash;\n    my @array = split(/ /, $test);\n\
    \    foreach my $i (@array) {\n        $hash{$i}++;\n    }\n    my $max = 0;\n\
    \    foreach my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n         \
    \   $max = $hash{$i};\n        }\n    }\n    my %newhash;\n    foreach my $i (keys\
    \ %hash) {\n        if ($hash{$i} == $max) {\n            $newhash{$i} = $max;\n\
    \        }\n    }\n    return %newhash;\n}", "    my %hash = ();\n    my @array\
    \ = split(/ /, $test);\n    foreach my $i (@array) {\n        if (exists $hash{$i})\
    \ {\n            $hash{$i} += 1;\n        } else {\n            $hash{$i} = 1;\n\
    \        }\n    }\n    return %hash;\n}", "    my %hash = ();\n    my @array =\
    \ split(\" \", $test);\n    foreach my $item (@array) {\n        if (exists $hash{$item})\
    \ {\n            $hash{$item}++;\n        } else {\n            $hash{$item} =\
    \ 1;\n        }\n    }\n    return %hash;\n}", "    my %hash;\n    my @array =\
    \ split(' ', $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n   \
    \ }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ > $max) {\n            $max = $hash{$i};\n        }\n    }\n    my %result;\n\
    \    foreach my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n        \
    \    $result{$i} = $max;\n        }\n    }\n    return %result;\n}", "    my %histogram\
    \ = ();\n    my @letters = split(/ /, $test);\n    foreach my $letter (@letters)\
    \ {\n        if (exists $histogram{$letter}) {\n            $histogram{$letter}++;\n\
    \        } else {\n            $histogram{$letter} = 1;\n        }\n    }\n  \
    \  return %histogram;\n}", "    my %hash;\n    my @array = split(\" \", $test);\n\
    \    foreach my $i (@array) {\n        if (exists $hash{$i}) {\n            $hash{$i}\
    \ += 1;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    return\
    \ %hash;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach\
    \ my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max\
    \ = 0;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ > $max) {\n            $max = $histogram{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} == $max)\
    \ {\n            $result{$key} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my\
    \ $letter (@letters) {\n        if (exists $histogram{$letter}) {\n          \
    \  $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my @test = split(/\
    \ /, $test);\n    my %hash;\n    foreach my $i (@test) {\n        $hash{$i}++;\n\
    \    }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ > $max) {\n            $max = $hash{$i};\n        }\n    }\n    my %result;\n\
    \    foreach my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n        \
    \    $result{$i} = $max;\n        }\n    }\n    return %result;\n}", "    my %histogram;\n\
    \    my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n \
    \       $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach my $letter\
    \ (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n           \
    \ $max = $histogram{$letter};\n        }\n    }\n    my %result;\n    foreach\
    \ my $letter (keys %histogram) {\n        if ($histogram{$letter} == $max) {\n\
    \            $result{$letter} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my @letters = split(' ', $test);\n    my %histogram = ();\n    foreach\
    \ my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max\
    \ = 0;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ > $max) {\n            $max = $histogram{$key};\n        }\n    }\n    my %result\
    \ = ();\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my @letters = split(' ', $test);\n    my %hist = ();\n  \
    \  foreach my $letter (@letters) {\n        $hist{$letter}++;\n    }\n    return\
    \ %hist;\n}", "    my %histogram = ();\n    my @letters = split(/ /, $test);\n\
    \    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash;\n    my @array\
    \ = split(' ', $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n \
    \   }\n    return %hash;\n}", "    my @test = split(/ /, $test);\n    my %histogram;\n\
    \    foreach my $letter (@test) {\n        $histogram{$letter}++;\n    }\n   \
    \ my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ == $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my @words = split(/ /, $test);\n    my %hash = ();\n    foreach\
    \ my $word (@words) {\n        if (exists $hash{$word}) {\n            $hash{$word}++;\n\
    \        } else {\n            $hash{$word} = 1;\n        }\n    }\n    my $max\
    \ = 0;\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n\
    \            $max = $hash{$key};\n        }\n    }\n    my %result = ();\n   \
    \ foreach my $key (keys %hash) {\n        if ($hash{$key} == $max) {\n       \
    \     $result{$key} = $max;\n        }\n    }\n    return %result;\n}", "    my\
    \ %histogram = ();\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        if (exists $histogram{$letter}) {\n            $histogram{$letter}\
    \ += 1;\n        } else {\n            $histogram{$letter} = 1;\n        }\n \
    \   }\n    return %histogram;\n}", "    my %hash = ();\n    my @array = split(/\
    \ /, $test);\n    foreach my $i (@array) {\n        if (exists $hash{$i}) {\n\
    \            $hash{$i} += 1;\n        } else {\n            $hash{$i} = 1;\n \
    \       }\n    }\n    return %hash;\n}", "    my @test = split(/ /, $test);\n\
    \    my %histogram;\n    foreach my $letter (@test) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %result;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n  \
    \  foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n  \
    \  my $max = 0;\n    my @max_letters;\n    foreach my $letter (keys %histogram)\
    \ {\n        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            @max_letters = ($letter);\n        } elsif ($histogram{$letter} ==\
    \ $max) {\n            push(@max_letters, $letter);\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (@max_letters) {\n        $result{$letter}\
    \ = $max;\n    }\n    return %result;\n}", "    my @array = split(/ /, $test);\n\
    \    my %hash = ();\n    foreach my $element (@array) {\n        if (exists $hash{$element})\
    \ {\n            $hash{$element} += 1;\n        } else {\n            $hash{$element}\
    \ = 1;\n        }\n    }\n    return %hash;\n}", "    my @letters = split(/ /,\
    \ $test);\n    my %letter_count;\n    my %max_count;\n    foreach my $letter (@letters)\
    \ {\n        $letter_count{$letter}++;\n        if ($letter_count{$letter} > $max_count{$letter})\
    \ {\n            $max_count{$letter} = $letter_count{$letter};\n        }\n  \
    \  }\n    my %result;\n    foreach my $letter (keys %letter_count) {\n       \
    \ if ($letter_count{$letter} == $max_count{$letter}) {\n            $result{$letter}\
    \ = $letter_count{$letter};\n        }\n    }\n    return %result;\n}", "    my\
    \ %hash;\n    my @array = split(/ /, $test);\n    foreach my $i (@array) {\n \
    \       $hash{$i}++;\n    }\n    my $max = 0;\n    foreach my $i (keys %hash)\
    \ {\n        if ($hash{$i} > $max) {\n            $max = $hash{$i};\n        }\n\
    \    }\n    my %hash2;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ == $max) {\n            $hash2{$i} = $max;\n        }\n    }\n    return %hash2;\n\
    }", "    my @test = split(/ /, $test);\n    my %histogram;\n    foreach my $letter\
    \ (@test) {\n        $histogram{$letter}++;\n    }\n    my $max = max(values %histogram);\n\
    \    my @max = grep { $histogram{$_} == $max } keys %histogram;\n    my %result;\n\
    \    foreach my $letter (@max) {\n        $result{$letter} = $max;\n    }\n  \
    \  return %result;\n}", "    my %histogram = ();\n    my @letters = split(/ /,\
    \ $test);\n    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash;\n    my @array\
    \ = split(/ /, $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n \
    \   }\n    my $max = (sort {$hash{$b} <=> $hash{$a}} keys %hash)[0];\n    my %result;\n\
    \    foreach my $key (keys %hash) {\n        if ($hash{$key} == $hash{$max}) {\n\
    \            $result{$key} = $hash{$key};\n        }\n    }\n    return %result;\n\
    }", "    my %hist;\n    my @letters = split(/\\s+/, $test);\n    foreach my $letter\
    \ (@letters) {\n        $hist{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $key (keys %hist) {\n        if ($hist{$key} > $max) {\n            $max\
    \ = $hist{$key};\n        }\n    }\n    my %result;\n    foreach my $key (keys\
    \ %hist) {\n        if ($hist{$key} == $max) {\n            $result{$key} = $max;\n\
    \        }\n    }\n    return %result;\n}", "    my %histogram;\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        if (exists\
    \ $histogram{$letter}) {\n            $histogram{$letter}++;\n        } else {\n\
    \            $histogram{$letter} = 1;\n        }\n    }\n    return %histogram;\n\
    }", "    my %histogram;\n    my @letters = split(\" \", $test);\n    foreach my\
    \ $letter (@letters) {\n        if (exists $histogram{$letter}) {\n          \
    \  $histogram{$letter}++;\n        } else {\n            $histogram{$letter} =\
    \ 1;\n        }\n    }\n    return %histogram;\n}", "    my @test = split(/ /,\
    \ $test);\n    my %histogram;\n    my $max = 0;\n    foreach my $char (@test)\
    \ {\n        if (exists $histogram{$char}) {\n            $histogram{$char}++;\n\
    \        } else {\n            $histogram{$char} = 1;\n        }\n        if ($histogram{$char}\
    \ > $max) {\n            $max = $histogram{$char};\n        }\n    }\n    my %result;\n\
    \    foreach my $char (keys %histogram) {\n        if ($histogram{$char} == $max)\
    \ {\n            $result{$char} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %hist;\n    my @letters = split(/\\s+/, $test);\n    foreach my $letter\
    \ (@letters) {\n        $hist{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $key (keys %hist) {\n        if ($hist{$key} > $max) {\n            $max\
    \ = $hist{$key};\n        }\n    }\n    my %result;\n    foreach my $key (keys\
    \ %hist) {\n        if ($hist{$key} == $max) {\n            $result{$key} = $max;\n\
    \        }\n    }\n    return %result;\n}", "    my %histogram;\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %result;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %histogram = ();\n    my @letters = split(/ /, $test);\n\
    \    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hist;\n    my %max;\n\
    \    my $max = 0;\n    foreach my $letter (split(/ /, $test)) {\n        $hist{$letter}++;\n\
    \        if ($hist{$letter} > $max) {\n            $max = $hist{$letter};\n  \
    \          %max = ($letter => $max);\n        } elsif ($hist{$letter} == $max)\
    \ {\n            $max{$letter} = $max;\n        }\n    }\n    return %max;\n}",
  "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    my\
    \ @max_letters;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n            @max_letters\
    \ = ($letter);\n        } elsif ($histogram{$letter} == $max) {\n            push(@max_letters,\
    \ $letter);\n        }\n    }\n    my %result;\n    foreach my $letter (@max_letters)\
    \ {\n        $result{$letter} = $max;\n    }\n    return %result;\n}", "    my\
    \ %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter (@letters)\
    \ {\n        $histogram{$letter}++;\n    }\n    return %histogram;\n}", "    my\
    \ %hash = ();\n    my @arr = split(/ /, $test);\n    foreach my $i (@arr) {\n\
    \        if (exists $hash{$i}) {\n            $hash{$i} += 1;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    return %hash;\n}", "  \
    \  my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    my\
    \ @max_letters;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n            @max_letters\
    \ = ($letter);\n        } elsif ($histogram{$letter} == $max) {\n            push(@max_letters,\
    \ $letter);\n        }\n    }\n    my %result;\n    foreach my $letter (@max_letters)\
    \ {\n        $result{$letter} = $max;\n    }\n    return %result;\n}", "    my\
    \ %hash;\n    my @array = split(/ /, $test);\n    foreach my $i (@array) {\n \
    \       if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n\
    \            $hash{$i} = 1;\n        }\n    }\n    return %hash;\n}", "    my\
    \ %hash = ();\n    my @array = split(/ /, $test);\n    foreach my $i (@array)\
    \ {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    return \\%hash;\n}", " \
    \   my %hist;\n    my %max;\n    my $max = 0;\n    foreach my $letter (split(/\
    \ /, $test)) {\n        $hist{$letter}++;\n        if ($hist{$letter} > $max)\
    \ {\n            $max = $hist{$letter};\n            %max = ($letter => $max);\n\
    \        } elsif ($hist{$letter} == $max) {\n            $max{$letter} = $max;\n\
    \        }\n    }\n    return %max;\n}", "    my %histogram = ();\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    return %histogram;\n}", "    my %count;\n    my @letters = split /\
    \ /, $test;\n    foreach my $letter (@letters) {\n        $count{$letter}++;\n\
    \    }\n    my %max;\n    my $max = 0;\n    foreach my $key (keys %count) {\n\
    \        if ($count{$key} > $max) {\n            $max = $count{$key};\n      \
    \      %max = ($key => $max);\n        } elsif ($count{$key} == $max) {\n    \
    \        $max{$key} = $max;\n        }\n    }\n    return %max;\n}", "    my %result;\n\
    \    my @letters = split(' ', $test);\n    foreach my $letter (@letters) {\n \
    \       $result{$letter}++;\n    }\n    return %result;\n}", "    my %histogram;\n\
    \    my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n \
    \       $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach my $letter\
    \ (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n           \
    \ $max = $histogram{$letter};\n        }\n    }\n    my %result;\n    foreach\
    \ my $letter (keys %histogram) {\n        if ($histogram{$letter} == $max) {\n\
    \            $result{$letter} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %hash = ();\n    my @array = split(/ /, $test);\n    foreach my $word\
    \ (@array) {\n        if (exists $hash{$word}) {\n            $hash{$word} +=\
    \ 1;\n        } else {\n            $hash{$word} = 1;\n        }\n    }\n    my\
    \ $max = 0;\n    my @max_keys = ();\n    foreach my $key (keys %hash) {\n    \
    \    if ($hash{$key} > $max) {\n            $max = $hash{$key};\n            @max_keys\
    \ = ($key);\n        } elsif ($hash{$key} == $max) {\n            push(@max_keys,\
    \ $key);\n        }\n    }\n    my %result = ();\n    foreach my $key (@max_keys)\
    \ {\n        $result{$key} = $max;\n    }\n    return %result;\n}", "    my @test\
    \ = split(/ /, $test);\n    my %histogram;\n    my $max = 0;\n    my @max;\n \
    \   foreach my $letter (@test) {\n        $histogram{$letter}++;\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n            @max = ($letter);\n\
    \        } elsif ($histogram{$letter} == $max) {\n            push(@max, $letter);\n\
    \        }\n    }\n    my %result;\n    foreach my $letter (@max) {\n        $result{$letter}\
    \ = $max;\n    }\n    return %result;\n}", "    my %hash;\n    my @array = split(/\
    \ /, $test);\n    foreach my $item (@array) {\n        if (exists $hash{$item})\
    \ {\n            $hash{$item}++;\n        } else {\n            $hash{$item} =\
    \ 1;\n        }\n    }\n    my $max = 0;\n    foreach my $item (keys %hash) {\n\
    \        if ($hash{$item} > $max) {\n            $max = $hash{$item};\n      \
    \  }\n    }\n    my %result;\n    foreach my $item (keys %hash) {\n        if\
    \ ($hash{$item} == $max) {\n            $result{$item} = $max;\n        }\n  \
    \  }\n    return %result;\n}", "    my %histogram;\n    my @letters = split(/\
    \ /, $test);\n    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter}++;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash;\n    my @array\
    \ = split(' ', $test);\n    foreach my $item (@array) {\n        $hash{$item}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %hash) {\n        if ($hash{$key}\
    \ > $max) {\n            $max = $hash{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %hash) {\n        if ($hash{$key} == $max) {\n    \
    \        $result{$key} = $max;\n        }\n    }\n    return %result;\n}", " \
    \   my %hash;\n    my @array = split(/ /, $test);\n    foreach my $i (@array)\
    \ {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    my $max = 0;\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n            $max = $hash{$i};\n\
    \        }\n    }\n    my %result;\n    foreach my $i (keys %hash) {\n       \
    \ if ($hash{$i} == $max) {\n            $result{$i} = $max;\n        }\n    }\n\
    \    return %result;\n}", "    my %hist;\n    my %max;\n    my $max = 0;\n   \
    \ foreach my $letter (split(/ /, $test)) {\n        $hist{$letter}++;\n      \
    \  if ($hist{$letter} > $max) {\n            $max = $hist{$letter};\n        \
    \    %max = ($letter => $max);\n        } elsif ($hist{$letter} == $max) {\n \
    \           $max{$letter} = $max;\n        }\n    }\n    return %max;\n}", " \
    \   my %histogram;\n    foreach my $letter (split(/\\s+/, $test)) {\n        $histogram{$letter}++;\n\
    \    }\n    return \\%histogram;\n}", "    my %hash;\n    my @array = split(/\
    \ /, $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n    }\n    my\
    \ $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n\
    \            $max = $hash{$i};\n        }\n    }\n    my %result;\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n            $result{$i}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %histogram = ();\n\
    \    my @letters = split(' ', $test);\n    foreach my $letter (@letters) {\n \
    \       if (exists $histogram{$letter}) {\n            $histogram{$letter} +=\
    \ 1;\n        } else {\n            $histogram{$letter} = 1;\n        }\n    }\n\
    \    return \\%histogram;\n}", "    my %hist;\n    my @letters = split(' ', $test);\n\
    \    foreach my $letter (@letters) {\n        $hist{$letter}++;\n    }\n    my\
    \ $max = 0;\n    my @max_letters;\n    foreach my $letter (keys %hist) {\n   \
    \     if ($hist{$letter} > $max) {\n            $max = $hist{$letter};\n     \
    \       @max_letters = ($letter);\n        } elsif ($hist{$letter} == $max) {\n\
    \            push @max_letters, $letter;\n        }\n    }\n    my %max_hist;\n\
    \    foreach my $letter (@max_letters) {\n        $max_hist{$letter} = $max;\n\
    \    }\n    return %max_hist;\n}", "    my %hist;\n    my @letters = split(/\\\
    s+/, $test);\n    foreach my $letter (@letters) {\n        $hist{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %hist) {\n        $max = $hist{$key}\
    \ if $hist{$key} > $max;\n    }\n    my %result;\n    foreach my $key (keys %hist)\
    \ {\n        $result{$key} = $hist{$key} if $hist{$key} == $max;\n    }\n    return\
    \ %result;\n}", "    my @letters = split(/ /, $test);\n    my %histogram;\n  \
    \  my %max;\n    my $max = 0;\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            %max = ($letter => $max);\n        } elsif ($histogram{$letter} ==\
    \ $max) {\n            $max{$letter} = $max;\n        }\n    }\n    return %max;\n\
    }", "    my %hash;\n    my @array = split(/ /, $test);\n    foreach my $i (@array)\
    \ {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    return %hash;\n}", "  \
    \  my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        if (exists $histogram{$letter}) {\n            $histogram{$letter}\
    \ += 1;\n        } else {\n            $histogram{$letter} = 1;\n        }\n \
    \   }\n    return %histogram;\n}", "    my %hash;\n    my @array = split(\" \"\
    , $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n    }\n    return\
    \ %hash;\n}", "    my @letters = split(/ /, $test);\n    my %counts;\n    foreach\
    \ my $letter (@letters) {\n        $counts{$letter}++;\n    }\n    my $max = 0;\n\
    \    my @maxes;\n    foreach my $letter (keys %counts) {\n        if ($counts{$letter}\
    \ > $max) {\n            $max = $counts{$letter};\n            @maxes = ($letter);\n\
    \        } elsif ($counts{$letter} == $max) {\n            push @maxes, $letter;\n\
    \        }\n    }\n    my %result;\n    foreach my $letter (@maxes) {\n      \
    \  $result{$letter} = $max;\n    }\n    return %result;\n}", "    my @test = split(/\
    \ /, $test);\n    my %histogram;\n    foreach my $letter (@test) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %max_histogram;\n    foreach my $key (keys %histogram) {\n    \
    \    if ($histogram{$key} == $max) {\n            $max_histogram{$key} = $max;\n\
    \        }\n    }\n    return %max_histogram;\n}", "    my %hash;\n    my @array\
    \ = split / /, $test;\n    foreach my $i (@array) {\n        $hash{$i}++;\n  \
    \  }\n    my $max = 0;\n    my @max_keys;\n    foreach my $key (keys %hash) {\n\
    \        if ($hash{$key} > $max) {\n            $max = $hash{$key};\n        \
    \    @max_keys = ($key);\n        } elsif ($hash{$key} == $max) {\n          \
    \  push @max_keys, $key;\n        }\n    }\n    my %result;\n    foreach my $key\
    \ (@max_keys) {\n        $result{$key} = $max;\n    }\n    return %result;\n}",
  "    my %histogram;\n    my @letters = split(' ', $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $letter (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n\
    \            $max = $histogram{$letter};\n        }\n    }\n    my %result;\n\
    \    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter} ==\
    \ $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my @words = split(/ /, $test);\n    my %histogram;\n    foreach\
    \ my $word (@words) {\n        $histogram{$word}++;\n    }\n    return %histogram;\n\
    }", "    my @letters = split(/ /, $test);\n    my %histogram;\n    foreach my\
    \ $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    return %histogram;\n\
    }", "    my @test = split(/ /, $test);\n    my %histogram;\n    foreach my $letter\
    \ (@test) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $key (keys %histogram) {\n        if ($histogram{$key} > $max) {\n      \
    \      $max = $histogram{$key};\n        }\n    }\n    my %max_histogram;\n  \
    \  foreach my $key (keys %histogram) {\n        if ($histogram{$key} == $max)\
    \ {\n            $max_histogram{$key} = $max;\n        }\n    }\n    return %max_histogram;\n\
    }", "    my %hist;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        if (exists $hist{$letter}) {\n            $hist{$letter}++;\n\
    \        } else {\n            $hist{$letter} = 1;\n        }\n    }\n    return\
    \ %hist;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach\
    \ my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max\
    \ = 0;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ > $max) {\n            $max = $histogram{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} == $max)\
    \ {\n            $result{$key} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %histogram = ();\n    my @letters = split(/ /, $test);\n    foreach\
    \ my $letter (@letters) {\n        if (exists $histogram{$letter}) {\n       \
    \     $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash;\n    my @array\
    \ = split(/ /, $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n \
    \   }\n    my $max = 0;\n    foreach my $key (keys %hash) {\n        if ($hash{$key}\
    \ > $max) {\n            $max = $hash{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %hash) {\n        if ($hash{$key} == $max) {\n    \
    \        $result{$key} = $max;\n        }\n    }\n    return %result;\n}", " \
    \   my @test = split(/ /, $test);\n    my %histogram;\n    foreach my $letter\
    \ (@test) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $key (keys %histogram) {\n        if ($histogram{$key} > $max) {\n      \
    \      $max = $histogram{$key};\n        }\n    }\n    my %result;\n    foreach\
    \ my $key (keys %histogram) {\n        if ($histogram{$key} == $max) {\n     \
    \       $result{$key} = $max;\n        }\n    }\n    return %result;\n}", "  \
    \  my @test = split(' ', $test);\n    my %histo;\n    foreach my $i (@test) {\n\
    \        $histo{$i}++;\n    }\n    my $max = 0;\n    my @max;\n    foreach my\
    \ $i (keys %histo) {\n        if ($histo{$i} > $max) {\n            $max = $histo{$i};\n\
    \            @max = ($i);\n        } elsif ($histo{$i} == $max) {\n          \
    \  push @max, $i;\n        }\n    }\n    my %result;\n    foreach my $i (@max)\
    \ {\n        $result{$i} = $max;\n    }\n    return %result;\n}", "    my %hash;\n\
    \    my @array = split(/ /, $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n\
    \    }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ > $max) {\n            $max = $hash{$i};\n        }\n    }\n    my %result;\n\
    \    foreach my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n        \
    \    $result{$i} = $max;\n        }\n    }\n    return %result;\n}", "    my %hash;\n\
    \    my @arr = split(/ /, $test);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n\
    \    }\n    my $max = 0;\n    my %result;\n    foreach my $key (keys %hash) {\n\
    \        if ($hash{$key} > $max) {\n            $max = $hash{$key};\n        }\n\
    \    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} == $max) {\n\
    \            $result{$key} = $max;\n        }\n    }\n    return %result;\n}",
  "    my @words = split(/ /, $test);\n    my %histogram;\n    foreach my $word (@words)\
    \ {\n        $histogram{$word}++;\n    }\n    return %histogram;\n}", "    my\
    \ @letters = split(\" \", $test);\n    my %counts;\n    foreach my $letter (@letters)\
    \ {\n        if (exists $counts{$letter}) {\n            $counts{$letter} += 1;\n\
    \        } else {\n            $counts{$letter} = 1;\n        }\n    }\n    my\
    \ $max = 0;\n    foreach my $key (keys %counts) {\n        if ($counts{$key} >\
    \ $max) {\n            $max = $counts{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %counts) {\n        if ($counts{$key} == $max) {\n\
    \            $result{$key} = $max;\n        }\n    }\n    return %result;\n}",
  "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $letter (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n\
    \            $max = $histogram{$letter};\n        }\n    }\n    my %result;\n\
    \    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter} ==\
    \ $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %hash;\n    my @arr = split(/ /, $test);\n    foreach\
    \ my $i (@arr) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n\
    \        } else {\n            $hash{$i} = 1;\n        }\n    }\n    my $max =\
    \ 0;\n    my @max_keys;\n    foreach my $key (keys %hash) {\n        if ($hash{$key}\
    \ > $max) {\n            $max = $hash{$key};\n            @max_keys = ($key);\n\
    \        } elsif ($hash{$key} == $max) {\n            push @max_keys, $key;\n\
    \        }\n    }\n    my %ret;\n    foreach my $key (@max_keys) {\n        $ret{$key}\
    \ = $max;\n    }\n    return %ret;\n}", "    my %hash;\n    my @array = split(/\
    \ /, $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n    }\n    my\
    \ $max = 0;\n    my @max_keys;\n    foreach my $key (keys %hash) {\n        if\
    \ ($hash{$key} > $max) {\n            $max = $hash{$key};\n            @max_keys\
    \ = ($key);\n        } elsif ($hash{$key} == $max) {\n            push @max_keys,\
    \ $key;\n        }\n    }\n    my %result;\n    foreach my $key (@max_keys) {\n\
    \        $result{$key} = $max;\n    }\n    return %result;\n}", "    my %hist;\n\
    \    my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n \
    \       if (exists $hist{$letter}) {\n            $hist{$letter} += 1;\n     \
    \   } else {\n            $hist{$letter} = 1;\n        }\n    }\n    my $max =\
    \ 0;\n    foreach my $key (keys %hist) {\n        if ($hist{$key} > $max) {\n\
    \            $max = $hist{$key};\n        }\n    }\n    my %max_hist;\n    foreach\
    \ my $key (keys %hist) {\n        if ($hist{$key} == $max) {\n            $max_hist{$key}\
    \ = $hist{$key};\n        }\n    }\n    return %max_hist;\n}", "    my %hash =\
    \ ();\n    my @array = split(\" \", $test);\n    foreach my $item (@array) {\n\
    \        if (exists $hash{$item}) {\n            $hash{$item} += 1;\n        }\
    \ else {\n            $hash{$item} = 1;\n        }\n    }\n    return %hash;\n\
    }", "    my @letters = split(/ /, $test);\n    my %hist;\n    foreach my $letter\
    \ (@letters) {\n        $hist{$letter}++;\n    }\n    return %hist;\n}", "   \
    \ my %hash = ();\n    my @array = split(' ', $test);\n    foreach my $i (@array)\
    \ {\n        if (exists $hash{$i}) {\n            $hash{$i} += 1;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    my $max = 0;\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n            $max = $hash{$i};\n\
    \        }\n    }\n    my %result = ();\n    foreach my $i (keys %hash) {\n  \
    \      if ($hash{$i} == $max) {\n            $result{$i} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my %histogram;\n    foreach my $letter (split(/\\\
    s+/, $test)) {\n        $histogram{$letter}++;\n    }\n    my $max = max(values\
    \ %histogram);\n    my %result;\n    foreach my $letter (keys %histogram) {\n\
    \        if ($histogram{$letter} == $max) {\n            $result{$letter} = $max;\n\
    \        }\n    }\n    return %result;\n}", "    my %histogram;\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    my @max_letters;\n    foreach my $letter (keys %histogram)\
    \ {\n        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            @max_letters = ($letter);\n        } elsif ($histogram{$letter} ==\
    \ $max) {\n            push(@max_letters, $letter);\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (@max_letters) {\n        $result{$letter}\
    \ = $max;\n    }\n    return %result;\n}", "    my @letters = split(/ /, $test);\n\
    \    my %histogram;\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %max_histogram;\n    foreach my $key (keys %histogram) {\n    \
    \    if ($histogram{$key} == $max) {\n            $max_histogram{$key} = $max;\n\
    \        }\n    }\n    return %max_histogram;\n}", "    my %result;\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        if (exists\
    \ $result{$letter}) {\n            $result{$letter} += 1;\n        } else {\n\
    \            $result{$letter} = 1;\n        }\n    }\n    return %result;\n}",
  "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $letter (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n\
    \            $max = $histogram{$letter};\n        }\n    }\n    my %result;\n\
    \    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter} ==\
    \ $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n  \
    \  foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n  \
    \  my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my\
    \ %max_histogram;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ == $max) {\n            $max_histogram{$letter} = $max;\n        }\n    }\n\
    \    return %max_histogram;\n}", "    my %hist;\n    my %max;\n    my $max = 0;\n\
    \    foreach my $letter (split(/ /, $test)) {\n        $hist{$letter}++;\n   \
    \     if ($hist{$letter} > $max) {\n            $max = $hist{$letter};\n     \
    \       %max = ($letter => $max);\n        } elsif ($hist{$letter} == $max) {\n\
    \            $max{$letter} = $max;\n        }\n    }\n    return %max;\n}", " \
    \   my %hist;\n    my @letters = split(/ /, $test);\n    foreach my $letter (@letters)\
    \ {\n        $hist{$letter}++;\n    }\n    my $max = 0;\n    foreach my $key (keys\
    \ %hist) {\n        if ($hist{$key} > $max) {\n            $max = $hist{$key};\n\
    \        }\n    }\n    my %result;\n    foreach my $key (keys %hist) {\n     \
    \   if ($hist{$key} == $max) {\n            $result{$key} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my %hash = ();\n    my @array = split(/\
    \ /, $test);\n    foreach my $i (@array) {\n        if (exists $hash{$i}) {\n\
    \            $hash{$i} += 1;\n        } else {\n            $hash{$i} = 1;\n \
    \       }\n    }\n    return %hash;\n}", "    my @letters = split(' ', $test);\n\
    \    my %histogram;\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    return %histogram;\n}", "    my %histogram;\n    my @letters = split(/\
    \ /, $test);\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %result;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %result;\n    my @words = split / /, $test;\n    foreach\
    \ my $word (@words) {\n        $result{$word}++;\n    }\n    return %result;\n\
    }", "    my %result;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        if (exists $result{$letter}) {\n            $result{$letter}\
    \ += 1;\n        } else {\n            $result{$letter} = 1;\n        }\n    }\n\
    \    return %result;\n}", "    my @letters = split(/ /, $test);\n    my %histogram\
    \ = ();\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    return %histogram;\n}", "    my %histogram = ();\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        if (exists\
    \ $histogram{$letter}) {\n            $histogram{$letter}++;\n        } else {\n\
    \            $histogram{$letter} = 1;\n        }\n    }\n    return %histogram;\n\
    }", "    my @test = split(/ /, $test);\n    my %hash;\n    foreach my $i (@test)\
    \ {\n        $hash{$i}++;\n    }\n    my $max = 0;\n    my @max;\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n            $max = $hash{$i};\n\
    \            @max = ($i);\n        } elsif ($hash{$i} == $max) {\n           \
    \ push(@max, $i);\n        }\n    }\n    my %result;\n    foreach my $i (@max)\
    \ {\n        $result{$i} = $max;\n    }\n    return %result;\n}", "    my @letters\
    \ = split(/ /, $test);\n    my %count;\n    foreach my $letter (@letters) {\n\
    \        $count{$letter}++;\n    }\n    my $max = 0;\n    foreach my $letter (keys\
    \ %count) {\n        if ($count{$letter} > $max) {\n            $max = $count{$letter};\n\
    \        }\n    }\n    my %histogram;\n    foreach my $letter (keys %count) {\n\
    \        if ($count{$letter} == $max) {\n            $histogram{$letter} = $max;\n\
    \        }\n    }\n    return %histogram;\n}", "    my %count;\n    my %max;\n\
    \    my $max = 0;\n    foreach my $char (split //, $test) {\n        $count{$char}++;\n\
    \        if ($count{$char} > $max) {\n            $max = $count{$char};\n    \
    \        %max = ($char => $max);\n        } elsif ($count{$char} == $max) {\n\
    \            $max{$char} = $max;\n        }\n    }\n    return %max;\n}", "  \
    \  my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    my\
    \ @max_letters;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n            @max_letters\
    \ = ($letter);\n        } elsif ($histogram{$letter} == $max) {\n            push(@max_letters,\
    \ $letter);\n        }\n    }\n    my %result;\n    foreach my $letter (@max_letters)\
    \ {\n        $result{$letter} = $max;\n    }\n    return %result;\n}", "    my\
    \ @letters = split(/ /, $test);\n    my %counts;\n    foreach my $letter (@letters)\
    \ {\n        $counts{$letter}++;\n    }\n    my $max = 0;\n    foreach my $letter\
    \ (keys %counts) {\n        if ($counts{$letter} > $max) {\n            $max =\
    \ $counts{$letter};\n        }\n    }\n    my %result;\n    foreach my $letter\
    \ (keys %counts) {\n        if ($counts{$letter} == $max) {\n            $result{$letter}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %hash;\n    my @array\
    \ = split(/ /, $test);\n    foreach my $word (@array) {\n        if (exists $hash{$word})\
    \ {\n            $hash{$word}++;\n        } else {\n            $hash{$word} =\
    \ 1;\n        }\n    }\n    my $max = 0;\n    my @max_keys;\n    foreach my $key\
    \ (keys %hash) {\n        if ($hash{$key} > $max) {\n            $max = $hash{$key};\n\
    \            @max_keys = ($key);\n        } elsif ($hash{$key} == $max) {\n  \
    \          push @max_keys, $key;\n        }\n    }\n    my %result;\n    foreach\
    \ my $key (@max_keys) {\n        $result{$key} = $max;\n    }\n    return %result;\n\
    }", "    my %hash = ();\n    my @array = split(' ', $test);\n    for my $i (@array)\
    \ {\n        if (exists $hash{$i}) {\n            $hash{$i} += 1;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    return %hash;\n}", "  \
    \  my(@test) = split(/ /, $test);\n    my(%hist) = ();\n    my(%max) = ();\n \
    \   my($max) = 0;\n    foreach my $i (@test) {\n        if (exists $hist{$i})\
    \ {\n            $hist{$i}++;\n        } else {\n            $hist{$i} = 1;\n\
    \        }\n        if ($hist{$i} > $max) {\n            $max = $hist{$i};\n \
    \           %max = ();\n            $max{$i} = $hist{$i};\n        } elsif ($hist{$i}\
    \ == $max) {\n            $max{$i} = $hist{$i};\n        }\n    }\n    return\
    \ %max;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach\
    \ my $letter (@letters) {\n        if (exists $histogram{$letter}) {\n       \
    \     $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %histogram;\n  \
    \  my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n   \
    \     if (exists $histogram{$letter}) {\n            $histogram{$letter}++;\n\
    \        } else {\n            $histogram{$letter} = 1;\n        }\n    }\n  \
    \  my $max = 0;\n    my @max_letters;\n    foreach my $letter (keys %histogram)\
    \ {\n        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            @max_letters = ($letter);\n        } elsif ($histogram{$letter} ==\
    \ $max) {\n            push(@max_letters, $letter);\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (@max_letters) {\n        $result{$letter}\
    \ = $max;\n    }\n    return %result;\n}", "    my %hash = ();\n    my @array\
    \ = split(/ /, $test);\n    foreach my $i (@array) {\n        if (exists $hash{$i})\
    \ {\n            $hash{$i}++;\n        } else {\n            $hash{$i} = 1;\n\
    \        }\n    }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n      \
    \  if ($hash{$i} > $max) {\n            $max = $hash{$i};\n        }\n    }\n\
    \    my %hash2 = ();\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ == $max) {\n            $hash2{$i} = $max;\n        }\n    }\n    return %hash2;\n\
    }", "    my @test = split(/ /, $test);\n    my %hash;\n    my $max = 0;\n    foreach\
    \ my $i (@test) {\n        $hash{$i}++;\n        if ($hash{$i} > $max) {\n   \
    \         $max = $hash{$i};\n        }\n    }\n    my %result;\n    foreach my\
    \ $i (keys %hash) {\n        if ($hash{$i} == $max) {\n            $result{$i}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %histogram;\n  \
    \  my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n   \
    \     if (exists $histogram{$letter}) {\n            $histogram{$letter}++;\n\
    \        } else {\n            $histogram{$letter} = 1;\n        }\n    }\n  \
    \  my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ == $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my @test = split(/ /, $test);\n    my %histogram;\n    my\
    \ %max;\n    my $max = 0;\n    foreach my $letter (@test) {\n        $histogram{$letter}++;\n\
    \        if ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n\
    \            %max = ();\n            $max{$letter} = $max;\n        } elsif ($histogram{$letter}\
    \ == $max) {\n            $max{$letter} = $max;\n        }\n    }\n    return\
    \ %max;\n}", "    my %histogram;\n    my @letters = split(\" \", $test);\n   \
    \ foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n   \
    \ my $max = 0;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ > $max) {\n            $max = $histogram{$key};\n        }\n    }\n    my %result;\n\
    \    foreach my $key (keys %histogram) {\n        if ($histogram{$key} == $max)\
    \ {\n            $result{$key} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my\
    \ $letter (@letters) {\n        if (exists $histogram{$letter}) {\n          \
    \  $histogram{$letter}++;\n        } else {\n            $histogram{$letter} =\
    \ 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash = ();\n    my\
    \ @array = split(/ /, $test);\n    foreach my $item (@array) {\n        if (exists\
    \ $hash{$item}) {\n            $hash{$item} += 1;\n        } else {\n        \
    \    $hash{$item} = 1;\n        }\n    }\n    return %hash;\n}", "    my %histogram;\n\
    \    my @letters = split(/ /, $test);\n    foreach my $letter (@letters) {\n \
    \       $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach my $letter\
    \ (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n           \
    \ $max = $histogram{$letter};\n        }\n    }\n    my %result;\n    foreach\
    \ my $letter (keys %histogram) {\n        if ($histogram{$letter} == $max) {\n\
    \            $result{$letter} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %hash;\n    my @array = split(\" \", $test);\n    foreach my $i (@array)\
    \ {\n        $hash{$i}++;\n    }\n    my $max = 0;\n    my %result;\n    foreach\
    \ my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n            $max\
    \ = $hash{$key};\n        }\n    }\n    foreach my $key (keys %hash) {\n     \
    \   if ($hash{$key} == $max) {\n            $result{$key} = $max;\n        }\n\
    \    }\n    return %result;\n}", "    my @letters = split(/ /, $test);\n    my\
    \ %count;\n    foreach my $letter (@letters) {\n        $count{$letter}++;\n \
    \   }\n    my %result;\n    my $max = 0;\n    foreach my $key (keys %count) {\n\
    \        if ($count{$key} > $max) {\n            $max = $count{$key};\n      \
    \  }\n    }\n    foreach my $key (keys %count) {\n        if ($count{$key} ==\
    \ $max) {\n            $result{$key} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %histogram = ();\n    my @letters = split(/ /, $test);\n    foreach\
    \ my $letter (@letters) {\n        if (exists $histogram{$letter}) {\n       \
    \     $histogram{$letter}++;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash;\n    my @array\
    \ = split(' ', $test);\n    foreach my $item (@array) {\n        if (exists $hash{$item})\
    \ {\n            $hash{$item} += 1;\n        } else {\n            $hash{$item}\
    \ = 1;\n        }\n    }\n    return %hash;\n}", "    my @letters = split(/ /,\
    \ $test);\n    my %histogram;\n    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n\
    \    }\n    return %histogram;\n}", "    my @words = split(' ', $test);\n    my\
    \ %count;\n    foreach my $word (@words) {\n        $count{$word}++;\n    }\n\
    \    return %count;\n}", "    my @test = split(' ', $test);\n    my %histogram;\n\
    \    foreach my $letter (@test) {\n        $histogram{$letter}++;\n    }\n   \
    \ my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ == $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my @letters = split(/ /, $test);\n    my %histogram;\n  \
    \  foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n  \
    \  my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my\
    \ %max_histogram;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ == $max) {\n            $max_histogram{$letter} = $max;\n        }\n    }\n\
    \    return %max_histogram;\n}", "    my %count;\n    my %result;\n    my $max\
    \ = 0;\n    foreach my $char (split //, $test) {\n        $count{$char}++;\n \
    \       if ($count{$char} > $max) {\n            $max = $count{$char};\n     \
    \   }\n    }\n    foreach my $key (keys %count) {\n        if ($count{$key} ==\
    \ $max) {\n            $result{$key} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my @test = split(/ /, $test);\n    my %test;\n    foreach my $test (@test)\
    \ {\n        $test{$test}++;\n    }\n    my $max = 0;\n    my %max;\n    foreach\
    \ my $test (keys %test) {\n        if ($test{$test} > $max) {\n            $max\
    \ = $test{$test};\n            %max = ($test => $test{$test});\n        } elsif\
    \ ($test{$test} == $max) {\n            $max{$test} = $test{$test};\n        }\n\
    \    }\n    return %max;\n}", "    my %histogram;\n    my @letters = split(/ /,\
    \ $test);\n    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %histogram;\n  \
    \  my @letters = split(' ', $test);\n    foreach my $letter (@letters) {\n   \
    \     $histogram{$letter}++;\n    }\n    my $max = 0;\n    my @max_letters;\n\
    \    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter} >\
    \ $max) {\n            $max = $histogram{$letter};\n            @max_letters =\
    \ ($letter);\n        } elsif ($histogram{$letter} == $max) {\n            push\
    \ @max_letters, $letter;\n        }\n    }\n    my %result;\n    foreach my $letter\
    \ (@max_letters) {\n        $result{$letter} = $max;\n    }\n    return %result;\n\
    }", "    my %hash;\n    my @array = split(/ /, $test);\n    foreach my $i (@array)\
    \ {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n        } else\
    \ {\n            $hash{$i} = 1;\n        }\n    }\n    return %hash;\n}", "  \
    \  my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = max(values\
    \ %histogram);\n    my %max_histogram;\n    foreach my $letter (keys %histogram)\
    \ {\n        if ($histogram{$letter} == $max) {\n            $max_histogram{$letter}\
    \ = $max;\n        }\n    }\n    return %max_histogram;\n}", "    my %hash;\n\
    \    my @array = split(' ', $test);\n    foreach my $i (@array) {\n        if\
    \ (exists $hash{$i}) {\n            $hash{$i}++;\n        } else {\n         \
    \   $hash{$i} = 1;\n        }\n    }\n    return %hash;\n}", "    my %count;\n\
    \    my %max;\n    my $max = 0;\n    foreach my $char (split //, $test) {\n  \
    \      $count{$char}++;\n        if ($count{$char} > $max) {\n            $max\
    \ = $count{$char};\n            %max = ($char => $max);\n        } elsif ($count{$char}\
    \ == $max) {\n            $max{$char} = $max;\n        }\n    }\n    return %max;\n\
    }", "    my %count;\n    my %max;\n    my $max = 0;\n    my @letters = split(/\
    \ /, $test);\n    foreach my $letter (@letters) {\n        $count{$letter}++;\n\
    \        if ($count{$letter} > $max) {\n            $max = $count{$letter};\n\
    \            %max = ();\n            $max{$letter} = $max;\n        } elsif ($count{$letter}\
    \ == $max) {\n            $max{$letter} = $max;\n        }\n    }\n    return\
    \ %max;\n}", "    my %histogram = ();\n    my @letters = split(/ /, $test);\n\
    \    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hist;\n    foreach\
    \ my $letter (split(/\\s+/, $test)) {\n        $hist{$letter}++;\n    }\n    return\
    \ %hist;\n}", "    my %hash;\n    my @array = split(/ /, $test);\n    foreach\
    \ my $i (@array) {\n        $hash{$i}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n            $max = $hash{$i};\n\
    \        }\n    }\n    my %hash2;\n    foreach my $i (keys %hash) {\n        if\
    \ ($hash{$i} == $max) {\n            $hash2{$i} = $max;\n        }\n    }\n  \
    \  return %hash2;\n}", "    my @letters = split(/ /, $test);\n    my %histogram;\n\
    \    foreach my $letter (@letters) {\n        if (exists $histogram{$letter})\
    \ {\n            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hash = ();\n  \
    \  my @arr = split(\" \", $test);\n    foreach my $i (@arr) {\n        if (exists\
    \ $hash{$i}) {\n            $hash{$i}++;\n        } else {\n            $hash{$i}\
    \ = 1;\n        }\n    }\n    return %hash;\n}", "    my %hash = ();\n    my @array\
    \ = split(/ /, $test);\n    foreach my $key (@array) {\n        if (exists $hash{$key})\
    \ {\n            $hash{$key} += 1;\n        } else {\n            $hash{$key}\
    \ = 1;\n        }\n    }\n    return %hash;\n}", "    my %hash = ();\n    my @arr\
    \ = split(/ /, $test);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n   \
    \ }\n    my $max = 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i}\
    \ > $max) {\n            $max = $hash{$i};\n        }\n    }\n    my %hash2 =\
    \ ();\n    foreach my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n  \
    \          $hash2{$i} = $max;\n        }\n    }\n    return %hash2;\n}", "   \
    \ my %hash;\n    my @array = split(' ', $test);\n    foreach my $i (@array) {\n\
    \        $hash{$i}++;\n    }\n    my %result;\n    my $max = 0;\n    foreach my\
    \ $key (keys %hash) {\n        if ($hash{$key} > $max) {\n            $max = $hash{$key};\n\
    \        }\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n  \
    \  foreach my $letter (@letters) {\n        if (exists $histogram{$letter}) {\n\
    \            $histogram{$letter} += 1;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my %hist;\n    my @letters\
    \ = split(/ /, $test);\n    foreach my $letter (@letters) {\n        $hist{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $letter (keys %hist) {\n        if ($hist{$letter}\
    \ > $max) {\n            $max = $hist{$letter};\n        }\n    }\n    my %result;\n\
    \    foreach my $letter (keys %hist) {\n        if ($hist{$letter} == $max) {\n\
    \            $result{$letter} = $max;\n        }\n    }\n    return %result;\n\
    }", "    my %hash = ();\n    my @array = split(/ /, $test);\n    foreach my $i\
    \ (@array) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n    \
    \    } else {\n            $hash{$i} = 1;\n        }\n    }\n    my $max = 0;\n\
    \    foreach my $key (keys %hash) {\n        if ($hash{$key} > $max) {\n     \
    \       $max = $hash{$key};\n        }\n    }\n    my %result = ();\n    foreach\
    \ my $key (keys %hash) {\n        if ($hash{$key} == $max) {\n            $result{$key}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %hash;\n    my @array\
    \ = split(' ', $test);\n    foreach my $i (@array) {\n        $hash{$i}++;\n \
    \   }\n    my $max = 0;\n    my @max_keys;\n    foreach my $key (keys %hash) {\n\
    \        if ($hash{$key} > $max) {\n            $max = $hash{$key};\n        \
    \    @max_keys = ($key);\n        } elsif ($hash{$key} == $max) {\n          \
    \  push @max_keys, $key;\n        }\n    }\n    my %result;\n    foreach my $key\
    \ (@max_keys) {\n        $result{$key} = $max;\n    }\n    return %result;\n}",
  "    my %hist;\n    my %max;\n    my $max = 0;\n    foreach my $letter (split('\
    \ ', $test)) {\n        $hist{$letter}++;\n        if ($hist{$letter} > $max)\
    \ {\n            $max = $hist{$letter};\n            %max = ($letter => $max);\n\
    \        } elsif ($hist{$letter} == $max) {\n            $max{$letter} = $max;\n\
    \        }\n    }\n    return %max;\n}", "    my %hist;\n    my %max;\n    my\
    \ $max = 0;\n    foreach my $letter (split(/ /, $test)) {\n        $hist{$letter}++;\n\
    \        if ($hist{$letter} > $max) {\n            $max = $hist{$letter};\n  \
    \          %max = ($letter => $max);\n        } elsif ($hist{$letter} == $max)\
    \ {\n            $max{$letter} = $max;\n        }\n    }\n    return %max;\n}",
  "    my %histogram;\n    my @letters = split(/ /, $test);\n    foreach my $letter\
    \ (@letters) {\n        $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach\
    \ my $key (keys %histogram) {\n        if ($histogram{$key} > $max) {\n      \
    \      $max = $histogram{$key};\n        }\n    }\n    my %result;\n    foreach\
    \ my $key (keys %histogram) {\n        if ($histogram{$key} == $max) {\n     \
    \       $result{$key} = $max;\n        }\n    }\n    return %result;\n}", "  \
    \  my %hist;\n    my @letters = split(/ /, $test);\n    foreach my $letter (@letters)\
    \ {\n        if (exists $hist{$letter}) {\n            $hist{$letter}++;\n   \
    \     } else {\n            $hist{$letter} = 1;\n        }\n    }\n    my $max\
    \ = 0;\n    foreach my $key (keys %hist) {\n        if ($hist{$key} > $max) {\n\
    \            $max = $hist{$key};\n        }\n    }\n    my %result;\n    foreach\
    \ my $key (keys %hist) {\n        if ($hist{$key} == $max) {\n            $result{$key}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my @test = split(/\
    \ /, $test);\n    my %histogram;\n    foreach my $letter (@test) {\n        $histogram{$letter}++;\n\
    \    }\n    my $max = 0;\n    foreach my $key (keys %histogram) {\n        if\
    \ ($histogram{$key} > $max) {\n            $max = $histogram{$key};\n        }\n\
    \    }\n    my %result;\n    foreach my $key (keys %histogram) {\n        if ($histogram{$key}\
    \ == $max) {\n            $result{$key} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my @letters = split(' ', $test);\n    my %histogram;\n  \
    \  foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n  \
    \  return %histogram;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n\
    \    foreach my $letter (@letters) {\n        $histogram{$letter}++;\n    }\n\
    \    my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ > $max) {\n            $max = $histogram{$letter};\n        }\n    }\n    my\
    \ %result;\n    foreach my $letter (keys %histogram) {\n        if ($histogram{$letter}\
    \ == $max) {\n            $result{$letter} = $max;\n        }\n    }\n    return\
    \ %result;\n}", "    my %histogram;\n    my @letters = split(/ /, $test);\n  \
    \  foreach my $letter (@letters) {\n        if (exists $histogram{$letter}) {\n\
    \            $histogram{$letter}++;\n        } else {\n            $histogram{$letter}\
    \ = 1;\n        }\n    }\n    return %histogram;\n}", "    my @letters = split('\
    \ ', $test);\n    my %histogram = ();\n    foreach my $letter (@letters) {\n \
    \       if (exists $histogram{$letter}) {\n            $histogram{$letter}++;\n\
    \        } else {\n            $histogram{$letter} = 1;\n        }\n    }\n  \
    \  return %histogram;\n}", "    my %hash = ();\n    my @array = split(/ /, $test);\n\
    \    foreach my $i (@array) {\n        if (exists $hash{$i}) {\n            $hash{$i}++;\n\
    \        } else {\n            $hash{$i} = 1;\n        }\n    }\n    my $max =\
    \ 0;\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $max) {\n    \
    \        $max = $hash{$i};\n        }\n    }\n    my %result = ();\n    foreach\
    \ my $i (keys %hash) {\n        if ($hash{$i} == $max) {\n            $result{$i}\
    \ = $max;\n        }\n    }\n    return %result;\n}", "    my %histogram;\n  \
    \  my @letters = split(' ', $test);\n    foreach my $letter (@letters) {\n   \
    \     $histogram{$letter}++;\n    }\n    my $max = 0;\n    foreach my $letter\
    \ (keys %histogram) {\n        if ($histogram{$letter} > $max) {\n           \
    \ $max = $histogram{$letter};\n        }\n    }\n    foreach my $letter (keys\
    \ %histogram) {\n        if ($histogram{$letter} < $max) {\n            delete\
    \ $histogram{$letter};\n        }\n    }\n    return %histogram;\n}", "    my\
    \ @test = split(/ /, $test);\n    my %histogram;\n    foreach my $letter (@test)\
    \ {\n        if (exists $histogram{$letter}) {\n            $histogram{$letter}\
    \ += 1;\n        } else {\n            $histogram{$letter} = 1;\n        }\n \
    \   }\n    my $max = 0;\n    foreach my $letter (keys %histogram) {\n        if\
    \ ($histogram{$letter} > $max) {\n            $max = $histogram{$letter};\n  \
    \      }\n    }\n    my %result;\n    foreach my $letter (keys %histogram) {\n\
    \        if ($histogram{$letter} == $max) {\n            $result{$letter} = $max;\n\
    \        }\n    }\n    return %result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

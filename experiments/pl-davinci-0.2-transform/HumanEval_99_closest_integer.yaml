name: HumanEval_99_closest_integer
language: pl
prompt: "# Create a function that takes a value (string) representing a number\n#\
  \ and returns the closest integer to it. If the number is equidistant\n# from two\
  \ integers, round it away from zero.\n# Examples\n# >>> closest_integer(\"10\")\n\
  # 10\n# >>> closest_integer(\"15.3\")\n# 15\n# Note:\n# Rounding away from zero\
  \ means that if the given number is equidistant\n# from two integers, the one you\
  \ should return is the one that is the\n# farthest from zero. For example closest_integer(\"\
  14.5\") should\n# return 15 and closest_integer(\"-14.5\") should return -15.\n\
  sub closest_integer {\n    my($value) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&closest_integer;\n\
  \        if(eq_deeply($candidate->(\"10\"),10)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"14.5\"),15)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  -15.5\"),-16)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"15.3\"),15)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"0\"),0)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $int = int($value);\n    my $frac = $value - $int;\n    if ($frac\
    \ > 0.5) {\n        return $int + 1;\n    } elsif ($frac < -0.5) {\n        return\
    \ $int - 1;\n    } else {\n        return $int;\n    }\n}", "    my $int = int($value);\n\
    \    my $frac = $value - $int;\n    if ($frac > 0.5) {\n        return $int +\
    \ 1;\n    } elsif ($frac < -0.5) {\n        return $int - 1;\n    } else {\n \
    \       return $int;\n    }\n}", "    return int($value + 0.5);\n}", "    my $int\
    \ = int($value);\n    my $frac = $value - $int;\n    if ($frac > 0.5) {\n    \
    \    $int++;\n    } elsif ($frac < -0.5) {\n        $int--;\n    }\n    return\
    \ $int;\n}", "    my $int = int($value);\n    return $int if $value == $int;\n\
    \    return $int + ($value > $int ? 1 : -1);\n}", "    my $int_value = int($value);\n\
    \    my $frac_value = $value - $int_value;\n    if ($frac_value >= 0.5) {\n  \
    \      return $int_value + 1;\n    }\n    else {\n        return $int_value;\n\
    \    }\n}", "    return int($value + 0.5);\n}", "    my $int = int($value);\n\
    \    my $frac = $value - $int;\n    if ($frac > 0.5) {\n        $int++;\n    }\
    \ elsif ($frac < -0.5) {\n        $int--;\n    }\n    return $int;\n}", "    my\
    \ $int = int($value);\n    my $frac = $value - $int;\n    if ($frac < 0) {\n \
    \       $frac = -$frac;\n    }\n    if ($frac == 0.5) {\n        if ($value <\
    \ 0) {\n            return $int - 1;\n        } else {\n            return $int\
    \ + 1;\n        }\n    } else {\n        return $int;\n    }\n}", "    my $int\
    \ = int($value);\n    my $frac = $value - $int;\n    if ($frac > 0.5) {\n    \
    \    return $int + 1;\n    } elsif ($frac < -0.5) {\n        return $int - 1;\n\
    \    } else {\n        return $int;\n    }\n}", "    my $result = int($value);\n\
    \    if ($value - $result >= 0.5) {\n        $result++;\n    }\n    return $result;\n\
    }", "    my $int = int($value);\n    my $frac = $value - $int;\n    if ($frac\
    \ > 0.5) {\n        $int++;\n    } elsif ($frac < -0.5) {\n        $int--;\n \
    \   }\n    return $int;\n}", "    my $int = int($value);\n    if ($value - $int\
    \ >= 0.5) {\n        return $int + 1;\n    }\n    else {\n        return $int;\n\
    \    }\n}", "    my $int = int($value);\n    return $int if $value == $int;\n\
    \    return $int + ($value > $int ? 1 : -1);\n}", "    my $int = int($value);\n\
    \    my $frac = $value - $int;\n    if ($frac >= 0.5) {\n        return $int +\
    \ 1;\n    }\n    elsif ($frac <= -0.5) {\n        return $int - 1;\n    }\n  \
    \  else {\n        return $int;\n    }\n}", "    return int($value + 0.5);\n}",
  "    my $int = int($value);\n    my $frac = $value - $int;\n    if ($frac >= 0.5)\
    \ {\n        return $int + 1;\n    } else {\n        return $int;\n    }\n}",
  "    my $int = int($value);\n    my $frac = $value - $int;\n    if ($frac >= 0.5)\
    \ {\n        $int++;\n    }\n    return $int;\n}", "    my $int = int($value);\n\
    \    my $frac = $value - $int;\n    if ($frac < 0) {\n        $frac = -$frac;\n\
    \    }\n    if ($frac >= 0.5) {\n        $int += 1;\n    }\n    return $int;\n\
    }", "    return int($value + 0.5);\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

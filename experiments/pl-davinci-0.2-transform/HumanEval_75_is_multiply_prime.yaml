name: HumanEval_75_is_multiply_prime
language: pl
prompt: "# Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n# and false otherwise.\n# Knowing that (a) is less then 100.\
  \ \n# Example:\n# >>> is_multiply_prime(30)\n# 1\n# 30 = 2 * 3 * 5\nsub is_multiply_prime\
  \ {\n    my($a) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_multiply_prime;\n\
  \        if(eq_deeply($candidate->(5),\"\")) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(30),1)) {\n      \
  \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(125),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(105),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(126),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(729),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(891),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1001),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $i = 2;\n    my $count = 0;\n    my $result = 0;\n    while\
    \ ($i < $a) {\n        if ($a % $i == 0) {\n            $count++;\n          \
    \  $result = $result + $i;\n        }\n        $i++;\n    }\n    if ($count ==\
    \ 2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}", " \
    \   my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    my $result = 0;\n    while\
    \ ($i <= $a) {\n        while ($j <= $a) {\n            while ($k <= $a) {\n \
    \               if ($i * $j * $k == $a) {\n                    $result = 1;\n\
    \                    last;\n                }\n                $k++;\n       \
    \     }\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n\
    }", "    my $is_multiply_prime = 0;\n    my $i = 2;\n    my $j = 2;\n    my $k\
    \ = 2;\n    while ($i < $a) {\n        while ($j < $a) {\n            while ($k\
    \ < $a) {\n                if ($i * $j * $k == $a) {\n                    $is_multiply_prime\
    \ = 1;\n                }\n                $k++;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return $is_multiply_prime;\n}", "    my\
    \ $is_multiply_prime = 0;\n    my @primes = (2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    my $i = 0;\n\
    \    while ($i < scalar(@primes)) {\n        my $j = 0;\n        while ($j < scalar(@primes))\
    \ {\n            my $k = 0;\n            while ($k < scalar(@primes)) {\n    \
    \            if ($primes[$i] * $primes[$j] * $primes[$k] == $a) {\n          \
    \          $is_multiply_prime = 1;\n                    return $is_multiply_prime;\n\
    \                }\n                $k++;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return $is_multiply_prime;\n}", "    my\
    \ $i = 2;\n    my $j = 2;\n    my $k = 2;\n    my $flag = 0;\n    while($i <=\
    \ $a){\n        while($j <= $a){\n            while($k <= $a){\n             \
    \   if($i * $j * $k == $a){\n                    $flag = 1;\n                \
    \    print \"$i * $j * $k = $a\\n\";\n                }\n                $k++;\n\
    \            }\n            $j++;\n            $k = 2;\n        }\n        $i++;\n\
    \        $j = 2;\n    }\n    return $flag;\n}", "    my $is_prime = 0;\n    my\
    \ $i = 2;\n    my $j = 2;\n    my $k = 2;\n    while ($i < $a) {\n        while\
    \ ($j < $a) {\n            while ($k < $a) {\n                if ($i * $j * $k\
    \ == $a) {\n                    $is_prime = 1;\n                }\n          \
    \      $k++;\n            }\n            $j++;\n        }\n        $i++;\n   \
    \ }\n    return $is_prime;\n}", "    my $is_multiply_prime = 0;\n    my $i = 2;\n\
    \    my $j = 2;\n    my $k = 2;\n    while ($i < $a) {\n        while ($j < $a)\
    \ {\n            while ($k < $a) {\n                if ($i * $j * $k == $a) {\n\
    \                    $is_multiply_prime = 1;\n                }\n            \
    \    $k++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n\
    \    return $is_multiply_prime;\n}", "    my $is_multiply_prime = 0;\n    my $i\
    \ = 2;\n    my $j = 2;\n    my $k = 2;\n    while ($i < $a) {\n        while ($j\
    \ < $a) {\n            while ($k < $a) {\n                if ($i * $j * $k ==\
    \ $a) {\n                    $is_multiply_prime = 1;\n                }\n    \
    \            $k++;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $is_multiply_prime;\n}", "    my $flag = 0;\n    my $i = 2;\n\
    \    my $j = 2;\n    my $k = 2;\n    while($i < $a) {\n        while($j < $a)\
    \ {\n            while($k < $a) {\n                if($i * $j * $k == $a) {\n\
    \                    $flag = 1;\n                    last;\n                }\n\
    \                $k++;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $flag;\n}", "    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n\
    \    my $result = 0;\n    while ($i <= $a) {\n        while ($j <= $a) {\n   \
    \         while ($k <= $a) {\n                if ($i * $j * $k == $a) {\n    \
    \                $result = 1;\n                    last;\n                }\n\
    \                $k++;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}", "    my $i = 2;\n    my $result = 1;\n    while\
    \ ($i < $a) {\n        if ($a % $i == 0) {\n            $result *= $i;\n     \
    \       $a /= $i;\n        } else {\n            $i++;\n        }\n    }\n   \
    \ return $result;\n}", "    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    my\
    \ $is_multiply_prime = 0;\n    while ($i <= $a) {\n        while ($j <= $a) {\n\
    \            while ($k <= $a) {\n                if ($i * $j * $k == $a) {\n \
    \                   $is_multiply_prime = 1;\n                }\n             \
    \   $k++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n\
    \    return $is_multiply_prime;\n}", "    my $i = 2;\n    my $count = 0;\n   \
    \ my $result = 1;\n    while ($i <= $a) {\n        if ($a % $i == 0) {\n     \
    \       $a /= $i;\n            $count++;\n            $result *= $i;\n       \
    \ }\n        else {\n            $i++;\n        }\n    }\n    return $count ==\
    \ 3 && $result == $_[0];\n}", "    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n\
    \    while ($i < $a) {\n        while ($j < $a) {\n            while ($k < $a)\
    \ {\n                if ($i * $j * $k == $a) {\n                    return 1;\n\
    \                }\n                $k++;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n\
    \    my $k;\n    my $count = 0;\n    for ($i = 2; $i < $a; $i++) {\n        if\
    \ ($a % $i == 0) {\n            for ($j = 2; $j < $i; $j++) {\n              \
    \  if ($i % $j == 0) {\n                    $count++;\n                }\n   \
    \         }\n            if ($count == 0) {\n                for ($k = 2; $k <\
    \ $a; $k++) {\n                    if ($a % $k == 0) {\n                     \
    \   for ($j = 2; $j < $k; $j++) {\n                            if ($k % $j ==\
    \ 0) {\n                                $count++;\n                          \
    \  }\n                        }\n                        if ($count == 0) {\n\
    \                            return 1;\n                        }\n          \
    \          }\n                }\n            }\n        }\n    }\n    return 0;\n\
    }", "    my $i;\n    my $j;\n    my $k;\n    my $flag = 0;\n    for($i = 2; $i\
    \ <= $a; $i++){\n        for($j = 2; $j <= $a; $j++){\n            for($k = 2;\
    \ $k <= $a; $k++){\n                if($i * $j * $k == $a){\n                \
    \    $flag = 1;\n                    print \"$i * $j * $k = $a\\n\";\n       \
    \         }\n            }\n        }\n    }\n    return $flag;\n}", "    my $i;\n\
    \    my $j;\n    my $k;\n    my $flag = 0;\n    for ($i = 2; $i <= $a; $i++) {\n\
    \        for ($j = 2; $j <= $a; $j++) {\n            for ($k = 2; $k <= $a; $k++)\
    \ {\n                if ($i * $j * $k == $a) {\n                    $flag = 1;\n\
    \                    last;\n                }\n            }\n        }\n    }\n\
    \    return $flag;\n}", "    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    my\
    \ $flag = 0;\n    while ($i <= $a) {\n        while ($j <= $a) {\n           \
    \ while ($k <= $a) {\n                if ($i * $j * $k == $a) {\n            \
    \        $flag = 1;\n                    last;\n                }\n          \
    \      $k++;\n            }\n            $j++;\n        }\n        $i++;\n   \
    \ }\n    return $flag;\n}", "    my $flag = 0;\n    my $i = 2;\n    my $j = 2;\n\
    \    my $k = 2;\n    while ($i < $a) {\n        while ($j < $a) {\n          \
    \  while ($k < $a) {\n                if ($i * $j * $k == $a) {\n            \
    \        $flag = 1;\n                    last;\n                }\n          \
    \      $k++;\n            }\n            $j++;\n        }\n        $i++;\n   \
    \ }\n    return $flag;\n}", "    my $i = 2;\n    my $count = 0;\n    while ($i\
    \ < $a) {\n        if ($a % $i == 0) {\n            if (is_prime($i)) {\n    \
    \            $count++;\n            }\n        }\n        $i++;\n    }\n    if\
    \ ($count == 3) {\n        return 1;\n    }\n    else {\n        return 0;\n \
    \   }\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_90_next_smallest
language: pl
prompt: "# You are given a list of integers.\n# Write a function next_smallest() that\
  \ returns the 2nd smallest element of the list.\n# Return None if there is no such\
  \ element.\n# >>> next_smallest([1, 2, 3, 4, 5])\n# 2\n# >>> next_smallest([5, 1,\
  \ 4, 3, 2])\n# 2\n# >>> next_smallest([])\n# undef\n# >>> next_smallest([1, 1])\n\
  # undef\nsub next_smallest {\n    my($lst) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&next_smallest;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),2)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 1, 4,\
  \ 3, 2]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([]),undef)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1]),undef)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 1, 1, 1, 0]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1, 1]),undef)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([-35, 34, 12, -45]),-35))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n\
    \            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $min = undef;\n    my $min2 = undef;\n    foreach my $e (@$lst) {\n   \
    \     if (!defined($min) || $e < $min) {\n            $min2 = $min;\n        \
    \    $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n         \
    \   $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $e (@$lst) {\n        if ($e < $min) {\n  \
    \          $min2 = $min;\n            $min = $e;\n        } elsif ($e < $min2\
    \ || !defined $min2) {\n            $min2 = $e;\n        }\n    }\n    return\
    \ $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i\
    \ (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for(my $i = 1; $i\
    \ < @$lst; $i++) {\n        if ($lst->[$i] < $min) {\n            $next_min =\
    \ $min;\n            $min = $lst->[$i];\n        } elsif (!defined($next_min)\
    \ || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $second_min\
    \ = undef;\n    foreach my $elem (@$lst) {\n        if ($elem < $min) {\n    \
    \        $second_min = $min;\n            $min = $elem;\n        } elsif ($elem\
    \ < $second_min || !defined($second_min)) {\n            $second_min = $elem;\n\
    \        }\n    }\n    return $second_min;\n}", "    my $min = undef;\n    my\
    \ $min2 = undef;\n    for my $x (@$lst) {\n        if (!defined($min) || $x <\
    \ $min) {\n            $min2 = $min;\n            $min = $x;\n        } elsif\
    \ (!defined($min2) || $x < $min2) {\n            $min2 = $x;\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n   \
    \ for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min\
    \ || !defined $next_min) {\n            $next_min = $lst->[$i];\n        }\n \
    \   }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ (!defined($next_min) || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $min2 = undef;\n    for my $i (1..$#$lst) {\n        my $e = $lst->[$i];\n \
    \       if ($e < $min) {\n            $min2 = $min;\n            $min = $e;\n\
    \        } elsif (!defined($min2) || $e < $min2) {\n            $min2 = $e;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $x (@$lst) {\n        if (!defined($min) || $x < $min)\
    \ {\n            $min2 = $min;\n            $min = $x;\n        } elsif (!defined($min2)\
    \ || $x < $min2) {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n\
    \        if (not defined $min or $i < $min) {\n            $next_min = $min;\n\
    \            $min = $i;\n        } elsif (not defined $next_min or $i < $next_min)\
    \ {\n            $next_min = $i;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = undef;\n    my $sec = undef;\n    for my $i (@$lst) {\n        if\
    \ (not defined $min or $i < $min) {\n            $sec = $min;\n            $min\
    \ = $i;\n        } elsif (not defined $sec or $i < $sec) {\n            $sec =\
    \ $i;\n        }\n    }\n    return $sec;\n}", "    my $min = $lst->[0];\n   \
    \ my $second = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $second = $min;\n            $min = $i;\n        } elsif ($i < $second\
    \ || !defined $second) {\n            $second = $i;\n        }\n    }\n    return\
    \ $second;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for my $i\
    \ (@$lst) {\n        if (!defined $min) {\n            $min = $i;\n        } elsif\
    \ (!defined $next_min) {\n            if ($i < $min) {\n                $next_min\
    \ = $min;\n                $min = $i;\n            } else {\n                $next_min\
    \ = $i;\n            }\n        } else {\n            if ($i < $min) {\n     \
    \           $next_min = $min;\n                $min = $i;\n            } elsif\
    \ ($i < $next_min) {\n                $next_min = $i;\n            }\n       \
    \ }\n    }\n    return $next_min;\n}", "    my $min = undef;\n    my $min2 = undef;\n\
    \    foreach my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n   \
    \         $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst)\
    \ {\n        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif ($i < $min2 || !defined($min2)) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ (!defined($next_min) || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min)\
    \ {\n            $min2 = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    foreach my $i (@$lst) {\n        if (!defined($min) || $i < $min)\
    \ {\n            $min2 = $min;\n            $min = $i;\n        } elsif (!defined($min2)\
    \ || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $next_min = undef;\n    for my $e (@$lst) {\n\
    \        if (!defined($min) || $e < $min) {\n            $next_min = $min;\n \
    \           $min = $e;\n        } elsif (!defined($next_min) || $e < $next_min)\
    \ {\n            $next_min = $e;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (defined($min2) && $lst->[$i] < $min2) {\n  \
    \          $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "   \
    \ my $min = undef;\n    my $min2 = undef;\n    foreach my $e (@$lst) {\n     \
    \   if (!defined($min) || $e < $min) {\n            $min2 = $min;\n          \
    \  $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n           \
    \ $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $i (@$lst) {\n        if (!defined($min) || $i < $min)\
    \ {\n            $min2 = $min;\n            $min = $i;\n        } elsif (!defined($min2)\
    \ || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined\
    \ $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $smallest = $lst->[0];\n    my $next_smallest = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $lst->[$i];\n        }\n        elsif\
    \ ($lst->[$i] < $next_smallest || !defined $next_smallest) {\n            $next_smallest\
    \ = $lst->[$i];\n        }\n    }\n    return $next_smallest;\n}", "    my $min\
    \ = undef;\n    my $next_min = undef;\n    for my $e (@$lst) {\n        if (!defined($min)\
    \ || $e < $min) {\n            $next_min = $min;\n            $min = $e;\n   \
    \     } elsif (!defined($next_min) || $e < $next_min) {\n            $next_min\
    \ = $e;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ }\n        elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif ($lst->[$i] < $next_min || !defined $next_min) {\n           \
    \ $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $min = $lst->[0];\n    my $next_min = undef;\n    foreach my $item (@$lst) {\n\
    \        if ($item < $min) {\n            $next_min = $min;\n            $min\
    \ = $item;\n        } elsif ($item < $next_min) {\n            $next_min = $item;\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $next_min = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $next_min = $min;\n            $min = $i;\n        }\n        elsif\
    \ ($i < $next_min || !defined($next_min)) {\n            $next_min = $i;\n   \
    \     }\n    }\n    return $next_min;\n}", "    my($min, $next_min) = (undef,\
    \ undef);\n    foreach my $i (@$lst) {\n        if(!defined($min) || $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif(!defined($next_min)\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $smallest = $lst->[0];\n    my $next_smallest = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $lst->[$i];\n        } elsif ($lst->[$i]\
    \ < $next_smallest || !defined $next_smallest) {\n            $next_smallest =\
    \ $lst->[$i];\n        }\n    }\n    return $next_smallest;\n}", "    my $smallest\
    \ = undef;\n    my $next_smallest = undef;\n    foreach my $elem (@$lst) {\n \
    \       if (!defined($smallest) || $elem < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $elem;\n        } elsif (!defined($next_smallest)\
    \ || $elem < $next_smallest) {\n            $next_smallest = $elem;\n        }\n\
    \    }\n    return $next_smallest;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (0..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = undef;\n    my $next_min = undef;\n   \
    \ for my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n          \
    \  $next_min = $min;\n            $min = $e;\n        } elsif (!defined($next_min)\
    \ || $e < $next_min) {\n            $next_min = $e;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for my\
    \ $i (@$lst) {\n        if (!defined $min || $i < $min) {\n            $next_min\
    \ = $min;\n            $min = $i;\n        } elsif (!defined $next_min || $i <\
    \ $next_min) {\n            $next_min = $i;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    for my $x (@$lst) {\n  \
    \      if (!defined($min) || $x < $min) {\n            $min2 = $min;\n       \
    \     $min = $x;\n        } elsif (!defined($min2) || $x < $min2) {\n        \
    \    $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    for my $e (@$lst) {\n        if (!defined($min)\
    \ || $e < $min) {\n            $next_min = $min;\n            $min = $e;\n   \
    \     } elsif (!defined($next_min) || $e < $next_min) {\n            $next_min\
    \ = $e;\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    for my $i (@$lst) {\n        if (!defined($min) ||\
    \ $i < $min) {\n            $min2 = $min;\n            $min = $i;\n        } elsif\
    \ (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n    for\
    \ my $e (@$lst) {\n        if (not defined $min or $e < $min) {\n            $min2\
    \ = $min;\n            $min = $e;\n        } elsif (not defined $min2 or $e <\
    \ $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $e (@$lst) {\n\
    \        if ($e < $min) {\n            $min2 = $min;\n            $min = $e;\n\
    \        } elsif ($e < $min2 || !defined($min2)) {\n            $min2 = $e;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $i (@$lst) {\n        if (!defined($min) || $i < $min)\
    \ {\n            $min2 = $min;\n            $min = $i;\n        } elsif (!defined($min2)\
    \ || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] <\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for my\
    \ $x (@$lst) {\n        if (!defined($min) || $x < $min) {\n            $next_min\
    \ = $min;\n            $min = $x;\n        } elsif (!defined($next_min) || $x\
    \ < $next_min) {\n            $next_min = $x;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    foreach\
    \ my $i (@$lst) {\n        if ($i < $min) {\n            $next_min = $min;\n \
    \           $min = $i;\n        } elsif ($i < $next_min || !defined($next_min))\
    \ {\n            $next_min = $i;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n  \
    \          $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "   \
    \ my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n \
    \       if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my @lst = @$lst;\n    my $min = $lst[0];\n    my $min2 = undef;\n    for my\
    \ $i (0..$#lst) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst[$i];\n        } elsif ($lst[$i] < $min2 || !defined $min2)\
    \ {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $min = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n   \
    \     if (!defined $min) {\n            $min = $i;\n        } elsif (!defined\
    \ $next_min) {\n            if ($i < $min) {\n                $next_min = $min;\n\
    \                $min = $i;\n            } else {\n                $next_min =\
    \ $i;\n            }\n        } else {\n            if ($i < $min) {\n       \
    \         $next_min = $min;\n                $min = $i;\n            } elsif ($i\
    \ < $next_min) {\n                $next_min = $i;\n            }\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    foreach my $i (@$lst) {\n        if ($i < $min) {\n            $min2 = $min;\n\
    \            $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n \
    \           $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = $lst->[1];\n    for my $i (1..$#$lst) {\n     \
    \   my $e = $lst->[$i];\n        if ($e < $min) {\n            $min2 = $min;\n\
    \            $min = $e;\n        } elsif ($e < $min2) {\n            $min2 = $e;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $e (@$lst) {\n        if (!defined($min) || $e < $min)\
    \ {\n            $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = min($lst);\n    my $min2 = undef;\n    for my $x (@$lst) {\n\
    \        if ($x > $min) {\n            if (!defined($min2) || $x < $min2) {\n\
    \                $min2 = $x;\n            }\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = min($lst);\n    my $min2 = $min;\n    foreach my $i (@$lst) {\n \
    \       if ($i > $min && $i < $min2) {\n            $min2 = $i;\n        }\n \
    \   }\n    return $min2 == $min ? undef : $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $e (@$lst) {\n        if (!defined($min) || $e < $min)\
    \ {\n            $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $smallest = undef;\n    my $second_smallest = undef;\n    foreach\
    \ my $elem (@$lst) {\n        if (!defined($smallest) || $elem < $smallest) {\n\
    \            $second_smallest = $smallest;\n            $smallest = $elem;\n \
    \       } elsif (!defined($second_smallest) || $elem < $second_smallest) {\n \
    \           $second_smallest = $elem;\n        }\n    }\n    return $second_smallest;\n\
    }", "    my @lst = sort {$a <=> $b} @$lst;\n    return $lst[1];\n}", "    my $min\
    \ = $lst->[0];\n    my $next = undef;\n    foreach my $i (@$lst) {\n        if\
    \ ($i < $min) {\n            $next = $min;\n            $min = $i;\n        }\
    \ elsif ($i < $next || !defined($next)) {\n            $next = $i;\n        }\n\
    \    }\n    return $next;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n        if ($val\
    \ < $min) {\n            $next_min = $min;\n            $min = $val;\n       \
    \ }\n        elsif (!defined($next_min) || $val < $next_min) {\n            $next_min\
    \ = $val;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = $lst->[1];\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n\
    \            $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n\
    \    for my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n       \
    \     $next_min = $min;\n            $min = $e;\n        } elsif (!defined($next_min)\
    \ || $e < $next_min) {\n            $next_min = $e;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        my $e = $lst->[$i];\n        if ($e < $min) {\n  \
    \          $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $nxt = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $nxt = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (not defined $nxt or $lst->[$i] < $nxt) {\n \
    \           $nxt = $lst->[$i];\n        }\n    }\n    return $nxt;\n}", "    my\
    \ $min = undef;\n    my $next_min = undef;\n    for my $e (@$lst) {\n        if(!defined($min)\
    \ || $e < $min) {\n            $next_min = $min;\n            $min = $e;\n   \
    \     }\n        elsif(!defined($next_min) || $e < $next_min) {\n            $next_min\
    \ = $e;\n        }\n    }\n    return $next_min;\n}", "    return undef if @$lst\
    \ < 2;\n    my $min = $lst->[0];\n    my $next = $lst->[1];\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next) {\n            $next\
    \ = $lst->[$i];\n        }\n    }\n    return $next;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $min2 = $min;\n            $min = $i;\n        } elsif (!defined($min2)\
    \ || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (not defined $next_min or $lst->[$i]\
    \ < $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        my $e = $lst->[$i];\n        if ($e < $min) {\n  \
    \          $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] <\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for my\
    \ $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n            $next_min\
    \ = $min;\n            $min = $e;\n        } elsif (!defined($next_min) || $e\
    \ < $next_min) {\n            $next_min = $e;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n\
    \            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my @lst = @$lst;\n    my $min = $lst[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#lst) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst[$i];\n        }\n        elsif ($lst[$i] < $min2 || !defined\
    \ $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $next = undef;\n    foreach my $i (@$lst) {\n\
    \        if (!defined($min) || $i < $min) {\n            $next = $min;\n     \
    \       $min = $i;\n        } elsif (!defined($next) || $i < $next) {\n      \
    \      $next = $i;\n        }\n    }\n    return $next;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    foreach my $elem (@$lst) {\n        if ($elem\
    \ < $min) {\n            $next_min = $min;\n            $min = $elem;\n      \
    \  } elsif ($elem < $next_min || !defined($next_min)) {\n            $next_min\
    \ = $elem;\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    for my $e (@$lst) {\n        if (not defined $min\
    \ or $e < $min) {\n            $next_min = $min;\n            $min = $e;\n   \
    \     } elsif (not defined $next_min or $e < $next_min) {\n            $next_min\
    \ = $e;\n        }\n    }\n    return $next_min;\n}", "    my($min, $min2) = (undef,\
    \ undef);\n    for my $i (@$lst) {\n        if(!defined($min) || $i < $min) {\n\
    \            $min2 = $min;\n            $min = $i;\n        } elsif(!defined($min2)\
    \ || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = undef;\n    my $next = undef;\n    foreach my $i (@$lst) {\n    \
    \    if (not defined $min or $i < $min) {\n            $next = $min;\n       \
    \     $min = $i;\n        } elsif (not defined $next or $i < $next) {\n      \
    \      $next = $i;\n        }\n    }\n    return $next;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    foreach my $i (@$lst) {\n        if (!defined($min)\
    \ || $i < $min) {\n            $next_min = $min;\n            $min = $i;\n   \
    \     } elsif (!defined($next_min) || $i < $next_min) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my @lst = @$lst;\n\
    \    my $min = $lst[0];\n    my $min2 = undef;\n    for my $i (1..$#lst) {\n \
    \       if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min =\
    \ $lst[$i];\n        } elsif (!defined($min2) || $lst[$i] < $min2) {\n       \
    \     $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n     \
    \   if ($lst->[$i] < $min) {\n            $next_min = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] < $next_min)\
    \ {\n            $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my @lst = @$lst;\n    my $min = $lst[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#lst) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst[$i];\n        } elsif (!defined($min2) || $lst[$i] <\
    \ $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if (!defined($min) || $i < $min) {\n            $min2 = $min;\n     \
    \       $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n      \
    \      $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $nmin = undef;\n    foreach my $x (@$lst) {\n        if (!defined($min)\
    \ || $x < $min) {\n            $nmin = $min;\n            $min = $x;\n       \
    \ } elsif (!defined($nmin) || $x < $nmin) {\n            $nmin = $x;\n       \
    \ }\n    }\n    return $nmin;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    foreach my $e (@$lst) {\n        if ($e < $min) {\n            $min2 = $min;\n\
    \            $min = $e;\n        } elsif ($e < $min2 || !defined($min2)) {\n \
    \           $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n     \
    \   if ($lst->[$i] < $min) {\n            $next_min = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined $next_min)\
    \ {\n            $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = min($lst);\n    my $min2 = undef;\n    for my $x (@$lst) {\n\
    \        if ($x > $min) {\n            if (!defined($min2) || $x < $min2) {\n\
    \                $min2 = $x;\n            }\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    for my $e (@$lst) {\n  \
    \      if (!defined($min) || $e < $min) {\n            $min2 = $min;\n       \
    \     $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n        \
    \    $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif (!defined($next_min) || $lst->[$i] < $next_min) {\n          \
    \  $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "   \
    \ my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (@$lst) {\n \
    \       if ($i < $min) {\n            $next_min = $min;\n            $min = $i;\n\
    \        } elsif ($i < $next_min || !defined $next_min) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    foreach my $elem (@$lst) {\n        if (!defined($min)\
    \ || $elem < $min) {\n            $next_min = $min;\n            $min = $elem;\n\
    \        } elsif (!defined($next_min) || $elem < $next_min) {\n            $next_min\
    \ = $elem;\n        }\n    }\n    return $next_min;\n}", "    my $min = min($lst);\n\
    \    my $min2 = undef;\n    foreach my $elem (@$lst) {\n        if ($elem != $min)\
    \ {\n            if (!defined($min2) || $elem < $min2) {\n                $min2\
    \ = $elem;\n            }\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if\
    \ ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        }\n        elsif (!defined($min2) || $lst->[$i] < $min2) {\n        \
    \    $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = undef;\n    my $next_min = undef;\n    foreach my $elem (@$lst) {\n      \
    \  if (!defined($min) || $elem < $min) {\n            $next_min = $min;\n    \
    \        $min = $elem;\n        } elsif (!defined($next_min) || $elem < $next_min)\
    \ {\n            $next_min = $elem;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for my\
    \ $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n            $next_min\
    \ = $min;\n            $min = $e;\n        } elsif (!defined($next_min) || $e\
    \ < $next_min) {\n            $next_min = $e;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] <\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $nxt = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $nxt = $min;\n\
    \            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $nxt || !defined\
    \ $nxt) {\n            $nxt = $lst->[$i];\n        }\n    }\n    return $nxt;\n\
    }", "    my $smallest = undef;\n    my $next_smallest = undef;\n    foreach my\
    \ $elem (@$lst) {\n        if (!defined($smallest) || $elem < $smallest) {\n \
    \           $next_smallest = $smallest;\n            $smallest = $elem;\n    \
    \    } elsif (!defined($next_smallest) || $elem < $next_smallest) {\n        \
    \    $next_smallest = $elem;\n        }\n    }\n    return $next_smallest;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    foreach my $i (@$lst) {\n        if (!defined($min) || $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif (!defined($next_min)\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined\
    \ $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] <\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n    foreach\
    \ my $x (@$lst) {\n        if(!defined($min) || $x < $min) {\n            $next_min\
    \ = $min;\n            $min = $x;\n        } elsif(!defined($next_min) || $x <\
    \ $next_min) {\n            $next_min = $x;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst)\
    \ {\n        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ (not defined $next_min or $lst->[$i] < $next_min) {\n            $next_min =\
    \ $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $elem (@$lst) {\n        if ($elem < $min)\
    \ {\n            $next_min = $min;\n            $min = $elem;\n        } elsif\
    \ (not defined $next_min or $elem < $next_min) {\n            $next_min = $elem;\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    foreach my $n (@$lst) {\n        if (!defined($min) || $n < $min)\
    \ {\n            $next_min = $min;\n            $min = $n;\n        } elsif (!defined($next_min)\
    \ || $n < $next_min) {\n            $next_min = $n;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $smallest = $lst->[0];\n    my $next_smallest = undef;\n\
    \    foreach my $i (@$lst) {\n        if ($i < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $i;\n        } elsif ($i < $next_smallest\
    \ || !defined $next_smallest) {\n            $next_smallest = $i;\n        }\n\
    \    }\n    return $next_smallest;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n   \
    \ for my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n        if ($val < $min)\
    \ {\n            $min2 = $min;\n            $min = $val;\n        } elsif (!defined($min2)\
    \ || $val < $min2) {\n            $min2 = $val;\n        }\n    }\n    return\
    \ $min2;\n}", "    my $min = min($lst);\n    my $min2 = undef;\n    foreach my\
    \ $i (@$lst) {\n        if ($i > $min) {\n            if (!defined($min2) || $i\
    \ < $min2) {\n                $min2 = $i;\n            }\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for\
    \ my $i (@$lst) {\n        if (!defined $min) {\n            $min = $i;\n    \
    \    } elsif (!defined $next_min) {\n            if ($i < $min) {\n          \
    \      $next_min = $min;\n                $min = $i;\n            } else {\n \
    \               $next_min = $i;\n            }\n        } else {\n           \
    \ if ($i < $min) {\n                $next_min = $min;\n                $min =\
    \ $i;\n            } elsif ($i < $next_min) {\n                $next_min = $i;\n\
    \            }\n        }\n    }\n    return $next_min;\n}", "    my $smallest\
    \ = undef;\n    my $second_smallest = undef;\n    foreach my $num (@$lst) {\n\
    \        if (not defined $smallest) {\n            $smallest = $num;\n       \
    \ } elsif (not defined $second_smallest) {\n            if ($num < $smallest)\
    \ {\n                $second_smallest = $smallest;\n                $smallest\
    \ = $num;\n            } else {\n                $second_smallest = $num;\n  \
    \          }\n        } else {\n            if ($num < $smallest) {\n        \
    \        $second_smallest = $smallest;\n                $smallest = $num;\n  \
    \          } elsif ($num < $second_smallest) {\n                $second_smallest\
    \ = $num;\n            }\n        }\n    }\n    return $second_smallest;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        }\n        elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n    for my\
    \ $val (@$lst) {\n        if (!defined($min) || $val < $min) {\n            $min2\
    \ = $min;\n            $min = $val;\n        } elsif (!defined($min2) || $val\
    \ < $min2) {\n            $min2 = $val;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    for my $i (@$lst) {\n  \
    \      if(!defined($min) || $i < $min) {\n            $min2 = $min;\n        \
    \    $min = $i;\n        } elsif(!defined($min2) || $i < $min2) {\n          \
    \  $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    for my $i (@$lst) {\n        if (not defined $min\
    \ or $i < $min) {\n            $min2 = $min;\n            $min = $i;\n       \
    \ } elsif (not defined $min2 or $i < $min2) {\n            $min2 = $i;\n     \
    \   }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min =\
    \ undef;\n    for my $i (@$lst) {\n        if (!defined $min || $i < $min) {\n\
    \            $next_min = $min;\n            $min = $i;\n        } elsif (!defined\
    \ $next_min || $i < $next_min) {\n            $next_min = $i;\n        }\n   \
    \ }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $second_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $second_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ (not defined $second_min or $lst->[$i] < $second_min) {\n            $second_min\
    \ = $lst->[$i];\n        }\n    }\n    return $second_min;\n}", "    my $min =\
    \ $lst->[0];\n    my $next_min = undef;\n    foreach my $i (@$lst) {\n       \
    \ if ($i < $min) {\n            $next_min = $min;\n            $min = $i;\n  \
    \      } elsif ($i < $next_min || !defined($next_min)) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        my $x = $lst->[$i];\n\
    \        if ($x < $min) {\n            $min2 = $min;\n            $min = $x;\n\
    \        } elsif (!defined($min2) || $x < $min2) {\n            $min2 = $x;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $x (@$lst) {\n        if (!defined($min) || $x < $min)\
    \ {\n            $min2 = $min;\n            $min = $x;\n        } elsif (!defined($min2)\
    \ || $x < $min2) {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $next_min = undef;\n    foreach my $i (@$lst)\
    \ {\n        if ($i < $min) {\n            $next_min = $min;\n            $min\
    \ = $i;\n        } elsif ($i < $next_min || !defined($next_min)) {\n         \
    \   $next_min = $i;\n        }\n    }\n    return $next_min;\n}", "    my($min,\
    \ $min2) = (undef, undef);\n    foreach my $e (@$lst) {\n        if(!defined($min)\
    \ || $e < $min) {\n            $min2 = $min;\n            $min = $e;\n       \
    \ } elsif(!defined($min2) || $e < $min2) {\n            $min2 = $e;\n        }\n\
    \    }\n    return $min2;\n}", "    my($min, $min2);\n    for my $e (@$lst) {\n\
    \        if (!defined($min) || $e < $min) {\n            $min2 = $min;\n     \
    \       $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n      \
    \      $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    foreach my $elem (@$lst) {\n        if (!defined($min)\
    \ || $elem < $min) {\n            $next_min = $min;\n            $min = $elem;\n\
    \        } elsif (!defined($next_min) || $elem < $next_min) {\n            $next_min\
    \ = $elem;\n        }\n    }\n    return $next_min;\n}", "    my @lst = @$lst;\n\
    \    my $min = $lst[0];\n    my $min2 = undef;\n    for my $i (1..$#lst) {\n \
    \       if ($lst[$i] < $min) {\n            $min2 = $min;\n            $min =\
    \ $lst[$i];\n        } elsif (!defined($min2) || $lst[$i] < $min2) {\n       \
    \     $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = undef;\n    my $next = undef;\n    for my $i (@$lst) {\n        if (!defined\
    \ $min || $i < $min) {\n            $next = $min;\n            $min = $i;\n  \
    \      } elsif (!defined $next || $i < $next) {\n            $next = $i;\n   \
    \     }\n    }\n    return $next;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i]\
    \ < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n \
    \   }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = $lst->[0];\n    my $nxt = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $nxt = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (not defined $nxt or $lst->[$i]\
    \ < $nxt) {\n            $nxt = $lst->[$i];\n        }\n    }\n    return $nxt;\n\
    }", "    my $min = undef;\n    my $next_min = undef;\n    foreach my $elem (@$lst)\
    \ {\n        if (not defined $min) {\n            $min = $elem;\n        } elsif\
    \ (not defined $next_min) {\n            if ($elem < $min) {\n               \
    \ $next_min = $min;\n                $min = $elem;\n            } else {\n   \
    \             $next_min = $elem;\n            }\n        } else {\n          \
    \  if ($elem < $min) {\n                $next_min = $min;\n                $min\
    \ = $elem;\n            } elsif ($elem < $next_min) {\n                $next_min\
    \ = $elem;\n            }\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $smallest = undef;\n    my $second_smallest = undef;\n    foreach my $x (@$lst)\
    \ {\n        if (not defined $smallest or $x < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $x;\n        } elsif (not defined $second_smallest\
    \ or $x < $second_smallest) {\n            $second_smallest = $x;\n        }\n\
    \    }\n    return $second_smallest;\n}", "    my $smallest = undef;\n    my $next_smallest\
    \ = undef;\n    for my $i (@$lst) {\n        if (!defined $smallest || $i < $smallest)\
    \ {\n            $next_smallest = $smallest;\n            $smallest = $i;\n  \
    \      } elsif (!defined $next_smallest || $i < $next_smallest) {\n          \
    \  $next_smallest = $i;\n        }\n    }\n    return $next_smallest;\n}", " \
    \   my $min = min($lst);\n    my $min2 = undef;\n    for my $i (@$lst) {\n   \
    \     if ($i > $min) {\n            if (!defined($min2) || $i < $min2) {\n   \
    \             $min2 = $i;\n            }\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $second_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $second_min = $min;\n     \
    \       $min = $lst->[$i];\n        } elsif (!defined($second_min) || $lst->[$i]\
    \ < $second_min) {\n            $second_min = $lst->[$i];\n        }\n    }\n\
    \    return $second_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        }\n        elsif (!defined($next_min)\
    \ || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = undef;\n    my $next_min = undef;\n    for\
    \ my $i (@$lst) {\n        if (!defined $min) {\n            $min = $i;\n    \
    \    } elsif (!defined $next_min) {\n            if ($i < $min) {\n          \
    \      $next_min = $min;\n                $min = $i;\n            } else {\n \
    \               $next_min = $i;\n            }\n        } else {\n           \
    \ if ($i < $min) {\n                $next_min = $min;\n                $min =\
    \ $i;\n            } elsif ($i < $next_min) {\n                $next_min = $i;\n\
    \            }\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       }\n        elsif ($lst->[$i] < $next_min || !defined $next_min) {\n  \
    \          $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}",
  "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] <\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        my $e = $lst->[$i];\n        if ($e < $min) {\n  \
    \          $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $smallest = undef;\n    my $next_smallest = undef;\n    for my $elem\
    \ (@$lst) {\n        if (!defined $smallest || $elem < $smallest) {\n        \
    \    $next_smallest = $smallest;\n            $smallest = $elem;\n        } elsif\
    \ (!defined $next_smallest || $elem < $next_smallest) {\n            $next_smallest\
    \ = $elem;\n        }\n    }\n    return $next_smallest;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    for my $x (@$lst) {\n        if (!defined($min) ||\
    \ $x < $min) {\n            $min2 = $min;\n            $min = $x;\n        } elsif\
    \ (!defined($min2) || $x < $min2) {\n            $min2 = $x;\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n   \
    \ for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2\
    \ || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n  \
    \  return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n \
    \   for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        }\n        elsif (!defined($next_min)\
    \ || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n    foreach\
    \ my $e (@$lst) {\n        if (not defined $min or $e < $min) {\n            $min2\
    \ = $min;\n            $min = $e;\n        } elsif (not defined $min2 or $e <\
    \ $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n}",
  "    my $min = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n    \
    \    if (!defined $min) {\n            $min = $i;\n        } elsif (!defined $next_min)\
    \ {\n            if ($i < $min) {\n                $next_min = $min;\n       \
    \         $min = $i;\n            } else {\n                $next_min = $i;\n\
    \            }\n        } else {\n            if ($i < $min) {\n             \
    \   $next_min = $min;\n                $min = $i;\n            } elsif ($i < $next_min)\
    \ {\n                $next_min = $i;\n            }\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (not defined $next_min\
    \ or $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (0..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2\
    \ || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n  \
    \  return $min2;\n}", "    my $min = undef;\n    my $next_min = undef;\n    foreach\
    \ my $num (@$lst) {\n        if (!defined($min) || $num < $min) {\n          \
    \  $next_min = $min;\n            $min = $num;\n        } elsif (!defined($next_min)\
    \ || $num < $next_min) {\n            $next_min = $num;\n        }\n    }\n  \
    \  return $next_min;\n}", "    my $min = min($lst);\n    my $min2 = undef;\n \
    \   foreach my $i (@$lst) {\n        if ($i > $min) {\n            if (!defined($min2)\
    \ || $i < $min2) {\n                $min2 = $i;\n            }\n        }\n  \
    \  }\n    return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n  \
    \  for my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n         \
    \   $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2) ||\
    \ $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    for my $i (@$lst) {\n  \
    \      if (!defined($min) || $i < $min) {\n            $min2 = $min;\n       \
    \     $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n        \
    \    $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    for my $i (@$lst) {\n        if(!defined($min)\
    \ || $i < $min) {\n            $next_min = $min;\n            $min = $i;\n   \
    \     } elsif(!defined($next_min) || $i < $next_min) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    for my $e (@$lst) {\n        if (!defined($min)\
    \ || $e < $min) {\n            $next_min = $min;\n            $min = $e;\n   \
    \     } elsif (!defined($next_min) || $e < $next_min) {\n            $next_min\
    \ = $e;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $min2 = $min;\n            $min = $i;\n        }\n        elsif (!defined($min2)\
    \ || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n\
    \            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (@$lst) {\n\
    \        if ($i < $min) {\n            $next_min = $min;\n            $min = $i;\n\
    \        } elsif ($i < $next_min || !defined $next_min) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif ($lst->[$i] < $next_min || !defined $next_min) {\n           \
    \ $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    for my $x (@$lst) {\n        if (!defined($min)\
    \ || $x < $min) {\n            $next_min = $min;\n            $min = $x;\n   \
    \     } elsif (!defined($next_min) || $x < $next_min) {\n            $next_min\
    \ = $x;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif ($i\
    \ < $next_min || !defined($next_min)) {\n            $next_min = $i;\n       \
    \ }\n    }\n    return $next_min;\n}", "    my @lst = sort {$a <=> $b} @$lst;\n\
    \    return $lst[1];\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (0..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($next_min)\
    \ || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = undef;\n    my $next_min = undef;\n\
    \    for my $i (@$lst) {\n        if (!defined $min || $i < $min) {\n        \
    \    $next_min = $min;\n            $min = $i;\n        } elsif (!defined $next_min\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min;\n    my $min2;\n    for my $i (@$lst) {\n    \
    \    if (!defined $min || $i < $min) {\n            $min2 = $min;\n          \
    \  $min = $i;\n        } elsif (!defined $min2 || $i < $min2) {\n            $min2\
    \ = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    foreach my $e (@$lst) {\n        if (!defined($min) || $e < $min)\
    \ {\n            $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = min($lst);\n    my $min2 = undef;\n    foreach my $x (@$lst) {\n\
    \        if ($x > $min) {\n            if (!defined($min2) || $x < $min2) {\n\
    \                $min2 = $x;\n            }\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = undef;\n    my $min2 = undef;\n    for my $x (@$lst) {\n        if\
    \ (!defined($min) || $x < $min) {\n            $min2 = $min;\n            $min\
    \ = $x;\n        } elsif (!defined($min2) || $x < $min2) {\n            $min2\
    \ = $x;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my\
    \ $next_min = undef;\n    for my $i (@$lst) {\n        if (!defined $min || $i\
    \ < $min) {\n            $next_min = $min;\n            $min = $i;\n        }\
    \ elsif (!defined $next_min || $i < $next_min) {\n            $next_min = $i;\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n    my $next\
    \ = undef;\n    for my $i (@$lst) {\n        if (!defined $min || $i < $min) {\n\
    \            $next = $min;\n            $min = $i;\n        } elsif (!defined\
    \ $next || $i < $next) {\n            $next = $i;\n        }\n    }\n    return\
    \ $next;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min =\
    \ $min;\n            $min = $lst->[$i];\n        } elsif (!defined($next_min)\
    \ || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $next_min || !defined $next_min) {\n            $next_min = $lst->[$i];\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min)\
    \ {\n            $next_min = $min;\n            $min = $lst->[$i];\n        }\n\
    \        elsif (!defined($next_min) || $lst->[$i] < $next_min) {\n           \
    \ $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $min = undef;\n    my $next_min = undef;\n    foreach my $elem (@$lst) {\n \
    \       if (!defined($min) || $elem < $min) {\n            $next_min = $min;\n\
    \            $min = $elem;\n        } elsif (!defined($next_min) || $elem < $next_min)\
    \ {\n            $next_min = $elem;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $next_min = undef;\n    foreach my $i (@$lst)\
    \ {\n        if ($i < $min) {\n            $next_min = $min;\n            $min\
    \ = $i;\n        } elsif ($i < $next_min || !defined($next_min)) {\n         \
    \   $next_min = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min\
    \ = undef;\n    my $min2 = undef;\n    for my $i (@$lst) {\n        if (!defined($min)\
    \ || $i < $min) {\n            $min2 = $min;\n            $min = $i;\n       \
    \ } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n       \
    \ }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_144_simplify
language: pl
prompt: "# Your task is to implement a function that will simplify the expression\n\
  # x * n. The function returns True if x * n evaluates to a whole number and False\n\
  # otherwise. Both x and n, are string representation of a fraction, and have the\
  \ following format,\n# <numerator>/<denominator> where both numerator and denominator\
  \ are positive whole numbers.\n# You can assume that x, and n are valid fractions,\
  \ and do not have zero as denominator.\n# >>> simplify(\"1/5\", \"5/1\")\n# 1\n\
  # >>> simplify(\"1/6\", \"2/1\")\n# \"\"\n# >>> simplify(\"7/10\", \"10/2\")\n#\
  \ \"\"\nsub simplify {\n    my($x, $n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&simplify;\n\
  \        if(eq_deeply($candidate->(\"1/5\", \"5/1\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1/6\"\
  , \"2/1\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"5/1\", \"3/1\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"7/10\"\
  , \"10/2\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"2/10\", \"50/10\"),1)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"7/2\"\
  , \"4/2\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"11/6\", \"6/1\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2/3\"\
  , \"5/2\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"5/2\", \"3/5\"),\"\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2/4\"\
  , \"8/4\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"2/4\", \"4/2\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1/5\", \"5/1\"\
  ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  1/5\", \"1/5\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n}\n\ntesthumaneval();"
completions: ["    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    if ($result % $denominator\
    \ == 0) {\n        return $result / $denominator;\n    }\n    return \"\";\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /^\\d+$/ ? $result : '';\n}", "    my($x_num, $x_den) = split '/', $x;\n\
    \    my($n_num, $n_den) = split '/', $n;\n    my $result = $x_num * $n_num;\n\
    \    my $denominator = $x_den * $n_den;\n    return $result % $denominator ==\
    \ 0 ? 1 : '';\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num,\
    \ $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result : \"\
    \";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) =\
    \ split /\\//, $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n  \
    \  return $result =~ /\\.0$/ ? 1 : '';\n}", "    my($xn, $xn_numerator, $xn_denominator)\
    \ = simplify_fraction($x, $n);\n    return $xn_numerator % $xn_denominator ==\
    \ 0 ? $xn_numerator / $xn_denominator : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split('/', $x);\n    my($n_numerator, $n_denominator) = split('/', $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\A\\d+\\z/ ? $result : '';\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    if ($result % $x_denominator == 0) {\n        return $result / $x_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_num, $x_den) = split('/', $x);\n    my($n_num,\
    \ $n_den) = split('/', $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result : \"\
    \";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) =\
    \ split /\\//, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($num, $den);\n    $num /= $gcd;\n    $den /= $gcd;\n    return\
    \ $num == $den ? 1 : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    if ($result % $x_denominator == 0) {\n \
    \       return $result / $x_denominator;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    if ($result % $denominator\
    \ == 0) {\n        return $result / $denominator;\n    }\n    return \"\";\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den == 0 ?\
    \ $result / $den : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $result_denominator == 0) {\n        return\
    \ $result / $result_denominator;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    if ($result\
    \ % $x_denominator == 0) {\n        return $result / $x_denominator;\n    }\n\
    \    return \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num,\
    \ $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    my $result_den\
    \ = $x_den * $n_den;\n    if ($result % $result_den == 0) {\n        return $result\
    \ / $result_den;\n    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    if ($result % $x_denominator\
    \ == 0) {\n        return $result / $x_denominator;\n    }\n    return \"\";\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    return $result % $den == 0 ? $result / $den : '';\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    return $result % $result_denominator\
    \ == 0 ? 1 : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result =~ /^\\\
    d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result % 1 == 0 ? $result : \"\";\n}", "    my($x_num, $x_den) =\
    \ split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    if ($result % $den ==\
    \ 0) {\n        return $result / $den;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator *\
    \ $n_denominator);\n    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $result_denominator ==\
    \ 0) {\n        return $result / $result_denominator;\n    }\n    return \"\"\
    ;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $denominator = $x_den * $n_den;\n\
    \    if ($result % $denominator == 0) {\n        return $result / $denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n  \
    \  my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num /\
    \ ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0 ? $result / $denominator : \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    return $result\
    \ % $result_denominator == 0 ? $result / $result_denominator : \"\";\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    if ($result % $denominator\
    \ == 0) {\n        return $result / $denominator;\n    }\n    return \"\";\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    return $result % $den == 0 ? $result / $den : \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $result_denominator ==\
    \ 0) {\n        return $result / $result_denominator;\n    }\n    return \"\"\
    ;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $result_den = $x_den * $n_den;\n\
    \    if ($result % $result_den == 0) {\n        return $result / $result_den;\n\
    \    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n  \
    \  my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n\
    \    if ($result % $x_den == 0) {\n        return $result / $x_den;\n    }\n \
    \   return \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / $x_denominator / $n_denominator;\n    return $result =~ /\\\
    d+/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//,\
    \ $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n    return\
    \ $result =~ /\\d+/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0 ? $result / $denominator\
    \ : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n   \
    \ my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator;\n    $result = $result / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $result_denominator == 0) {\n        return\
    \ $result / $result_denominator;\n    }\n    return \"\";\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $result = $x_num * $n_num / ($x_den * $n_den);\n    if ($result == int($result))\
    \ {\n        return 1;\n    } else {\n        return \"\";\n    }\n}", "    my($x_num,\
    \ $x_den) = split '/', $x;\n    my($n_num, $n_den) = split '/', $n;\n    my $result\
    \ = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result\
    \ : '';\n}", "    my($xn, $nn) = split(/\\//, $x);\n    my($xn, $dn) = split(/\\\
    //, $n);\n    my $xndn = $xn * $dn;\n    my $nn = $nn * $dn;\n    if ($xndn %\
    \ $nn == 0) {\n        return 1;\n    } else {\n        return \"\";\n    }\n}",
  "    my($x_numerator, $x_denominator) = split(\"/\", $x);\n    my($n_numerator,\
    \ $n_denominator) = split(\"/\", $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator,\
    \ $n_denominator) = split('/', $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\d+/ ? $result\
    \ : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    if ($result % $x_denominator == 0) {\n        return $result / $x_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    my $gcd = gcd($result, $result_denominator);\n    $result\
    \ /= $gcd;\n    $result_denominator /= $gcd;\n    if ($result_denominator == 1)\
    \ {\n        return $result;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\\
    //, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my\
    \ $gcd = gcd($num, $den);\n    return $num / $gcd;\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $num =\
    \ $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n\
    \    $num /= $gcd;\n    $den /= $gcd;\n    return $num == $den ? 1 : \"\";\n}",
  "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den)\
    \ = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    $result % $den == 0 ? 1 : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den)\
    \ = split /\\//, $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /\\.0$/ ? 1 : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\d+/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /\\d+/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator;\n    $result %= $x_denominator\
    \ * $n_denominator;\n    return $result == 0 ? 1 : '';\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $num\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    $num /= $gcd;\n    $den /= $gcd;\n    return $num == $den ? 1 :\
    \ '';\n}", "    my($x_num, $x_den) = split '/', $x;\n    my($n_num, $n_den) =\
    \ split '/', $n;\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    return $result % $den == 0;\n}", "    my($x_num, $x_denom) = split(/\\//,\
    \ $x);\n    my($n_num, $n_denom) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num;\n    if ($result % $x_denom == 0) {\n        return $result / $x_denom;\n\
    \    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n  \
    \  my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num /\
    \ ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $res = $x_num * $n_num;\n    return $res % $x_den == 0 ? $res\
    \ / $x_den : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result =~ /\\\
    d+/ ? $result : '';\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num,\
    \ $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    my $result_den\
    \ = $x_den * $n_den;\n    if ($result % $result_den == 0) {\n        return 1;\n\
    \    }\n    else {\n        return \"\";\n    }\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /\\d+/ ? $result : '';\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num;\n    my $den = $x_den * $n_den;\n    $result % $den == 0 ? 1 : '';\n\
    }", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0 ? $result / $denominator : \"\";\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($result,\
    \ $den);\n    return $result / $gcd;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den)\
    \ = split('/', $x);\n    my($n_num, $n_den) = split('/', $n);\n    my $result\
    \ = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result\
    \ : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n   \
    \ my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result =~ /^\\\
    d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den) = split '/', $x;\n    my($n_num,\
    \ $n_den) = split '/', $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /\\d+/ ? $result : \"\";\n}", "    my($x_num, $x_den) =\
    \ split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result\
    \ = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /\\.0$/ ? 1 :\
    \ '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    my $gcd = gcd($result,\
    \ $denominator);\n    return $result / $gcd . \"/\" . $denominator / $gcd;\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator) = split\
    \ /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my\
    \ $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $result_denominator == 0) {\n        return\
    \ $result / $result_denominator;\n    }\n    return \"\";\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $result = $x_num * $n_num;\n    my $denominator = $x_den * $n_den;\n   \
    \ return $result % $denominator == 0 ? 1 : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    return $result % $x_denominator\
    \ == 0 ? $result / $x_denominator : \"\";\n}", "    my($x_num, $x_den) = split('/',\
    \ $x);\n    my($n_num, $n_den) = split('/', $n);\n    my $result = $x_num * $n_num\
    \ / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result : '';\n}", " \
    \   my($numerator, $denominator) = split(/\\//, $x);\n    my($numerator2, $denominator2)\
    \ = split(/\\//, $n);\n    my $result = $numerator * $numerator2;\n    my $result2\
    \ = $denominator * $denominator2;\n    my $result3 = $result / $result2;\n   \
    \ if ($result3 =~ /^\\d+$/) {\n        return 1;\n    } else {\n        return\
    \ '';\n    }\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den)\
    \ = split /\\//, $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result == int($result) ? $result : '';\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    if ($result % $den ==\
    \ 0) {\n        return $result / $den;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $result_denominator ==\
    \ 0) {\n        return $result / $result_denominator;\n    }\n    return \"\"\
    ;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    return $result % $den == 0 ? $result / $den : '';\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    if ($result % $den ==\
    \ 0) {\n        return $result / $den;\n    }\n    return \"\";\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    $num /= $gcd;\n    $den /= $gcd;\n    return $num == $den ? 1 :\
    \ \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den)\
    \ = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    return $result % $den == 0 ? 1 : \"\";\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $res =\
    \ $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $res % $den ==\
    \ 0 ? $res / $den : '';\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n   \
    \ my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($result, $den);\n    $result\
    \ /= $gcd;\n    $den /= $gcd;\n    return $result == $den ? 1 : \"\";\n}", " \
    \   my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    if ($result % $den == 0) {\n        return $result / $den;\n    }\n    return\
    \ \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    if ($result % $denominator\
    \ == 0) {\n        return $result / $denominator;\n    }\n    return \"\";\n}",
  "    my($x_numerator, $x_denominator) = split '/', $x;\n    my($n_numerator, $n_denominator)\
    \ = split '/', $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result : '';\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_num, $x_den) = split('/', $x);\n    my($n_num, $n_den)\
    \ = split('/', $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n \
    \   return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $res =\
    \ $x_num * $n_num / ($x_den * $n_den);\n    return $res =~ /^\\d+$/ ? $res : '';\n\
    }", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    if ($result % $x_denominator == 0) {\n        return $result / $x_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator) = split /\\\
    //, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result\
    \ = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n    return\
    \ $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result : \"\
    \";\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0 ? 1 : '';\n}", "    my($num_x, $den_x) = split /\\//, $x;\n\
    \    my($num_n, $den_n) = split /\\//, $n;\n    my $num = $num_x * $num_n;\n \
    \   my $den = $den_x * $den_n;\n    my $gcd = gcd($num, $den);\n    $num /= $gcd;\n\
    \    $den /= $gcd;\n    return $num == $den ? 1 : '';\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result =~ /^\\d+$/ ? $result : \"\";\n}", " \
    \   my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator, $n_denominator)\
    \ = split('/', $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result % 1 ? '' : $result;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $result_denominator ==\
    \ 0) {\n        return 1;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split('/', $x);\n    my($n_numerator, $n_denominator) = split('/',\
    \ $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($xnumer, $xdenom)\
    \ = split(/\\//, $x);\n    my($nnumer, $ndenom) = split(/\\//, $n);\n    my $xn\
    \ = $xnumer * $ndenom;\n    my $nn = $nnumer * $xdenom;\n    return $xn == $nn;\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    if ($result % $den == 0) {\n        return $result / $den;\n    }\n    return\
    \ \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den)\
    \ = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    my $result_den =\
    \ $x_den * $n_den;\n    if ($result % $result_den == 0) {\n        return $result\
    \ / $result_den;\n    }\n    return \"\";\n}", "    my($x_num, $x_den) = split\
    \ /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num\
    \ * $n_num / ($x_den * $n_den);\n    if ($result =~ /\\./) {\n        return \"\
    \";\n    } else {\n        return $result;\n    }\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den\
    \ == 0 ? $result / $den : \"\";\n}", "    my($x_numerator, $x_denominator) = split\
    \ /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my\
    \ $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\d+/ ? $result : '';\n}", "    my($x_numerator, $x_denominator)\
    \ = split('/', $x);\n    my($n_numerator, $n_denominator) = split('/', $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $result_denominator == 0) {\n        return\
    \ $result / $result_denominator;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $result_denominator ==\
    \ 0) {\n        return $result / $result_denominator;\n    }\n    return \"\"\
    ;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    if ($result\
    \ % $result_denominator == 0) {\n        return $result / $result_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    return $result % $denominator == 0 ? 1 : '';\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den\
    \ == 0 ? $result / $den : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return $result\
    \ / $denominator;\n    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num;\n    return $result % $x_den == 0 ? $result / $x_den : \"\";\n}",
  "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    my $result_numerator\
    \ = $result / $result_denominator;\n    return $result_numerator;\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\\
    d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num,\
    \ $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num;\n    my $den =\
    \ $x_den * $n_den;\n    return $result % $den == 0 ? $result / $den : \"\";\n}",
  "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator)\
    \ = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    my $gcd = gcd($result, $result_denominator);\n\
    \    $result /= $gcd;\n    $result_denominator /= $gcd;\n    return $result_denominator\
    \ == 1 ? $result : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    return $result % $denominator == 0 ? $result / $denominator : '';\n}", " \
    \   my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    if ($result % $x_den == 0) {\n\
    \        return $result / $x_den;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    return $x_numerator * $n_numerator % $x_denominator ==\
    \ 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) =\
    \ split /\\//, $n;\n    my $res = $x_num * $n_num / ($x_den * $n_den);\n    return\
    \ $res =~ /\\d+/ ? $res : \"\";\n}", "    my($x_numerator, $x_denominator) = split\
    \ /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my\
    \ $result = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $result_denominator == 0) {\n        return\
    \ $result / $result_denominator;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /\\d+/ ? $result : \"\";\n}", "  \
    \  my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    return $result % $den == 0 ? $result / $den : \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $denominator == 0) {\n\
    \        return $result / $denominator;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $result_denominator\
    \ = $x_denominator * $n_denominator;\n    if ($result % $result_denominator ==\
    \ 0) {\n        return 1;\n    }\n    return \"\";\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($result,\
    \ $den);\n    $result /= $gcd;\n    $den /= $gcd;\n    return $result == $den\
    \ ? 1 : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n \
    \   my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator;\n    my $result_denominator = $x_denominator * $n_denominator;\n\
    \    if ($result % $result_denominator == 0) {\n        return $result / $result_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_num, $x_den) = split '/', $x;\n    my($n_num,\
    \ $n_den) = split '/', $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /^\\d+$/ ? $result : '';\n}", "    my($x_num, $x_den) =\
    \ split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    $result = $result / ($x_den * $n_den);\n    return $result;\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    if ($result\
    \ == int($result)) {\n        return 1;\n    } else {\n        return \"\";\n\
    \    }\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / $x_denominator / $n_denominator;\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n   \
    \ my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator;\n    my $result_denominator = $x_denominator * $n_denominator;\n\
    \    if ($result % $result_denominator == 0) {\n        return $result / $result_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator) = split /\\\
    //, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /\\d+/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    if ($result % $denominator == 0) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    return $result % $denominator == 0 ? $result / $denominator : \"\";\n}",
  "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    if ($result % $denominator\
    \ == 0) {\n        return $result / $denominator;\n    }\n    return \"\";\n}",
  "    my($x_num, $x_denom) = split(/\\//, $x);\n    my($n_num, $n_denom) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    if ($result % $x_denom == 0)\
    \ {\n        return $result / $x_denom;\n    }\n    return \"\";\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    return $result % $denominator == 0 ?\
    \ 1 : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n   \
    \ my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator;\n    my $result_denominator = $x_denominator * $n_denominator;\n\
    \    if ($result % $result_denominator == 0) {\n        return 1;\n    }\n   \
    \ return \"\";\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n\
    \    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator\
    \ * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n  \
    \  return $result % $denominator == 0 ? 1 : \"\";\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result\
    \ = $x_num * $n_num;\n    my $result_den = $x_den * $n_den;\n    my $gcd = gcd($result,\
    \ $result_den);\n    $result /= $gcd;\n    $result_den /= $gcd;\n    return $result\
    \ == $result_den ? 1 : \"\";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num /\
    \ ($x_den * $n_den);\n    return $result =~ /\\d+/ ? $result : \"\";\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    if ($result\
    \ % $result_denominator == 0) {\n        return $result / $result_denominator;\n\
    \    }\n    return \"\";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n   \
    \ my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n    my\
    \ $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    return $num / $gcd;\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    if ($result % $den == 0) {\n        return $result / $den;\n    }\n    return\
    \ \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den)\
    \ = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    if ($result % $x_den\
    \ == 0) {\n        return $result / $x_den;\n    }\n    return \"\";\n}", "  \
    \  my($xn, $nn) = ($x, $n);\n    $xn =~ s/^(\\d+)\\/(\\d+)$/$1 /;\n    $nn =~\
    \ s/^(\\d+)\\/(\\d+)$/$1 /;\n    my($xn1, $xn2) = split / /, $xn;\n    my($nn1,\
    \ $nn2) = split / /, $nn;\n    my $result = $xn1 * $nn2;\n    my $result2 = $nn1\
    \ * $xn2;\n    return $result % $xn2 == 0 && $result2 % $nn2 == 0 ? 1 : '';\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /\\d+/ ? $result : '';\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n\
    \    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    if ($result % $den == 0) {\n        return\
    \ $result / $den;\n    }\n    return \"\";\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den == 0 ?\
    \ $result / $den : \"\";\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0 ? $result / $denominator\
    \ : \"\";\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/ ? $result\
    \ : \"\";\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den)\
    \ = split(/\\//, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /^\\d+$/ ? $result : \"\";\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result\
    \ = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result\
    \ : '';\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    if ($result % $denominator\
    \ == 0) {\n        return $result / $denominator;\n    }\n    return \"\";\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $result_den = $x_den * $n_den;\n\
    \    return $result % $result_den == 0 ? 1 : \"\";\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result\
    \ = $x_num * $n_num / ($x_den * $n_den);\n    return $result =~ /^\\d+$/ ? $result\
    \ : '';\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    if ($result\
    \ % $result_denominator == 0) {\n        return 1;\n    }\n    return \"\";\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /\\d+/ ? $result : \"\";\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num /\
    \ ($x_den * $n_den);\n    return $result =~ /\\d+/ ? $result : '';\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_84_solve
language: pl
prompt: "# Given a positive integer N, return the total sum of its digits in binary.\n\
  # Example\n# >>> solve(1000)\n# \"1\"\n# >>> solve(150)\n# \"110\"\n# >>> solve(147)\n\
  # \"1100\"\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
  # Output:\n# a string of binary number\nsub solve {\n    my($N) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&solve;\n\
  \        if(eq_deeply($candidate->(1000),\"1\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(150),\"110\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(147),\"\
  1100\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(333),\"\
  1001\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(963),\"\
  10010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return unpack(\"B*\", pack(\"N\", $N));\n}", "    my $result =\
    \ \"\";\n    while($N > 0) {\n        $result = ($N % 2) . $result;\n        $N\
    \ = int($N / 2);\n    }\n    return $result;\n}", "    my $bin = sprintf(\"%b\"\
    , $N);\n    my $sum = 0;\n    for my $c (split //, $bin) {\n        $sum += $c;\n\
    \    }\n    return $sum;\n}", "    my $bin = sprintf(\"%b\", $N);\n    my $sum\
    \ = 0;\n    for (split //, $bin) {\n        $sum += $_;\n    }\n    return $sum;\n\
    }", "    my $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $digit (split\
    \ //, $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n}", "    my $bin\
    \ = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split(//, $bin);\n\
    \    return $sum;\n}", "    my $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n\
    \    for my $digit (split(//, $bin)) {\n        $sum += $digit;\n    }\n    return\
    \ $sum;\n}", "    my $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my\
    \ $digit (split //, $bin) {\n        $sum += $digit;\n    }\n    return $sum;\n\
    }", "    my $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for (split //,\
    \ $bin) {\n        $sum += $_;\n    }\n    return $sum;\n}", "    my $bin = sprintf(\"\
    %b\", $N);\n    my $sum = 0;\n    while ($bin =~ /(\\d)/g) {\n        $sum +=\
    \ $1;\n    }\n    return $sum;\n}", "    my $binary = sprintf(\"%b\", $N);\n \
    \   my $sum = 0;\n    $sum += $_ for split(//, $binary);\n    return $sum;\n}",
  "    my $bin = sprintf(\"%b\", $N);\n    my $sum = 0;\n    $sum += $_ for split\
    \ //, $bin;\n    return $sum;\n}", "    my $binary = sprintf(\"%b\", $N);\n  \
    \  my $sum = 0;\n    for my $digit (split //, $binary) {\n        $sum += $digit;\n\
    \    }\n    return $sum;\n}", "    my $bin = sprintf(\"%b\", $N);\n    my $sum\
    \ = 0;\n    $sum += $_ for split //, $bin;\n    return $sum;\n}", "    my $bin\
    \ = sprintf(\"%b\", $N);\n    my $sum = 0;\n    for my $i (split //, $bin) {\n\
    \        $sum += $i;\n    }\n    return $sum;\n}", "    my $bin = sprintf(\"%b\"\
    , $N);\n    my $sum = 0;\n    for my $digit (split //, $bin) {\n        $sum +=\
    \ $digit;\n    }\n    return $sum;\n}", "    my $binary = sprintf(\"%b\", $N);\n\
    \    my $sum = 0;\n    foreach my $digit (split(//, $binary)) {\n        $sum\
    \ += $digit;\n    }\n    return $sum;\n}", "    my $binary = sprintf(\"%b\", $N);\n\
    \    my $sum = 0;\n    foreach my $digit (split //, $binary) {\n        $sum +=\
    \ $digit;\n    }\n    return $sum;\n}", "    my $bin = sprintf(\"%b\", $N);\n\
    \    my $sum = 0;\n    for my $char (split //, $bin) {\n        $sum += $char;\n\
    \    }\n    return $sum;\n}", "    my $b = sprintf(\"%b\", $N);\n    my $sum =\
    \ 0;\n    $sum += $_ for split //, $b;\n    return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

language: pl
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [\n        grep\
    \ {\n            is_integer($_)\n        } @$values\n    ];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpube9bp_x.pl line
    10.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = grep {\
    \ is_integer($_) } @$values;\n    return \\@result;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpcl1bfjug.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { Scalar::Util::looks_like_number($_) && int($_) == $_ } @$values;\n    return\
    \ \\@integers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { is_integer($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpic_nvzhk.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = ();\n\
    \    for my $value (@$values) {\n        if (is_integer($value)) {\n         \
    \   push @result, $value;\n        }\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpbwdxyhj6.pl line
    10.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = ();\n\
    \    foreach my $value (@$values) {\n        if (is_integer($value)) {\n     \
    \       push @result, $value;\n        }\n    }\n    return \\@result;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([4, {}, [], 23.2,\
    \ 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"a\", \"b\"]),[3,\
    \ 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpulmodxpj.pl line
    10.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return grep { is_integer($_)\
    \ } @$values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = grep {\
    \ Scalar::Util::looks_like_number($_) && int($_) == $_ } @$values;\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = grep {\
    \ is_integer($_) } @$values;\n    return \\@result;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpcl1bfjug.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_int($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_int called at /tmp/tmprrqitxge.pl line 8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return grep { is_integer($_)\
    \ } @$values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = grep {\n\
    \        my $value = $_;\n        not ref $value and $value =~ /^-?\\d+$/;\n \
    \   } @$values;\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = ();\n\
    \    foreach my $value (@$values) {\n        if (is_integer($value)) {\n     \
    \       push @result, $value;\n        }\n    }\n    return \\@result;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([4, {}, [], 23.2,\
    \ 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"a\", \"b\"]),[3,\
    \ 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpulmodxpj.pl line
    10.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return grep { is_integer($_)\
    \ } @$values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep {is_integer($_)}\
    \ @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpaq7qokh4.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @result = ();\n\
    \    foreach my $value (@$values) {\n        if (is_integer($value)) {\n     \
    \       push @result, $value;\n        }\n    }\n    return \\@result;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([4, {}, [], 23.2,\
    \ 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"a\", \"b\"]),[3,\
    \ 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpulmodxpj.pl line
    10.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return grep { is_integer($_)\
    \ } @$values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { is_integer($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpic_nvzhk.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { Scalar::Util::looks_like_number($_)\
    \ && int($_) == $_ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { is_integer($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpic_nvzhk.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { ref\
    \ eq '' && $_ =~ /^\\d+$/ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [grep { is_integer($_)\
    \ } @$values];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpic_nvzhk.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 1
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return grep { is_integer($_)\
    \ } @$values;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 0
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ {\n        my $value = $_;\n        Scalar::Util::looks_like_number($value)\
    \ && int($value) == $value;\n    } @$values;\n    return \\@integers;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([4, {}, [], 23.2,\
    \ 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"a\", \"b\"]),[3,\
    \ 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    return [ grep { is_integer($_)\
    \ } @$values ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmpf3bis9a5.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253
- exit_code: 255
  program: "# Filter given list of any python values only for integers\n# >>> filter_integers([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers([1, 2, 3, \"abc\", {}, []])\n# [1,\
    \ 2, 3]\nsub filter_integers {\n    my($values) = @_;\n    my @integers = grep\
    \ { is_integer($_) } @$values;\n    return \\@integers;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&filter_integers;\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
    \ {}, [], 23.2, 9, \"adasd\"]),[4, 9])) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->([3, \"c\", 3, 3, \"\
    a\", \"b\"]),[3, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::is_integer called at /tmp/tmppz8176qb.pl line
    8.

    '
  stdout: ok!
  timestamp: 1660013253

name: HumanEval_115_max_fill
language: pl
prompt: "# You are given a rectangular grid of wells. Each row represents a single\
  \ well,\n# and each 1 in a row represents a single unit of water.\n# Each well has\
  \ a corresponding bucket that can be used to extract water from it, \n# and all\
  \ buckets have the same capacity.\n# Your task is to use the buckets to empty the\
  \ wells.\n# Output the number of times you need to lower the buckets.\n# Example\
  \ 1:\n# >>> max_fill([[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1)\n# 6\n# Example\
  \ 2:\n# >>> max_fill([[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 1, 1, 1]], 2)\n\
  # 5\n# Example 3:\n# >>> max_fill([[0, 0, 0], [0, 0, 0]], 5)\n# 0\n# Constraints:\n\
  # * all wells have the same length\n# * 1 <= grid.length <= 10^2\n# * 1 <= grid[:,1].length\
  \ <= 10^2\n# * grid[i][j] -> 0 | 1\n# * 1 <= capacity <= 10\nsub max_fill {\n  \
  \  my($grid, $capacity) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_fill;\n\
  \        if(eq_deeply($candidate->([[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1),6))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[0,\
  \ 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 1, 1, 1]], 2),5)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[0,\
  \ 0, 0], [0, 0, 0]], 5),0)) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->([[1, 1, 1, 1], [1, 1, 1, 1]], 2),4))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1,\
  \ 1, 1, 1], [1, 1, 1, 1]], 9),2)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n\
    \        for my $col (@$row) {\n            $sum += $col;\n        }\n       \
    \ $count += int($sum / $capacity);\n        $count += $sum % $capacity;\n    }\n\
    \    return $count;\n}", "    my $total_fill = 0;\n    my $row_count = scalar\
    \ @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $fill_count = 0;\n\
    \    for my $row (0..$row_count-1) {\n        my $fill_count = 0;\n        for\
    \ my $col (0..$col_count-1) {\n            if ($grid->[$row][$col] == 1) {\n \
    \               $fill_count++;\n            }\n        }\n        if ($fill_count\
    \ > 0) {\n            $total_fill += int($fill_count / $capacity) + 1;\n     \
    \   }\n    }\n    return $total_fill;\n}", "    my $count = 0;\n    for my $row\
    \ (@$grid) {\n        my $sum = 0;\n        for my $well (@$row) {\n         \
    \   $sum += $well;\n        }\n        $count += $sum / $capacity;\n        $count\
    \ += $sum % $capacity;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my $row_count = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n\
    \    my $row_sum = 0;\n    my $col_sum = 0;\n    for my $row (@$grid) {\n    \
    \    for my $col (@$row) {\n            $row_sum += $col;\n        }\n       \
    \ $count += int($row_sum / $capacity);\n        $row_sum = $row_sum % $capacity;\n\
    \    }\n    for my $col (0..$col_count-1) {\n        for my $row (0..$row_count-1)\
    \ {\n            $col_sum += $grid->[$row][$col];\n        }\n        $count +=\
    \ int($col_sum / $capacity);\n        $col_sum = $col_sum % $capacity;\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my $max = 0;\n    my $max_index\
    \ = 0;\n    for my $i (0 .. $#{$grid}) {\n        for my $j (0 .. $#{$grid->[$i]})\
    \ {\n            if ($grid->[$i][$j] == 1) {\n                $count++;\n    \
    \        }\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $max_index = $i;\n        }\n        $count = 0;\n    }\n    my $max_fill\
    \ = $max * $capacity;\n    my $total = 0;\n    for my $i (0 .. $#{$grid}) {\n\
    \        for my $j (0 .. $#{$grid->[$i]}) {\n            if ($grid->[$i][$j] ==\
    \ 1) {\n                $total++;\n            }\n        }\n    }\n    return\
    \ $max_fill - $total;\n}", "    my $count = 0;\n    my $rows = scalar @$grid;\n\
    \    my $cols = scalar @{$grid->[0]};\n    my $max_height = 0;\n    for my $i\
    \ (0..$rows-1) {\n        for my $j (0..$cols-1) {\n            $max_height =\
    \ max($max_height, $grid->[$i][$j]);\n        }\n    }\n    for my $height (1..$max_height)\
    \ {\n        for my $i (0..$rows-1) {\n            for my $j (0..$cols-1) {\n\
    \                if ($grid->[$i][$j] >= $height) {\n                    $count++;\n\
    \                    $grid->[$i][$j] -= $capacity;\n                }\n      \
    \      }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my\
    \ $max_height = 0;\n    foreach my $row (@$grid) {\n        my $height = 0;\n\
    \        foreach my $well (@$row) {\n            $height++ if $well;\n       \
    \ }\n        $max_height = $height if $height > $max_height;\n    }\n    for (my\
    \ $i = 0; $i < $max_height; $i++) {\n        foreach my $row (@$grid) {\n    \
    \        foreach my $well (@$row) {\n                if ($well) {\n          \
    \          $well = 0;\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n  \
    \  for my $row (@$grid) {\n        my $sum = 0;\n        for my $well (@$row)\
    \ {\n            $sum += $well;\n        }\n        $count += int($sum / $capacity);\n\
    \        $count += $sum % $capacity;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my $row_count = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n\
    \    my $max_water = 0;\n    for my $row (0..$row_count-1) {\n        for my $col\
    \ (0..$col_count-1) {\n            if ($grid->[$row][$col] == 1) {\n         \
    \       $max_water = $row if $row > $max_water;\n            }\n        }\n  \
    \  }\n    for my $row (0..$max_water) {\n        for my $col (0..$col_count-1)\
    \ {\n            if ($grid->[$row][$col] == 1) {\n                $count += $capacity;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for my $row (@$grid) {\n        my $sum = 0;\n        for my $col (@$row)\
    \ {\n            $sum += $col;\n        }\n        $count += int($sum / $capacity);\n\
    \        $count += $sum % $capacity;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my $max_height = 0;\n    my $max_height_index = 0;\n    for my $i\
    \ (0 .. $#{$grid}) {\n        my $height = 0;\n        for my $j (0 .. $#{$grid->[$i]})\
    \ {\n            $height += $grid->[$i][$j];\n        }\n        if ($height >\
    \ $max_height) {\n            $max_height = $height;\n            $max_height_index\
    \ = $i;\n        }\n    }\n    for my $i (0 .. $#{$grid}) {\n        my $height\
    \ = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n            $height += $grid->[$i][$j];\n\
    \        }\n        if ($i != $max_height_index) {\n            $count += $max_height\
    \ - $height;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $max = 0;\n    foreach my $row (@$grid) {\n        my $sum = 0;\n    \
    \    foreach my $well (@$row) {\n            $sum += $well;\n        }\n     \
    \   $max = $sum if $sum > $max;\n    }\n    $count += $max;\n    $count += $capacity\
    \ - 1;\n    return $count;\n}", "    my $count = 0;\n    my $row_count = scalar\
    \ @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $row_index = 0;\n\
    \    my $col_index = 0;\n    my $row_max = 0;\n    my $col_max = 0;\n    my $row_max_index\
    \ = 0;\n    my $col_max_index = 0;\n    my $row_max_count = 0;\n    my $col_max_count\
    \ = 0;\n    my $row_max_index_count = 0;\n    my $col_max_index_count = 0;\n \
    \   my $row_max_index_count_max = 0;\n    my $col_max_index_count_max = 0;\n \
    \   my $row_max_index_count_max_index = 0;\n    my $col_max_index_count_max_index\
    \ = 0;\n    my $row_max_index_count_max_index_count = 0;\n    my $col_max_index_count_max_index_count\
    \ = 0;\n    my $row_max_index_count_max_index_count_max = 0;\n    my $col_max_index_count_max_index_count_max\
    \ = 0;\n    my $row_max_index_count_max_index_count_max_index = 0;\n    my $col_max_index_count_max_index_count_max_index\
    \ = 0;\n    my $row_max_index_count_max_index_count_max_index_count = 0;\n   \
    \ my $col_max_index_count_max_index_count_max_index_count = 0;\n    my $row_max_index_count_max_index_count_max_index_count_max\
    \ = 0;\n    my $col_max_index_count_max_index_count_max_index_count_max = 0;\n\
    \    my $row_max_index_count_max_index_count_max_index_count_max_index = 0;\n\
    \    my $col_max_index_count_max_index_count", "    my $count = 0;\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    for my $row\
    \ (0..$row_count-1) {\n        for my $col (0..$col_count-1) {\n            if\
    \ ($grid->[$row][$col] == 1) {\n                $count += $capacity;\n       \
    \         $grid->[$row][$col] = 0;\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for my $row (@$grid) {\n        my $fill\
    \ = 0;\n        for my $well (@$row) {\n            if ($well) {\n           \
    \     $fill++;\n            } else {\n                $count += $fill / $capacity;\n\
    \                $fill = 0;\n            }\n        }\n        $count += $fill\
    \ / $capacity;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $max\
    \ = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n        for my $col\
    \ (@$row) {\n            $sum += $col;\n        }\n        $max = $sum if $sum\
    \ > $max;\n    }\n    $count += $max;\n    $count += $capacity - 1;\n    return\
    \ $count;\n}", "    my $count = 0;\n    foreach my $row (@$grid) {\n        my\
    \ $fill = 0;\n        foreach my $well (@$row) {\n            $fill += $well;\n\
    \            if ($fill == $capacity) {\n                $count++;\n          \
    \      $fill = 0;\n            }\n        }\n        $count += int($fill / $capacity);\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    for my $row (@$grid)\
    \ {\n        my $sum = 0;\n        for my $cell (@$row) {\n            $sum +=\
    \ $cell;\n        }\n        $count += int($sum / $capacity);\n        $count\
    \ += $sum % $capacity;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my $row_count = @$grid;\n    my $col_count = @{$grid->[0]};\n    my $max_fill\
    \ = $capacity * $col_count;\n    for my $row (@$grid) {\n        my $fill = 0;\n\
    \        for my $col (@$row) {\n            $fill += $col;\n        }\n      \
    \  if ($fill > $max_fill) {\n            $count += $fill - $max_fill;\n      \
    \  }\n    }\n    return $count;\n}", "    my $count = 0;\n    my $max_height =\
    \ 0;\n    for my $row (@$grid) {\n        my $height = 0;\n        for my $col\
    \ (@$row) {\n            $height += $col;\n        }\n        $max_height = $height\
    \ if $height > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $col (@$row) {\n            $height += $col;\n        }\n\
    \        $count += $max_height - $height;\n    }\n    return $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_119_match_parens
language: pl
prompt: "# You are given a list of two strings, both strings consist of open\n# parentheses\
  \ '(' or close parentheses ')' only.\n# Your job is to check if it is possible to\
  \ concatenate the two strings in\n# some order, that the resulting string will be\
  \ good.\n# A string S is considered to be good if and only if all parentheses in\
  \ S\n# are balanced. For example: the string '(())()' is good, while the string\n\
  # '())' is not.\n# Return 'Yes' if there's a way to make a good string, and return\
  \ 'No' otherwise.\n# Examples:\n# >>> match_parens([\"()(\", \")\"])\n# \"Yes\"\n\
  # >>> match_parens([\")\", \")\"])\n# \"No\"\nsub match_parens {\n    my($lst) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&match_parens;\n\
  \        if(eq_deeply($candidate->([\"()(\", \")\"]),\"Yes\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  )\", \")\"]),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([\"(()(())\", \"())())\"]),\"No\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  )())\", \"(()()(\"]),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([\"(())))\", \"(()())((\"]),\"Yes\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  ()\", \"())\"]),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->([\"(()(\", \"()))()\"]),\"Yes\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  ((((\", \"((())\"]),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([\")(()\", \"(()(\"]),\"No\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  )(\", \")(\"]),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([\"(\", \")\"]),\"Yes\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  )\", \"(\"]),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n}\n\ntesthumaneval();"
completions: ["    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str =\
    \ $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str) {\n     \
    \   if ($c eq '(') {\n            $count++;\n        }\n        elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "    my($s1, $s2)\
    \ = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n    \
    \    $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if\
    \ $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n\
    \        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return\
    \ \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($a, $b) = @$lst;\n \
    \   my($i, $j, $k);\n    my($cnt) = 0;\n    for ($i = 0; $i < length($a); $i++)\
    \ {\n        $cnt += ($a->[$i] eq '(') ? 1 : -1;\n        if ($cnt < 0) {\n  \
    \          return \"No\";\n        }\n    }\n    for ($j = 0; $j < length($b);\
    \ $j++) {\n        $cnt += ($b->[$j] eq '(') ? 1 : -1;\n        if ($cnt < 0)\
    \ {\n            return \"No\";\n        }\n    }\n    return ($cnt == 0) ? \"\
    Yes\" : \"No\";\n}", "    my $str = join(\"\", @$lst);\n    my $cnt = 0;\n   \
    \ for my $c (split(//, $str)) {\n        if ($c eq \"(\") {\n            $cnt++;\n\
    \        } elsif ($c eq \")\") {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return $cnt == 0 ?\
    \ \"Yes\" : \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n\
    \    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if\
    \ $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for my $c (split //,\
    \ $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n        return\
    \ \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return \"\
    No\";\n}", "    my($s1, $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($c) = 0;\n\
    \    for my $ch (split //, $s) {\n        if ($ch eq '(') {\n            $c++;\n\
    \        } elsif ($ch eq ')') {\n            $c--;\n        }\n        if ($c\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return $c == 0 ? \"\
    Yes\" : \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n \
    \   my $str = $str1 . $str2;\n    my $count = 0;\n    for my $ch (split //, $str)\
    \ {\n        if ($ch eq '(') {\n            $count++;\n        } elsif ($ch eq\
    \ ')') {\n            $count--;\n        }\n        if ($count < 0) {\n      \
    \      return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return\
    \ \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $parens = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $parens++;\n\
    \        } elsif ($c eq ')') {\n            $parens--;\n        }\n        return\
    \ \"No\" if $parens < 0;\n    }\n    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $cnt = 0;\n \
    \   for my $c (split //, $str) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return \"Yes\";\n}",
  "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n\
    \    my $cnt = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n\
    \            $cnt++;\n        } elsif ($c eq ')') {\n            $cnt--;\n   \
    \     }\n        if ($cnt < 0) {\n            return \"No\";\n        }\n    }\n\
    \    if ($cnt == 0) {\n        return \"Yes\";\n    } else {\n        return \"\
    No\";\n    }\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my\
    \ $str = $str1 . $str2;\n    my $cnt = 0;\n    for my $c (split //, $str) {\n\
    \        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')') {\n\
    \            $cnt--;\n        }\n        if ($cnt < 0) {\n            return \"\
    No\";\n        }\n    }\n    return \"Yes\";\n}", "    my($left, $right) = @$lst;\n\
    \    my($left_count, $right_count) = (0, 0);\n    for my $c (split //, $left)\
    \ {\n        $left_count++ if $c eq '(';\n        $left_count-- if $c eq ')';\n\
    \    }\n    for my $c (split //, $right) {\n        $right_count++ if $c eq '(';\n\
    \        $right_count-- if $c eq ')';\n    }\n    return 'No' if $left_count <\
    \ 0 || $right_count < 0;\n    return 'Yes' if $left_count == 0 && $right_count\
    \ == 0;\n    return 'Yes' if $left_count == $right_count;\n    return 'No';\n}",
  "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n\
    \    my $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(')\
    \ {\n            $count++;\n        }\n        elsif ($c eq ')') {\n         \
    \   $count--;\n        }\n        if ($count < 0) {\n            return \"No\"\
    ;\n        }\n    }\n    if ($count == 0) {\n        return \"Yes\";\n    }\n\
    \    else {\n        return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n \
    \   my($c1, $c2) = (0, 0);\n    for my $c (split(//, $s1)) {\n        $c1++ if\
    \ $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for my $c (split(//, $s2)) {\n        $c2++ if $c eq '(';\n      \
    \  $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"\
    Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n   \
    \ my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $n = length($str);\n\
    \    my $cnt = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        my $c = substr($str,\
    \ $i, 1);\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c\
    \ eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n       \
    \     return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($count == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //,\
    \ $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return\
    \ \"No\" if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if\
    \ $c eq '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n\
    \    }\n    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for my $c (split\
    \ //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c\
    \ eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n       \
    \     return \"No\";\n        }\n    }\n    return \"Yes\";\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my\
    \ $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n  \
    \          $count++;\n        } elsif ($c eq ')') {\n            $count--;\n \
    \       }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    } else {\n      \
    \  return \"No\";\n    }\n}", "    my($left, $right) = @$lst;\n    my($left_parens,\
    \ $right_parens) = (0, 0);\n    my($i);\n    for ($i = 0; $i < length($left);\
    \ $i++) {\n        $left_parens++ if substr($left, $i, 1) eq '(';\n        $left_parens--\
    \ if substr($left, $i, 1) eq ')';\n        return \"No\" if $left_parens < 0;\n\
    \    }\n    for ($i = 0; $i < length($right); $i++) {\n        $right_parens++\
    \ if substr($right, $i, 1) eq '(';\n        $right_parens-- if substr($right,\
    \ $i, 1) eq ')';\n        return \"No\" if $right_parens < 0;\n    }\n    return\
    \ \"Yes\" if $left_parens == $right_parens;\n    return \"No\";\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my\
    \ $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n  \
    \          $count++;\n        }\n        elsif ($c eq ')') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    }\n    else {\n \
    \       return \"No\";\n    }\n}", "    my $str = join(\"\", @$lst);\n    my $cnt\
    \ = 0;\n    for my $c (split //, $str) {\n        if ($c eq \"(\") {\n       \
    \     $cnt++;\n        } elsif ($c eq \")\") {\n            $cnt--;\n        }\n\
    \        return \"No\" if $cnt < 0;\n    }\n    return \"Yes\" if $cnt == 0;\n\
    \    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n\
    \    my $s = $s1 . $s2;\n    my $cnt = 0;\n    for my $c (split //, $s) {\n  \
    \      $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return \"No\"\
    \ if $cnt < 0;\n    }\n    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n \
    \   my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($count == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my $str = join('', @$lst);\n    my $cnt = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')')\
    \ {\n            $cnt--;\n        }\n        return 'No' if $cnt < 0;\n    }\n\
    \    return $cnt == 0 ? 'Yes' : 'No';\n}", "    my($s1, $s2) = @$lst;\n    my($c1,\
    \ $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n\
    \        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for\
    \ my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq\
    \ ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 ==\
    \ $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        }\n        elsif\
    \ ($c eq ')') {\n            $count--;\n        }\n        if ($count < 0) {\n\
    \            return \"No\";\n        }\n    }\n    if ($count == 0) {\n      \
    \  return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "  \
    \  my $s1 = $lst->[0];\n    my $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n    my\
    \ $count = 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n    \
    \        $count++;\n        }\n        elsif ($c eq ')') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    }\n    else {\n \
    \       return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n    my($s) = $s1\
    \ . $s2;\n    my($c) = 0;\n    for my $ch (split //, $s) {\n        if ($ch eq\
    \ '(') {\n            $c++;\n        } elsif ($ch eq ')') {\n            $c--;\n\
    \        }\n        if ($c < 0) {\n            return \"No\";\n        }\n   \
    \ }\n    if ($c == 0) {\n        return \"Yes\";\n    } else {\n        return\
    \ \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n\
    \    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if\
    \ $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for my $c (split //,\
    \ $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n        return\
    \ \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return \"\
    No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str\
    \ = $str1 . $str2;\n    my $count = 0;\n    foreach my $c (split //, $str) {\n\
    \        if ($c eq '(') {\n            $count += 1;\n        } elsif ($c eq ')')\
    \ {\n            $count -= 1;\n        }\n        if ($count < 0) {\n        \
    \    return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return\
    \ \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $a = $lst->[0];\n\
    \    my $b = $lst->[1];\n    my $c = $a . $b;\n    my $d = $b . $a;\n    return\
    \ is_good($c) ? \"Yes\" : is_good($d) ? \"Yes\" : \"No\";\n}", "    my($s1, $s2)\
    \ = @$lst;\n    my($i, $j, $k, $n1, $n2, $n, $c, $d);\n    $n1 = length($s1);\n\
    \    $n2 = length($s2);\n    $n = $n1 + $n2;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $c = $i < $n1 ? substr($s1, $i, 1) : substr($s2, $i - $n1, 1);\n\
    \        if ($c eq '(') {\n            $d = ')';\n        } elsif ($c eq ')')\
    \ {\n            $d = '(';\n        } else {\n            die \"Invalid character\
    \ '$c'\";\n        }\n        for ($j = $i + 1; $j < $n; $j++) {\n           \
    \ $c = $j < $n1 ? substr($s1, $j, 1) : substr($s2, $j - $n1, 1);\n           \
    \ if ($c eq $d) {\n                $s1 = substr($s1, 0, $i) . substr($s1, $i +\
    \ 1, $j - $i - 1) . substr($s1, $j + 1);\n                $s2 = substr($s2, 0,\
    \ $i - $n1) . substr($s2, $i - $n1 + 1, $j - $i - 1) . substr($s2, $j - $n1 +\
    \ 1);\n                $n1 -= 2;\n                $n2 -= 2;\n                $n\
    \ -= 2;\n                $i--;\n                last;\n            }\n       \
    \ }\n    }\n    return $n1 == 0 && $n2 == 0 ? \"Yes\" : \"No\";\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($i, $j, $k);\n    my($c1, $c2);\n    my($s);\n    my($n1,\
    \ $n2);\n    my($n);\n    my($c);\n    my($b);", "    my($s1, $s2) = @$lst;\n\
    \    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if\
    \ $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n       \
    \ $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"\
    Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n   \
    \ my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n  \
    \  for my $ch (split //, $str) {\n        if ($ch eq '(') {\n            $count++;\n\
    \        } elsif ($ch eq ')') {\n            $count--;\n        }\n        if\
    \ ($count < 0) {\n            return \"No\";\n        }\n    }\n    if ($count\
    \ == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n   \
    \ }\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str =\
    \ $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str) {\n     \
    \   if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')') {\n \
    \           $count--;\n        }\n        return \"No\" if $count < 0;\n    }\n\
    \    return \"Yes\" if $count == 0;\n    return \"No\";\n}", "    my($s1, $s2)\
    \ = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n    \
    \    $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if\
    \ $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n\
    \        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return\
    \ \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        }\n        elsif ($c eq ')') {\n            $count--;\n        }\n  \
    \      if ($count < 0) {\n            return \"No\";\n        }\n    }\n    if\
    \ ($count == 0) {\n        return \"Yes\";\n    }\n    else {\n        return\
    \ \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n    my $s = $s1 . $s2;\n   \
    \ my $cnt = 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n   \
    \         $cnt++;\n        } elsif ($c eq ')') {\n            $cnt--;\n      \
    \  }\n        if ($cnt < 0) {\n            return \"No\";\n        }\n    }\n\
    \    return \"Yes\";\n}", "    my $str = join(\"\", @$lst);\n    my $cnt = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq \"(\") {\n            $cnt++;\n\
    \        } else {\n            $cnt--;\n        }\n        return \"No\" if $cnt\
    \ < 0;\n    }\n    return \"Yes\";\n}", "    my $s1 = $lst->[0];\n    my $s2 =\
    \ $lst->[1];\n    my $s = $s1 . $s2;\n    my $cnt = 0;\n    for my $c (split //,\
    \ $s) {\n        if ($c eq '(') {\n            $cnt++;\n        }\n        elsif\
    \ ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n   \
    \         return \"No\";\n        }\n    }\n    return $cnt == 0 ? \"Yes\" : \"\
    No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str\
    \ = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str) {\n   \
    \     if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"Yes\";\n\
    \    } else {\n        return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n\
    \    my $s = $s1 . $s2;\n    my $n = length($s);\n    my $cnt = 0;\n    for (my\
    \ $i = 0; $i < $n; $i++) {\n        if (substr($s, $i, 1) eq '(') {\n        \
    \    $cnt++;\n        } else {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return $cnt == 0 ?\
    \ \"Yes\" : \"No\";\n}", "    my($a, $b) = @$lst;\n    my($i, $j, $k);\n    my($cnt,\
    \ $cnt1, $cnt2);\n    my($ret);", "    my($a, $b) = @$lst;\n    my($cnt) = 0;\n\
    \    for my $c (split //, $a) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } else {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n \
    \           return \"No\";\n        }\n    }\n    for my $c (split //, $b) {\n\
    \        if ($c eq '(') {\n            $cnt++;\n        } else {\n           \
    \ $cnt--;\n        }\n        if ($cnt < 0) {\n            return \"No\";\n  \
    \      }\n    }\n    if ($cnt == 0) {\n        return \"Yes\";\n    } else {\n\
    \        return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2)\
    \ = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n  \
    \      $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for\
    \ my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq\
    \ ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 ==\
    \ $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $cnt = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')')\
    \ {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n            return\
    \ \"No\";\n        }\n    }\n    if ($cnt == 0) {\n        return \"Yes\";\n \
    \   } else {\n        return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($count == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($s1, $s2) = @$lst;\n    my($i, $j, $k, $n1, $n2, $n3);\n    my($c1, $c2,\
    \ $c3);\n    my($s3);\n    my($cnt);\n    my($ret);", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return $count == 0\
    \ ? \"Yes\" : \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($cnt) = 0;\n   \
    \ for my $c (split //, $s1) {\n        $cnt++ if $c eq '(';\n        $cnt-- if\
    \ $c eq ')';\n        return \"No\" if $cnt < 0;\n    }\n    for my $c (split\
    \ //, $s2) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n   \
    \     return \"No\" if $cnt < 0;\n    }\n    return \"Yes\" if $cnt == 0;\n  \
    \  return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $str = join('',\
    \ @$lst);\n    my $count = 0;\n    for my $c (split //, $str) {\n        if ($c\
    \ eq '(') {\n            $count++;\n        } elsif ($c eq ')') {\n          \
    \  $count--;\n        }\n        if ($count < 0) {\n            return 'No';\n\
    \        }\n    }\n    return $count == 0 ? 'Yes' : 'No';\n}", "    my $str1 =\
    \ $lst->[0];\n    my $str2 = $lst->[1];\n    my $str1_good = is_good($str1);\n\
    \    my $str2_good = is_good($str2);\n    if ($str1_good && $str2_good) {\n  \
    \      return \"Yes\";\n    }\n    if ($str1_good) {\n        return \"Yes\" if\
    \ is_good($str1 . $str2);\n    }\n    if ($str2_good) {\n        return \"Yes\"\
    \ if is_good($str2 . $str1);\n    }\n    return \"No\";\n}", "    my($s1, $s2)\
    \ = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n    \
    \    $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if\
    \ $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n\
    \        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return\
    \ \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $cnt = 0;\n \
    \   for my $c (split //, $str) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my $s1 = $lst->[0];\n    my $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n   \
    \ my $cnt = 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n   \
    \         $cnt++;\n        }\n        elsif ($c eq ')') {\n            $cnt--;\n\
    \        }\n        if ($cnt < 0) {\n            return \"No\";\n        }\n \
    \   }\n    return $cnt == 0 ? \"Yes\" : \"No\";\n}", "    my($str1, $str2) = @$lst;\n\
    \    my($l1, $l2) = (length($str1), length($str2));\n    my($i, $j, $k) = (0,\
    \ 0, 0);\n    my($c1, $c2) = ('', '');\n    my($res) = 'Yes';\n    while ($i <\
    \ $l1 && $j < $l2) {\n        $c1 = substr($str1, $i, 1);\n        $c2 = substr($str2,\
    \ $j, 1);\n        if ($c1 eq '(') {\n            $k++;\n        } elsif ($c1\
    \ eq ')') {\n            $k--;\n        }\n        if ($c2 eq '(') {\n       \
    \     $k++;\n        } elsif ($c2 eq ')') {\n            $k--;\n        }\n  \
    \      if ($k < 0) {\n            $res = 'No';\n            last;\n        }\n\
    \        $i++;\n        $j++;\n    }\n    while ($i < $l1) {\n        $c1 = substr($str1,\
    \ $i, 1);\n        if ($c1 eq '(') {\n            $k++;\n        } elsif ($c1\
    \ eq ')') {\n            $k--;\n        }\n        if ($k < 0) {\n           \
    \ $res = 'No';\n            last;\n        }\n        $i++;\n    }\n    while\
    \ ($j < $l2) {\n        $c2 = substr($str2, $j, 1);\n        if ($c2 eq '(') {\n\
    \            $k++;\n        } elsif ($c2 eq ')') {\n            $k--;\n      \
    \  }\n        if ($k < 0) {\n            $res = 'No';\n            last;\n   \
    \     }\n        $j++;\n    }\n    if ($k != 0) {\n        $res = 'No';\n    }\n\
    \    return $res;\n}", "    my($a, $b) = @$lst;\n    my($c) = $a . $b;\n    my($n)\
    \ = 0;\n    for my $c (split //, $c) {\n        if ($c eq '(') {\n           \
    \ $n++;\n        } elsif ($c eq ')') {\n            $n--;\n        }\n       \
    \ if ($n < 0) {\n            return \"No\";\n        }\n    }\n    return $n ==\
    \ 0 ? \"Yes\" : \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0,\
    \ 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n        $c1--\
    \ if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for my $c (split\
    \ //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n     \
    \   return \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return\
    \ \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str\
    \ = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str) {\n   \
    \     if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')') {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            return\
    \ \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"Yes\";\n\
    \    } else {\n        return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $cnt = 0;\n \
    \   for my $c (split //, $str) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($a, $b) = @$lst;\n    my($cnt) = 0;\n    for my $c (split //, $a) {\n \
    \       $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No'\
    \ if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n        $cnt++ if $c eq\
    \ '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n    }\n\
    \    return 'Yes' if $cnt == 0;\n    return 'No';\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        }\n        elsif ($c eq ')') {\n            $count--;\n        }\n  \
    \      if ($count < 0) {\n            return \"No\";\n        }\n    }\n    if\
    \ ($count == 0) {\n        return \"Yes\";\n    }\n    else {\n        return\
    \ \"No\";\n    }\n}", "    my $str = join(\"\", @$lst);\n    my $count = 0;\n\
    \    for my $c (split(\"\", $str)) {\n        if ($c eq \"(\") {\n           \
    \ $count++;\n        } elsif ($c eq \")\") {\n            $count--;\n        }\n\
    \        if ($count < 0) {\n            return \"No\";\n        }\n    }\n   \
    \ return $count == 0 ? \"Yes\" : \"No\";\n}", "    my($s1, $s2) = @$lst;\n   \
    \ my $s = $s1 . $s2;\n    my $n = 0;\n    for my $c (split //, $s) {\n       \
    \ $n++ if $c eq '(';\n        $n-- if $c eq ')';\n        return \"No\" if $n\
    \ < 0;\n    }\n    return \"Yes\";\n}", "    my($s1, $s2) = @$lst;\n    my($i,\
    \ $j, $k, $c1, $c2, $c3, $c4);\n    for ($i = 0; $i < length($s1); $i++) {\n \
    \       $c1 = substr($s1, $i, 1);\n        for ($j = 0; $j < length($s2); $j++)\
    \ {\n            $c2 = substr($s2, $j, 1);\n            for ($k = 0; $k < length($s2);\
    \ $k++) {\n                $c3 = substr($s2, $k, 1);\n                for ($l\
    \ = 0; $l < length($s1); $l++) {\n                    $c4 = substr($s1, $l, 1);\n\
    \                    if (is_good($c1.$c2.$c3.$c4)) {\n                       \
    \ return \"Yes\";\n                    }\n                }\n            }\n \
    \       }\n    }\n    return \"No\";\n}", "    my $s1 = $lst->[0];\n    my $s2\
    \ = $lst->[1];\n    my $s = $s1 . $s2;\n    my $n = length($s);\n    my $cnt =\
    \ 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if (substr($s, $i, 1) eq '(')\
    \ {\n            $cnt++;\n        } elsif (substr($s, $i, 1) eq ')') {\n     \
    \       $cnt--;\n        }\n        if ($cnt < 0) {\n            return \"No\"\
    ;\n        }\n    }\n    if ($cnt == 0) {\n        return \"Yes\";\n    } else\
    \ {\n        return \"No\";\n    }\n}", "    my $s1 = $lst->[0];\n    my $s2 =\
    \ $lst->[1];\n    my $s = $s1 . $s2;\n    my $n = length($s);\n    my $cnt = 0;\n\
    \    for (my $i = 0; $i < $n; $i++) {\n        my $c = substr($s, $i, 1);\n  \
    \      if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')') {\n\
    \            $cnt--;\n        }\n        if ($cnt < 0) {\n            return \"\
    No\";\n        }\n    }\n    if ($cnt == 0) {\n        return \"Yes\";\n    }\
    \ else {\n        return \"No\";\n    }\n}", "    my $s1 = $lst->[0];\n    my\
    \ $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n    my $cnt = 0;\n    for my $c (split\
    \ //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c\
    \ eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n       \
    \     return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if\
    \ $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n       \
    \ $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"\
    Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($a, $b) = @$lst;\n    my($i,\
    \ $j) = (0, 0);\n    for my $c (split //, $a) {\n        $i++ if $c eq '(';\n\
    \        $i-- if $c eq ')';\n        return \"No\" if $i < 0;\n    }\n    for\
    \ my $c (split //, $b) {\n        $j++ if $c eq '(';\n        $j-- if $c eq ')';\n\
    \        return \"No\" if $j < 0;\n    }\n    return \"Yes\" if $i == $j;\n  \
    \  return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        }\n        elsif\
    \ ($c eq ')') {\n            $count--;\n        }\n        if ($count < 0) {\n\
    \            return \"No\";\n        }\n    }\n    if ($count == 0) {\n      \
    \  return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "  \
    \  my($s1, $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($c) = 0;\n    for my\
    \ $c (split //, $s) {\n        if ($c eq '(') {\n            $c++;\n        }\
    \ elsif ($c eq ')') {\n            $c--;\n        }\n        if ($c < 0) {\n \
    \           return \"No\";\n        }\n    }\n    return \"Yes\";\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n\
    \        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\"\
    \ if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq\
    \ '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n\
    \    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($a, $b) =\
    \ @$lst;\n    my($cnt) = 0;\n    for my $c (split //, $a) {\n        $cnt++ if\
    \ $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n\
    \    }\n    for my $c (split //, $b) {\n        $cnt++ if $c eq '(';\n       \
    \ $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n    }\n    return 'Yes'\
    \ if $cnt == 0;\n    return 'No';\n}", "    my($a, $b) = @$lst;\n    my($n) =\
    \ 0;\n    for my $c (split //, $a) {\n        if ($c eq '(') {\n            $n++;\n\
    \        } else {\n            $n--;\n        }\n        if ($n < 0) {\n     \
    \       return \"No\";\n        }\n    }\n    for my $c (split //, $b) {\n   \
    \     if ($c eq '(') {\n            $n++;\n        } else {\n            $n--;\n\
    \        }\n        if ($n < 0) {\n            return \"No\";\n        }\n   \
    \ }\n    return $n == 0 ? \"Yes\" : \"No\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return \"Yes\";\n}",
  "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n\
    \    my $count = 0;\n    for my $ch (split //, $str) {\n        if ($ch eq '(')\
    \ {\n            $count++;\n        } elsif ($ch eq ')') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    return $count == 0 ? \"Yes\" : \"No\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        }\n        elsif ($c eq ')') {\n            $count--;\n        }\n  \
    \      if ($count < 0) {\n            return \"No\";\n        }\n    }\n    if\
    \ ($count == 0) {\n        return \"Yes\";\n    }\n    else {\n        return\
    \ \"No\";\n    }\n}", "    my($a, $b) = @$lst;\n    my($c) = 0;\n    for my $c\
    \ (split //, $a) {\n        $c++ if $c eq '(';\n        $c-- if $c eq ')';\n \
    \       return \"No\" if $c < 0;\n    }\n    for my $c (split //, $b) {\n    \
    \    $c++ if $c eq '(';\n        $c-- if $c eq ')';\n        return \"No\" if\
    \ $c < 0;\n    }\n    return \"Yes\" if $c == 0;\n    return \"No\";\n}", "  \
    \  my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n\
    \    my $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(')\
    \ {\n            $count++;\n        } elsif ($c eq ')') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    } else {\n      \
    \  return \"No\";\n    }\n}", "    my($a, $b) = @$lst;\n    my($cnt) = 0;\n  \
    \  for my $c (split //, $a) {\n        $cnt++ if $c eq '(';\n        $cnt-- if\
    \ $c eq ')';\n        return 'No' if $cnt < 0;\n    }\n    for my $c (split //,\
    \ $b) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return\
    \ 'No' if $cnt < 0;\n    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n\
    }", "    my($s1, $s2) = @$lst;\n    my($cnt) = 0;\n    for my $c (split //, $s1)\
    \ {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return\
    \ 'No' if $cnt < 0;\n    }\n    for my $c (split //, $s2) {\n        $cnt++ if\
    \ $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n\
    \    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n}", "    my($str1, $str2)\
    \ = @$lst;\n    my($count1, $count2) = (0, 0);\n    for my $c (split //, $str1)\
    \ {\n        $count1++ if $c eq '(';\n        $count1-- if $c eq ')';\n      \
    \  return \"No\" if $count1 < 0;\n    }\n    for my $c (split //, $str2) {\n \
    \       $count2++ if $c eq '(';\n        $count2-- if $c eq ')';\n        return\
    \ \"No\" if $count2 < 0;\n    }\n    return \"Yes\" if $count1 == 0 and $count2\
    \ == 0;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($s) = $s1\
    \ . $s2;\n    my($cnt) = 0;\n    for my $c (split //, $s) {\n        if ($c eq\
    \ '(') {\n            $cnt++;\n        } elsif ($c eq ')') {\n            $cnt--;\n\
    \        }\n        return \"No\" if $cnt < 0;\n    }\n    return \"Yes\";\n}",
  "    my($s1, $s2) = @$lst;\n    my($cnt1, $cnt2) = (0, 0);\n    for my $c (split\
    \ //, $s1) {\n        $cnt1++ if $c eq '(';\n        $cnt1-- if $c eq ')';\n \
    \       return \"No\" if $cnt1 < 0;\n    }\n    for my $c (split //, $s2) {\n\
    \        $cnt2++ if $c eq '(';\n        $cnt2-- if $c eq ')';\n        return\
    \ \"No\" if $cnt2 < 0;\n    }\n    return \"Yes\" if $cnt1 == 0 and $cnt2 == 0;\n\
    \    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        }\n        elsif\
    \ ($c eq ')') {\n            $count--;\n        }\n        if ($count < 0) {\n\
    \            return \"No\";\n        }\n    }\n    if ($count == 0) {\n      \
    \  return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "  \
    \  my($a, $b) = @$lst;\n    my($i, $j) = (0, 0);\n    my($n, $m) = (length($a),\
    \ length($b));\n    while ($i < $n && $j < $m) {\n        my($c) = substr($a,\
    \ $i, 1);\n        if ($c eq '(') {\n            $i++;\n        } else {\n   \
    \         $i++;\n            $j++;\n        }\n    }\n    if ($i < $n) {\n   \
    \     return 'Yes';\n    }\n    $i = 0;\n    while ($i < $n && $j < $m) {\n  \
    \      my($c) = substr($b, $j, 1);\n        if ($c eq ')') {\n            $j++;\n\
    \        } else {\n            $i++;\n            $j++;\n        }\n    }\n  \
    \  if ($j < $m) {\n        return 'Yes';\n    }\n    return 'No';\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for my $c (split\
    \ //, $s) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n    \
    \    return \"No\" if $cnt < 0;\n    }\n    return \"Yes\";\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for my $c (split(//,\
    \ $s)) {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq\
    \ ')') {\n            $cnt--;\n        }\n        return \"No\" if $cnt < 0;\n\
    \    }\n    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $cnt = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')')\
    \ {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n            return\
    \ \"No\";\n        }\n    }\n    if ($cnt == 0) {\n        return \"Yes\";\n \
    \   } else {\n        return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $cnt = 0;\n \
    \   for my $c (split //, $str) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    my($i);\n    for ($i\
    \ = 0; $i < length($s1); $i++) {\n        $c1++ if substr($s1, $i, 1) eq '(';\n\
    \        $c1-- if substr($s1, $i, 1) eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for ($i = 0; $i < length($s2); $i++) {\n        $c2++ if substr($s2,\
    \ $i, 1) eq '(';\n        $c2-- if substr($s2, $i, 1) eq ')';\n        return\
    \ \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return \"\
    No\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my\
    \ $c (split //, $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n\
    \        return \"No\" if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n \
    \       $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n        return \"No\"\
    \ if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}",
  "    my($s1, $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for\
    \ my $c (split //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n    \
    \    } elsif ($c eq ')') {\n            $cnt--;\n        }\n        return \"\
    No\" if $cnt < 0;\n    }\n    return \"Yes\";\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($cnt) = 0;\n    for my $c (split //, $s1) {\n        $cnt++ if $c eq '(';\n\
    \        $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n    }\n    for\
    \ my $c (split //, $s2) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c\
    \ eq ')';\n        return 'No' if $cnt < 0;\n    }\n    return 'Yes' if $cnt ==\
    \ 0;\n    return 'No';\n}", "    my $s1 = shift @$lst;\n    my $s2 = shift @$lst;\n\
    \    my $s = $s1 . $s2;\n    my $cnt = 0;\n    for my $c (split //, $s) {\n  \
    \      if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')') {\n\
    \            $cnt--;\n        }\n        return \"No\" if $cnt < 0;\n    }\n \
    \   return \"Yes\" if $cnt == 0;\n    return \"No\";\n}", "    my $s1 = $lst->[0];\n\
    \    my $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n    my $cnt = 0;\n    for my\
    \ $c (split //, $s) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n\
    \        return \"No\" if $cnt < 0;\n    }\n    return \"Yes\";\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for my $c (split\
    \ //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c\
    \ eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n       \
    \     return \"No\";\n        }\n    }\n    return $cnt == 0 ? \"Yes\" : \"No\"\
    ;\n}", "    my($a, $b) = @$lst;\n    my($cnt) = 0;\n    for my $c (split //, $a)\
    \ {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return\
    \ 'No' if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n        $cnt++ if\
    \ $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n\
    \    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n}", "    my($s1, $s2)\
    \ = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n    \
    \    $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if\
    \ $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n\
    \        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return\
    \ \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($str1, $str2) = @$lst;\n\
    \    my($i, $j, $k, $n1, $n2, $n3, $n4, $n5, $n6, $n7, $n8, $n9, $n10, $n11, $n12,\
    \ $n13, $n14, $n15, $n16, $n17, $n18, $n19, $n20, $n21, $n22, $n23, $n24, $n25,\
    \ $n26, $n27, $n28, $n29, $n30, $n31, $n32, $n33, $n34, $n35, $n36, $n37, $n38,\
    \ $n39, $n40, $n41, $n42, $n43, $n44, $n45, $n46, $n47, $n48, $n49, $n50, $n51,\
    \ $n52, $n53, $n54, $n55, $n56, $n57, $n58, $n59, $n60, $n61, $n62, $n63, $n64,\
    \ $n65, $n66, $n67, $n68, $n69, $n70, $n71, $n72, $n73, $n74, $n75, $n76, $n77,\
    \ $n78, $n79, $n80, $n81, $n82, $n83, $n84, $n85, $n86, $n87, $n88, $n89, $n90,\
    \ $n91, $n92, $n93, $n94, $n95, $n96, $n97, $n98, $n99, $n100, $n101, $n102, $n103,\
    \ $n104, $n105, $n106, $n107, $n108, $n109, $n110, $n111, $n112, $n113, $n114,\
    \ $n115, $n116, $n117, $n118, $n119, $n120, $n121", "    my($left, $right) = @$lst;\n\
    \    my($left_count, $right_count) = (0, 0);\n    for my $c (split //, $left)\
    \ {\n        $left_count++ if $c eq '(';\n        $left_count-- if $c eq ')';\n\
    \    }\n    for my $c (split //, $right) {\n        $right_count++ if $c eq '(';\n\
    \        $right_count-- if $c eq ')';\n    }\n    return 'No' if $left_count <\
    \ 0 || $right_count < 0;\n    return 'Yes' if $left_count == 0 && $right_count\
    \ == 0;\n    return 'Yes' if $left_count == $right_count;\n    return 'No';\n}",
  "    my($str1, $str2) = @$lst;\n    my($str) = $str1 . $str2;\n    my($i, $cnt);\n\
    \    for ($i = 0, $cnt = 0; $i < length($str); $i++) {\n        if (substr($str,\
    \ $i, 1) eq '(') {\n            $cnt++;\n        } else {\n            $cnt--;\n\
    \        }\n        if ($cnt < 0) {\n            return \"No\";\n        }\n \
    \   }\n    return \"Yes\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) =\
    \ (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n    \
    \    $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for my\
    \ $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n\
    \        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n\
    \    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($s) = $s1 . $s2;\n\
    \    my($c) = 0;\n    for my $c (split //, $s) {\n        $c++ if $c eq '(';\n\
    \        $c-- if $c eq ')';\n        return \"No\" if $c < 0;\n    }\n    return\
    \ \"Yes\";\n}", "    my($left, $right) = @$lst;\n    my($left_parens, $right_parens)\
    \ = (0, 0);\n    for my $c (split //, $left) {\n        if ($c eq '(') {\n   \
    \         $left_parens++;\n        } else {\n            $left_parens--;\n   \
    \     }\n    }\n    for my $c (split //, $right) {\n        if ($c eq '(') {\n\
    \            $right_parens++;\n        } else {\n            $right_parens--;\n\
    \        }\n    }\n    return $left_parens == $right_parens ? 'Yes' : 'No';\n}",
  "    my($a, $b) = @$lst;\n    my($x, $y) = (0, 0);\n    for my $c (split //, $a)\
    \ {\n        $x++ if $c eq '(';\n        $x-- if $c eq ')';\n        return \"\
    No\" if $x < 0;\n    }\n    for my $c (split //, $b) {\n        $y++ if $c eq\
    \ '(';\n        $y-- if $c eq ')';\n        return \"No\" if $y < 0;\n    }\n\
    \    return \"Yes\" if $x == $y;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str3 = $str1 . $str2;\n    my $str4 = $str2\
    \ . $str1;\n    return \"Yes\" if is_good($str3) || is_good($str4);\n    return\
    \ \"No\";\n}", "    my($a, $b) = @$lst;\n    my($cnt) = 0;\n    for my $c (split\
    \ //, $a) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n    \
    \    return 'No' if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n       \
    \ $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt\
    \ < 0;\n    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n}", "    my $a\
    \ = $lst->[0];\n    my $b = $lst->[1];\n    my $c = $a . $b;\n    my $d = $b .\
    \ $a;\n    return \"Yes\" if is_good($c);\n    return \"Yes\" if is_good($d);\n\
    \    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($left, $right)\
    \ = @$lst;\n    my($left_count, $right_count) = (0, 0);\n    for my $c (split\
    \ //, $left) {\n        if ($c eq '(') {\n            $left_count++;\n       \
    \ } else {\n            $left_count--;\n        }\n    }\n    for my $c (split\
    \ //, $right) {\n        if ($c eq '(') {\n            $right_count++;\n     \
    \   } else {\n            $right_count--;\n        }\n    }\n    return $left_count\
    \ == $right_count ? 'Yes' : 'No';\n}", "    my($left, $right) = @$lst;\n    my($left_parens,\
    \ $right_parens) = (0, 0);\n    my($left_parens_to_match, $right_parens_to_match)\
    \ = (0, 0);\n    for my $c (split //, $left) {\n        if ($c eq '(') {\n   \
    \         $left_parens++;\n        }\n        else {\n            $left_parens_to_match++;\n\
    \        }\n    }\n    for my $c (split //, $right) {\n        if ($c eq ')')\
    \ {\n            $right_parens++;\n        }\n        else {\n            $right_parens_to_match++;\n\
    \        }\n    }\n    return 'No' if $left_parens_to_match > $right_parens;\n\
    \    return 'No' if $right_parens_to_match > $left_parens;\n    return 'Yes';\n\
    }", "    my($left, $right) = @$lst;\n    my $left_parens = $left =~ tr/\\(//;\n\
    \    my $right_parens = $right =~ tr/\\)//;\n    return $left_parens == $right_parens\
    \ ? \"Yes\" : \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0,\
    \ 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n        $c1--\
    \ if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for my $c (split\
    \ //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n     \
    \   return \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return\
    \ \"No\";\n}", "    my($a, $b) = @$lst;\n    my $c = $a . $b;\n    my $n = 0;\n\
    \    for my $c (split //, $c) {\n        $n++ if $c eq '(';\n        $n-- if $c\
    \ eq ')';\n        return \"No\" if $n < 0;\n    }\n    return \"Yes\";\n}", " \
    \   my($a, $b) = @$lst;\n    my($c) = $a . $b;\n    my($n) = 0;\n    for my $c\
    \ (split //, $c) {\n        if ($c eq '(') {\n            $n++;\n        } elsif\
    \ ($c eq ')') {\n            $n--;\n        }\n        if ($n < 0) {\n       \
    \     return \"No\";\n        }\n    }\n    if ($n == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($str1, $str2)\
    \ = @$lst;\n    my($count1, $count2) = (0, 0);\n    for my $c (split //, $str1)\
    \ {\n        $count1++ if $c eq '(';\n        $count1-- if $c eq ')';\n      \
    \  return \"No\" if $count1 < 0;\n    }\n    for my $c (split //, $str2) {\n \
    \       $count2++ if $c eq '(';\n        $count2-- if $c eq ')';\n        return\
    \ \"No\" if $count2 < 0;\n    }\n    return \"Yes\" if $count1 == 0 && $count2\
    \ == 0;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($s) = $s1\
    \ . $s2;\n    my($c) = 0;\n    for my $c (split //, $s) {\n        if ($c eq '(')\
    \ {\n            $c++;\n        } else {\n            $c--;\n        }\n     \
    \   if ($c < 0) {\n            return \"No\";\n        }\n    }\n    return \"\
    Yes\";\n}", "    my($s1, $s2) = @$lst;\n    my $s = $s1 . $s2;\n    my $cnt =\
    \ 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        return\
    \ \"No\" if $cnt < 0;\n    }\n    return \"Yes\";\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if\
    \ $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n       \
    \ $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"\
    Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n   \
    \ my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c\
    \ eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n  \
    \  }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2--\
    \ if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\"\
    \ if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2\
    \ = $lst->[1];\n    my $good = 1;\n    my $count = 0;\n    for my $c (split //,\
    \ $str1) {\n        if ($c eq '(') {\n            $count++;\n        } else {\n\
    \            $count--;\n        }\n        if ($count < 0) {\n            $good\
    \ = 0;\n            last;\n        }\n    }\n    if ($good) {\n        for my\
    \ $c (split //, $str2) {\n            if ($c eq '(') {\n                $count++;\n\
    \            } else {\n                $count--;\n            }\n            if\
    \ ($count < 0) {\n                $good = 0;\n                last;\n        \
    \    }\n        }\n    }\n    return $good ? 'Yes' : 'No';\n}", "    my($s1, $s2)\
    \ = @$lst;\n    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for my $c (split //,\
    \ $s) {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq\
    \ ')') {\n            $cnt--;\n        }\n        return \"No\" if $cnt < 0;\n\
    \    }\n    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        return \"No\" if $count < 0;\n\
    \    }\n    return \"Yes\" if $count == 0;\n    return \"No\";\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($s) = $s1 . $s2;\n    my($c) = 0;\n    for my $c (split(//,\
    \ $s)) {\n        if ($c eq '(') {\n            $c++;\n        } elsif ($c eq\
    \ ')') {\n            $c--;\n        }\n        if ($c < 0) {\n            return\
    \ \"No\";\n        }\n    }\n    return $c == 0 ? \"Yes\" : \"No\";\n}", "   \
    \ my($left, $right) = @$lst;\n    my($left_parens, $right_parens) = (0, 0);\n\
    \    for my $c (split //, $left) {\n        $left_parens++ if $c eq '(';\n   \
    \     $left_parens-- if $c eq ')';\n        return \"No\" if $left_parens < 0;\n\
    \    }\n    for my $c (split //, $right) {\n        $right_parens++ if $c eq '(';\n\
    \        $right_parens-- if $c eq ')';\n        return \"No\" if $right_parens\
    \ < 0;\n    }\n    return \"Yes\" if $left_parens == $right_parens;\n    return\
    \ \"No\";\n}", "    my($a, $b) = @$lst;\n    my($i, $j, $k, $cnt, $cnt1, $cnt2);\n\
    \    my($res) = \"Yes\";\n    $cnt = 0;\n    for($i = 0; $i < length($a); $i++)\
    \ {\n        $cnt += (substr($a, $i, 1) eq \"(\" ? 1 : -1);\n        if($cnt <\
    \ 0) {\n            $res = \"No\";\n            last;\n        }\n    }\n    if($res\
    \ eq \"Yes\") {\n        $cnt = 0;\n        for($i = 0; $i < length($b); $i++)\
    \ {\n            $cnt += (substr($b, $i, 1) eq \"(\" ? 1 : -1);\n            if($cnt\
    \ < 0) {\n                $res = \"No\";\n                last;\n            }\n\
    \        }\n    }\n    if($res eq \"Yes\") {\n        $cnt1 = 0;\n        for($i\
    \ = 0; $i < length($a); $i++) {\n            $cnt1 += (substr($a, $i, 1) eq \"\
    (\" ? 1 : -1);\n        }\n        $cnt2 = 0;\n        for($i = 0; $i < length($b);\
    \ $i++) {\n            $cnt2 += (substr($b, $i, 1) eq \"(\" ? 1 : -1);\n     \
    \   }\n        if($cnt1 != $cnt2) {\n            $res = \"No\";\n        }\n \
    \   }\n    return $res;\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        }\n        elsif\
    \ ($c eq ')') {\n            $count--;\n        }\n        if ($count < 0) {\n\
    \            return \"No\";\n        }\n    }\n    if ($count == 0) {\n      \
    \  return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "  \
    \  my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n\
    \    my $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(')\
    \ {\n            $count++;\n        } elsif ($c eq ')') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    } else {\n      \
    \  return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return \"Yes\";\n}",
  "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //,\
    \ $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return\
    \ \"No\" if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if\
    \ $c eq '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n\
    \    }\n    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($left,\
    \ $right) = @$lst;\n    my($left_parens, $right_parens) = (0, 0);\n    for my\
    \ $c (split //, $left) {\n        if ($c eq '(') {\n            $left_parens++;\n\
    \        } else {\n            $left_parens--;\n        }\n    }\n    for my $c\
    \ (split //, $right) {\n        if ($c eq '(') {\n            $right_parens++;\n\
    \        } else {\n            $right_parens--;\n        }\n    }\n    return\
    \ $left_parens == $right_parens ? 'Yes' : 'No';\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($count == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($left, $right) = @$lst;\n    my($left_count, $right_count) = (0, 0);\n\
    \    foreach my $c (split //, $left) {\n        $left_count++ if $c eq '(';\n\
    \        $left_count-- if $c eq ')';\n    }\n    foreach my $c (split //, $right)\
    \ {\n        $right_count++ if $c eq '(';\n        $right_count-- if $c eq ')';\n\
    \    }\n    return 'Yes' if $left_count == 0 && $right_count == 0;\n    return\
    \ 'Yes' if $left_count > 0 && $right_count < 0;\n    return 'Yes' if $left_count\
    \ < 0 && $right_count > 0;\n    return 'No';\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if\
    \ $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n       \
    \ $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"\
    Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n   \
    \ my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c\
    \ eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n  \
    \  }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2--\
    \ if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\"\
    \ if $c1 == $c2;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1,\
    \ $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n\
    \        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for\
    \ my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq\
    \ ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 ==\
    \ $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if\
    \ $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n\
    \    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n       \
    \ $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"\
    Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n   \
    \ my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c\
    \ eq '(';\n        $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n  \
    \  }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2--\
    \ if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n    return \"Yes\"\
    \ if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2\
    \ = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c\
    \ (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n      \
    \  } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($count == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($s1, $s2) = @$lst;\n    my $s = $s1 . $s2;\n    my $n = length($s);\n \
    \   my $cnt = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        my $c = substr($s,\
    \ $i, 1);\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c\
    \ eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n       \
    \     return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($str1, $str2)\
    \ = @$lst;\n    my($count) = 0;\n    for my $c (split //, $str1) {\n        $count++\
    \ if $c eq '(';\n        $count-- if $c eq ')';\n        return 'No' if $count\
    \ < 0;\n    }\n    for my $c (split //, $str2) {\n        $count++ if $c eq '(';\n\
    \        $count-- if $c eq ')';\n        return 'No' if $count < 0;\n    }\n \
    \   return 'Yes' if $count == 0;\n    return 'No';\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($cnt) = 0;\n    for my $c (split //, $s1) {\n        if ($c eq '(') {\n\
    \            $cnt++;\n        } elsif ($c eq ')') {\n            $cnt--;\n   \
    \     }\n        if ($cnt < 0) {\n            return \"No\";\n        }\n    }\n\
    \    for my $c (split //, $s2) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    return $cnt == 0 ?\
    \ \"Yes\" : \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n\
    \    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if\
    \ $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for my $c (split //,\
    \ $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq ')';\n        return\
    \ \"No\" if $c2 < 0;\n    }\n    return \"Yes\" if $c1 == $c2;\n    return \"\
    No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str\
    \ = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str) {\n   \
    \     if ($c eq '(') {\n            $count++;\n        }\n        elsif ($c eq\
    \ ')') {\n            $count--;\n        }\n        if ($count < 0) {\n      \
    \      return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return\
    \ \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my\
    \ $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n  \
    \          $count++;\n        } elsif ($c eq ')') {\n            $count--;\n \
    \       }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    } else {\n      \
    \  return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        }\n        elsif\
    \ ($c eq ')') {\n            $count--;\n        }\n        if ($count < 0) {\n\
    \            return \"No\";\n        }\n    }\n    if ($count == 0) {\n      \
    \  return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "  \
    \  my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //,\
    \ $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return\
    \ \"No\" if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if\
    \ $c eq '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n\
    \    }\n    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my\
    \ $cnt = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n    \
    \        $cnt++;\n        }\n        elsif ($c eq ')') {\n            $cnt--;\n\
    \        }\n        if ($cnt < 0) {\n            return \"No\";\n        }\n \
    \   }\n    if ($cnt == 0) {\n        return \"Yes\";\n    }\n    else {\n    \
    \    return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($l, $r) = @$lst;\n\
    \    my($l_open, $l_close) = (0, 0);\n    my($r_open, $r_close) = (0, 0);\n  \
    \  for my $c (split //, $l) {\n        if ($c eq '(') {\n            $l_open++;\n\
    \        } else {\n            $l_close++;\n        }\n    }\n    for my $c (split\
    \ //, $r) {\n        if ($c eq '(') {\n            $r_open++;\n        } else\
    \ {\n            $r_close++;\n        }\n    }\n    return $l_open >= $r_close\
    \ && $r_open >= $l_close ? 'Yes' : 'No';\n}", "    my($str1, $str2) = @$lst;\n\
    \    my($cnt1, $cnt2) = (0, 0);\n    for my $c (split //, $str1) {\n        $cnt1++\
    \ if $c eq '(';\n        $cnt1-- if $c eq ')';\n        return 'No' if $cnt1 <\
    \ 0;\n    }\n    for my $c (split //, $str2) {\n        $cnt2++ if $c eq '(';\n\
    \        $cnt2-- if $c eq ')';\n        return 'No' if $cnt2 < 0;\n    }\n   \
    \ return 'Yes' if $cnt1 == 0 and $cnt2 == 0;\n    return 'No';\n}", "    my $s1\
    \ = $lst->[0];\n    my $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n    my $cnt =\
    \ 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n\
    \        } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //,\
    \ $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return\
    \ \"No\" if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if\
    \ $c eq '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n\
    \    }\n    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my\
    \ $paren_count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(')\
    \ {\n            $paren_count++;\n        } elsif ($c eq ')') {\n            $paren_count--;\n\
    \        }\n        return \"No\" if $paren_count < 0;\n    }\n    return \"Yes\"\
    ;\n}", "    my($a, $b) = @$lst;\n    my($n) = 0;\n    for my $c (split //, $a)\
    \ {\n        $n++ if $c eq '(';\n        $n-- if $c eq ')';\n        return \"\
    No\" if $n < 0;\n    }\n    for my $c (split //, $b) {\n        $n++ if $c eq\
    \ '(';\n        $n-- if $c eq ')';\n        return \"No\" if $n < 0;\n    }\n\
    \    return \"Yes\" if $n == 0;\n    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($n1, $n2) = (0, 0);\n    for my $c (split //, $s1) {\n        if ($c eq\
    \ '(') {\n            $n1++;\n        } else {\n            $n1--;\n        }\n\
    \    }\n    for my $c (split //, $s2) {\n        if ($c eq '(') {\n          \
    \  $n2++;\n        } else {\n            $n2--;\n        }\n    }\n    return\
    \ $n1 == $n2 ? 'Yes' : 'No';\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2)\
    \ = (0, 0);\n    for my $c (split //, $s1) {\n        $c1++ if $c eq '(';\n  \
    \      $c1-- if $c eq ')';\n        return \"No\" if $c1 < 0;\n    }\n    for\
    \ my $c (split //, $s2) {\n        $c2++ if $c eq '(';\n        $c2-- if $c eq\
    \ ')';\n        return \"No\" if $c2 < 0;\n    }\n    return $c1 == $c2 ? \"Yes\"\
    \ : \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my\
    \ $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str) {\n\
    \        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($str1, $str2)\
    \ = @$lst;\n    my($count1, $count2) = (0, 0);\n    for my $c (split //, $str1)\
    \ {\n        $count1++ if $c eq '(';\n        $count1-- if $c eq ')';\n      \
    \  return 'No' if $count1 < 0;\n    }\n    for my $c (split //, $str2) {\n   \
    \     $count2++ if $c eq '(';\n        $count2-- if $c eq ')';\n        return\
    \ 'No' if $count2 < 0;\n    }\n    return 'Yes' if $count1 == 0 and $count2 ==\
    \ 0;\n    return 'No';\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split(//, $str)) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        if ($count\
    \ < 0) {\n            return \"No\";\n        }\n    }\n    if ($count == 0) {\n\
    \        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", " \
    \   my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str3 = $str1 . $str2;\n\
    \    my $str4 = $str2 . $str1;\n    my $str5 = $str1 . reverse($str2);\n    my\
    \ $str6 = $str2 . reverse($str1);\n    my $str7 = reverse($str1) . $str2;\n  \
    \  my $str8 = reverse($str2) . $str1;\n    my $str9 = reverse($str1) . reverse($str2);\n\
    \    my $str10 = reverse($str2) . reverse($str1);\n    my @strs = ($str3, $str4,\
    \ $str5, $str6, $str7, $str8, $str9, $str10);\n    foreach my $str (@strs) {\n\
    \        if (is_good($str)) {\n            return \"Yes\";\n        }\n    }\n\
    \    return \"No\";\n}", "    my($a, $b) = @$lst;\n    my $cnt = 0;\n    for my\
    \ $c (split //, $a) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n\
    \        return 'No' if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n   \
    \     $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No'\
    \ if $cnt < 0;\n    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n}", " \
    \   my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n\
    \    my $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(')\
    \ {\n            $count++;\n        } elsif ($c eq ')') {\n            $count--;\n\
    \        }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    return \"Yes\";\n}", "    my($s1, $s2) = @$lst;\n    my($count) =\
    \ 0;\n    for my $c (split //, $s1) {\n        $count++ if $c eq '(';\n      \
    \  $count-- if $c eq ')';\n        return \"No\" if $count < 0;\n    }\n    for\
    \ my $c (split //, $s2) {\n        $count++ if $c eq '(';\n        $count-- if\
    \ $c eq ')';\n        return \"No\" if $count < 0;\n    }\n    return \"Yes\"\
    \ if $count == 0;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n    my\
    \ $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $parens = 0;\n    for\
    \ my $c (split //, $str) {\n        if ($c eq '(') {\n            $parens++;\n\
    \        } elsif ($c eq ')') {\n            $parens--;\n        }\n        if\
    \ ($parens < 0) {\n            return \"No\";\n        }\n    }\n    if ($parens\
    \ == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n   \
    \ }\n}", "    my($s1, $s2) = @$lst;\n    my($cnt1, $cnt2) = (0, 0);\n    for my\
    \ $c (split //, $s1) {\n        $cnt1++ if $c eq '(';\n        $cnt1-- if $c eq\
    \ ')';\n        return 'No' if $cnt1 < 0;\n    }\n    for my $c (split //, $s2)\
    \ {\n        $cnt2++ if $c eq '(';\n        $cnt2-- if $c eq ')';\n        return\
    \ 'No' if $cnt2 < 0;\n    }\n    return 'Yes' if $cnt1 == 0 and $cnt2 == 0;\n\
    \    return 'No';\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $cnt = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')')\
    \ {\n            $cnt--;\n        }\n        return \"No\" if $cnt < 0;\n    }\n\
    \    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $cnt = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')')\
    \ {\n            $cnt--;\n        }\n        return \"No\" if $cnt < 0;\n    }\n\
    \    return \"Yes\";\n}", "    my($s1, $s2) = @$lst;\n    my($i, $j, $k, $n, $m,\
    \ $cnt);\n    $n = length($s1);\n    $m = length($s2);\n    $cnt = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if (substr($s1, $i, 1) eq '(') {\n      \
    \      $cnt++;\n        } else {\n            $cnt--;\n        }\n    }\n    for\
    \ ($i = 0; $i < $m; $i++) {\n        if (substr($s2, $i, 1) eq '(') {\n      \
    \      $cnt++;\n        } else {\n            $cnt--;\n        }\n    }\n    if\
    \ ($cnt != 0) {\n        return \"No\";\n    }\n    $cnt = 0;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        if (substr($s1, $i, 1) eq '(') {\n            $cnt++;\n\
    \        } else {\n            $cnt--;\n        }\n        if ($cnt < 0) {\n \
    \           last;\n        }\n    }\n    if ($cnt < 0) {\n        return \"No\"\
    ;\n    }\n    for ($i = 0; $i < $m; $i++) {\n        if (substr($s2, $i, 1) eq\
    \ '(') {\n            $cnt++;\n        } else {\n            $cnt--;\n       \
    \ }\n        if ($cnt < 0) {\n            last;\n        }\n    }\n    if ($cnt\
    \ < 0) {\n        return \"No\";\n    }\n    return \"Yes\";\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my\
    \ $count = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n  \
    \          $count++;\n        } elsif ($c eq ')') {\n            $count--;\n \
    \       }\n        if ($count < 0) {\n            return \"No\";\n        }\n\
    \    }\n    if ($count == 0) {\n        return \"Yes\";\n    } else {\n      \
    \  return \"No\";\n    }\n}", "    my($a, $b) = @$lst;\n    my($i, $j, $k);\n\
    \    my($cnt) = 0;\n    my($res) = \"Yes\";\n    for ($i = 0; $i < length($a);\
    \ $i++) {\n        $cnt += ($a->[$i] eq '(') ? 1 : -1;\n        if ($cnt < 0)\
    \ {\n            $res = \"No\";\n            last;\n        }\n    }\n    for\
    \ ($j = 0; $j < length($b); $j++) {\n        $cnt += ($b->[$j] eq '(') ? 1 : -1;\n\
    \        if ($cnt < 0) {\n            $res = \"No\";\n            last;\n    \
    \    }\n    }\n    if ($cnt > 0) {\n        $res = \"No\";\n    }\n    return\
    \ $res;\n}", "    my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my\
    \ $c (split //, $s1) {\n        if ($c eq '(') {\n            $c1++;\n       \
    \ } else {\n            $c1--;\n        }\n    }\n    for my $c (split //, $s2)\
    \ {\n        if ($c eq '(') {\n            $c2++;\n        } else {\n        \
    \    $c2--;\n        }\n    }\n    return $c1 == $c2 ? 'Yes' : 'No';\n}", "  \
    \  my($s1, $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //,\
    \ $s1) {\n        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return\
    \ \"No\" if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if\
    \ $c eq '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n\
    \    }\n    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1\
    \ = $lst->[0];\n    my $str2 = $lst->[1];\n    my $str3 = $str1 . $str2;\n   \
    \ my $str4 = $str2 . $str1;\n    my $str5 = $str3;\n    $str5 =~ s/\\(\\)/\\(/g;\n\
    \    $str5 =~ s/\\)\\(/\\)/g;\n    my $str6 = $str4;\n    $str6 =~ s/\\(\\)/\\\
    (/g;\n    $str6 =~ s/\\)\\(/\\)/g;\n    if ($str5 eq $str3) {\n        return\
    \ \"Yes\";\n    }\n    if ($str6 eq $str4) {\n        return \"Yes\";\n    }\n\
    \    return \"No\";\n}", "    my($s1, $s2) = @$lst;\n    my($s) = $s1 . $s2;\n\
    \    my($cnt) = 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n\
    \            $cnt++;\n        } elsif ($c eq ')') {\n            $cnt--;\n   \
    \     }\n        return \"No\" if $cnt < 0;\n    }\n    return \"Yes\";\n}", " \
    \   my($a, $b) = @$lst;\n    my($cnt) = 0;\n    for my $c (split //, $a) {\n \
    \       $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No'\
    \ if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n        $cnt++ if $c eq\
    \ '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt < 0;\n    }\n\
    \    return 'Yes' if $cnt == 0;\n    return 'No';\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        return\
    \ \"No\" if $count < 0;\n    }\n    return \"Yes\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str3 = $str1 . $str2;\n    my $str4 = $str2\
    \ . $str1;\n    return \"Yes\" if is_good($str3) or is_good($str4);\n    return\
    \ \"No\";\n}", "    my($a, $b) = @$lst;\n    my($cnt) = 0;\n    for my $c (split\
    \ //, $a) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n    \
    \    return 'No' if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n       \
    \ $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No' if $cnt\
    \ < 0;\n    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($c1, $c2) = (0, 0);\n    for my $c (split //, $s1) {\n\
    \        $c1++ if $c eq '(';\n        $c1-- if $c eq ')';\n        return \"No\"\
    \ if $c1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $c2++ if $c eq\
    \ '(';\n        $c2-- if $c eq ')';\n        return \"No\" if $c2 < 0;\n    }\n\
    \    return \"Yes\" if $c1 == $c2;\n    return \"No\";\n}", "    my $str1 = $lst->[0];\n\
    \    my $str2 = $lst->[1];\n    my $str = $str1 . $str2;\n    my $count = 0;\n\
    \    for my $c (split //, $str) {\n        if ($c eq '(') {\n            $count++;\n\
    \        }\n        elsif ($c eq ')') {\n            $count--;\n        }\n  \
    \      if ($count < 0) {\n            return \"No\";\n        }\n    }\n    if\
    \ ($count == 0) {\n        return \"Yes\";\n    }\n    else {\n        return\
    \ \"No\";\n    }\n}", "    my($a, $b) = @$lst;\n    my($cnt) = 0;\n    for my\
    \ $c (split //, $a) {\n        $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n\
    \        return 'No' if $cnt < 0;\n    }\n    for my $c (split //, $b) {\n   \
    \     $cnt++ if $c eq '(';\n        $cnt-- if $c eq ')';\n        return 'No'\
    \ if $cnt < 0;\n    }\n    return 'Yes' if $cnt == 0;\n    return 'No';\n}", " \
    \   my($s1, $s2) = @$lst;\n    my $s = $s1 . $s2;\n    my $n = 0;\n    for my\
    \ $c (split //, $s) {\n        $n += $c eq '(' ? 1 : -1;\n        return \"No\"\
    \ if $n < 0;\n    }\n    return \"Yes\";\n}", "    my $str = join('', @$lst);\n\
    \    my $cnt = 0;\n    for my $c (split //, $str) {\n        if ($c eq '(') {\n\
    \            $cnt++;\n        }\n        elsif ($c eq ')') {\n            $cnt--;\n\
    \        }\n        return 'No' if $cnt < 0;\n    }\n    return 'Yes';\n}", " \
    \   my($left, $right) = @$lst;\n    my($left_count, $right_count) = (0, 0);\n\
    \    for my $c (split //, $left) {\n        $left_count++ if $c eq '(';\n    \
    \    $left_count-- if $c eq ')';\n    }\n    for my $c (split //, $right) {\n\
    \        $right_count++ if $c eq '(';\n        $right_count-- if $c eq ')';\n\
    \    }\n    return 'Yes' if $left_count == 0 and $right_count == 0;\n    return\
    \ 'Yes' if $left_count > 0 and $right_count < 0;\n    return 'Yes' if $left_count\
    \ < 0 and $right_count > 0;\n    return 'No';\n}", "    my($s1, $s2) = @$lst;\n\
    \    my($s) = $s1 . $s2;\n    my($cnt) = 0;\n    for my $c (split //, $s) {\n\
    \        if ($c eq '(') {\n            $cnt++;\n        } elsif ($c eq ')') {\n\
    \            $cnt--;\n        }\n        return \"No\" if $cnt < 0;\n    }\n \
    \   return \"Yes\";\n}", "    my $str = join('', @$lst);\n    my $count = 0;\n\
    \    for my $c (split(//, $str)) {\n        if ($c eq '(') {\n            $count++;\n\
    \        } elsif ($c eq ')') {\n            $count--;\n        }\n        return\
    \ 'No' if $count < 0;\n    }\n    return 'Yes';\n}", "    my $s1 = $lst->[0];\n\
    \    my $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n    my $cnt = 0;\n    for my\
    \ $c (split //, $s) {\n        if ($c eq '(') {\n            $cnt++;\n       \
    \ } elsif ($c eq ')') {\n            $cnt--;\n        }\n        if ($cnt < 0)\
    \ {\n            return \"No\";\n        }\n    }\n    if ($cnt == 0) {\n    \
    \    return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    my($s1,\
    \ $s2) = @$lst;\n    my($n1, $n2) = (0, 0);\n    for my $c (split //, $s1) {\n\
    \        $n1++ if $c eq '(';\n        $n1-- if $c eq ')';\n        return \"No\"\
    \ if $n1 < 0;\n    }\n    for my $c (split //, $s2) {\n        $n2++ if $c eq\
    \ '(';\n        $n2-- if $c eq ')';\n        return \"No\" if $n2 < 0;\n    }\n\
    \    return \"Yes\" if $n1 == 0 and $n2 == 0;\n    return \"No\";\n}", "    my\
    \ $s1 = $lst->[0];\n    my $s2 = $lst->[1];\n    my $s = $s1 . $s2;\n    my $cnt\
    \ = 0;\n    for my $c (split //, $s) {\n        if ($c eq '(') {\n           \
    \ $cnt++;\n        } elsif ($c eq ')') {\n            $cnt--;\n        }\n   \
    \     return \"No\" if $cnt < 0;\n    }\n    return \"Yes\" if $cnt == 0;\n  \
    \  return \"No\";\n}", "    my $str1 = $lst->[0];\n    my $str2 = $lst->[1];\n\
    \    my $str = $str1 . $str2;\n    my $count = 0;\n    for my $c (split //, $str)\
    \ {\n        if ($c eq '(') {\n            $count++;\n        } elsif ($c eq ')')\
    \ {\n            $count--;\n        }\n        if ($count < 0) {\n           \
    \ return \"No\";\n        }\n    }\n    if ($count == 0) {\n        return \"\
    Yes\";\n    } else {\n        return \"No\";\n    }\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

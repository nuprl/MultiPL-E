name: HumanEval_59_largest_prime_factor
language: pl
prompt: "# Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  # >>> largest_prime_factor(13195)\n# 29\n# >>> largest_prime_factor(2048)\n# 2\n\
  sub largest_prime_factor {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&largest_prime_factor;\n\
  \        if(eq_deeply($candidate->(15),5)) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(27),3)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(63),7))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(330),11))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(13195),29))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $i = 2;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n\
    \            $n /= $i;\n        } else {\n            $i++;\n        }\n    }\n\
    \    return $n;\n}", "    my $i = 2;\n    while ($i * $i <= $n) {\n        if\
    \ ($n % $i == 0) {\n            $n /= $i;\n        } else {\n            $i++;\n\
    \        }\n    }\n    return $n;\n}", "    my $i = 2;\n    while ($i < $n) {\n\
    \        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n      \
    \      $i++;\n        }\n    }\n    return $n;\n}", "    my $lpf = 1;\n    my\
    \ $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n            $lpf\
    \ = $i;\n            $n /= $i;\n        } else {\n            $i++;\n        }\n\
    \    }\n    return $lpf;\n}", "    my $i = 2;\n    while ($i < $n) {\n       \
    \ if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n            $i++;\n\
    \        }\n    }\n    return $n;\n}", "    my $factor = 2;\n    while ($n > 1)\
    \ {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n        } else\
    \ {\n            $factor++;\n        }\n    }\n    return $factor;\n}", "    my\
    \ $p = 2;\n    while ($n > 1) {\n        if ($n % $p == 0) {\n            $n /=\
    \ $p;\n        } else {\n            $p++;\n        }\n    }\n    return $p;\n\
    }", "    my $factor = 2;\n    while ($n > 1) {\n        if ($n % $factor == 0)\
    \ {\n            $n /= $factor;\n        } else {\n            $factor++;\n  \
    \      }\n    }\n    return $factor;\n}", "    my $i = 2;\n    while ($i < $n)\
    \ {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else {\n  \
    \          $i++;\n        }\n    }\n    return $n;\n}", "    my $i = 2;\n    while\
    \ ($i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        }\
    \ else {\n            $i++;\n        }\n    }\n    return $i;\n}", "    my $i\
    \ = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i == 0) {\n           \
    \ $n /= $i;\n        } else {\n            $i++;\n        }\n    }\n    return\
    \ $n;\n}", "    my $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0)\
    \ {\n            $n /= $i;\n        } else {\n            $i++;\n        }\n \
    \   }\n    return $i;\n}", "    my $i = 2;\n    while ($i < $n) {\n        if\
    \ ($n % $i == 0) {\n            $n /= $i;\n        } else {\n            $i++;\n\
    \        }\n    }\n    return $n;\n}", "    my $factor = 2;\n    while ($n > 1)\
    \ {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n        } else\
    \ {\n            $factor++;\n        }\n    }\n    return $factor;\n}", "    my\
    \ $i = 2;\n    my $max = 0;\n    while ($i <= $n) {\n        if ($n % $i == 0)\
    \ {\n            $max = $i;\n            $n /= $i;\n        } else {\n       \
    \     $i++;\n        }\n    }\n    return $max;\n}", "    my $i = 2;\n    while\
    \ ($i < $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n        } else\
    \ {\n            $i++;\n        }\n    }\n    return $n;\n}", "    my $i = 2;\n\
    \    while ($i * $i <= $n) {\n        if ($n % $i == 0) {\n            $n /= $i;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $n;\n}", " \
    \   my $factor = 2;\n    while ($n > 1) {\n        if ($n % $factor == 0) {\n\
    \            $n /= $factor;\n        } else {\n            $factor++;\n      \
    \  }\n    }\n    return $factor;\n}", "    my $factor = 2;\n    while ($n > 1)\
    \ {\n        if ($n % $factor == 0) {\n            $n /= $factor;\n        } else\
    \ {\n            $factor++;\n        }\n    }\n    return $factor;\n}", "    my\
    \ $max = 1;\n    my $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0)\
    \ {\n            $max = $i;\n            $n /= $i;\n        } else {\n       \
    \     $i++;\n        }\n    }\n    return $max;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

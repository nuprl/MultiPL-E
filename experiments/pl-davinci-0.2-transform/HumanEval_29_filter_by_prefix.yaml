name: HumanEval_29_filter_by_prefix
language: pl
prompt: "# Filter an input list of strings only for ones that start with a given prefix.\n\
  # >>> filter_by_prefix([], \"a\")\n# []\n# >>> filter_by_prefix([\"abc\", \"bcd\"\
  , \"cde\", \"array\"], \"a\")\n# [\"abc\", \"array\"]\nsub filter_by_prefix {\n\
  \    my($strings, $prefix) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_by_prefix;\n\
  \        if(eq_deeply($candidate->([], \"john\"),[])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"xxx\", \"asd\"\
  , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\", \"xxxAAA\", \"\
  xxx\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return grep { /^\\Q$prefix\\E/ } @$strings;\n}", "    return grep\
    \ { /^\\Q$prefix\\E/ } @$strings;\n}", "    return [ grep { /^$prefix/ } @$strings\
    \ ];\n}", "    return grep { /^\\Q$prefix\\E/ } @$strings;\n}", "    return grep\
    \ { /^\\Q$prefix\\E/ } @$strings;\n}", "    my @result = ();\n    foreach my $s\
    \ (@$strings) {\n        if ($s =~ /^$prefix/) {\n            push @result, $s;\n\
    \        }\n    }\n    return @result;\n}", "    return [grep { /^\\Q$prefix\\\
    E/ } @$strings];\n}", "    my @filtered = ();\n    foreach my $string (@$strings)\
    \ {\n        if ($string =~ /^$prefix/) {\n            push @filtered, $string;\n\
    \        }\n    }\n    return @filtered;\n}", "    my @filtered = grep { /^$prefix/\
    \ } @$strings;\n    return \\@filtered;\n}", "    return grep { /^\\Q$prefix\\\
    E/ } @$strings;\n}", "    my @filtered;\n    foreach my $string (@$strings) {\n\
    \        if ($string =~ /^$prefix/) {\n            push @filtered, $string;\n\
    \        }\n    }\n    return @filtered;\n}", "    return [ grep { /^$prefix/\
    \ } @$strings ];\n}", "    my @filtered = grep { /^$prefix/ } @$strings;\n   \
    \ return @filtered;\n}", "    return grep { /^\\Q$prefix\\E/ } @$strings;\n}",
  "    my @filtered = grep { /^$prefix/ } @$strings;\n    return \\@filtered;\n}",
  "    return grep { /^\\Q$prefix\\E/ } @$strings;\n}", "    return [grep { /^\\Q$prefix\\\
    E/ } @$strings];\n}", "    return grep { /^\\Q$prefix\\E/ } @$strings;\n}", " \
    \   return grep { /^\\Q$prefix\\E/ } @$strings;\n}", "    return grep { /^\\Q$prefix\\\
    E/ } @$strings;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

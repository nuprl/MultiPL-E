name: HumanEval_122_add_elements
language: pl
prompt: "# Given a non-empty array of integers arr and an integer k, return\n# the\
  \ sum of the elements with at most two digits from the first k elements of arr.\n\
  # Example:\n# >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4)\n# 24\n# Constraints:\n\
  # 1. 1 <= len(arr) <= 100\n# 2. 1 <= k <= len(arr)\nsub add_elements {\n    my($arr,\
  \ $k) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&add_elements;\n\
  \        if(eq_deeply($candidate->([1, -2, -3, 41, 57, 76, 87, 88, 99], 3),-4))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([111,\
  \ 121, 3, 4000, 5, 6], 2),0)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([11, 21, 3, 90, 5, 6, 7, 8, 9], 4),125))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([111,\
  \ 21, 3, 4000, 5, 6, 7, 8, 9], 4),24)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->([1], 1),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    for my $i (0..$k-1) {\n        if ($arr->[$i]\
    \ < 100) {\n            $sum += $arr->[$i];\n        }\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        if ($arr->[$i] < 100)\
    \ {\n            $sum += $arr->[$i];\n        }\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    for my $i (0..$k-1) {\n        if ($arr->[$i] < 100) {\n\
    \            $sum += $arr->[$i];\n        }\n    }\n    return $sum;\n}", "  \
    \  my $sum = 0;\n    for my $i (0..$k-1) {\n        $sum += $arr->[$i] if $arr->[$i]\
    \ < 100;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1)\
    \ {\n        $sum += $arr->[$i] if $arr->[$i] < 100;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for (my $i = 0; $i < $k; $i++) {\n        if ($arr->[$i]\
    \ < 100) {\n            $sum += $arr->[$i];\n        }\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        if ($arr->[$i] < 100)\
    \ {\n            $sum += $arr->[$i];\n        }\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    for my $i (0..$k-1) {\n        my $num = $arr->[$i];\n  \
    \      if ($num < 100) {\n            $sum += $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        my $num = $arr->[$i];\n\
    \        if ($num < 100) {\n            $sum += $num;\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        $sum += $arr->[$i]\
    \ if $arr->[$i] < 100;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for\
    \ my $i (0..$k-1) {\n        $sum += $arr->[$i] if $arr->[$i] < 100;\n    }\n\
    \    return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        $sum\
    \ += $arr->[$i] if $arr->[$i] < 100;\n    }\n    return $sum;\n}", "    my $sum\
    \ = 0;\n    for my $i (0..$k-1) {\n        $sum += $arr->[$i] if $arr->[$i] <\
    \ 100;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1)\
    \ {\n        my $num = $arr->[$i];\n        if ($num < 10) {\n            $sum\
    \ += $num;\n        } elsif ($num < 100) {\n            $sum += $num;\n      \
    \  }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1)\
    \ {\n        my $num = $arr->[$i];\n        if ($num < 10) {\n            $sum\
    \ += $num;\n        } elsif ($num < 100) {\n            $sum += $num;\n      \
    \  }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1)\
    \ {\n        my $num = $arr->[$i];\n        if ($num < 100) {\n            $sum\
    \ += $num;\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for\
    \ my $i (0..$k-1) {\n        $sum += $arr->[$i] if $arr->[$i] < 100;\n    }\n\
    \    return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        if\
    \ ($arr->[$i] < 100) {\n            $sum += $arr->[$i];\n        }\n    }\n  \
    \  return $sum;\n}", "    my $sum = 0;\n    for my $i (0..$k-1) {\n        $sum\
    \ += $arr->[$i] if $arr->[$i] < 100;\n    }\n    return $sum;\n}", "    my $sum\
    \ = 0;\n    for my $i (0..$k-1) {\n        $sum += $arr->[$i] if $arr->[$i] <\
    \ 100;\n    }\n    return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

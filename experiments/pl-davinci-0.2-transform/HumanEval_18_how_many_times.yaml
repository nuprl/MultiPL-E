name: HumanEval_18_how_many_times
language: pl
prompt: "# Find how many times a given substring can be found in the original string.\
  \ Count overlaping cases.\n# >>> how_many_times(\"\", \"a\")\n# 0\n# >>> how_many_times(\"\
  aaa\", \"a\")\n# 3\n# >>> how_many_times(\"aaaa\", \"aa\")\n# 3\nsub how_many_times\
  \ {\n    my($string, $substring) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&how_many_times;\n\
  \        if(eq_deeply($candidate->(\"\", \"x\"),0)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"xyxyxyx\", \"x\"\
  ),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  cacacacac\", \"cac\"),4)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(\"john doe\", \"john\"),1)) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    my $index = 0;\n    while (1) {\n        $index\
    \ = index($string, $substring, $index);\n        last if $index == -1;\n     \
    \   $count++;\n        $index++;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    while ($string =~ /$substring/g) {\n        $count++;\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        if (substr($string, $i, length($substring)) eq $substring) {\n  \
    \          $count++;\n            $i += length($substring);\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $count;\n}", "    my $count =\
    \ 0;\n    my $i = 0;\n    while ($string =~ /$substring/g) {\n        $count++;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $length = length($substring);\n\
    \    for (my $i = 0; $i < length($string); $i++) {\n        if (substr($string,\
    \ $i, $length) eq $substring) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    while ($string =~ /$substring/g)\
    \ {\n        $count++;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my $pos = 0;\n    while (1) {\n        $pos = index($string, $substring, $pos);\n\
    \        last if $pos == -1;\n        $count++;\n        $pos++;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $pos = 0;\n    while (($pos = index($string,\
    \ $substring, $pos)) != -1) {\n        $count++;\n        $pos++;\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    while ($i < length($string))\
    \ {\n        if (substr($string, $i, length($substring)) eq $substring) {\n  \
    \          $count++;\n            $i += length($substring);\n        } else {\n\
    \            $i++;\n        }\n    }\n    return $count;\n}", "    my $count =\
    \ 0;\n    my $i = 0;\n    while ($i < length($string)) {\n        if (substr($string,\
    \ $i, length($substring)) eq $substring) {\n            $count++;\n          \
    \  $i += length($substring);\n        } else {\n            $i++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    while ($string =~ /$substring/g)\
    \ {\n        $count++;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   while ($string =~ /$substring/g) {\n        $count++;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    while ($string =~ /$substring/g) {\n        $count++;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $pos = 0;\n    while\
    \ ($string =~ /$substring/g) {\n        $count++;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $pos = 0;\n    while ($string =~ /$substring/g)\
    \ {\n        $count++;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   while ($string =~ /$substring/g) {\n        $count++;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    while ($string =~ /$substring/g) {\n        $count++;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    while ($string =~ /$substring/g)\
    \ {\n        $count++;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my $pos = 0;\n    while ($string =~ /$substring/g) {\n        $count++;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $pos = 0;\n    while\
    \ ($string =~ /$substring/g) {\n        $count++;\n    }\n    return $count;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

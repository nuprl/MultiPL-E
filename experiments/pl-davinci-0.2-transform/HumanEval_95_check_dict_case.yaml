name: HumanEval_95_check_dict_case
language: pl
prompt: "# Given a dictionary, return True if all keys are strings in lower \n# case\
  \ or all keys are strings in upper case, else return False.\n# The function should\
  \ return False is the given dictionary is empty.\n# Examples:\n# >>> check_dict_case({\"\
  a\" => \"apple\", \"b\" => \"banana\"})\n# 1\n# >>> check_dict_case({\"a\" => \"\
  apple\", \"A\" => \"banana\", \"B\" => \"banana\"})\n# \"\"\n# >>> check_dict_case({\"\
  a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"})\n# \"\"\n# >>> check_dict_case({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"})\n# \"\"\n# >>>\
  \ check_dict_case({\"STATE\" => \"NC\", \"ZIP\" => \"12345\"})\n# 1\nsub check_dict_case\
  \ {\n    my($dict) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_dict_case;\n\
  \        if(eq_deeply($candidate->({\"p\" => \"pineapple\", \"b\" => \"banana\"\
  }),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\"}),\"\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\"}),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->({\"fruit\" => \"\
  Orange\", \"taste\" => \"Sweet\"}),1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->({}),\"\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = 1;\n    my $is_lower = 0;\n    my $is_upper = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n    \
    \        $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n   \
    \         $is_upper = 1;\n        }\n        else {\n            $result = 0;\n\
    \            last;\n        }\n    }\n    if ($is_lower && $is_upper) {\n    \
    \    $result = 0;\n    }\n    return $result;\n}", "    my $result = 1;\n    my\
    \ $key_type = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type\
    \ eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type\
    \ = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type\
    \ = \"upper\";\n            } else {\n                $result = \"\";\n      \
    \          last;\n            }\n        } elsif ($key_type eq \"lower\") {\n\
    \            if ($key !~ /^[a-z]+$/) {\n                $result = \"\";\n    \
    \            last;\n            }\n        } elsif ($key_type eq \"upper\") {\n\
    \            if ($key !~ /^[A-Z]+$/) {\n                $result = \"\";\n    \
    \            last;\n            }\n        }\n    }\n    return $result;\n}",
  "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my($key, $value);\n    my($lower_case,\
    \ $upper_case);\n    $lower_case = 1;\n    $upper_case = 1;\n    while (($key,\
    \ $value) = each %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $lower_case\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $upper_case = 0;\n\
    \        }\n    }\n    return $lower_case || $upper_case;\n}", "    my $result\
    \ = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n      \
    \  if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n         \
    \       $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n \
    \               $key_type = \"upper\";\n            } else {\n               \
    \ $result = \"\";\n                last;\n            }\n        } else {\n  \
    \          if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/) {\n             \
    \   $result = \"\";\n                last;\n            } elsif ($key_type eq\
    \ \"upper\" && $key =~ /^[a-z]+$/) {\n                $result = \"\";\n      \
    \          last;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $result = 1;\n    my $key;\n    my $value;\n    my $key_case;\n    my $value_case;\n\
    \    my $key_case_prev;\n    my $value_case_prev;\n    my $key_case_prev_set =\
    \ 0;\n    my $value_case_prev_set = 0;\n    my $key_case_prev_set = 0;\n    my\
    \ $value_case_prev_set = 0;\n    my $key_case_prev_set = 0;\n    my $value_case_prev_set\
    \ = 0;\n    my $key_case_prev_set = 0;\n    my $value_case_prev_set = 0;\n   \
    \ my $key_case_prev_set = 0;\n    my $value_case_prev_set = 0;\n    my $key_case_prev_set\
    \ = 0;\n    my $value_case_prev_set = 0;\n    my $key_case_prev_set = 0;\n   \
    \ my $value_case_prev_set = 0;\n    my $key_case_prev_set = 0;\n    my $value_case_prev_set\
    \ = 0;\n    my $key_case_prev_set = 0;\n    my $value_case_prev_set = 0;\n   \
    \ my $key_case_prev_set = 0;\n    my $value_case_prev_set = 0;\n    my $key_case_prev_set\
    \ = 0;\n    my $value_case_prev_set = 0;\n    my $key_case_prev_set = 0;\n   \
    \ my $value_case_prev_set = 0;\n    my $key_case_prev_set = 0;\n    my $value_case_prev_set\
    \ = 0;\n    my $key_case_prev_set = 0;\n    my $value_case_prev_set = 0;\n   \
    \ my $key_case_prev_set = 0;\n    my $value_case_prev_set = 0;\n    my $key_case_prev_set\
    \ = 0;\n    my $value_case_prev_set = 0;\n    my $key_case_", "    my $ret = 1;\n\
    \    my $key;\n    my $val;\n    my $is_lower = 0;\n    my $is_upper = 0;\n  \
    \  my $is_empty = 1;\n    while(($key, $val) = each %$dict) {\n        $is_empty\
    \ = 0;\n        if ($key =~ /[a-z]/) {\n            $is_lower = 1;\n        }\n\
    \        if ($key =~ /[A-Z]/) {\n            $is_upper = 1;\n        }\n    }\n\
    \    if ($is_empty) {\n        $ret = \"\";\n    }\n    elsif ($is_lower && $is_upper)\
    \ {\n        $ret = \"\";\n    }\n    return $ret;\n}", "    my($key, $value);\n\
    \    my($lower_case, $upper_case);\n    $lower_case = $upper_case = 1;\n    while\
    \ (($key, $value) = each %$dict) {\n        if ($key =~ /[A-Z]/) {\n         \
    \   $lower_case = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $upper_case\
    \ = 0;\n        }\n    }\n    return $lower_case || $upper_case;\n}", "    my($key,\
    \ $val);\n    my($lower_case, $upper_case);\n    my($lower_count, $upper_count);\n\
    \    my($result);", "    my $result = 1;\n    my $key;\n    my $value;\n    my\
    \ $lower = 0;\n    my $upper = 0;\n    while (($key, $value) = each %$dict) {\n\
    \        if ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n        }\n     \
    \   if ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n        }\n    }\n   \
    \ if ($lower && $upper) {\n        $result = \"\";\n    }\n    return $result;\n\
    }", "    my $ret = 1;\n    my $key;\n    my $val;\n    my $key_type = \"\";\n\
    \    my $val_type = \"\";\n    my $key_type_count = 0;\n    my $val_type_count\
    \ = 0;\n    my $key_type_count_upper = 0;\n    my $key_type_count_lower = 0;\n\
    \    my $val_type_count_upper = 0;\n    my $val_type_count_lower = 0;\n    my\
    \ $key_type_count_string = 0;\n    my $val_type_count_string = 0;\n    my $key_type_count_number\
    \ = 0;\n    my $val_type_count_number = 0;\n    my $key_type_count_other = 0;\n\
    \    my $val_type_count_other = 0;\n    my $key_type_count_undef = 0;\n    my\
    \ $val_type_count_undef = 0;\n    my $key_type_count_hash = 0;\n    my $val_type_count_hash\
    \ = 0;\n    my $key_type_count_array = 0;\n    my $val_type_count_array = 0;\n\
    \    my $key_type_count_code = 0;\n    my $val_type_count_code = 0;\n    my $key_type_count_glob\
    \ = 0;\n    my $val_type_count_glob = 0;\n    my $key_type_count_ref = 0;\n  \
    \  my $val_type_count_ref = 0;\n    my $key_type_count_scalar = 0;\n    my $val_type_count_scalar\
    \ = 0;\n    my $key_type_count_other = 0;\n    my $val_type_count_other = 0;\n\
    \    my $key_type_count_undef = 0;\n    my $val_type_count_undef = 0;\n    my\
    \ $key_type_count_hash = 0;\n    my $val_type_count_hash = 0;\n    my $key_type_count_array\
    \ = 0;\n    my $", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper\
    \ = 1;\n        }\n        else {\n            return \"\";\n        }\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $result = 1;\n    my $lower =\
    \ 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[a-z]/) {\n            $lower = 1;\n        }\n        if ($key =~ /[A-Z]/)\
    \ {\n            $upper = 1;\n        }\n    }\n    if ($lower && $upper) {\n\
    \        $result = \"\";\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    my $first_key = \"\";\n    my $first_key_case = \"\";\n    my $key_case =\
    \ \"\";\n    foreach my $key (keys %$dict) {\n        if ($first_key eq \"\")\
    \ {\n            $first_key = $key;\n            $first_key_case = get_key_case($key);\n\
    \        } else {\n            $key_case = get_key_case($key);\n            if\
    \ ($key_case ne $first_key_case) {\n                $result = \"\";\n        \
    \        last;\n            }\n        }\n    }\n    return $result;\n}", "  \
    \  my $result = 1;\n    my $lower = 0;\n    my $upper = 0;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n\
    \        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        } else\
    \ {\n            $result = \"\";\n            last;\n        }\n    }\n    if\
    \ ($lower && $upper) {\n        $result = \"\";\n    }\n    return $result;\n}",
  "    my $ret = 1;\n    my $is_upper = 0;\n    my $is_lower = 0;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n \
    \       } else {\n            $ret = 0;\n            last;\n        }\n    }\n\
    \    if ($is_lower && $is_upper) {\n        $ret = 0;\n    }\n    return $ret;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my($key);\n    my($lower_case)\
    \ = 1;\n    my($upper_case) = 1;\n    foreach $key (keys %$dict) {\n        if\
    \ ($key =~ /[a-z]/) {\n            $upper_case = 0;\n        }\n        if ($key\
    \ =~ /[A-Z]/) {\n            $lower_case = 0;\n        }\n    }\n    return ($lower_case\
    \ || $upper_case);\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key !~ /^[a-z]+$/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key !~ /^[A-Z]+$/) {\n            $all_upper =\
    \ 0;\n        }\n    }\n    return $all_lower || $all_upper;\n}", "    my $result\
    \ = 1;\n    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    if ($all_lower == 0 && $all_upper == 0) {\n        $result = \"\
    \";\n    }\n    return $result;\n}", "    my($key, $val);\n    my($lower, $upper);\n\
    \    $lower = $upper = 0;\n    while (($key, $val) = each %$dict) {\n        if\
    \ ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper = 1;\n        } else {\n            return \"\";\n   \
    \     }\n    }\n    return $lower || $upper;\n}", "    my $all_lower = 1;\n  \
    \  my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $case = 0;\n    foreach my $key (keys %$dict) {\n        if ($case\
    \ == 0) {\n            if ($key =~ /^[a-z]+$/) {\n                $case = 1;\n\
    \            } elsif ($key =~ /^[A-Z]+$/) {\n                $case = 2;\n    \
    \        } else {\n                return \"\";\n            }\n        } elsif\
    \ ($case == 1) {\n            if ($key !~ /^[a-z]+$/) {\n                return\
    \ \"\";\n            }\n        } elsif ($case == 2) {\n            if ($key !~\
    \ /^[A-Z]+$/) {\n                return \"\";\n            }\n        }\n    }\n\
    \    return 1;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n    my\
    \ $case;\n    my $is_string;\n    my $is_lower;\n    my $is_upper;\n    my $is_number;\n\
    \    my $is_mixed;\n    my $is_empty;\n    my $is_valid;\n    my $is_invalid;\n\
    \    my $is_valid_key;\n    my $is_invalid_key;\n    my $is_valid_value;\n   \
    \ my $is_invalid_value;\n    my $is_valid_case;\n    my $is_invalid_case;\n  \
    \  my $is_valid_type;\n    my $is_invalid_type;\n    my $is_valid_dict;\n    my\
    \ $is_invalid_dict;\n    my $is_valid_dict_case;\n    my $is_invalid_dict_case;\n\
    \    my $is_valid_dict_type;\n    my $is_invalid_dict_type;\n    my $is_valid_dict_key;\n\
    \    my $is_invalid_dict_key;\n    my $is_valid_dict_value;\n    my $is_invalid_dict_value;\n\
    \    my $is_valid_dict_key_type;\n    my $is_invalid_dict_key_type;\n    my $is_valid_dict_value_type;\n\
    \    my $is_invalid_dict_value_type;\n    my $is_valid_dict_key_case;\n    my\
    \ $is_invalid_dict_key_case;\n    my $is_valid_dict_value_case;\n    my $is_invalid_dict_value_case;\n\
    \    my $is_valid_dict_key_value;\n    my $is_invalid_dict_key_value;\n    my\
    \ $is_valid_dict_key_value_type;\n    my $is_invalid_dict_key_value_type;\n  \
    \  my $is_valid_dict_key_value_case;\n    my $is_invalid_dict_key_value_case;\n\
    \    my $", "    my $result = 1;\n    my $key;\n    my $value;\n    my $lower_case\
    \ = 1;\n    my $upper_case = 1;\n    my $key_count = 0;\n    while (($key, $value)\
    \ = each %$dict) {\n        $key_count++;\n        if ($key =~ /[A-Z]/) {\n  \
    \          $lower_case = 0;\n        }\n        if ($key =~ /[a-z]/) {\n     \
    \       $upper_case = 0;\n        }\n    }\n    if ($key_count > 0) {\n      \
    \  if ($lower_case == 0 && $upper_case == 0) {\n            $result = \"\";\n\
    \        }\n    }\n    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return \"\"\
    ;\n        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $result =\
    \ 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n             \
    \   $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n     \
    \           $key_type = \"upper\";\n            } else {\n                $result\
    \ = \"\";\n                last;\n            }\n        } elsif ($key_type eq\
    \ \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n                $result\
    \ = \"\";\n                last;\n            }\n        } elsif ($key_type eq\
    \ \"upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n                $result\
    \ = \"\";\n                last;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    return $all_lower || $all_upper;\n}", "    my(@keys) =\
    \ keys %$dict;\n    my($key);\n    my($case) = 0;\n    foreach $key (@keys) {\n\
    \        if ($case == 0) {\n            if ($key =~ /^[a-z]+$/) {\n          \
    \      $case = 1;\n            } elsif ($key =~ /^[A-Z]+$/) {\n              \
    \  $case = 2;\n            } else {\n                return \"\";\n          \
    \  }\n        } else {\n            if ($case == 1) {\n                if ($key\
    \ !~ /^[a-z]+$/) {\n                    return \"\";\n                }\n    \
    \        } else {\n                if ($key !~ /^[A-Z]+$/) {\n               \
    \     return \"\";\n                }\n            }\n        }\n    }\n    return\
    \ 1;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n\
    \        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n    \
    \    }\n    }\n    return $all_lower || $all_upper;\n}", "    my $all_lower =\
    \ 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $is_lower = 0;\n    my $is_upper = 0;\n    my $is_mixed\
    \ = 0;\n    my $is_empty = 0;\n    my $is_string = 0;\n    my $is_number = 0;\n\
    \    my $is_other = 0;\n    my $is_all_string = 0;\n    my $is_all_number = 0;\n\
    \    my $is_all_other = 0;\n    my $is_all_lower = 0;\n    my $is_all_upper =\
    \ 0;\n    my $is_all_mixed = 0;\n    my $is_all_empty = 0;\n    my $is_all_string_lower\
    \ = 0;\n    my $is_all_string_upper = 0;\n    my $is_all_string_mixed = 0;\n \
    \   my $is_all_string_empty = 0;\n    my $is_all_number_lower = 0;\n    my $is_all_number_upper\
    \ = 0;\n    my $is_all_number_mixed = 0;\n    my $is_all_number_empty = 0;\n \
    \   my $is_all_other_lower = 0;\n    my $is_all_other_upper = 0;\n    my $is_all_other_mixed\
    \ = 0;\n    my $is_all_other_empty = 0;\n    my $is_all_lower_lower = 0;\n   \
    \ my $is_all_lower_upper = 0;\n    my $is_all_lower_mixed = 0;\n    my $is_all_lower_empty\
    \ = 0;\n    my $is_all_upper_lower = 0;\n    my $is_all_upper_upper = 0;\n   \
    \ my $is_all_upper_mixed = 0;\n    my $is_all_upper_empty = 0;\n    my $is_all_mixed_lower\
    \ = 0;\n    my $is_all_mixed_upper = 0;\n    my $is_all_mixed_mixed = 0;\n   \
    \ my $is_all_mixed_empty = 0;\n    my $is_all_empty_", "    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $result = 1;\n \
    \   my $flag = 0;\n    my $flag2 = 0;\n    foreach my $key (keys %$dict) {\n \
    \       if ($key =~ /[a-z]/) {\n            $flag = 1;\n        }\n        if\
    \ ($key =~ /[A-Z]/) {\n            $flag2 = 1;\n        }\n    }\n    if ($flag\
    \ == 1 && $flag2 == 1) {\n        $result = \"\";\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    my $first_key = \"\";\n    my $first_key_is_lower\
    \ = 0;\n    my $first_key_is_upper = 0;\n    my $key_is_lower = 0;\n    my $key_is_upper\
    \ = 0;\n    my $key_is_string = 0;\n    my $key_is_number = 0;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($first_key eq \"\") {\n            $first_key\
    \ = $key;\n            $first_key_is_lower = ($first_key =~ /^[a-z]+$/);\n   \
    \         $first_key_is_upper = ($first_key =~ /^[A-Z]+$/);\n        }\n     \
    \   $key_is_lower = ($key =~ /^[a-z]+$/);\n        $key_is_upper = ($key =~ /^[A-Z]+$/);\n\
    \        $key_is_string = ($key =~ /^[a-zA-Z]+$/);\n        $key_is_number = ($key\
    \ =~ /^[0-9]+$/);\n        if ($first_key_is_lower) {\n            if (!$key_is_lower)\
    \ {\n                $result = \"\";\n                last;\n            }\n \
    \       }\n        elsif ($first_key_is_upper) {\n            if (!$key_is_upper)\
    \ {\n                $result = \"\";\n                last;\n            }\n \
    \       }\n        else {\n            $result = \"\";\n            last;\n  \
    \      }\n    }\n    return $result;\n}", "    my $result = 1;\n    my $key_type\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\"\
    ) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\"\
    ;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"\
    upper\";\n            } else {\n                $result = \"\";\n            \
    \    last;\n            }\n        } else {\n            if ($key_type eq \"lower\"\
    \ && $key =~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n\
    \            } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n      \
    \          $result = \"\";\n                last;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $lower = 0;\n    my $upper = 0;\n    my $count = 0;\n    my $key_count\
    \ = 0;\n    my $value_count = 0;\n    my $key_value_count = 0;\n    my $key_value_lower_count\
    \ = 0;\n    my $key_value_upper_count = 0;\n    my $key_value_mixed_count = 0;\n\
    \    my $key_value_mixed_lower_count = 0;\n    my $key_value_mixed_upper_count\
    \ = 0;\n    my $key_value_mixed_lower_upper_count = 0;\n    my $key_value_mixed_upper_lower_count\
    \ = 0;\n    my $key_value_mixed_lower_upper_lower_count = 0;\n    my $key_value_mixed_upper_lower_upper_count\
    \ = 0;\n    my $key_value_mixed_lower_upper_lower_upper_count = 0;\n    my $key_value_mixed_upper_lower_upper_lower_count\
    \ = 0;\n    my $key_value_mixed_lower_upper_lower_upper_lower_count = 0;\n   \
    \ my $key_value_mixed_upper_lower_upper_lower_upper_count = 0;\n    my $key_value_mixed_lower_upper_lower_upper_lower_upper_count\
    \ = 0;\n    my $key_value_mixed_upper_lower_upper_lower_upper_lower_count = 0;\n\
    \    my $key_value_mixed_lower_upper_lower_upper_lower_upper_lower_count = 0;\n\
    \    my $key_value_mixed_upper_lower_upper_lower_upper_lower_upper_count = 0;\n\
    \    my $key_value_mixed_lower_upper_lower_upper_lower_upper_lower_upper_count\
    \ = 0;\n    my $key_value_mixed_upper_lower_upper_lower_upper_lower_upper_lower_count\
    \ = 0;\n    my $key_value_m", "    my $result = 1;\n    my $all_lower = 1;\n \
    \   my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    if (!($all_lower || $all_upper))\
    \ {\n        $result = \"\";\n    }\n    return $result;\n}", "    my $ret = 1;\n\
    \    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    if (!($all_lower || $all_upper)) {\n        $ret = \"\";\n    }\n    return\
    \ $ret;\n}", "    my $result = 1;\n    my $is_upper = 0;\n    my $is_lower = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n       \
    \     $is_upper = 1;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_lower\
    \ = 1;\n        }\n    }\n    if ($is_upper && $is_lower) {\n        $result =\
    \ 0;\n    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/)\
    \ {\n                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        }\n  \
    \  }\n    return $result;\n}", "    my $result = 1;\n    my $key_type = \"\";\n\
    \    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n     \
    \       if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n  \
    \          } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = \"\";\n                last;\n\
    \            }\n        } elsif ($key_type eq \"lower\") {\n            if ($key\
    \ !~ /^[a-z]+$/) {\n                $result = \"\";\n                last;\n \
    \           }\n        } elsif ($key_type eq \"upper\") {\n            if ($key\
    \ !~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n \
    \           }\n        }\n    }\n    return $result;\n}", "    my $is_lower =\
    \ 0;\n    my $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        if ($key =~\
    \ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n    }\n    return $is_lower\
    \ && !$is_upper || !$is_lower && $is_upper;\n}", "    my $all_lower = 1;\n   \
    \ my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my($key, $value);\n    my($lower, $upper);\n    $lower = 1;\n    $upper\
    \ = 1;\n    while (($key, $value) = each %$dict) {\n        if ($key =~ /[a-z]/)\
    \ {\n            $upper = 0;\n        }\n        if ($key =~ /[A-Z]/) {\n    \
    \        $lower = 0;\n        }\n    }\n    return $lower || $upper;\n}", "  \
    \  my $result = 1;\n    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key !~ /^[a-z]+$/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key !~ /^[A-Z]+$/) {\n            $all_upper =\
    \ 0;\n        }\n    }\n    if (!$all_lower && !$all_upper) {\n        $result\
    \ = \"\";\n    }\n    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $is_upper = 1;\n        }\n        else {\n            return \"\"\
    ;\n        }\n    }\n    if ($is_lower && $is_upper) {\n        return \"\";\n\
    \    }\n    else {\n        return 1;\n    }\n}", "    my $result = 1;\n    my\
    \ $key_type = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type\
    \ eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type\
    \ = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type\
    \ = \"upper\";\n            } else {\n                $result = \"\";\n      \
    \          last;\n            }\n        } elsif ($key_type eq \"lower\") {\n\
    \            if ($key !~ /^[a-z]+$/) {\n                $result = \"\";\n    \
    \            last;\n            }\n        } elsif ($key_type eq \"upper\") {\n\
    \            if ($key !~ /^[A-Z]+$/) {\n                $result = \"\";\n    \
    \            last;\n            }\n        }\n    }\n    return $result;\n}",
  "    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $flag1 = 1;\n \
    \       }\n        if ($key =~ /[a-z]/) {\n            $flag2 = 1;\n        }\n\
    \    }\n    if ($flag1 == 1 && $flag2 == 1) {\n        $flag = 0;\n    }\n   \
    \ else {\n        $flag = 1;\n    }\n    return $flag;\n}", "    my $is_lower\
    \ = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n        if ($key\
    \ =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n    }\n    return $is_lower\
    \ || $is_upper;\n}", "    my($key, $value);\n    my($all_lower, $all_upper);\n\
    \    my($result) = 1;", "    my $key;\n    my $val;\n    my $is_upper = 1;\n \
    \   my $is_lower = 1;\n    my $is_empty = 1;\n    foreach $key (keys %$dict) {\n\
    \        $is_empty = 0;\n        $val = $dict->{$key};\n        if ($key =~ /[A-Z]/)\
    \ {\n            $is_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n \
    \           $is_upper = 0;\n        }\n    }\n    if ($is_empty) {\n        return\
    \ \"\";\n    }\n    if ($is_upper || $is_lower) {\n        return 1;\n    }\n\
    \    return \"\";\n}", "    my $result = 1;\n    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n        \
    \    $is_upper = 1;\n        } else {\n            $result = 0;\n            last;\n\
    \        }\n    }\n    if ($is_lower && $is_upper) {\n        $result = 0;\n \
    \   }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n    my $value;\n\
    \    my $is_upper = 0;\n    my $is_lower = 0;\n    while (($key, $value) = each\
    \ %$dict) {\n        if ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n \
    \       }\n        elsif ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n\
    \        }\n        else {\n            $result = 0;\n            last;\n    \
    \    }\n    }\n    if ($is_upper && $is_lower) {\n        $result = 0;\n    }\n\
    \    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper\
    \ = 1;\n        }\n        else {\n            return \"\";\n        }\n    }\n\
    \    return $is_lower && $is_upper ? \"\" : 1;\n}", "    my $is_lower = 1;\n \
    \   my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /[A-Z]/) {\n            $is_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $is_upper = 0;\n        }\n    }\n    return $is_lower || $is_upper;\n\
    }", "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/)\
    \ {\n                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        }\n  \
    \  }\n    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper = 0;\n\
    \    my $is_mixed = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        elsif ($key\
    \ =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n        else {\n  \
    \          $is_mixed = 1;\n        }\n    }\n    return $is_lower && !$is_upper\
    \ && !$is_mixed;\n}", "    my $result = 1;\n    my $key_type = \"\";\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n            if ($key\
    \ =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n            } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\";\n           \
    \ } else {\n                $result = \"\";\n                last;\n         \
    \   }\n        } else {\n            if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/)\
    \ {\n                $result = \"\";\n                last;\n            } elsif\
    \ ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n                $result =\
    \ \"\";\n                last;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    my $key;\n    my $value;\n    my $is_upper = 1;\n\
    \    my $is_lower = 1;\n    my $is_empty = 1;\n    while (($key, $value) = each\
    \ %$dict) {\n        $is_empty = 0;\n        if ($key =~ /[A-Z]/) {\n        \
    \    $is_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_upper\
    \ = 0;\n        }\n    }\n    if ($is_empty) {\n        $result = \"\";\n    }\n\
    \    elsif ($is_upper == 0 && $is_lower == 0) {\n        $result = \"\";\n   \
    \ }\n    return $result;\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower\
    \ = 1;\n        }\n        if ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n\
    \        }\n    }\n    return $lower && $upper ? \"\" : 1;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $result = 1;\n    my $lower = 0;\n    my $upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[a-z]/) {\n\
    \            $lower = 1;\n        }\n        if ($key =~ /[A-Z]/) {\n        \
    \    $upper = 1;\n        }\n    }\n    if ($lower && $upper) {\n        $result\
    \ = \"\";\n    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $ret = 1;\n    my $is_upper = 0;\n    my $is_lower = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n \
    \       } else {\n            $ret = 0;\n            last;\n        }\n    }\n\
    \    if ($is_lower && $is_upper) {\n        $ret = 0;\n    }\n    return $ret;\n\
    }", "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/)\
    \ {\n                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = \"\";\n                last;\n            }\n        } else {\n\
    \            if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/) {\n           \
    \     $result = \"\";\n                last;\n            } elsif ($key_type eq\
    \ \"upper\" && $key =~ /^[a-z]+$/) {\n                $result = \"\";\n      \
    \          last;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\
    \ elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        } else {\n\
    \            return \"\";\n        }\n    }\n    return $is_lower || $is_upper;\n\
    }", "    my $ret = 1;\n    my $key;\n    my $value;\n    my $is_lower = 1;\n \
    \   my $is_upper = 1;\n    while (($key, $value) = each %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n    if ($is_lower\
    \ == 0 && $is_upper == 0) {\n        $ret = \"\";\n    }\n    return $ret;\n}",
  "    my($key, $value);\n    my($lower_case) = 1;\n    my($upper_case) = 1;\n   \
    \ my($result) = 1;\n    while (($key, $value) = each %$dict) {\n        if ($lower_case)\
    \ {\n            $lower_case = ($key =~ /^[a-z]+$/);\n        }\n        if ($upper_case)\
    \ {\n            $upper_case = ($key =~ /^[A-Z]+$/);\n        }\n    }\n    if\
    \ ($lower_case || $upper_case) {\n        $result = 1;\n    } else {\n       \
    \ $result = \"\";\n    }\n    return $result;\n}", "    my $all_lower = 1;\n \
    \   my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key !~ /^[a-z]+$/) {\n            $all_lower = 0;\n\
    \        }\n        if ($key !~ /^[A-Z]+$/) {\n            $all_upper = 0;\n \
    \       }\n    }\n    return $all_lower || $all_upper;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    return ($all_lower || $all_upper);\n}", "    my $result\
    \ = 1;\n    my $key_type = '';\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key_type eq '') {\n            if ($key =~ /^[a-z]+$/) {\n               \
    \ $key_type = 'lower';\n            } elsif ($key =~ /^[A-Z]+$/) {\n         \
    \       $key_type = 'upper';\n            } else {\n                $result =\
    \ '';\n                last;\n            }\n        } else {\n            if\
    \ ($key_type eq 'lower' && $key !~ /^[a-z]+$/) {\n                $result = '';\n\
    \                last;\n            } elsif ($key_type eq 'upper' && $key !~ /^[A-Z]+$/)\
    \ {\n                $result = '';\n                last;\n            }\n   \
    \     }\n    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n\
    \        elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n\
    \        else {\n            return \"\";\n        }\n    }\n    return $is_lower\
    \ || $is_upper;\n}", "    my @keys = keys %$dict;\n    my $lower = 0;\n    my\
    \ $upper = 0;\n    foreach my $key (@keys) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $lower++;\n        } elsif ($key =~ /^[A-Z]+$/) {\n         \
    \   $upper++;\n        }\n    }\n    if ($lower == scalar(@keys) || $upper ==\
    \ scalar(@keys)) {\n        return 1;\n    } else {\n        return \"\";\n  \
    \  }\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n\
    \        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n    \
    \    }\n    }\n    return $all_lower || $all_upper;\n}", "    my $key;\n    my\
    \ $value;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n    my $flag3\
    \ = 0;\n    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7\
    \ = 0;\n    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11\
    \ = 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my\
    \ $flag15 = 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n\
    \    my $flag19 = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22\
    \ = 0;\n    my $flag23 = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my\
    \ $flag26 = 0;\n    my $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n\
    \    my $flag30 = 0;\n    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33\
    \ = 0;\n    my $flag34 = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my\
    \ $flag37 = 0;\n    my $flag38 = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n\
    \    my $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43 = 0;\n    my $flag44\
    \ = 0;\n    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47 = 0;\n    my\
    \ $flag48 = 0;\n    my $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51 = 0;\n\
    \    my $flag52 = 0;\n    my $flag53 = 0;\n    my $flag54 = 0;\n    my $flag55",
  "    my $ret = 1;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $flag2 = 0;\n \
    \   my $flag3 = 0;\n    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n\
    \    my $flag7 = 0;\n    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 =\
    \ 0;\n    my $flag11 = 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14\
    \ = 0;\n    my $flag15 = 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my\
    \ $flag18 = 0;\n    my $flag19 = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n\
    \    my $flag22 = 0;\n    my $flag23 = 0;\n    my $flag24 = 0;\n    my $flag25\
    \ = 0;\n    my $flag26 = 0;\n    my $flag27 = 0;\n    my $flag28 = 0;\n    my\
    \ $flag29 = 0;\n    my $flag30 = 0;\n    my $flag31 = 0;\n    my $flag32 = 0;\n\
    \    my $flag33 = 0;\n    my $flag34 = 0;\n    my $flag35 = 0;\n    my $flag36\
    \ = 0;\n    my $flag37 = 0;\n    my $flag38 = 0;\n    my $flag39 = 0;\n    my\
    \ $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43 = 0;\n\
    \    my $flag44 = 0;\n    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47\
    \ = 0;\n    my $flag48 = 0;\n    my $flag49 = 0;\n    my $flag50 = 0;\n    my\
    \ $flag51 = 0;\n    my $flag52 = 0;\n    my $flag53 = 0;\n    my $flag54 = 0;\n\
    \    my $flag55 = 0;\n", "    my $retval = 1;\n    my $key_type = \"\";\n    my\
    \ $key_type_count = 0;\n    foreach my $key (keys %$dict) {\n        if ($key_type_count\
    \ == 0) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type =\
    \ \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type\
    \ = \"upper\";\n            } else {\n                $retval = \"\";\n      \
    \          last;\n            }\n            $key_type_count++;\n        } else\
    \ {\n            if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/) {\n       \
    \         $retval = \"\";\n                last;\n            } elsif ($key_type\
    \ eq \"upper\" && $key =~ /^[a-z]+$/) {\n                $retval = \"\";\n   \
    \             last;\n            }\n        }\n    }\n    return $retval;\n}",
  "    my($key, $val);\n    my($first_key) = \"\";\n    my($first_key_case) = \"\"\
    ;\n    my($case) = \"\";\n    my($retval) = 1;", "    my $ret = 1;\n    my $key_case;\n\
    \    foreach my $key (keys %$dict) {\n        if (defined $key_case) {\n     \
    \       if ($key_case == 0) {\n                if ($key =~ /[A-Z]/) {\n      \
    \              $ret = 0;\n                    last;\n                }\n     \
    \       } else {\n                if ($key =~ /[a-z]/) {\n                   \
    \ $ret = 0;\n                    last;\n                }\n            }\n   \
    \     } else {\n            if ($key =~ /[A-Z]/) {\n                $key_case\
    \ = 1;\n            } else {\n                $key_case = 0;\n            }\n\
    \        }\n    }\n    return $ret;\n}", "    my $ret = 1;\n    my $key;\n   \
    \ my $val;\n    my $first_key;\n    my $first_val;\n    my $first_key_type;\n\
    \    my $first_val_type;\n    my $key_type;\n    my $val_type;\n    my $key_is_upper;\n\
    \    my $key_is_lower;\n    my $val_is_upper;\n    my $val_is_lower;\n    my $key_is_string;\n\
    \    my $val_is_string;\n    my $key_is_number;\n    my $val_is_number;\n    my\
    \ $key_is_boolean;\n    my $val_is_boolean;\n    my $key_is_array;\n    my $val_is_array;\n\
    \    my $key_is_dict;\n    my $val_is_dict;\n    my $key_is_null;\n    my $val_is_null;\n\
    \    my $key_is_undef;\n    my $val_is_undef;\n    my $key_is_ref;\n    my $val_is_ref;\n\
    \    my $key_is_obj;\n    my $val_is_obj;\n    my $key_is_scalar;\n    my $val_is_scalar;\n\
    \    my $key_is_code;\n    my $val_is_code;\n    my $key_is_glob;\n    my $val_is_glob;\n\
    \    my $key_is_format;\n    my $val_is_format;\n    my $key_is_vstring;\n   \
    \ my $val_is_vstring;\n    my $key_is_regex;\n    my $val_is_regex;\n    my $key_is_filehandle;\n\
    \    my $val_is_filehandle;\n    my $key_is_dirhandle;\n    my $val_is_dirhandle;\n\
    \    my $key_is_socket;\n    my $val_is_socket;\n    my $key_is_thread;\n    my\
    \ $val_is_thread;\n   ", "    my $result = 1;\n    my $all_lower = 1;\n    my\
    \ $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/)\
    \ {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n\
    \            $all_upper = 0;\n        }\n    }\n    if (!$all_lower && !$all_upper)\
    \ {\n        $result = \"\";\n    }\n    return $result;\n}", "    my $lower =\
    \ 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $lower++;\n        }\n        elsif ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper++;\n        }\n        else {\n            return \"\"\
    ;\n        }\n    }\n    return $lower == keys %$dict || $upper == keys %$dict;\n\
    }", "    my $ret = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /[A-Z]/) {\n            $ret = 0;\n            last;\n        }\n    }\n   \
    \ return $ret;\n}", "    my $key;\n    my $value;\n    my $result = 1;\n    my\
    \ $lower = 1;\n    my $upper = 1;\n    while (($key, $value) = each %$dict) {\n\
    \        if ($key =~ /[A-Z]/) {\n            $lower = 0;\n        }\n        if\
    \ ($key =~ /[a-z]/) {\n            $upper = 0;\n        }\n    }\n    if ($lower\
    \ == 0 && $upper == 0) {\n        $result = \"\";\n    }\n    return $result;\n\
    }", "    my($key, $value);\n    my($lower, $upper);\n    my($result) = 1;\n  \
    \  while(($key, $value) = each %$dict) {\n        if($key =~ /^[a-z]+$/) {\n \
    \           $lower = 1;\n        }\n        elsif($key =~ /^[A-Z]+$/) {\n    \
    \        $upper = 1;\n        }\n        else {\n            $result = \"\";\n\
    \            last;\n        }\n    }\n    if($lower && $upper) {\n        $result\
    \ = \"\";\n    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return ($all_lower || $all_upper);\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $is_lower = 0;\n\
    \    my $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[a-z]/) {\n            $is_lower = 1;\n        }\n        if ($key =~ /[A-Z]/)\
    \ {\n            $is_upper = 1;\n        }\n    }\n    return ($is_lower && $is_upper)\
    \ ? \"\" : 1;\n}", "    my $result = 1;\n    my $first_key = undef;\n    my $first_key_is_upper\
    \ = undef;\n    foreach my $key (keys %$dict) {\n        if (!defined $first_key)\
    \ {\n            $first_key = $key;\n            $first_key_is_upper = ($key eq\
    \ uc($key));\n        }\n        if ($key eq uc($key) != $first_key_is_upper)\
    \ {\n            $result = \"\";\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = 0;\n    my $lower = 0;\n    my $upper = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n    \
    \        $lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n      \
    \      $upper = 1;\n        }\n        else {\n            return \"\";\n    \
    \    }\n    }\n    if ($lower && $upper) {\n        return \"\";\n    }\n    else\
    \ {\n        return 1;\n    }\n}", "    my $result = 1;\n    my $flag = 0;\n \
    \   my $flag1 = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $flag = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $flag1 = 1;\n        }\n        else {\n            $result = 0;\n\
    \        }\n    }\n    if ($flag == 1 && $flag1 == 1) {\n        $result = 0;\n\
    \    }\n    return $result;\n}", "    my $lower = 0;\n    my $upper = 0;\n   \
    \ foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n       \
    \     $lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n         \
    \   $upper = 1;\n        }\n        else {\n            return \"\";\n       \
    \ }\n    }\n    return $lower && $upper ? \"\" : 1;\n}", "    my $result = 1;\n\
    \    my $key;\n    my $value;\n    my $is_lower = 0;\n    my $is_upper = 0;\n\
    \    my $is_empty = 1;\n    while (($key, $value) = each %$dict) {\n        $is_empty\
    \ = 0;\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n      \
    \  }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n     \
    \   }\n        else {\n            $result = 0;\n            last;\n        }\n\
    \    }\n    if ($is_empty) {\n        $result = 0;\n    }\n    elsif ($is_lower\
    \ && $is_upper) {\n        $result = 0;\n    }\n    return $result;\n}", "   \
    \ my $result = 1;\n    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    if ($all_lower == 0 && $all_upper == 0) {\n        $result\
    \ = \"\";\n    }\n    return $result;\n}", "    my $result = 1;\n    my $key;\n\
    \    my $value;\n    my $lower = 0;\n    my $upper = 0;\n    while (($key, $value)\
    \ = each %$dict) {\n        if ($key =~ /[a-z]/) {\n            $lower++;\n  \
    \      }\n        if ($key =~ /[A-Z]/) {\n            $upper++;\n        }\n \
    \   }\n    if ($lower > 0 && $upper > 0) {\n        $result = \"\";\n    }\n \
    \   return $result;\n}", "    my $result = 1;\n    my $key_type = undef;\n   \
    \ foreach my $key (keys %$dict) {\n        if (not defined $key_type) {\n    \
    \        $key_type = ($key =~ /^[a-z]*$/) ? 1 : 2;\n        }\n        if ($key_type\
    \ == 1) {\n            $result = 0 if ($key !~ /^[a-z]*$/);\n        }\n     \
    \   else {\n            $result = 0 if ($key !~ /^[A-Z]*$/);\n        }\n    }\n\
    \    return $result;\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach\
    \ my $k (keys %$dict) {\n        if ($k =~ /^[a-z]+$/) {\n            $lower =\
    \ 1;\n        } elsif ($k =~ /^[A-Z]+$/) {\n            $upper = 1;\n        }\
    \ else {\n            return \"\";\n        }\n    }\n    return $lower || $upper;\n\
    }", "    my $result = 1;\n    my $key;\n    my $value;\n    my $is_lower = 0;\n\
    \    my $is_upper = 0;\n    my $is_string = 0;\n    my $is_empty = 1;\n    while\
    \ (($key, $value) = each %$dict) {\n        $is_empty = 0;\n        $is_string\
    \ = $key =~ /^[a-zA-Z]+$/;\n        $is_lower = $key =~ /^[a-z]+$/;\n        $is_upper\
    \ = $key =~ /^[A-Z]+$/;\n        if (!$is_string || ($is_lower && $is_upper))\
    \ {\n            $result = \"\";\n            last;\n        }\n    }\n    if\
    \ ($is_empty) {\n        $result = \"\";\n    }\n    return $result;\n}", "  \
    \  my $result = 1;\n    my $key;\n    my $value;\n    my $lc_key;\n    my $uc_key;\n\
    \    my $lc_value;\n    my $uc_value;\n    my $lc_keys = 0;\n    my $uc_keys =\
    \ 0;\n    my $lc_values = 0;\n    my $uc_values = 0;\n    my $lc_key_value = 0;\n\
    \    my $uc_key_value = 0;\n    my $lc_value_key = 0;\n    my $uc_value_key =\
    \ 0;\n    my $lc_key_value_key = 0;\n    my $uc_key_value_key = 0;\n    my $lc_value_key_value\
    \ = 0;\n    my $uc_value_key_value = 0;\n    my $lc_key_value_value = 0;\n   \
    \ my $uc_key_value_value = 0;\n    my $lc_value_value_key = 0;\n    my $uc_value_value_key\
    \ = 0;\n    my $lc_value_value_value = 0;\n    my $uc_value_value_value = 0;\n\
    \    my $lc_key_key_value = 0;\n    my $uc_key_key_value = 0;\n    my $lc_key_key_key\
    \ = 0;\n    my $uc_key_key_key = 0;\n    my $lc_key_value_key_value = 0;\n   \
    \ my $uc_key_value_key_value = 0;\n    my $lc_key_value_value_key = 0;\n    my\
    \ $uc_key_value_value_key = 0;\n    my $lc_value_key_value_key = 0;\n    my $uc_value_key_value_key\
    \ = 0;\n    my $lc_value_key_key_value = 0;\n    my $uc_value_key_key_value =\
    \ 0;\n    my $lc_value_value_key_value = 0;\n    my $uc_value_value_key_value\
    \ = 0;\n    my $lc_value_value_value_key = 0;", "    my $result = 1;\n    my $flag\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($flag == 0) {\n     \
    \       if ($key =~ /[a-z]/) {\n                $flag = 1;\n            } elsif\
    \ ($key =~ /[A-Z]/) {\n                $flag = 2;\n            } else {\n    \
    \            $result = 0;\n                last;\n            }\n        } else\
    \ {\n            if ($flag == 1) {\n                if ($key =~ /[A-Z]/) {\n \
    \                   $result = 0;\n                    last;\n                }\n\
    \            } else {\n                if ($key =~ /[a-z]/) {\n              \
    \      $result = 0;\n                    last;\n                }\n          \
    \  }\n        }\n    }\n    return $result;\n}", "    my $flag = 0;\n    my $flag1\
    \ = 0;\n    my $flag2 = 0;\n    my $flag3 = 0;\n    my $flag4 = 0;\n    my $flag5\
    \ = 0;\n    my $flag6 = 0;\n    my $flag7 = 0;\n    my $flag8 = 0;\n    my $flag9\
    \ = 0;\n    my $flag10 = 0;\n    my $flag11 = 0;\n    my $flag12 = 0;\n    my\
    \ $flag13 = 0;\n    my $flag14 = 0;\n    my $flag15 = 0;\n    my $flag16 = 0;\n\
    \    my $flag17 = 0;\n    my $flag18 = 0;\n    my $flag19 = 0;\n    my $flag20\
    \ = 0;\n    my $flag21 = 0;\n    my $flag22 = 0;\n    my $flag23 = 0;\n    my\
    \ $flag24 = 0;\n    my $flag25 = 0;\n    my $flag26 = 0;\n    my $flag27 = 0;\n\
    \    my $flag28 = 0;\n    my $flag29 = 0;\n    my $flag30 = 0;\n    my $flag31\
    \ = 0;\n    my $flag32 = 0;\n    my $flag33 = 0;\n    my $flag34 = 0;\n    my\
    \ $flag35 = 0;\n    my $flag36 = 0;\n    my $flag37 = 0;\n    my $flag38 = 0;\n\
    \    my $flag39 = 0;\n    my $flag40 = 0;\n    my $flag41 = 0;\n    my $flag42\
    \ = 0;\n    my $flag43 = 0;\n    my $flag44 = 0;\n    my $flag45 = 0;\n    my\
    \ $flag46 = 0;\n    my $flag47 = 0;\n    my $flag48 = 0;\n    my $flag49 = 0;\n\
    \    my $flag50 = 0;\n    my $flag51 = 0;\n    my $flag52 = 0;\n    my $flag53\
    \ = 0;\n    my $flag54 = 0;\n    my $flag55 = 0;\n    my $flag56 = 0;", "    my\
    \ $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key !~ /^[a-z]+$/) {\n            $is_lower = 0;\n        }\n  \
    \      if ($key !~ /^[A-Z]+$/) {\n            $is_upper = 0;\n        }\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return ($all_lower || $all_upper);\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $is_lower = 1;\n\
    \    my $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n        if ($key =~ /[A-Z]/)\
    \ {\n            $is_lower = 0;\n        }\n    }\n    return $is_lower || $is_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $ret = 1;\n    my\
    \ $key;\n    my $val;\n    my $lc_key;\n    my $uc_key;\n    my $lc_val;\n   \
    \ my $uc_val;\n    my $lc_dict = {};\n    my $uc_dict = {};\n    my $lc_keys =\
    \ 0;\n    my $uc_keys = 0;\n    my $lc_vals = 0;\n    my $uc_vals = 0;\n    my\
    \ $all_keys_lc = 1;\n    my $all_keys_uc = 1;\n    my $all_vals_lc = 1;\n    my\
    \ $all_vals_uc = 1;", "    my $lower = 0;\n    my $upper = 0;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower\
    \ = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n            $upper =\
    \ 1;\n        }\n        else {\n            return \"\";\n        }\n    }\n\
    \    if ($lower && $upper) {\n        return \"\";\n    }\n    else {\n      \
    \  return 1;\n    }\n}", "    my $is_lower = 0;\n    my $is_upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        }\n        if ($key =~ /^[A-Z]+$/) {\n            $is_upper =\
    \ 1;\n        }\n    }\n    if ($is_lower && $is_upper) {\n        return \"\"\
    ;\n    }\n    return 1;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n       \
    \     $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n           \
    \ $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n}",
  "    my $result = 1;\n    my $key;\n    my $value;\n    my $lower = 0;\n    my $upper\
    \ = 0;\n    while (($key, $value) = each %$dict) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $lower = 1;\n        }\n        elsif ($key =~ /^[A-Z]+$/) {\n\
    \            $upper = 1;\n        }\n        else {\n            $result = \"\"\
    ;\n            last;\n        }\n    }\n    if ($lower && $upper) {\n        $result\
    \ = \"\";\n    }\n    return $result;\n}", "    my $ret = 1;\n    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n    if (!$all_lower\
    \ && !$all_upper) {\n        $ret = \"\";\n    }\n    return $ret;\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n    \
    \    if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n \
    \   return ($all_lower || $all_upper);\n}", "    my $result = 1;\n    my $is_lower\
    \ = 0;\n    my $is_upper = 0;\n    my $key;\n    foreach $key (keys %$dict) {\n\
    \        if (lc($key) eq $key) {\n            $is_lower = 1;\n        }\n    \
    \    if (uc($key) eq $key) {\n            $is_upper = 1;\n        }\n    }\n \
    \   if ($is_lower && $is_upper) {\n        $result = \"\";\n    }\n    return\
    \ $result;\n}", "    my $ret = 1;\n    my $key;\n    my $val;\n    my $is_upper\
    \ = 1;\n    my $is_lower = 1;\n    my $is_empty = 1;\n    while (($key, $val)\
    \ = each %$dict) {\n        $is_empty = 0;\n        if ($key =~ /[A-Z]/) {\n \
    \           $is_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n      \
    \      $is_upper = 0;\n        }\n    }\n    if ($is_empty) {\n        $ret =\
    \ \"\";\n    } elsif ($is_upper == 0 && $is_lower == 0) {\n        $ret = \"\"\
    ;\n    }\n    return $ret;\n}", "    my $is_upper = 0;\n    my $is_lower = 0;\n\
    \    my $is_mixed = 0;\n    my $is_empty = 0;\n    my $is_string = 0;\n    my\
    \ $is_number = 0;\n    my $is_other = 0;\n    my $is_all_string = 0;\n    my $is_all_number\
    \ = 0;\n    my $is_all_other = 0;\n    my $is_all_upper = 0;\n    my $is_all_lower\
    \ = 0;\n    my $is_all_mixed = 0;\n    my $is_all_empty = 0;\n    my $is_all_upper_or_lower\
    \ = 0;\n    my $is_all_upper_and_lower = 0;\n    my $is_all_upper_and_lower_and_mixed\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other_and_string\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other_and_string_and_number\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other_and_string_and_number_and_upper\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other_and_string_and_number_and_upper_and_lower\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other_and_string_and_number_and_upper_and_lower_and_mixed\
    \ = 0;\n    my $is_all_upper_and_lower_and_mixed_and_empty_and_other_and_string_and_number_and_upper_and_lower_",
  "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n\
    \                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        }\n  \
    \  }\n    return $result;\n}", "    my $result = 1;\n    my $key_type = \"\";\n\
    \    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n     \
    \       if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n  \
    \          } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = \"\";\n                last;\n\
    \            }\n        } elsif ($key_type eq \"lower\") {\n            if ($key\
    \ !~ /^[a-z]+$/) {\n                $result = \"\";\n                last;\n \
    \           }\n        } elsif ($key_type eq \"upper\") {\n            if ($key\
    \ !~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n \
    \           }\n        }\n    }\n    return $result;\n}", "    my $lower = 1;\n\
    \    my $upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~\
    \ /[A-Z]/) {\n            $lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $upper = 0;\n        }\n    }\n    return $lower || $upper;\n\
    }", "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/)\
    \ {\n                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"lower\") {\n            if ($key !~ /^[a-z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        } elsif\
    \ ($key_type eq \"upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n        \
    \        $result = \"\";\n                last;\n            }\n        }\n  \
    \  }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n       \
    \     $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n           \
    \ $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n}",
  "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my @keys = keys %$dict;\n    my\
    \ $first_key = $keys[0];\n    my $first_key_case = $first_key =~ /[A-Z]/ ? \"\
    upper\" : \"lower\";\n    foreach my $key (@keys) {\n        my $key_case = $key\
    \ =~ /[A-Z]/ ? \"upper\" : \"lower\";\n        if ($key_case ne $first_key_case)\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $flag\
    \ = 0;\n    my $flag_lower = 0;\n    my $flag_upper = 0;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $flag_upper = 1;\n\
    \        }\n        if ($key =~ /[a-z]/) {\n            $flag_lower = 1;\n   \
    \     }\n    }\n    if ($flag_lower == 1 && $flag_upper == 1) {\n        $flag\
    \ = 0;\n    }\n    else {\n        $flag = 1;\n    }\n    return $flag;\n}", " \
    \   my $result = 1;\n    my $upper = 1;\n    my $lower = 1;\n    my @keys = keys\
    \ %$dict;\n    foreach my $key (@keys) {\n        if ($key =~ /[A-Z]/) {\n   \
    \         $lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n           \
    \ $upper = 0;\n        }\n    }\n    if ($upper == 0 && $lower == 0) {\n     \
    \   $result = \"\";\n    }\n    return $result;\n}", "    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return ($all_lower ||\
    \ $all_upper);\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    return $all_lower || $all_upper;\n}", "    my $result =\
    \ 1;\n    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n        }\n   \
    \     elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        }\n       \
    \ else {\n            $result = \"\";\n            last;\n        }\n    }\n \
    \   if ($lower > 0 && $upper > 0) {\n        $result = \"\";\n    }\n    return\
    \ $result;\n}", "    my $ret = 1;\n    my $case = \"\";\n    foreach my $key (keys\
    \ %$dict) {\n        if ($case eq \"\") {\n            if ($key =~ /^[a-z]+$/)\
    \ {\n                $case = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $case = \"upper\";\n            } else {\n              \
    \  $ret = \"\";\n                last;\n            }\n        } else {\n    \
    \        if ($case eq \"lower\" && $key =~ /^[A-Z]+$/) {\n                $ret\
    \ = \"\";\n                last;\n            } elsif ($case eq \"upper\" && $key\
    \ =~ /^[a-z]+$/) {\n                $ret = \"\";\n                last;\n    \
    \        }\n        }\n    }\n    return $ret;\n}", "    my $keys = keys %$dict;\n\
    \    return 0 if $keys == 0;\n    my $flag = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $flag = 1;\n        }\n     \
    \   else {\n            $flag = 0;\n            last;\n        }\n    }\n    return\
    \ $flag;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    return $all_lower || $all_upper;\n}", "    my $result =\
    \ \"\";\n    my $key;\n    my $value;\n    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    my $is_empty = 1;\n    while (($key, $value) = each %$dict) {\n  \
    \      $is_empty = 0;\n        if ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        }\n        if ($key =~ /^[A-Z]+$/) {\n            $is_upper =\
    \ 1;\n        }\n    }\n    if ($is_lower && !$is_upper) {\n        $result =\
    \ 1;\n    }\n    if ($is_upper && !$is_lower) {\n        $result = 1;\n    }\n\
    \    if ($is_empty) {\n        $result = \"\";\n    }\n    return $result;\n}",
  "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $ret = 1;\n    my $key_type\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\"\
    ) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\"\
    ;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"\
    upper\";\n            } else {\n                $ret = \"\";\n               \
    \ last;\n            }\n        } else {\n            if ($key_type eq \"lower\"\
    \ && $key =~ /^[A-Z]+$/) {\n                $ret = \"\";\n                last;\n\
    \            } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n      \
    \          $ret = \"\";\n                last;\n            }\n        }\n   \
    \ }\n    return $ret;\n}", "    my $result = 1;\n    my $key_type = \"\";\n  \
    \  foreach my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n       \
    \     if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n    \
    \        } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = \"\";\n                last;\n\
    \            }\n        } else {\n            if ($key_type eq \"lower\" && $key\
    \ =~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n \
    \           } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n       \
    \         $result = \"\";\n                last;\n            }\n        }\n \
    \   }\n    return $result;\n}", "    my $is_lower = 0;\n    my $is_upper = 0;\n\
    \    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n    \
    \        $is_lower = 1;\n        }\n        if ($key =~ /^[A-Z]+$/) {\n      \
    \      $is_upper = 1;\n        }\n    }\n    if ($is_lower && $is_upper) {\n \
    \       return \"\";\n    }\n    return 1;\n}", "    my $is_lower = 1;\n    my\
    \ $is_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/)\
    \ {\n            $is_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n \
    \           $is_upper = 0;\n        }\n    }\n    return $is_lower || $is_upper;\n\
    }", "    my $ret = \"\";\n    my $key;\n    my $value;\n    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    my $all_string = 1;\n    my $all_number = 1;\n  \
    \  my $all_symbol = 1;\n    my $all_mixed = 1;\n    my $all_same = 1;\n    my\
    \ $first_key = \"\";\n    my $first_value = \"\";\n    my $first_key_type = \"\
    \";\n    my $first_value_type = \"\";\n    my $key_type = \"\";\n    my $value_type\
    \ = \"\";\n    my $key_type_count = 0;\n    my $value_type_count = 0;\n    my\
    \ $key_type_count_max = 0;\n    my $value_type_count_max = 0;\n    my $key_type_count_min\
    \ = 0;\n    my $value_type_count_min = 0;\n    my $key_type_count_avg = 0;\n \
    \   my $value_type_count_avg = 0;\n    my $key_type_count_sum = 0;\n    my $value_type_count_sum\
    \ = 0;\n    my $key_type_count_median = 0;\n    my $value_type_count_median =\
    \ 0;\n    my $key_type_count_mode = 0;\n    my $value_type_count_mode = 0;\n \
    \   my $key_type_count_stddev = 0;\n    my $value_type_count_stddev = 0;\n   \
    \ my $key_type_count_variance = 0;\n    my $value_type_count_variance = 0;\n \
    \   my $key_type_count_range = 0;\n    my $value_type_count_range = 0;\n    my\
    \ $key_type_count_midrange = 0;\n    my $value_type_count_midrange = 0;\n    my\
    \ $key_type_count_min_index = 0;\n    my $value_type_count_min_index = 0;\n  \
    \  my $key_type_", "    my $result = 1;\n    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n        \
    \    $is_upper = 1;\n        } else {\n            $result = 0;\n            last;\n\
    \        }\n    }\n    if ($is_lower && $is_upper) {\n        $result = 0;\n \
    \   }\n    return $result;\n}", "    my $result = 1;\n    my $key_type = \"\"\
    ;\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n   \
    \         if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n\
    \            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = \"\";\n                last;\n\
    \            }\n        } else {\n            if ($key_type eq \"lower\" && $key\
    \ =~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n \
    \           } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n       \
    \         $result = \"\";\n                last;\n            }\n        }\n \
    \   }\n    return $result;\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower++;\n\
    \        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper++;\n        } else\
    \ {\n            return \"\";\n        }\n    }\n    if ($lower > 0 && $upper\
    \ > 0) {\n        return \"\";\n    } else {\n        return 1;\n    }\n}", " \
    \   my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key_type eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n\
    \                $key_type = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n                $key_type = \"upper\";\n            } else {\n          \
    \      $result = \"\";\n                last;\n            }\n        } else {\n\
    \            if ($key_type eq \"lower\" && $key =~ /^[A-Z]+$/) {\n           \
    \     $result = \"\";\n                last;\n            } elsif ($key_type eq\
    \ \"upper\" && $key =~ /^[a-z]+$/) {\n                $result = \"\";\n      \
    \          last;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $result = \"\";\n    my $key;\n    my $value;\n    my $is_upper = 0;\n\
    \    my $is_lower = 0;\n    my $is_empty = 1;\n    while (($key, $value) = each\
    \ %$dict) {\n        $is_empty = 0;\n        if ($key =~ /^[A-Z]+$/) {\n     \
    \       $is_upper = 1;\n        } elsif ($key =~ /^[a-z]+$/) {\n            $is_lower\
    \ = 1;\n        } else {\n            return \"\";\n        }\n    }\n    if ($is_empty)\
    \ {\n        return \"\";\n    }\n    if ($is_upper && $is_lower) {\n        return\
    \ \"\";\n    }\n    return 1;\n}", "    my $result = 1;\n    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    my $key;\n    foreach $key (keys %$dict) {\n    \
    \    if ($key !~ /^[a-z]+$/) {\n            $all_lower = 0;\n        }\n     \
    \   if ($key !~ /^[A-Z]+$/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    if ($all_lower == 0 && $all_upper == 0) {\n        $result = \"\";\n    }\n\
    \    return $result;\n}", "    my $result = 1;\n    my $is_upper = 0;\n    my\
    \ $is_lower = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/)\
    \ {\n            $is_upper = 1;\n        }\n        if ($key =~ /[a-z]/) {\n \
    \           $is_lower = 1;\n        }\n    }\n    if ($is_upper && $is_lower)\
    \ {\n        $result = \"\";\n    }\n    return $result;\n}", "    my $result\
    \ = 1;\n    my $key_case = \"\";\n    foreach my $key (keys %$dict) {\n      \
    \  if ($key_case eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n         \
    \       $key_case = \"lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n \
    \               $key_case = \"upper\";\n            } else {\n               \
    \ $result = \"\";\n                last;\n            }\n        } else {\n  \
    \          if ($key_case eq \"lower\" && $key =~ /^[A-Z]+$/) {\n             \
    \   $result = \"\";\n                last;\n            } elsif ($key_case eq\
    \ \"upper\" && $key =~ /^[a-z]+$/) {\n                $result = \"\";\n      \
    \          last;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $ret = 1;\n    my $low = 0;\n    my $up = 0;\n    foreach my $k (keys\
    \ %$dict) {\n        if ($k =~ /^[a-z]+$/) {\n            $low++;\n        } elsif\
    \ ($k =~ /^[A-Z]+$/) {\n            $up++;\n        } else {\n            $ret\
    \ = \"\";\n            last;\n        }\n    }\n    if ($low && $up) {\n     \
    \   $ret = \"\";\n    }\n    return $ret;\n}", "    my $result = 1;\n    my $key_case\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_case eq \"\"\
    ) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_case = \"lower\"\
    ;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_case = \"\
    upper\";\n            } else {\n                $result = \"\";\n            \
    \    last;\n            }\n        } else {\n            if ($key_case eq \"lower\"\
    \ && $key =~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n\
    \            } elsif ($key_case eq \"upper\" && $key =~ /^[a-z]+$/) {\n      \
    \          $result = \"\";\n                last;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper =\
    \ 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n  \
    \          $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n      \
    \      $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $result = 1;\n    my $key_type = \"\";\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key_type eq \"\") {\n            $key_type = \"lower\"\
    \ if ($key =~ /^[a-z]+$/);\n            $key_type = \"upper\" if ($key =~ /^[A-Z]+$/);\n\
    \        }\n        if ($key_type eq \"lower\") {\n            $result = \"\"\
    \ if ($key =~ /^[A-Z]+$/);\n        }\n        if ($key_type eq \"upper\") {\n\
    \            $result = \"\" if ($key =~ /^[a-z]+$/);\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = 1;\n    my $first_key = (keys %$dict)[0];\n\
    \    my $first_key_is_lower = $first_key =~ /^[a-z]/;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($first_key_is_lower) {\n            if ($key !~ /^[a-z]/)\
    \ {\n                $result = \"\";\n                last;\n            }\n \
    \       } else {\n            if ($key !~ /^[A-Z]/) {\n                $result\
    \ = \"\";\n                last;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = 1;\n    my $key_case = \"\";\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key_case eq \"\") {\n            if ($key\
    \ =~ /^[a-z]+$/) {\n                $key_case = \"lower\";\n            } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n                $key_case = \"upper\";\n           \
    \ } else {\n                $result = \"\";\n                last;\n         \
    \   }\n        } elsif ($key_case eq \"lower\") {\n            if ($key !~ /^[a-z]+$/)\
    \ {\n                $result = \"\";\n                last;\n            }\n \
    \       } elsif ($key_case eq \"upper\") {\n            if ($key !~ /^[A-Z]+$/)\
    \ {\n                $result = \"\";\n                last;\n            }\n \
    \       }\n    }\n    return $result;\n}", "    my $result = 1;\n    my $key_type\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\"\
    ) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\"\
    ;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"\
    upper\";\n            } else {\n                $result = \"\";\n            \
    \    last;\n            }\n        } else {\n            if ($key_type eq \"lower\"\
    \ && $key =~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n\
    \            } elsif ($key_type eq \"upper\" && $key =~ /^[a-z]+$/) {\n      \
    \          $result = \"\";\n                last;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my $result = 1;\n    my $key_type = \"\"\
    ;\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\") {\n   \
    \         if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\";\n\
    \            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"upper\"\
    ;\n            } else {\n                $result = \"\";\n                last;\n\
    \            }\n        } elsif ($key_type eq \"lower\") {\n            if ($key\
    \ !~ /^[a-z]+$/) {\n                $result = \"\";\n                last;\n \
    \           }\n        } elsif ($key_type eq \"upper\") {\n            if ($key\
    \ !~ /^[A-Z]+$/) {\n                $result = \"\";\n                last;\n \
    \           }\n        }\n    }\n    return $result;\n}", "    my $all_lower =\
    \ 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key !~ /^[a-z]+$/) {\n            $all_lower = 0;\n        }\n        if ($key\
    \ !~ /^[A-Z]+$/) {\n            $all_upper = 0;\n        }\n    }\n    return\
    \ $all_lower || $all_upper;\n}", "    my $result = 1;\n    my $case = \"\";\n\
    \    foreach my $key (keys %$dict) {\n        if ($case eq \"\") {\n         \
    \   if ($key =~ /^[a-z]+$/) {\n                $case = \"lower\";\n          \
    \  } elsif ($key =~ /^[A-Z]+$/) {\n                $case = \"upper\";\n      \
    \      } else {\n                $result = \"\";\n                last;\n    \
    \        }\n        } elsif ($case eq \"lower\") {\n            if ($key !~ /^[a-z]+$/)\
    \ {\n                $result = \"\";\n                last;\n            }\n \
    \       } elsif ($case eq \"upper\") {\n            if ($key !~ /^[A-Z]+$/) {\n\
    \                $result = \"\";\n                last;\n            }\n     \
    \   }\n    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n\
    \            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/) {\n    \
    \        $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n        } else {\n        \
    \    return \"\";\n        }\n    }\n    return $lower || $upper;\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    my $result = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    if ($all_lower == 0 && $all_upper == 0) {\n        $result\
    \ = \"\";\n    }\n    return $result;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    my $result = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    if ($all_lower || $all_upper)\
    \ {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n\
    \        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n        }\n    }\n\
    \    if ($all_lower == 0 && $all_upper == 0) {\n        $result = \"\";\n    }\n\
    \    return $result;\n}", "    my $lower = 1;\n    my $upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $upper = 0;\n \
    \       }\n    }\n    return $lower || $upper;\n}", "    my $result = 1;\n   \
    \ my $lower = 1;\n    my $upper = 1;\n    foreach my $key (keys %$dict) {\n  \
    \      if ($key =~ /[A-Z]/) {\n            $lower = 0;\n        }\n        if\
    \ ($key =~ /[a-z]/) {\n            $upper = 0;\n        }\n    }\n    if ($lower\
    \ == 0 && $upper == 0) {\n        $result = \"\";\n    }\n    return $result;\n\
    }", "    my $is_lower = 0;\n    my $is_upper = 0;\n    my $is_mixed = 0;\n   \
    \ my $is_empty = 0;\n    my $is_string = 0;\n    my $is_number = 0;\n    my $is_other\
    \ = 0;\n    my $is_all_string = 0;\n    my $is_all_number = 0;\n    my $is_all_other\
    \ = 0;\n    my $is_all_lower = 0;\n    my $is_all_upper = 0;\n    my $is_all_mixed\
    \ = 0;\n    my $is_all_empty = 0;\n    my $is_all_lower_or_upper = 0;\n    my\
    \ $is_all_lower_or_upper_or_mixed = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty\
    \ = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty_or_other = 0;\n    my\
    \ $is_all_lower_or_upper_or_mixed_or_empty_or_other_or_number = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty_or_other_or_number_or_string\
    \ = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty_or_other_or_number_or_string_or_number\
    \ = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty_or_other_or_number_or_string_or_number_or_string\
    \ = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty_or_other_or_number_or_string_or_number_or_string_or_other\
    \ = 0;\n    my $is_all_lower_or_upper_or_mixed_or_empty_or_other_or_number_or_string_or_number_or_string_or_other_or_empty\
    \ = 0;\n    my $is_all", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $is_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n\
    \        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $all_lower\
    \ = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        $all_lower\
    \ = 0 if $key =~ /[A-Z]/;\n        $all_upper = 0 if $key =~ /[a-z]/;\n    }\n\
    \    return $all_lower || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        $all_lower = 0 if $key =~\
    \ /[A-Z]/;\n        $all_upper = 0 if $key =~ /[a-z]/;\n    }\n    return $all_lower\
    \ || $all_upper;\n}", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n\
    \        }\n    }\n    return $all_lower || $all_upper;\n}", "    my $is_lower\
    \ = 0;\n    my $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        if\
    \ ($key =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        elsif\
    \ ($key =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n        else\
    \ {\n            return \"\";\n        }\n    }\n    return $is_lower || $is_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    if ($all_lower || $all_upper) {\n        return 1;\n    }\n  \
    \  return \"\";\n}", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $is_lower\
    \ = 0;\n        }\n        if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n\
    \        }\n    }\n    return $is_lower || $is_upper;\n}", "    my $result = 1;\n\
    \    my $key_type = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type\
    \ eq \"\") {\n            $key_type = $key =~ /^[a-z]*$/ ? \"lower\" : \"upper\"\
    ;\n        }\n        if ($key_type eq \"lower\" && $key !~ /^[a-z]*$/) {\n  \
    \          $result = \"\";\n            last;\n        }\n        if ($key_type\
    \ eq \"upper\" && $key !~ /^[A-Z]*$/) {\n            $result = \"\";\n       \
    \     last;\n        }\n    }\n    return $result;\n}", "    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $result = 1;\n \
    \   my $lower = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key =~ /^[a-z]+$/) {\n            $lower = 1;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/) {\n            $upper = 1;\n        } else {\n            $result\
    \ = 0;\n            last;\n        }\n    }\n    if ($lower && $upper) {\n   \
    \     $result = 0;\n    }\n    return $result;\n}", "    my $all_lower = 1;\n\
    \    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /[A-Z]/) {\n            $all_lower = 0;\n        }\n        if ($key =~ /[a-z]/)\
    \ {\n            $all_upper = 0;\n        }\n    }\n    return $all_lower || $all_upper;\n\
    }", "    my $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($key =~ /[A-Z]/) {\n            $all_lower = 0;\n   \
    \     }\n        if ($key =~ /[a-z]/) {\n            $all_upper = 0;\n       \
    \ }\n    }\n    return $all_lower || $all_upper;\n}", "    my $is_lower = 0;\n\
    \    my $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        if ($key =~\
    \ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n    }\n    return $is_lower\
    \ && !$is_upper || !$is_lower && $is_upper;\n}", "    my $is_lower = 0;\n    my\
    \ $is_upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/)\
    \ {\n            $is_lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n    \
    \        $is_upper = 1;\n        } else {\n            return \"\";\n        }\n\
    \    }\n    if ($is_lower && $is_upper) {\n        return \"\";\n    } else {\n\
    \        return 1;\n    }\n}", "    my $lower = 0;\n    my $upper = 0;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n            $lower\
    \ = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n            $upper = 1;\n    \
    \    } else {\n            return \"\";\n        }\n    }\n    return $lower +\
    \ $upper == 1;\n}", "    my $lower = 1;\n    my $upper = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($key =~ /[a-z]/) {\n            $upper = 0;\n \
    \       }\n        if ($key =~ /[A-Z]/) {\n            $lower = 0;\n        }\n\
    \    }\n    return $lower || $upper;\n}", "    my $retval = 1;\n    my $lower\
    \ = 0;\n    my $upper = 0;\n    foreach my $key (keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/)\
    \ {\n            $upper = 1;\n        } else {\n            $retval = 0;\n   \
    \         last;\n        }\n    }\n    if ($lower && $upper) {\n        $retval\
    \ = 0;\n    }\n    return $retval;\n}", "    my $result = 1;\n    my $key_type\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key_type eq \"\"\
    ) {\n            if ($key =~ /^[a-z]+$/) {\n                $key_type = \"lower\"\
    ;\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $key_type = \"\
    upper\";\n            } else {\n                $result = \"\";\n            \
    \    last;\n            }\n        } elsif ($key_type eq \"lower\") {\n      \
    \      if ($key !~ /^[a-z]+$/) {\n                $result = \"\";\n          \
    \      last;\n            }\n        } elsif ($key_type eq \"upper\") {\n    \
    \        if ($key !~ /^[A-Z]+$/) {\n                $result = \"\";\n        \
    \        last;\n            }\n        }\n    }\n    return $result;\n}", "  \
    \  my $result = 1;\n    my $key;\n    my $value;\n    my $is_upper = 0;\n    my\
    \ $is_lower = 0;\n    while (($key, $value) = each %$dict) {\n        if ($key\
    \ =~ /^[A-Z]+$/) {\n            $is_upper = 1;\n        }\n        elsif ($key\
    \ =~ /^[a-z]+$/) {\n            $is_lower = 1;\n        }\n        else {\n  \
    \          $result = 0;\n            last;\n        }\n    }\n    if ($is_upper\
    \ && $is_lower) {\n        $result = 0;\n    }\n    return $result;\n}", "   \
    \ my $first_key = (keys %$dict)[0];\n    my $first_key_is_lower = $first_key =~\
    \ /^[a-z]/;\n    my $first_key_is_upper = $first_key =~ /^[A-Z]/;\n    foreach\
    \ my $key (keys %$dict) {\n        if ($first_key_is_lower) {\n            return\
    \ \"\" if $key !~ /^[a-z]/;\n        }\n        elsif ($first_key_is_upper) {\n\
    \            return \"\" if $key !~ /^[A-Z]/;\n        }\n        else {\n   \
    \         return \"\";\n        }\n    }\n    return 1;\n}", "    my $result =\
    \ 1;\n    my $case = \"\";\n    foreach my $key (keys %$dict) {\n        if ($case\
    \ eq \"\") {\n            if ($key =~ /^[a-z]+$/) {\n                $case = \"\
    lower\";\n            } elsif ($key =~ /^[A-Z]+$/) {\n                $case =\
    \ \"upper\";\n            } else {\n                $result = \"\";\n        \
    \        last;\n            }\n        } elsif ($case eq \"lower\") {\n      \
    \      if ($key !~ /^[a-z]+$/) {\n                $result = \"\";\n          \
    \      last;\n            }\n        } elsif ($case eq \"upper\") {\n        \
    \    if ($key !~ /^[A-Z]+$/) {\n                $result = \"\";\n            \
    \    last;\n            }\n        }\n    }\n    return $result;\n}", "    my\
    \ $all_lower = 1;\n    my $all_upper = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($key !~ /^[a-z]+$/) {\n            $all_lower = 0;\n        }\n \
    \       if ($key !~ /^[A-Z]+$/) {\n            $all_upper = 0;\n        }\n  \
    \  }\n    return $all_lower || $all_upper;\n}", "    my($key, $value);\n    my($lower,\
    \ $upper) = (0, 0);\n    while(($key, $value) = each %$dict) {\n        if($key\
    \ =~ /^[a-z]+$/) {\n            $lower = 1;\n        }\n        elsif($key =~\
    \ /^[A-Z]+$/) {\n            $upper = 1;\n        }\n        else {\n        \
    \    return \"\";\n        }\n    }\n    return $lower && $upper ? \"\" : 1;\n\
    }", "    my $is_lower = 1;\n    my $is_upper = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($key =~ /[A-Z]/) {\n            $is_lower = 0;\n        }\n \
    \       if ($key =~ /[a-z]/) {\n            $is_upper = 0;\n        }\n    }\n\
    \    return $is_lower || $is_upper;\n}", "    my $is_lower = 0;\n    my $is_upper\
    \ = 0;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/) {\n\
    \            $is_lower = 1;\n        } elsif ($key =~ /^[A-Z]+$/) {\n        \
    \    $is_upper = 1;\n        } else {\n            return \"\";\n        }\n \
    \   }\n    return $is_lower || $is_upper;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_141_file_name_check
language: pl
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# >>> file_name_check(\"example.txt\"\
  )\n# \"Yes\"\n# >>> file_name_check(\"1example.dll\")\n# \"No\"\nsub file_name_check\
  \ {\n    my($file_name) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&file_name_check;\n\
  \        if(eq_deeply($candidate->(\"example.txt\"),\"Yes\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1example.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"s1sdf3.asd\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"K.dll\"),\"Yes\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  MY16FILE3.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"His12FILE94.exe\"),\"No\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _Y.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"?aREYA.exe\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"/this_is_valid.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"this_is_valid.wow\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"this_is_valid.txt\"\
  ),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"this_is_valid.txtexe\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #this2_i4s_5valid.ten\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"@this1_is6_valid.exe\"),\"\
  No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  this_is_12valid.6exe4.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"all.exe.txt\"),\"No\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_No.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(\"Is3youfault.txt\"),\"Yes\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  no_one#knows.dll\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"1I563_Yes3.exe\"),\"No\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_Yes3.txtt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"final..txt\"),\"No\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  final132\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"_f4indsartal132.\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  .txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\"s.\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n\
    \    my $dot_position = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter = 0;\n    my $substring_before_dot_start_with_letter_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count = 0;\n    my\
    \ $substring_before_dot_start_with_letter_valid_count_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter", "    my $result = \"\
    No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n   \
    \     $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"\
    No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my $count =\
    \ $file_name =~ s/\\d//g;\n        if ($count <= 3) {\n            $result = \"\
    Yes\";\n        }\n    }\n    return $result;\n}", "    my $result = \"No\";\n\
    \    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result\
    \ = \"Yes\";\n    }\n    return $result;\n}", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        return \"Yes\";\n    } else {\n        return \"\
    No\";\n    }\n}", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_length = 0;\n    my $substring_before_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_length = 0;\n    my $substring_after_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_valid_extensions = [\"txt\", \"exe\", \"dll\"\
    ];\n    my $substring_after_dot_valid_extensions_count = 0;\n    my $substring_after_dot_valid_extensions_count_valid\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid = 0;\n    my $substring_after_dot_valid_extensions_valid_count\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_count_valid = 0;\n\
    \    my $substring_after_dot_valid_extensions_valid_valid = 0;\n    my $substring_after_dot_valid_extensions_valid_valid_count\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_valid_count_valid =\
    \ 0;\n    my $substring_after_dot_valid_extensions_valid_valid_valid = 0;\n  \
    \  my $substring_after_dot_valid_extensions_valid_valid_valid_count = 0;\n   \
    \ my $substring_after_dot_valid_extensions_valid_valid_valid_count_valid = 0;\n\
    \    my $substring_after_dot_valid_extensions_valid_valid_valid_valid = 0;\n \
    \   my $substring_after_", "    my $result = \"No\";\n    my $count = 0;\n   \
    \ my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot = \"\
    \";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid =\
    \ 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_letter_valid\
    \ = 0;\n    my $substring_before_dot_number_valid = 0;\n    my $substring_before_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_length_valid = 0;\n    my $substring_after_dot_valid_list\
    \ = [\"txt\", \"exe\", \"dll\"];\n    my $substring_before_dot_valid_list = [\"\
    a\"..\"z\", \"A\"..\"Z\"];\n    my $substring_before_dot_number_valid_list = [\"\
    0\"..\"9\"];\n    my $substring_before_dot_length = 0;\n    my $substring_after_dot_length\
    \ = 0;\n    my $substring_before_dot_number_count = 0;\n    my $substring_before_dot_letter_count\
    \ = 0;\n    my $substring_before_dot_number_count_valid = 0;\n    my $substring_before_dot_letter_count_valid\
    \ = 0;\n    my $substring_before_dot_number_count_valid_list = [0..3];\n    my\
    \ $substring_before_dot_letter_count_valid_list = [1..100];\n    my $substring_after_dot_length_valid_list\
    \ = [3..3];\n    my $substring_before_dot_length_valid_list = [1..100];\n    my\
    \ $substring_before_dot_number_count_valid_list_length = @$substring_before_dot_number_count_valid_list;\n\
    \    my $substring_before_dot_letter_count_valid_list_length = @$substring_before_dot_letter_count_valid_list;\n",
  "    # Write your code here\n}", "    my $valid = \"Yes\";\n    my $count = 0;\n\
    \    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_after_dot =\
    \ \"\";\n    my $substring_before_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_lower_bound_valid = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_or_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_xor_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid_and_substring_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_", "    my $result = \"Yes\";\n\
    \    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = -1;\n    my $extension\
    \ = \"\";\n    my $substring = \"\";\n    my $substring_count = 0;\n    my $substring_index\
    \ = -1;\n    my $substring_valid = 0;\n    my $extension_valid = 0;\n    my $extension_list\
    \ = [\"txt\", \"exe\", \"dll\"];\n    my $extension_list_length = @$extension_list;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n\
    \    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n\
    \    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n\
    \    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n\
    \    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n\
    \    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $zero\
    \ = 0;\n    my $one = 0;\n    my $two =", "    my $result = \"No\";\n    my $count\
    \ = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_length\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n \
    \   my $eight = 0;\n    my $nine = 0;\n   ", "    my $result = \"No\";\n    if\
    \ ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        my $sub_string\
    \ = $file_name;\n        $sub_string =~ s/\\.(txt|exe|dll)$//;\n        if ($sub_string\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*$/) {\n            $result = \"Yes\";\n        }\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = 'No';\n    my $file_name_regex\
    \ = qr/^[a-zA-Z][a-zA-Z0-9]{0,2}\\.(txt|exe|dll)$/;\n    if ($file_name =~ $file_name_regex)\
    \ {\n        $result = 'Yes';\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\";\n \
    \   my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_is_valid = 0;\n    my $substring_before_dot_is_valid\
    \ = 0;\n    my $substring_after_dot_is_valid = 0;\n    my $i = 0;\n    my $length\
    \ = length($file_name);\n    for($i = 0; $i < $length; $i++) {\n        my $char\
    \ = substr($file_name, $i, 1);\n        if($char eq \".\") {\n            $dot_count++;\n\
    \            $dot_index = $i;\n        }\n        if($char =~ /[0-9]/) {\n   \
    \         $count++;\n        }\n    }\n    if($count <= 3 && $dot_count == 1)\
    \ {\n        $substring_after_dot = substr($file_name, $dot_index + 1);\n    \
    \    $substring_before_dot = substr($file_name, 0, $dot_index);\n        $substring_before_dot_first_char\
    \ = substr($substring_before_dot, 0, 1);\n        $substring_before_dot_first_char_ascii\
    \ = ord($substring_before_dot_first_char);\n        if($substring_before_dot_first_char_ascii\
    \ >= 65 && $substring_before_dot_first_char_ascii <= 90) {\n            $substring_before_dot_first_char_is_valid\
    \ = 1;\n        }\n        if($substring_before_dot_first_char_ascii >= 97 &&\
    \ $substring_before_dot_first_char_ascii <= 122) {\n            $substring_before_dot_first_char_is_valid\
    \ = 1;\n        }", "    if($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/ && $file_name\
    \ !~ /\\d{4}/){\n        return \"Yes\";\n    }\n    else{\n        return \"\
    No\";\n    }\n}", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+\\\
    d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\.dll$/) {\n      \
    \  $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\"\
    ;\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n       \
    \ $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\"\
    ;\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my\
    \ $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_bound_valid_result = 0;\n\
    \    my $substring_before_dot_first_char_ascii_upper_bound_valid_result = 0;\n\
    \    my $substring_before_dot_first_char_ascii_valid_result = 0;\n    my $substring_before_dot_valid_result\
    \ = 0;\n    my $substring_after_dot_valid_result = 0;\n    my $result_valid =\
    \ 0;\n    my $result_valid_result = 0;\n    my $result_valid_result_final = 0;\n\
    \    my $result_valid_result_final_result = 0;\n    my $result_valid_result_final_result_final\
    \ = 0;\n    my $result_valid_result_final_result_final_result = 0;\n    my $result_valid_result",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $extension = \"\";\n    my $file_name_without_extension = \"\";\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n  \
    \  my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n\
    \    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n\
    \    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n\
    \    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n\
    \    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n\
    \    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $zero\
    \ = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n    my $four =\
    \ 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n    my $eight =\
    \ 0;\n    my $nine = 0;\n    for ($i = 0; $i < length($file_name); $i", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_bound_valid_value = 0;\n\
    \    my $substring_before_dot_first_char_ascii_upper_bound_valid_value = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_bound_valid_value_ascii =\
    \ 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid_value_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_value_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid_value_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_value_ascii_valid_value\
    \ = 0;\n    my $", "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count\
    \ = 0;\n    my $dot_index = 0;\n    my $extension = \"\";\n    my $substring =\
    \ \"\";\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_before_dot_length = 0;\n    my $substring_after_dot_length\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"Yes\";\n    my $count = 0;\n\
    \    my $dot_count = 0;\n    my $dot_position = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $substring_before_dot_is_valid = 0;\n    my $substring_before_dot_is_empty\
    \ = 1;\n    my $substring_before_dot_starts_with_letter = 0;\n    my $substring_before_dot_contains_digit\
    \ = 0;\n    my $substring_before_dot_contains_dot = 0;\n    my $substring_before_dot_contains_underscore\
    \ = 0;\n    my $substring_before_dot_contains_hyphen = 0;\n    my $substring_before_dot_contains_other_characters\
    \ = 0;\n    my $substring_after_dot_contains_digit = 0;\n    my $substring_after_dot_contains_dot\
    \ = 0;\n    my $substring_after_dot_contains_underscore = 0;\n    my $substring_after_dot_contains_hyphen\
    \ = 0;\n    my $substring_after_dot_contains_other_characters = 0;\n    my $substring_after_dot_is_empty\
    \ = 1;\n    my $substring_after_dot_starts_with_letter = 0;\n    my $substring_after_dot_starts_with_digit\
    \ = 0;\n    my $substring_after_dot_starts_with_dot = 0;\n    my $substring_after_dot_starts_with_underscore\
    \ = 0;\n    my $substring_after_dot_starts_with_hyphen = 0;\n    my $substring_after_dot_starts_with_other_characters\
    \ = 0;\n    my $substring_after_dot_contains_uppercase_letter = 0;\n    my $substring_after_dot_contains_lowercase_letter\
    \ = 0;\n    my", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+\\\
    d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\.dll$/) {\n      \
    \  $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\"\
    ;\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my\
    \ $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper = 0;\n    my $substring_before_dot_first_char_ascii_lower_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_valid = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_lower_valid_range = 0;\n    my $substring_before_dot_first_char_ascii_upper_valid_range\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_valid_range_min =\
    \ 97;\n    my $substring_before_dot_first_char_ascii_lower_valid_range_max = 122;\n\
    \    my $substring_before_dot_first_char_ascii_upper_valid_range_min = 65;\n \
    \   my $substring_before_dot_first_char_ascii_upper_valid_range_max = 90;\n  \
    \  my $substring_before_dot_first_char_ascii_lower_valid_range_min_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_valid_range_max_valid = 0;\n\
    \    my $substring_before_dot_", "    my $result = \"No\";\n    my $count = 0;\n\
    \    my $dot_count = 0;\n    my $before_dot = \"\";\n    my $after_dot = \"\"\
    ;\n    my $i = 0;\n    my $len = length($file_name);\n    while ($i < $len) {\n\
    \        my $c = substr($file_name, $i, 1);\n        if ($c =~ /[0-9]/) {\n  \
    \          $count++;\n        }\n        if ($c eq \".\") {\n            $dot_count++;\n\
    \        }\n        $i++;\n    }\n    if ($dot_count == 1) {\n        my @parts\
    \ = split(/\\./, $file_name);\n        $before_dot = $parts[0];\n        $after_dot\
    \ = $parts[1];\n        if ($count <= 3 && $before_dot =~ /^[a-zA-Z]/ && $after_dot\
    \ =~ /^(txt|exe|dll)$/) {\n            $result = \"Yes\";\n        }\n    }\n\
    \    return $result;\n}", "    my $result = \"Yes\";\n    my $count = 0;\n   \
    \ my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot = \"\
    \";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid =\
    \ 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper = 0;\n    my $substring_before_dot_first_char_ascii_lower_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_valid = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_lower_valid_range = 0;\n    my $substring_before_dot_first_char_ascii_upper_valid_range\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_valid_range_min =\
    \ 97;\n    my $substring_before_dot_first_char_ascii_lower_valid_range_max = 122;\n\
    \    my $substring_before_dot_first_char_ascii_upper_valid_range_min = 65;\n \
    \   my $substring_before_dot_first_char_ascii_upper_valid_range_max = 90;\n  \
    \  my $substring_before_dot_first_char_ascii_lower_valid_range_min_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_valid_range_max_valid = 0;\n\
    \    my $substring_before_dot_", "    my $result = \"No\";\n    my @file_name_parts\
    \ = split(/\\./, $file_name);\n    my $extension = pop(@file_name_parts);\n  \
    \  my $file_name_without_extension = join(\".\", @file_name_parts);\n    if ($file_name_without_extension\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*$/ && $extension =~ /^(txt|exe|dll)$/) {\n        $result\
    \ = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\";\n    if\
    \ ($file_name =~ /^[a-zA-Z]+\\d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\.exe$|^[a-zA-Z]+\\\
    d{0,3}\\.dll$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_length = 0;\n    my $substring_before_dot_length_valid\
    \ = 0;\n    my $substring_before_dot_char_valid = 0;\n    my $substring_before_dot_char_count\
    \ = 0;\n    my $substring_before_dot_char_count_valid = 0;\n    my $substring_before_dot_char_count_max\
    \ = 0;\n    my $substring_before_dot_char_count_max_valid = 0;\n    my $substring_before_dot_char_count_max_valid_count\
    \ = 0;\n    my $substring_before_dot_char_count_max_valid_count_valid = 0;\n \
    \   my $substring_before_dot_char_count_max_valid_count_valid_count = 0;\n   \
    \ my $substring_before_dot_char_count_max_valid_count_valid_count_valid = 0;\n\
    \    my $substring_before_dot_char_count_max_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_char_count_max_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_char_count_max_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_char_count_max_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_char_count_max_valid", "    my $result =\
    \ \"No\";\n    my $regex = qr/^[a-zA-Z][a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/;\n   \
    \ if ($file_name =~ $regex) {\n        $result = \"Yes\";\n    }\n    return $result;\n\
    }", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.txt$|^[a-zA-Z]+[0-9]{0,3}\\\
    .exe$|^[a-zA-Z]+[0-9]{0,3}\\.dll$/) {\n        $result = \"Yes\";\n    }\n   \
    \ return $result;\n}", "    my $result = \"Yes\";\n    my $count = 0;\n    my\
    \ $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot = \"\"\
    ;\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_check = \"\
    \";\n    my $substring_before_dot_check = \"\";\n    my $substring_before_dot_check_2\
    \ = \"\";\n    my $substring_before_dot_check_3 = \"\";\n    my $substring_before_dot_check_4\
    \ = \"\";\n    my $substring_before_dot_check_5 = \"\";\n    my $substring_before_dot_check_6\
    \ = \"\";\n    my $substring_before_dot_check_7 = \"\";\n    my $substring_before_dot_check_8\
    \ = \"\";\n    my $substring_before_dot_check_9 = \"\";\n    my $substring_before_dot_check_10\
    \ = \"\";\n    my $substring_before_dot_check_11 = \"\";\n    my $substring_before_dot_check_12\
    \ = \"\";\n    my $substring_before_dot_check_13 = \"\";\n    my $substring_before_dot_check_14\
    \ = \"\";\n    my $substring_before_dot_check_15 = \"\";\n    my $substring_before_dot_check_16\
    \ = \"\";\n    my $substring_before_dot_check_17 = \"\";\n    my $substring_before_dot_check_18\
    \ = \"\";\n    my $substring_before_dot_check_19 = \"\";\n    my $substring_before_dot_check_20\
    \ = \"\";\n    my $substring_before_dot_check_21 = \"\";\n    my $substring_before_dot_check_22\
    \ = \"\";\n    my $substring_before_dot_check_23 = \"\";\n    my $substring_before_dot_check_24\
    \ = \"\";\n    my $substring_before_dot_check_25 = \"\";\n    my $substring_before_dot_",
  "    my $result = \"No\";\n    if ($file_name =~ /^([a-zA-Z]\\w*)\\.(txt|exe|dll)$/)\
    \ {\n        my $before_dot = $1;\n        my $after_dot = $2;\n        if ($before_dot\
    \ =~ /^[a-zA-Z]\\w*$/ && $before_dot !~ /\\d{4,}/) {\n            $result = \"\
    Yes\";\n        }\n    }\n    return $result;\n}", "    my $file_name_check =\
    \ \"No\";\n    my $count = 0;\n    my $count_dot = 0;\n    my $count_digit = 0;\n\
    \    my $count_letter = 0;\n    my $count_extension = 0;\n    my $count_extension_txt\
    \ = 0;\n    my $count_extension_exe = 0;\n    my $count_extension_dll = 0;\n \
    \   my $count_extension_txt_exe_dll = 0;\n    my $count_extension_txt_exe_dll_dot\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_letter = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_txt = 0;\n    my\
    \ $count_extension_txt_exe_dll_dot_letter_digit_exe = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_dll\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll = 0;\n\
    \    my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll_dot = 0;\n \
    \   my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll_dot_letter =\
    \ 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll_dot_letter_digit\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll_dot_letter_digit_txt\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll_dot_letter_digit_exe\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_letter_digit_txt_exe_dll_dot_letter_digit_dll\
    \ = 0;\n    my $count_extension_txt_exe_dll_dot_", "    my $result = \"No\";\n\
    \    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result\
    \ = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\";\n    my\
    \ $count = 0;\n    my $dot = 0;\n    my $sub_string = \"\";\n    my $sub_string_after_dot\
    \ = \"\";\n    my $sub_string_before_dot = \"\";\n    my $sub_string_after_dot_valid\
    \ = 0;\n    my $sub_string_before_dot_valid = 0;\n    my $sub_string_before_dot_first_char_valid\
    \ = 0;\n    my $sub_string_before_dot_first_char = \"\";\n    my $sub_string_before_dot_first_char_ascii\
    \ = 0;\n    my $sub_string_before_dot_first_char_ascii_valid = 0;\n    my $sub_string_before_dot_first_char_ascii_valid_lower\
    \ = 0;\n    my $sub_string_before_dot_first_char_ascii_valid_upper = 0;\n    my\
    \ $sub_string_before_dot_first_char_ascii_valid_lower_min = 97;\n    my $sub_string_before_dot_first_char_ascii_valid_lower_max\
    \ = 122;\n    my $sub_string_before_dot_first_char_ascii_valid_upper_min = 65;\n\
    \    my $sub_string_before_dot_first_char_ascii_valid_upper_max = 90;\n    my\
    \ $sub_string_before_dot_first_char_ascii_valid_lower_min_ascii = \"a\";\n   \
    \ my $sub_string_before_dot_first_char_ascii_valid_lower_max_ascii = \"z\";\n\
    \    my $sub_string_before_dot_first_char_ascii_valid_upper_min_ascii = \"A\"\
    ;\n    my $sub_string_before_dot_first_char_ascii_valid_upper_max_ascii = \"Z\"\
    ;\n    my $sub_string_before_dot_first_char_ascii_valid_lower_min_ascii_ord =\
    \ ord($sub_string", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $file_extension = \"\";\n    my $file_name_without_extension = \"\";\n\
    \    my $file_name_without_extension_first_char = \"\";\n    my $file_name_without_extension_first_char_ascii\
    \ = 0;\n    my $file_name_without_extension_first_char_ascii_lower_bound = 97;\n\
    \    my $file_name_without_extension_first_char_ascii_upper_bound = 122;\n   \
    \ my $file_name_without_extension_first_char_ascii_lower_bound_upper_case = 65;\n\
    \    my $file_name_without_extension_first_char_ascii_upper_bound_upper_case =\
    \ 90;\n    my $file_name_without_extension_first_char_ascii_lower_bound_numeric\
    \ = 48;\n    my $file_name_without_extension_first_char_ascii_upper_bound_numeric\
    \ = 57;\n    my $file_name_without_extension_first_char_ascii_lower_bound_numeric_upper_case\
    \ = 65;\n    my $file_name_without_extension_first_char_ascii_upper_bound_numeric_upper_case\
    \ = 90;\n    my $file_name_without_extension_first_char_ascii_lower_bound_numeric_lower_case\
    \ = 97;\n    my $file_name_without_extension_first_char_ascii_upper_bound_numeric_lower_case\
    \ = 122;\n    my $file_name_without_extension_first_char_ascii_lower_bound_numeric_upper_case_lower_case\
    \ = 97;\n    my $file_name_without_extension_first_char_ascii_upper_bound_numeric_upper_case_lower_case\
    \ = 122;\n    my $file_name_without_extension_first_char_asci", "    my $result\
    \ = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index =\
    \ 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\"\
    ;\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter = 0;\n    my $substring_before_dot_start_with_letter_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count = 0;\n    my\
    \ $substring_before_dot_start_with_letter_valid_count_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter", "    if ($file_name =~\
    \ /^[a-zA-Z]\\w*\\.(txt|exe|dll)$/) {\n        return \"Yes\";\n    }\n    return\
    \ \"No\";\n}", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n\
    \        my @digits = $file_name =~ /\\d/g;\n        if (@digits <= 3) {\n   \
    \         $result = \"Yes\";\n        }\n    }\n    return $result;\n}", "   \
    \ my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $extension = \"\";\n    my $substring_before_dot = \"\";\n    my\
    \ $substring_after_dot = \"\";\n    my $first_char = \"\";\n    my $last_char\
    \ = \"\";\n    my $length = length($file_name);\n    my $i = 0;\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        my $char = substr($file_name, $i, 1);\n  \
    \      if ($char =~ /[0-9]/) {\n            $count++;\n        }\n        if ($char\
    \ eq \".\") {\n            $dot_count++;\n            $dot_index = $i;\n     \
    \   }\n    }\n    if ($dot_count == 1 && $count <= 3) {\n        $substring_before_dot\
    \ = substr($file_name, 0, $dot_index);\n        $substring_after_dot = substr($file_name,\
    \ $dot_index + 1);\n        $first_char = substr($substring_before_dot, 0, 1);\n\
    \        $last_char = substr($substring_before_dot, length($substring_before_dot)\
    \ - 1, 1);\n        if ($substring_before_dot ne \"\" && $first_char =~ /[a-zA-Z]/\
    \ && $last_char =~ /[a-zA-Z]/) {\n            if ($substring_after_dot eq \"txt\"\
    \ || $substring_after_dot eq \"exe\" || $substring_after_dot eq \"dll\") {\n \
    \               $result = \"Yes\";\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w+$/) {\n        my @parts\
    \ = split(/\\./, $file_name);\n        if ($parts[0] =~ /\\d/ && $parts[0] =~\
    \ /\\d{4}/) {\n            $result = \"No\";\n        } else {\n            $result\
    \ = \"Yes\";\n        }\n    }\n    return $result;\n}", "    my $result = \"\
    No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_start_with_letter\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid = 0;\n\
    \    my $substring_before_dot_start_with_letter_valid_count_valid_count = 0;\n\
    \    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid",
  "    my $result = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_or_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_xor_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_xnor_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_nand_substring_before_",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    # Write\
    \ your code here\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_position\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_lower_case = 0;\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_case = 0;\n    my $substring_before_dot_first_char_ascii_valid_lower_case_min\
    \ = 97;\n    my $substring_before_dot_first_char_ascii_valid_lower_case_max =\
    \ 122;\n    my $substring_before_dot_first_char_ascii_valid_upper_case_min = 65;\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_case_max = 90;\n  \
    \  my $substring_before_dot_first_char_ascii_valid_lower_case_min_ascii = chr($substring_before_dot_first_char_ascii_valid_lower_case_min);\n\
    \    my $substring_before_dot_first_char_ascii_valid_lower_case_max_ascii = chr($substring_before_dot_first_char_ascii_valid_lower_case_max);\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_case_min_ascii = chr($substring_before_dot_first_char_ascii_valid_upper_case_",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.txt$/ ||\
    \ $file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.exe$/ || $file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\\
    .dll$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_before_dot_valid = 0;\n    my $substring_after_dot_valid = 0;\n\
    \    my $i = 0;\n    for($i = 0; $i < length($file_name); $i++) {\n        if(substr($file_name,\
    \ $i, 1) =~ /[0-9]/) {\n            $count++;\n        }\n        if(substr($file_name,\
    \ $i, 1) eq \".\") {\n            $dot_count++;\n            $dot_index = $i;\n\
    \        }\n    }\n    if($count <= 3 && $dot_count == 1) {\n        $substring_before_dot\
    \ = substr($file_name, 0, $dot_index);\n        $substring_after_dot = substr($file_name,\
    \ $dot_index + 1);\n        if($substring_before_dot =~ /^[a-zA-Z]/ && $substring_before_dot\
    \ ne \"\") {\n            $substring_before_dot_valid = 1;\n        }\n      \
    \  if($substring_after_dot eq \"txt\" || $substring_after_dot eq \"exe\" || $substring_after_dot\
    \ eq \"dll\") {\n            $substring_after_dot_valid = 1;\n        }\n    \
    \    if($substring_before_dot_valid == 1 && $substring_after_dot_valid == 1) {\n\
    \            $result = \"Yes\";\n        }\n    }\n    return $result;\n}", " \
    \   my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_start_with_letter = 0;\n    my $substring_before_dot_start_with_letter_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count = 0;\n    my\
    \ $substring_before_dot_start_with_letter_valid_count_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter", "    my $result = \"\
    No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n  \
    \  my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n   \
    \ my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0", " \
    \   my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+\\d{0,3}\\.txt$|^[a-zA-Z]+\\\
    d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\.dll$/) {\n        $result = \"Yes\";\n    }\n\
    \    return $result;\n}", "    my $result = 'No';\n    if ($file_name =~ /^[a-zA-Z]\\\
    w*\\.\\w{3}$/) {\n        my $before_dot = $`;\n        my $after_dot = $';\n\
    \        if ($before_dot =~ /\\d/ || $after_dot !~ /^(txt|exe|dll)$/) {\n    \
    \        $result = 'No';\n        } else {\n            $result = 'Yes';\n   \
    \     }\n    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z]+\\d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\\
    .dll$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my\
    \ $result = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $extension\
    \ = \"\";\n    my $substring = \"\";\n    my $substring_before_dot = \"\";\n \
    \   my $substring_after_dot = \"\";\n    my $substring_before_dot_count = 0;\n\
    \    my $substring_after_dot_count = 0;\n    my $substring_before_dot_valid =\
    \ 0;\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid_count\
    \ = 0;\n    my $substring_after_dot_valid_count = 0;\n    my $substring_before_dot_valid_count_max\
    \ = 0;\n    my $substring_after_dot_valid_count_max = 0;\n    my $substring_before_dot_valid_count_min\
    \ = 0;\n    my $substring_after_dot_valid_count_min = 0;\n    my $substring_before_dot_valid_count_min_max\
    \ = 0;\n    my $substring_after_dot_valid_count_min_max = 0;\n    my $substring_before_dot_valid_count_min_max_count\
    \ = 0;\n    my $substring_after_dot_valid_count_min_max_count = 0;\n    my $substring_before_dot_valid_count_min_max_count_max\
    \ = 0;\n    my $substring_after_dot_valid_count_min_max_count_max = 0;\n    my\
    \ $substring_before_dot_valid_count_min_max_count_min = 0;\n    my $substring_after_dot_valid_count_min_max_count_min\
    \ = 0;\n    my $substring_before_dot_valid_count_min_max_count_min_max = 0;\n\
    \    my $substring_after_dot_valid_count_min_max_count_min_max = 0;\n    my $substring_before_dot_valid_count_min_max_count_min_max_count\
    \ = 0;", "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n\
    \    my $dot_index = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_after_dot_is_valid = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $zero = 0;\n    my $one\
    \ = 0;\n    my $two = 0;\n    my $three = 0;\n    my $four = 0;\n    my $five\
    \ = 0;\n    my $six = 0;\n    my $seven = 0;\n    my $eight = 0;\n    my $nine\
    \ = 0;", "    my $result = \"No\";\n    my @parts = split(/\\./, $file_name);\n\
    \    if (scalar(@parts) == 2) {\n        my $first_part = $parts[0];\n       \
    \ my $second_part = $parts[1];\n        my $digit_count = $first_part =~ tr/0-9//;\n\
    \        if ($digit_count <= 3 && $first_part =~ /^[a-zA-Z]/ && $second_part =~\
    \ /^(txt|exe|dll)$/) {\n            $result = \"Yes\";\n        }\n    }\n   \
    \ return $result;\n}", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ 'No';\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n \
    \       $result = 'Yes';\n    }\n    return $result;\n}", "    my $result = \"\
    No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n  \
    \  my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n   \
    \ my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_index\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_valid_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_upper = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_valid_lower_min = 97;\n    my $substring_before_dot_first_char_ascii_valid_lower_max\
    \ = 122;\n    my $substring_before_dot_first_char_ascii_valid_upper_min = 65;\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_max = 90;\n    my $substring_before_dot_first_char_ascii_valid_lower_range\
    \ = $substring_before_dot_first_char_ascii_valid_lower_max - $substring_before_dot_first_char_ascii_valid_lower_min\
    \ + 1;\n    my $substring_before_dot_first_char_ascii_valid_upper_range = $substring_before_dot_first_char_ascii_valid_upper_max\
    \ - $substring_before_dot_first_char_ascii_valid_upper_min + 1;\n    my $substring_before_dot_first_char_ascii_valid",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $substr_before_dot\
    \ = \"\";\n    my $substr_after_dot = \"\";\n    my $substr_len = 0;\n    my $substr_index\
    \ = 0;\n    my $substr_index_dot = 0;\n    my $substr_index_dot_before = 0;\n\
    \    my $substr_index_dot_after = 0;\n    my $substr_index_dot_after_len = 0;\n\
    \    my $substr_index_dot_after_len_1 = 0;\n    my $substr_index_dot_after_len_2\
    \ = 0;\n    my $substr_index_dot_after_len_3 = 0;\n    my $substr_index_dot_after_len_4\
    \ = 0;\n    my $substr_index_dot_after_len_5 = 0;\n    my $substr_index_dot_after_len_6\
    \ = 0;\n    my $substr_index_dot_after_len_7 = 0;\n    my $substr_index_dot_after_len_8\
    \ = 0;\n    my $substr_index_dot_after_len_9 = 0;\n    my $substr_index_dot_after_len_10\
    \ = 0;\n    my $substr_index_dot_after_len_11 = 0;\n    my $substr_index_dot_after_len_12\
    \ = 0;\n    my $substr_index_dot_after_len_13 = 0;\n    my $substr_index_dot_after_len_14\
    \ = 0;\n    my $substr_index_dot_after_len_15 = 0;\n    my $substr_index_dot_after_len_16\
    \ = 0;\n    my $substr_index_dot_after_len_17 = 0;\n    my $substr_index_dot_after_len_18\
    \ = 0;\n    my $substr_index_dot_after_len_19 = 0;\n    my $substr_index_dot_after_len_20",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_index\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_valid_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_upper = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_valid_lower_min = 97;\n    my $substring_before_dot_first_char_ascii_valid_lower_max\
    \ = 122;\n    my $substring_before_dot_first_char_ascii_valid_upper_min = 65;\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_max = 90;\n    my $substring_before_dot_first_char_ascii_valid_lower_min_ascii\
    \ = ord('a');\n    my $substring_before_dot_first_char_ascii_valid_lower_max_ascii\
    \ = ord('z');\n    my $substring_before_dot_first_char_ascii_valid_upper_min_ascii\
    \ = ord('A');\n    my $substring_before_dot_first_char_ascii_valid_upper_max_ascii\
    \ = ord('Z');\n    my $substring_before_dot_first_char_ascii_valid_lower_min_ascii_hex",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_index\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_valid_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_upper = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_valid_lower_min = 97;\n    my $substring_before_dot_first_char_ascii_valid_lower_max\
    \ = 122;\n    my $substring_before_dot_first_char_ascii_valid_upper_min = 65;\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_max = 90;\n    my $substring_before_dot_first_char_ascii_valid_lower_min_hex\
    \ = \"0x61\";\n    my $substring_before_dot_first_char_ascii_valid_lower_max_hex\
    \ = \"0x7a\";\n    my $substring_before_dot_first_char_ascii_valid_upper_min_hex\
    \ = \"0x41\";\n    my $substring_before_dot_first_char_ascii_valid_upper_max_hex\
    \ = \"0x5a\";\n    my $substring_before_dot_first_char_ascii_valid_lower_min_oct\
    \ = \"0141\";\n", "    my $result = \"Yes\";\n    my $count = 0;\n    my $dot_count\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $substring_after_dot_is_valid_txt = 0;\n    my $substring_after_dot_is_valid_exe\
    \ = 0;\n    my $substring_after_dot_is_valid_dll = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll\
    \ = 0;\n    my $substring_after_dot_is_valid_txt_exe = 0;\n    my $substring_after_dot_is_valid_txt_dll\
    \ = 0;\n    my $substring_after_dot_is_valid_exe_dll = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll\
    \ = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_txt = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_exe\
    \ = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_dll = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_txt_exe\
    \ = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_txt_dll = 0;\n    my\
    \ $substring_after_dot_is_valid_txt_exe_dll_exe_dll = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_txt_exe_dll\
    \ = 0;\n    my $substring_after_dot_is_valid_txt_exe_dll_txt_exe_dll_txt = 0;\n\
    \    my $substring_after_dot_is_valid_txt_exe_dll_txt_exe_dll_exe = 0;\n    my\
    \ $substring_after_dot_is", "    # Write your code here\n}", "    my $res = \"\
    No\";\n    my $dot_pos = index($file_name, \".\");\n    if ($dot_pos > 0) {\n\
    \        my $substr_before_dot = substr($file_name, 0, $dot_pos);\n        my\
    \ $substr_after_dot = substr($file_name, $dot_pos + 1);\n        if ($substr_before_dot\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*$/ && $substr_after_dot =~ /^(txt|exe|dll)$/) {\n \
    \           $res = \"Yes\";\n        }\n    }\n    return $res;\n}", "    my $result\
    \ = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index =\
    \ -1;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\"\
    ;\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_index = -1;\n    my $substring_before_dot_first_char_index_found\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid = 0;\n    my\
    \ $substring_before_dot_first_char_index_found_valid_valid = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_valid_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_first_char_index_found_valid_", "    my $result\
    \ = \"No\";\n    if ( $file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/ )\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_first_char = 0;\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_length = 0;\n    my $substring_before_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_length = 0;\n    my $substring_after_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_valid_extensions = [\"txt\", \"exe\", \"dll\"\
    ];\n    my $substring_after_dot_valid_extensions_count = @$substring_after_dot_valid_extensions;\n\
    \    my $substring_after_dot_valid_extensions_index = 0;\n    my $substring_after_dot_valid_extensions_valid\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_index = 0;\n    my\
    \ $substring_after_dot_valid_extensions_valid_index_valid = 0;\n    my $substring_after_dot_valid_extensions_valid_index_valid_length\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_index_valid_length_valid\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_index_valid_length_valid_char\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_index_valid_length_valid_char_valid\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_index_valid_length_valid_char_valid_index\
    \ = 0;\n    my $substring_after_dot_valid_extensions_valid_index_valid_length_valid",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot = 0;\n    my $ext = \"\
    \";\n    my $name = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n  \
    \  my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n\
    \    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n\
    \    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n\
    \    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n\
    \    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n\
    \    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0", "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count\
    \ = 0;\n    my $dot_index = 0;\n    my $sub_string_before_dot = \"\";\n    my\
    \ $sub_string_after_dot = \"\";\n    my $sub_string_after_dot_valid = 0;\n   \
    \ my $sub_string_before_dot_valid = 0;\n    my $sub_string_before_dot_start_with_letter\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid = 0;\n\
    \    my $sub_string_before_dot_start_with_letter_valid_index_valid_index = 0;\n\
    \    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid_index\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid_index_valid\
    \ = 0;\n    my $sub_string_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid_index_valid_index\
    \ = 0", "    my $result = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n\
    \    my $dot_index = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_valid_count = 0;\n    my $substring_before_dot_invalid_count\
    \ = 0;\n    my $substring_before_dot_first_char_valid_count = 0;\n    my $substring_before_dot_first_char_invalid_count\
    \ = 0;\n    my $substring_after_dot_valid_count = 0;\n    my $substring_after_dot_invalid_count\
    \ = 0;\n    my $substring_before_dot_first_char_valid_count = 0;\n    my $substring_before_dot_first_char_invalid_count\
    \ = 0;\n    my $substring_before_dot_valid_count = 0;\n    my $substring_before_dot_invalid_count\
    \ = 0;\n    my $substring_after_dot_valid_count = 0;\n    my $substring_after_dot_invalid_count\
    \ = 0;\n    my $substring_before_dot_first_char_valid_count = 0;\n    my $substring_before_dot_first_char_invalid_count\
    \ = 0;\n    my $substring_before_dot_valid_count = 0;\n    my $substring_before_dot_invalid_count\
    \ = 0;\n    my $substring_after_dot_valid_count = 0;\n    my $substring_after_dot_invalid_count\
    \ = 0;\n    my $substring_before_dot_first_char_valid_count = 0;\n    my $substring_before_dot_first_char_invalid_count\
    \ = 0;\n", "    my $valid = \"No\";\n    my $dot_count = () = $file_name =~ /\\\
    ./g;\n    my $digit_count = () = $file_name =~ /[0-9]/g;\n    if ($dot_count ==\
    \ 1 && $digit_count <= 3) {\n        my @parts = split /\\./, $file_name;\n  \
    \      if ($parts[0] =~ /^[a-zA-Z]/ && $parts[1] =~ /^(txt|exe|dll)$/) {\n   \
    \         $valid = \"Yes\";\n        }\n    }\n    return $valid;\n}", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $count =\
    \ 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_valid_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_upper = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_valid_lower_min = 97;\n    my $substring_before_dot_first_char_ascii_valid_lower_max\
    \ = 122;\n    my $substring_before_dot_first_char_ascii_valid_upper_min = 65;\n\
    \    my $substring_before_dot_first_char_ascii_valid_upper_max = 90;\n    my $substring_before_dot_first_char_ascii_valid_lower_min_ascii\
    \ = \"a\";\n    my $substring_before_dot_first_char_ascii_valid_lower_max_ascii\
    \ = \"z\";\n    my $substring_before_dot_first_char_ascii_valid_upper_min_ascii\
    \ = \"A\";\n    my $substring_before_dot_first_char_ascii_valid_upper_max_ascii\
    \ = \"Z\";\n    my $substring_before_dot_first_char_ascii_valid_lower_min_ascii_ord\
    \ = ord($substring_before_dot_first_char_ascii_valid_lower_min_ascii);\n    my\
    \ $", "    my $result = \"No\";\n    my $count = 0;\n    my $dot = 0;\n    my\
    \ $substring = \"\";\n    my $substring2 = \"\";\n    my $substring3 = \"\";\n\
    \    my $substring4 = \"\";\n    my $substring5 = \"\";\n    my $substring6 =\
    \ \"\";\n    my $substring7 = \"\";\n    my $substring8 = \"\";\n    my $substring9\
    \ = \"\";\n    my $substring10 = \"\";\n    my $substring11 = \"\";\n    my $substring12\
    \ = \"\";\n    my $substring13 = \"\";\n    my $substring14 = \"\";\n    my $substring15\
    \ = \"\";\n    my $substring16 = \"\";\n    my $substring17 = \"\";\n    my $substring18\
    \ = \"\";\n    my $substring19 = \"\";\n    my $substring20 = \"\";\n    my $substring21\
    \ = \"\";\n    my $substring22 = \"\";\n    my $substring23 = \"\";\n    my $substring24\
    \ = \"\";\n    my $substring25 = \"\";\n    my $substring26 = \"\";\n    my $substring27\
    \ = \"\";\n    my $substring28 = \"\";\n    my $substring29 = \"\";\n    my $substring30\
    \ = \"\";\n    my $substring31 = \"\";\n    my $substring32 = \"\";\n    my $substring33\
    \ = \"\";\n    my $substring34 = \"\";\n    my $substring35 = \"\";\n    my $substring36\
    \ = \"\";\n    my $substring37 = \"\";\n    my $substring38 = \"\";\n    my $substring39\
    \ = \"\";\n    my $substring40 = \"\";\n    my $substring41 = \"\";\n    my $substring42\
    \ = \"\";\n    my $substring43 = \"\";\n    my $substring44 = \"\";\n    my $substring45\
    \ = \"\";\n    my $substring46 = \"\";\n    my $substring47 = \"\";\n    my $substring48\
    \ = \"\";\n    my $substring49 =", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .txt$|^[a-zA-Z][a-zA-Z0-9]*\\.exe$|^[a-zA-Z][a-zA-Z0-9]*\\.dll$/) {\n        return\
    \ \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $valid =\
    \ 0;\n    my $count = 0;\n    my $dot_count = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    for($i = 0; $i < length($file_name); $i++)\
    \ {\n        if(substr($file_name, $i, 1) =~ /[0-9]/) {\n            $count++;\n\
    \        }\n        if(substr($file_name, $i, 1) eq \".\") {\n            $dot_count++;\n\
    \        }\n    }\n    if($count > 3 || $dot_count != 1) {\n        $valid = 0;\n\
    \    }\n    else {\n        for($j = 0; $j < length($file_name); $j++) {\n   \
    \         if(substr($file_name, $j, 1) eq \".\") {\n                $substring_before_dot\
    \ = substr($file_name, 0, $j);\n                $substring_after_dot = substr($file_name,\
    \ $j + 1, length($file_name) - $j - 1);\n                last;\n            }\n\
    \        }\n        if(length($substring_before_dot) == 0) {\n            $valid\
    \ = 0;\n        }\n        else {\n            if(substr($substring_before_dot,\
    \ 0, 1) =~ /[a-zA-Z]/) {\n                if($substring_after_dot eq \"txt\" ||\
    \ $substring_after_dot eq \"exe\" || $substring_after_dot eq \"dll\") {\n    \
    \                $valid = 1;\n                }\n                else {\n    \
    \                $valid = 0;\n                }\n            }\n            else\
    \ {\n                $valid = 0;\n            }\n        }\n    }\n    if($valid\
    \ == 1) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\";\n\
    \    }\n}", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][^\\.]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $extension = \"\";\n    my $substring = \"\";\n    my $substring_length\
    \ = 0;\n    my $i = 0;\n    my $char = \"\";\n    my $char_code = 0;\n    my $valid_extensions\
    \ = [\"txt\", \"exe\", \"dll\"];\n    my $valid_extensions_length = @$valid_extensions;\n\
    \    my $valid_extension = 0;\n    my $valid_extension_index = 0;\n    my $valid_extension_found\
    \ = 0;\n    my $valid_extension_count = 0;\n    my $valid_extension_length = 0;\n\
    \    my $valid_extension_char = \"\";\n    my $valid_extension_char_code = 0;\n\
    \    my $valid_extension_char_index = 0;\n    my $valid_extension_char_match =\
    \ 0;\n    my $valid_extension_char_match_count = 0;\n    my $valid_extension_char_match_length\
    \ = 0;\n    my $valid_extension_char_match_index = 0;\n    my $valid_extension_char_match_char\
    \ = \"\";\n    my $valid_extension_char_match_char_code = 0;\n    my $valid_extension_char_match_char_index\
    \ = 0;\n    my $valid_extension_char_match_char_match = 0;\n    my $valid_extension_char_match_char_match_count\
    \ = 0;\n    my $valid_extension_char_match_char_match_length = 0;\n    my $valid_extension_char_match_char_match_index\
    \ = 0;\n    my $valid_extension_char_match_char_match_char = \"\";\n    my $valid_extension_char_match_char_match_char_code\
    \ = 0;\n    my $valid_extension_char_match_char_match_char_index = 0;\n    my\
    \ $valid_ext", "    my $result = 'No';\n    my $count = 0;\n    my $dot_count\
    \ = 0;\n    my $dot_index = 0;\n    my $substring_before_dot = '';\n    my $substring_after_dot\
    \ = '';\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    for(my $i = 0; $i < length($file_name); $i++) {\n        my $char\
    \ = substr($file_name, $i, 1);\n        if($char eq '.') {\n            $dot_count++;\n\
    \            $dot_index = $i;\n        }\n        if($char =~ /[0-9]/) {\n   \
    \         $count++;\n        }\n    }\n    if($dot_count == 1 && $count <= 3)\
    \ {\n        $substring_before_dot = substr($file_name, 0, $dot_index);\n    \
    \    $substring_after_dot = substr($file_name, $dot_index + 1);\n        if($substring_before_dot\
    \ =~ /^[a-zA-Z]/) {\n            $substring_before_dot_valid = 1;\n        }\n\
    \        if($substring_after_dot eq 'txt' || $substring_after_dot eq 'exe' ||\
    \ $substring_after_dot eq 'dll') {\n            $substring_after_dot_valid = 1;\n\
    \        }\n        if($substring_before_dot_valid && $substring_after_dot_valid)\
    \ {\n            $result = 'Yes';\n        }\n    }\n    return $result;\n}",
  "    my $result = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_length\
    \ = 0;\n    my $substring_after_dot_is_valid = 0;\n    my $substring_before_dot_is_valid\
    \ = 0;\n    my $substring_before_dot_length = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_is_valid = 0;\n    my $substring_before_dot_first_char_is_digit\
    \ = 0;\n    my $substring_before_dot_first_char_is_letter = 0;\n    my $substring_before_dot_first_char_is_upper_case\
    \ = 0;\n    my $substring_before_dot_first_char_is_lower_case = 0;\n    my $substring_before_dot_first_char_is_valid_letter\
    \ = 0;\n    my $substring_before_dot_first_char_is_valid_digit = 0;\n    my $substring_before_dot_first_char_is_valid_upper_case\
    \ = 0;\n    my $substring_before_dot_first_char_is_valid_lower_case = 0;\n   \
    \ my $substring_before_dot_first_char_is_valid_letter_or_digit = 0;\n    my $substring_before_dot_first_char_is_valid_upper_case_or_lower_case\
    \ = 0;\n    my $substring_before_dot_first_char_is_valid_upper_case_or_lower_case_or_digit\
    \ = 0;\n    my $substring_before_dot_first_char_is_valid_letter_or_upper_case_or_lower_case\
    \ = 0;\n    my $substring_before_dot_first_char_is_valid_letter_or_upper_case_or_lower_case_or_digit\
    \ = 0;\n    my $substring", "    my $result = \"Yes\";\n    my $count = 0;\n \
    \   my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot =\
    \ \"\";\n    my $substring_after_dot = \"\";\n    my $substring_before_dot_is_valid\
    \ = 0;\n    my $substring_after_dot_is_valid = 0;\n    my $substring_after_dot_is_valid_array\
    \ = [\"txt\", \"exe\", \"dll\"];\n    my $substring_after_dot_is_valid_array_length\
    \ = @$substring_after_dot_is_valid_array;\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n   ", "    my $result = \"Yes\";\n    my $dot_count\
    \ = 0;\n    my $digit_count = 0;\n    my $first_char = substr($file_name, 0, 1);\n\
    \    my $last_char = substr($file_name, -1);\n    my $extension = substr($file_name,\
    \ -3);\n    my $substring = substr($file_name, 0, -4);\n    my $substring_first_char\
    \ = substr($substring, 0, 1);\n    my $substring_last_char = substr($substring,\
    \ -1);\n    my $substring_length = length($substring);\n    my $file_name_length\
    \ = length($file_name);\n    my $i = 0;\n    if ($file_name_length < 5) {\n  \
    \      $result = \"No\";\n    }\n    if ($substring_length < 1) {\n        $result\
    \ = \"No\";\n    }\n    if ($first_char !~ /[a-zA-Z]/) {\n        $result = \"\
    No\";\n    }\n    if ($last_char !~ /[a-zA-Z]/) {\n        $result = \"No\";\n\
    \    }\n    if ($substring_first_char !~ /[a-zA-Z]/) {\n        $result = \"No\"\
    ;\n    }\n    if ($substring_last_char !~ /[a-zA-Z]/) {\n        $result = \"\
    No\";\n    }\n    if ($extension !~ /[txt|exe|dll]/) {\n        $result = \"No\"\
    ;\n    }\n    for ($i = 0; $i < $file_name_length; $i++) {\n        if (substr($file_name,\
    \ $i, 1) =~ /[0-9]/) {\n            $digit_count++;\n        }\n        if (substr($file_name,\
    \ $i, 1) eq \".\") {\n            $dot_count++;\n        }\n    }\n    if ($dot_count\
    \ != 1) {\n        $result = \"No\";\n    }\n    if ($digit_count > 3) {\n   \
    \     $result = \"No", "    my $result = 'No';\n    if ($file_name =~ /^[a-zA-Z]\\\
    w*\\.\\w{3}$/) {\n        my $count = $file_name =~ s/\\d//g;\n        if ($count\
    \ <= 3) {\n            $result = 'Yes';\n        }\n    }\n    return $result;\n\
    }", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $valid = 0;\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m\
    \ = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my\
    \ $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n  \
    \  my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n \
    \   my $eight = 0;\n    my $nine = 0;\n    my $dot = 0;\n    my $txt = 0;\n   ",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter = 0;\n    my $substring_before_dot_start_with_letter_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_index = 0;\n    my $substring_before_dot_start_with_letter_char\
    \ = \"\";\n    my $substring_before_dot_start_with_letter_char_valid = 0;\n  \
    \  my $substring_before_dot_start_with_letter_char_valid_index = 0;\n    my $substring_before_dot_start_with_letter_char_valid_char\
    \ = \"\";\n    my $substring_before_dot_start_with_letter_char_valid_char_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_char\
    \ = \"\";\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_char_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_char_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_char_valid_char\
    \ = \"\";\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_char_valid_char_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_char_valid_char_valid_char_valid_char_valid_index\
    \ = 0;\n    my $substring_before_dot", "    my $result = \"No\";\n    my $count\
    \ = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_before_dot_is_valid\
    \ = 0;\n    my $substring_after_dot_is_valid = 0;\n    my $substring_after_dot_is_valid_list\
    \ = [\"txt\", \"exe\", \"dll\"];\n    my $i = 0;\n    my $j = 0;\n    my $k =\
    \ 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p\
    \ = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my\
    \ $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n  \
    \  my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $zero = 0;\n    my $one = 0;\n    my $two\
    \ = 0;\n    my $three = 0;\n    my $", "    my $result = \"No\";\n    if($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/){\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    my $count = 0;\n\
    \    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_length\
    \ = 0;\n    my $substring_before_dot_length_valid = 0;\n    my $substring_before_dot_digit_count\
    \ = 0;\n    my $substring_before_dot_digit_count_valid = 0;\n    my $substring_before_dot_char\
    \ = \"\";\n    my $substring_before_dot_char_valid = 0;\n    my $substring_before_dot_char_is_digit\
    \ = 0;\n    my $substring_before_dot_char_is_letter = 0;\n    my $substring_before_dot_char_is_letter_valid\
    \ = 0;\n    my $substring_before_dot_char_is_digit_valid = 0;\n    my $substring_before_dot_char_is_letter_valid_count\
    \ = 0;\n    my $substring_before_dot_char_is_digit_valid_count = 0;\n    my $substring_before_dot_char_is_letter_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_char_is_digit_valid_count_valid = 0;\n  \
    \  my $substring_before_dot_char_is_letter_valid_count_valid_valid = 0;\n    my\
    \ $substring_before_dot_char_is_digit_valid_count_valid_valid = 0;\n    my $substring_before_dot_char_is_letter_valid_count_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_char_is_digit_valid_count_valid_valid", " \
    \   my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = -1;\n\
    \    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\";\n \
    \   my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $i = 0;\n    my $char = \"\";\n    my $char_code = 0;\n    my $char_code_ascii_0\
    \ = ord('0');\n    my $char_code_ascii_9 = ord('9');\n    my $char_code_ascii_a\
    \ = ord('a');\n    my $char_code_ascii_z = ord('z');\n    my $char_code_ascii_A\
    \ = ord('A');\n    my $char_code_ascii_Z = ord('Z');\n    my $char_code_ascii_dot\
    \ = ord('.');\n    my $char_code_ascii_a_to_z = $char_code_ascii_z - $char_code_ascii_a\
    \ + 1;\n    my $char_code_ascii_A_to_Z = $char_code_ascii_Z - $char_code_ascii_A\
    \ + 1;\n    my $char_code_ascii_0_to_9 = $char_code_ascii_9 - $char_code_ascii_0\
    \ + 1;\n    my $char_code_ascii_a_to_z_and_A_to_Z = $char_code_ascii_a_to_z +\
    \ $char_code_ascii_A_to_Z;\n    my $char_code_ascii_a_to_z_and_A_to_Z_and_0_to_9\
    \ = $char_code_ascii_a_to_z_and_A_to_Z + $char_code_ascii_0_to_9;\n    my $char_code_",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index =\
    \ -1;\n    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\"\
    ;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m =\
    \ 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r\
    \ = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my\
    \ $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n  \
    \  my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n \
    \   my $eight = 0;\n    my $nine = 0;\n    my $dot = 0;\n    my $txt = 0;", " \
    \   my $result = \"No\";\n    if ($file_name =~ /^([a-zA-Z]\\w*)\\.(txt|exe|dll)$/)\
    \ {\n        my $file_name_without_ext = $1;\n        my $ext = $2;\n        if\
    \ ($file_name_without_ext =~ /^[a-zA-Z]\\w*$/) {\n            $result = \"Yes\"\
    ;\n        }\n    }\n    return $result;\n}", "    my $result = \"No\";\n    my\
    \ $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $extension\
    \ = \"\";\n    my $substring = \"\";\n    my $substring_length = 0;\n    my $substring_index\
    \ = 0;\n    my $substring_char = \"\";\n    my $substring_char_code = 0;\n   \
    \ my $substring_char_code_lower = 0;\n    my $substring_char_code_upper = 0;\n\
    \    my $substring_char_code_lower_bound = 0;\n    my $substring_char_code_upper_bound\
    \ = 0;\n    my $substring_char_code_lower_bound_lower = 0;\n    my $substring_char_code_upper_bound_lower\
    \ = 0;\n    my $substring_char_code_lower_bound_upper = 0;\n    my $substring_char_code_upper_bound_upper\
    \ = 0;\n    my $substring_char_code_lower_bound_digit = 0;\n    my $substring_char_code_upper_bound_digit\
    \ = 0;\n    my $substring_char_code_lower_bound_dot = 0;\n    my $substring_char_code_upper_bound_dot\
    \ = 0;\n    my $substring_char_code_lower_bound_txt = 0;\n    my $substring_char_code_upper_bound_txt\
    \ = 0;\n    my $substring_char_code_lower_bound_exe = 0;\n    my $substring_char_code_upper_bound_exe\
    \ = 0;\n    my $substring_char_code_lower_bound_dll = 0;\n    my $substring_char_code_upper_bound_dll\
    \ = 0;\n    my $substring_char_code_lower_bound_lower_txt = 0;\n    my $substring_char_code_upper_bound_lower_txt\
    \ = 0;\n    my $substring_char_code_lower_bound_upper_txt = 0;\n    my $substring_char_code_upper_bound_upper_txt",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index =\
    \ -1;\n    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\"\
    ;\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char_index\
    \ = -1;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_valid_range_start\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_range_end = 0;\n \
    \   my $substring_before_dot_first_char_ascii_valid_range_start_lower = 0;\n \
    \   my $substring_before_dot_first_char_ascii_valid_range_end_lower = 0;\n   \
    \ my $substring_before_dot_first_char_ascii_valid_range_start_upper = 0;\n   \
    \ my $substring_before_dot_first_char_ascii_valid_range_end_upper = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_valid_range_start_lower_ascii = 0;\n\
    \    my $substring_before_dot_first_char_ascii_valid_range_end_lower_ascii = 0;\n\
    \    my $substring_before_dot_first_char_ascii_valid_range_start_upper_ascii =\
    \ 0;\n    my $substring_before_dot_first_char_ascii_valid_range_end_upper_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_as", "    my $result = \"No\"\
    ;\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my @parts = split(/\\\
    ./, $file_name);\n        if ($parts[0] =~ /\\d/) {\n            $result = \"\
    No\";\n        }\n        else {\n            if ($parts[1] eq \"txt\" || $parts[1]\
    \ eq \"exe\" || $parts[1] eq \"dll\") {\n                $result = \"Yes\";\n\
    \            }\n        }\n    }\n    return $result;\n}", "    my $result = \"\
    No\";\n    if ($file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.txt$|^[a-zA-Z]+[0-9]{0,3}\\\
    .exe$|^[a-zA-Z]+[0-9]{0,3}\\.dll$/) {\n        $result = \"Yes\";\n    }\n   \
    \ return $result;\n}", "    my $count = 0;\n    my $dot_count = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_start_with_letter\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid = 0;\n\
    \    my $substring_before_dot_start_with_letter_valid_count_valid_count = 0;\n\
    \    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $extension = \"\";\n    my $file_name_without_extension = \"\"\
    ;\n    my $valid_extensions = ['txt', 'exe', 'dll'];\n    my $valid_extensions_count\
    \ = scalar @$valid_extensions;\n    my $valid_extensions_index = 0;\n    my $valid_extension\
    \ = 0;\n    my $valid_file_name = 0;\n    my $valid_file_name_without_extension\
    \ = 0;\n    my $valid_file_name_without_extension_count = 0;\n    my $valid_file_name_without_extension_index\
    \ = 0;\n    my $valid_file_name_without_extension_character = 0;\n    my $valid_file_name_without_extension_character_index\
    \ = 0;\n    my $valid_file_name_without_extension_character_count = 0;\n    my\
    \ $valid_file_name_without_extension_character_character = \"\";\n    my $valid_file_name_without_extension_character_character_ascii\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_lower_bound\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_upper_bound\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_lower_bound_index\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_upper_bound_index\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_lower_bound_count\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_upper_bound_count\
    \ = 0;\n    my $valid_file_name_without_extension_character_character_ascii_lower_bound_character\
    \ = \"\";\n", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_check\
    \ = 0;\n    my $substring_before_dot_check = 0;\n    my $substring_before_dot_first_letter\
    \ = 0;\n    my $substring_before_dot_first_letter_check = 0;\n    my $substring_before_dot_first_letter_check_2\
    \ = 0;\n    my $substring_before_dot_first_letter_check_3 = 0;\n    my $substring_before_dot_first_letter_check_4\
    \ = 0;\n    my $substring_before_dot_first_letter_check_5 = 0;\n    my $substring_before_dot_first_letter_check_6\
    \ = 0;\n    my $substring_before_dot_first_letter_check_7 = 0;\n    my $substring_before_dot_first_letter_check_8\
    \ = 0;\n    my $substring_before_dot_first_letter_check_9 = 0;\n    my $substring_before_dot_first_letter_check_10\
    \ = 0;\n    my $substring_before_dot_first_letter_check_11 = 0;\n    my $substring_before_dot_first_letter_check_12\
    \ = 0;\n    my $substring_before_dot_first_letter_check_13 = 0;\n    my $substring_before_dot_first_letter_check_14\
    \ = 0;\n    my $substring_before_dot_first_letter_check_15 = 0;\n    my $substring_before_dot_first_letter_check_16\
    \ = 0;\n    my $substring_before_dot_first_letter_check_17 = 0;\n    my $substring_before_dot_first_letter_check_18\
    \ = 0;\n    my $substring_before_dot_first_letter_check_19 = 0;\n    my $substring_before_dot_first_letter",
  "    my $result = \"No\";\n    my $dot_count = 0;\n    my $digit_count = 0;\n  \
    \  my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n   \
    \ my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $i = 0;\n    for ($i = 0; $i < length($file_name); $i++) {\n  \
    \      if (substr($file_name, $i, 1) eq \".\") {\n            $dot_count++;\n\
    \            $substring_before_dot = substr($file_name, 0, $i);\n            $substring_after_dot\
    \ = substr($file_name, $i + 1);\n        }\n        if (substr($file_name, $i,\
    \ 1) =~ /[0-9]/) {\n            $digit_count++;\n        }\n    }\n    if ($dot_count\
    \ == 1 && $digit_count <= 3) {\n        if ($substring_before_dot =~ /^[a-zA-Z]/\
    \ && $substring_before_dot ne \"\") {\n            $substring_before_dot_is_valid\
    \ = 1;\n        }\n        if ($substring_after_dot eq \"txt\" || $substring_after_dot\
    \ eq \"exe\" || $substring_after_dot eq \"dll\") {\n            $substring_after_dot_is_valid\
    \ = 1;\n        }\n        if ($substring_before_dot_is_valid && $substring_after_dot_is_valid)\
    \ {\n            $result = \"Yes\";\n        }\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w+$/) {\n  \
    \      my $before_dot = $`;\n        my $after_dot = $';\n        if ($before_dot\
    \ =~ /\\d/ && $before_dot =~ /\\d{4}/) {\n            $result = \"No\";\n    \
    \    } else {\n            if ($after_dot eq \"txt\" || $after_dot eq \"exe\"\
    \ || $after_dot eq \"dll\") {\n                $result = \"Yes\";\n          \
    \  }\n        }\n    }\n    return $result;\n}", "    my $result = \"No\";\n \
    \   if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result\
    \ = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\";\n    my\
    \ $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_before_dot = \"\";\n    my $substring_before_dot_is_valid\
    \ = 0;\n    my $substring_after_dot_is_valid = 0;\n    my $i = 0;\n    for ($i\
    \ = 0; $i < length($file_name); $i++) {\n        if (substr($file_name, $i, 1)\
    \ =~ /[0-9]/) {\n            $count++;\n        }\n        if (substr($file_name,\
    \ $i, 1) eq \".\") {\n            $dot_count++;\n            $dot_index = $i;\n\
    \        }\n    }\n    if ($count <= 3 && $dot_count == 1) {\n        $substring_after_dot\
    \ = substr($file_name, $dot_index + 1);\n        $substring_before_dot = substr($file_name,\
    \ 0, $dot_index);\n        if ($substring_before_dot =~ /^[a-zA-Z]/) {\n     \
    \       $substring_before_dot_is_valid = 1;\n        }\n        if ($substring_after_dot\
    \ eq \"txt\" || $substring_after_dot eq \"exe\" || $substring_after_dot eq \"\
    dll\") {\n            $substring_after_dot_is_valid = 1;\n        }\n        if\
    \ ($substring_before_dot_is_valid && $substring_after_dot_is_valid) {\n      \
    \      $result = \"Yes\";\n        }\n    }\n    return $result;\n}", "    # Write\
    \ your code here\n    # ...\n    my $count = 0;\n    my $dot_count = 0;\n    my\
    \ $dot_index = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter = 0;\n    my $substring_before_dot_start_with_letter_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count = 0;\n    my\
    \ $substring_before_dot_start_with_letter_valid_count_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_count_valid_count_valid_valid_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $substring_before_dot_start_with", "    my $result = \"No\";\n\
    \    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result\
    \ = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"Yes\";\n   \
    \ my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_lower_bound_valid = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_value\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid_value\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_value_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid_value_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_value_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid_value_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_value_ascii_valid_value\
    \ = 0;\n    my $", "    # Write your code here\n    # ...\n}", "    my $result\
    \ = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $extension =\
    \ \"\";\n    my $file_name_without_extension = \"\";\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $first_letter = \"\";\n\
    \    my $first_letter_ascii = 0;\n    my $last_letter = \"\";\n    my $last_letter_ascii\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my", "    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.[a-zA-Z]{3}$/ && $file_name\
    \ !~ /[0-9]{4}/) {\n        return \"Yes\";\n    }\n    return \"No\";\n}", " \
    \   my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $before_dot\
    \ = \"\";\n    my $after_dot = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my\
    \ $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n  \
    \  my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $zero = 0;\n    my $one = 0;\n    my $two\
    \ = 0;\n    my $three = 0;\n    my $four = 0;\n    my $five = 0;\n    my $six\
    \ = 0;\n    my $seven = 0;\n    my $eight = 0;\n    my $nine = 0;\n    my $dot\
    \ = 0;\n    my $txt = 0;\n    my $exe = 0;\n    my $dll = 0;\n", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_after_dot_check = \"\";\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $zero = 0;\n    my $one = 0;\n    my $two\
    \ = 0;\n    my $three = 0;\n    my $four = 0;\n    my $five = 0;\n    my $six\
    \ = 0;\n    my $seven = 0;\n    my $eight = 0;\n    my $nine = 0;\n   ", "   \
    \ my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $count =\
    \ 0;\n    my $dot_count = 0;\n    my $sub_string = \"\";\n    my $sub_string_after_dot\
    \ = \"\";\n    for (my $i = 0; $i < length($file_name); $i++) {\n        if (substr($file_name,\
    \ $i, 1) =~ /[0-9]/) {\n            $count++;\n        }\n        if (substr($file_name,\
    \ $i, 1) eq \".\") {\n            $dot_count++;\n            $sub_string = substr($file_name,\
    \ 0, $i);\n            $sub_string_after_dot = substr($file_name, $i + 1);\n \
    \       }\n    }\n    if ($count > 3 || $dot_count != 1 || $sub_string eq \"\"\
    \ || $sub_string !~ /^[a-zA-Z]/ || $sub_string_after_dot !~ /^(txt|exe|dll)$/)\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}", "    my $result =\
    \ \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_position =\
    \ 0;\n    my $extension = \"\";\n    my $substring = \"\";\n    my $substring_length\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n \
    \   my $eight = 0;\n    my $nine = 0;\n    my $dot = 0;\n    my $length =", " \
    \   my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_length = 0;\n    my $substring_before_dot_length_valid\
    \ = 0;\n    my $substring_before_dot_digit_count = 0;\n    my $substring_before_dot_digit_count_valid\
    \ = 0;\n    my $substring_before_dot_char = \"\";\n    my $substring_before_dot_char_valid\
    \ = 0;\n    my $substring_after_dot_length = 0;\n    my $substring_after_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_char = \"\";\n    my $substring_after_dot_char_valid\
    \ = 0;\n    my $substring_after_dot_valid_list = [\"txt\", \"exe\", \"dll\"];\n\
    \    my $substring_after_dot_valid_list_length = @$substring_after_dot_valid_list;\n\
    \    my $substring_after_dot_valid_list_index = 0;\n    my $substring_after_dot_valid_list_element\
    \ = \"\";\n    my $substring_after_dot_valid_list_element_length = 0;\n    my\
    \ $substring_after_dot_valid_list_element_char = \"\";\n    my $substring_after_dot_valid_list_element_char_valid\
    \ = 0;\n    my $substring_after_dot_valid_list_element_char_valid_count = 0;\n\
    \    my $substring_after_dot_valid_list_element_char_valid_count_valid = 0;\n\
    \    my $substring_after_", "    my $result = 'No';\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = 'Yes';\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_check = 0;\n    my $substring_before_dot_check\
    \ = 0;\n    my $substring_before_dot_first_char = 0;\n    my $substring_before_dot_first_char_check\
    \ = 0;\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_check\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_check_lower = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_check_upper = 0;\n    my $substring_before_dot_first_char_ascii_check_lower_range\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_check_upper_range = 0;\n\
    \    my $substring_before_dot_first_char_ascii_check_lower_range_min = 97;\n \
    \   my $substring_before_dot_first_char_ascii_check_lower_range_max = 122;\n \
    \   my $substring_before_dot_first_char_ascii_check_upper_range_min = 65;\n  \
    \  my $substring_before_dot_first_char_ascii_check_upper_range_max = 90;\n   \
    \ my $substring_before_dot_first_char_ascii_check_lower_range_min_check = 0;\n\
    \    my $substring_before_dot_first_char_ascii_check_lower_range_max_check = 0;\n\
    \    my $substring_before_dot_first_char_ascii_check_upper_range_min_check = 0;\n\
    \    my $substring_before_dot_first_char_ascii_check_upper_range_max", "    my\
    \ $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $i = 0;\n    for ($i = 0; $i < length($file_name); $i++) {\n  \
    \      if (substr($file_name, $i, 1) =~ /[0-9]/) {\n            $count++;\n  \
    \      }\n        if (substr($file_name, $i, 1) eq \".\") {\n            $dot_count++;\n\
    \            $dot_index = $i;\n        }\n    }\n    if ($count <= 3 && $dot_count\
    \ == 1) {\n        $substring_before_dot = substr($file_name, 0, $dot_index);\n\
    \        $substring_after_dot = substr($file_name, $dot_index + 1);\n        if\
    \ (length($substring_before_dot) > 0 && $substring_before_dot =~ /^[a-zA-Z]/)\
    \ {\n            $substring_before_dot_is_valid = 1;\n        }\n        if ($substring_after_dot\
    \ eq \"txt\" || $substring_after_dot eq \"exe\" || $substring_after_dot eq \"\
    dll\") {\n            $substring_after_dot_is_valid = 1;\n        }\n        if\
    \ ($substring_before_dot_is_valid && $substring_after_dot_is_valid) {\n      \
    \      $result = \"Yes\";\n        }\n    }\n    return $result;\n}", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my @digits\
    \ = $file_name =~ /\\d/g;\n        if (scalar(@digits) <= 3) {\n            $result\
    \ = \"Yes\";\n        }\n    }\n    return $result;\n}", "    my $result = \"\
    Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n \
    \   my $extension = \"\";\n    my $substring = \"\";\n    my $valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    my $valid_extensions_count = @$valid_extensions;\n\
    \    my $valid_extensions_index = 0;\n    my $valid_extensions_found = 0;\n  \
    \  my $valid_extensions_value = \"\";\n    my $valid_extensions_value_length =\
    \ 0;\n    my $valid_extensions_value_index = 0;\n    my $valid_extensions_value_char\
    \ = \"\";\n    my $valid_extensions_value_char_ord = 0;\n    my $valid_extensions_value_char_ord_lower\
    \ = 0;\n    my $valid_extensions_value_char_ord_upper = 0;\n    my $valid_extensions_value_char_ord_lower_valid\
    \ = 0;\n    my $valid_extensions_value_char_ord_upper_valid = 0;\n    my $valid_extensions_value_char_ord_valid\
    \ = 0;\n    my $valid_extensions_value_char_ord_valid_count = 0;\n    my $valid_extensions_value_char_ord_valid_count_valid\
    \ = 0;\n    my $valid_extensions_value_char_ord_valid_count_valid_valid = 0;\n\
    \    my $valid_extensions_value_char_ord_valid_count_valid_valid_valid = 0;\n\
    \    my $valid_extensions_value_char_ord_valid_count_valid_valid_valid_valid =\
    \ 0;\n    my $valid_extensions_value_char_ord_valid_count_valid_valid_valid_valid_valid\
    \ = 0;\n    my $valid_extensions_value_char_ord_valid_count_valid_valid_valid_valid_valid_valid\
    \ = 0;\n    my $valid_extensions_value_char_ord_valid_count_valid_valid_valid_valid_valid_valid_",
  "    my $valid = 0;\n    my $count = 0;\n    my $dot_count = 0;\n    my $sub_string\
    \ = \"\";\n    my $sub_string_after_dot = \"\";\n    my $sub_string_before_dot\
    \ = \"\";\n    my $sub_string_after_dot_valid = 0;\n    my $sub_string_before_dot_valid\
    \ = 0;\n    my $sub_string_before_dot_first_char_valid = 0;\n    my $sub_string_before_dot_first_char\
    \ = \"\";\n    my $sub_string_before_dot_first_char_ascii = 0;\n    my $sub_string_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $sub_string_before_dot_first_char_ascii_valid_lower = 0;\n    my\
    \ $sub_string_before_dot_first_char_ascii_valid_upper = 0;\n    my $sub_string_before_dot_first_char_ascii_valid_lower_min\
    \ = 97;\n    my $sub_string_before_dot_first_char_ascii_valid_lower_max = 122;\n\
    \    my $sub_string_before_dot_first_char_ascii_valid_upper_min = 65;\n    my\
    \ $sub_string_before_dot_first_char_ascii_valid_upper_max = 90;\n    my $sub_string_before_dot_first_char_ascii_valid_lower_min_ascii\
    \ = ord('a');\n    my $sub_string_before_dot_first_char_ascii_valid_lower_max_ascii\
    \ = ord('z');\n    my $sub_string_before_dot_first_char_ascii_valid_upper_min_ascii\
    \ = ord('A');\n    my $sub_string_before_dot_first_char_ascii_valid_upper_max_ascii\
    \ = ord('Z');\n    my $sub_string_before_dot_first_char_ascii_valid_lower_min_ascii_hex\
    \ =", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/)\
    \ {\n        my $count = $file_name =~ s/\\d//g;\n        if ($count <= 3) {\n\
    \            $result = \"Yes\";\n        }\n    }\n    return $result;\n}", " \
    \   my $result = \"Yes\";\n    my $count = 0;\n    my $dot_count = 0;\n    my\
    \ $dot_index = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_after_dot_is_valid = 0;\n    my $valid_substrings_after_dot\
    \ = [\"txt\", \"exe\", \"dll\"];\n    my $i = 0;\n    my $j = 0;\n    my $k =\
    \ 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p\
    \ = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my\
    \ $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n  \
    \  my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $zero = 0;\n    my $one = 0;\n    my $two\
    \ = 0;\n    my $three = 0;\n    my $four = 0;\n    my $five = 0;\n    my $six\
    \ = 0;\n", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\\
    w+$/) {\n        if ($file_name =~ /^[a-zA-Z]\\w*\\.(txt|exe|dll)$/) {\n     \
    \       if ($file_name !~ /\\d{4}/) {\n                $result = \"Yes\";\n  \
    \          }\n        }\n    }\n    return $result;\n}", "    my $result = \"\
    No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n  \
    \  my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n   \
    \ my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_length = 0;\n    my $substring_after_dot_length\
    \ = 0;\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_or_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_xor_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid_and_substring_before",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w+$/) {\n  \
    \      my @parts = split(/\\./, $file_name);\n        if ($parts[0] =~ /^[a-zA-Z]\\\
    w*$/ && $parts[1] =~ /^(txt|exe|dll)$/) {\n            $result = \"Yes\";\n  \
    \      }\n    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = \"Yes\";\n\
    \    }\n    return $result;\n}", "    my $result = 'No';\n    if ($file_name =~\
    \ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n        $result = 'Yes';\n    }\n\
    \    return $result;\n}", "    my $result = \"Yes\";\n    my $dot_count = () =\
    \ $file_name =~ /\\./g;\n    my $digit_count = () = $file_name =~ /\\d/g;\n  \
    \  my $extension = substr($file_name, rindex($file_name, \".\") + 1);\n    if\
    \ ($dot_count != 1 || $digit_count > 3 || $file_name !~ /^[a-zA-Z]/ || $extension\
    \ !~ /^(txt|exe|dll)$/) {\n        $result = \"No\";\n    }\n    return $result;\n\
    }", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\
    \";\n    my $i = 0;\n    for ($i = 0; $i < length($file_name); $i++) {\n     \
    \   if (substr($file_name, $i, 1) =~ /[0-9]/) {\n            $count++;\n     \
    \   }\n        if (substr($file_name, $i, 1) eq \".\") {\n            $dot_count++;\n\
    \            $dot_index = $i;\n        }\n    }\n    if ($count <= 3 && $dot_count\
    \ == 1) {\n        $substring_after_dot = substr($file_name, $dot_index + 1);\n\
    \        $substring_before_dot = substr($file_name, 0, $dot_index);\n        if\
    \ ($substring_before_dot =~ /^[a-zA-Z]/ && $substring_before_dot ne \"\" && $substring_after_dot\
    \ eq \"txt\" || $substring_after_dot eq \"exe\" || $substring_after_dot eq \"\
    dll\") {\n            $result = \"Yes\";\n        }\n    }\n    return $result;\n\
    }", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = -1;\n    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\
    \";\n    my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $substring_before_dot_is_empty = 1;\n    my $substring_after_dot_is_empty\
    \ = 1;\n    my $substring_before_dot_is_letter = 0;\n    my $substring_after_dot_is_letter\
    \ = 0;\n    my $substring_before_dot_is_digit = 0;\n    my $substring_after_dot_is_digit\
    \ = 0;\n    my $substring_before_dot_is_not_digit = 0;\n    my $substring_after_dot_is_not_digit\
    \ = 0;\n    my $substring_before_dot_is_not_letter = 0;\n    my $substring_after_dot_is_not_letter\
    \ = 0;\n    my $substring_before_dot_is_not_empty = 0;\n    my $substring_after_dot_is_not_empty\
    \ = 0;\n    my $substring_before_dot_is_not_valid = 0;\n    my $substring_after_dot_is_not_valid\
    \ = 0;\n    my $substring_before_dot_is_valid_and_not_empty = 0;\n    my $substring_after_dot_is_valid_and_not_empty\
    \ = 0;\n    my $substring_before_dot_is_valid_and_not_empty_and_not_digit = 0;\n\
    \    my $substring_after_dot_is_valid_and_not_empty_and_not_digit = 0;\n    my\
    \ $substring_before_dot_is_valid_and_not_empty_and_not_digit_and_letter = 0;\n\
    \    my $substring_after_dot_is_valid_and_not_empty_and_", "    my $result = \"\
    No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n  \
    \  my $extension = \"\";\n    my $substring = \"\";\n    my $substring_count =\
    \ 0;\n    my $substring_index = 0;\n    my $substring_valid = 0;\n    my $extension_valid\
    \ = 0;\n    my $valid_extensions = [\"txt\", \"exe\", \"dll\"];\n    my $valid_substrings\
    \ = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"\
    v\", \"w\", \"x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"\
    G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"\
    R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n    for (my $i\
    \ = 0; $i < length($file_name); $i++) {\n        my $char = substr($file_name,\
    \ $i, 1);\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n\
    \        if ($char eq \".\") {\n            $dot_count++;\n            $dot_index\
    \ = $i;\n        }\n    }\n    if ($count > 3) {\n        return $result;\n  \
    \  }\n    if ($dot_count != 1) {\n        return $result;\n    }\n    $substring\
    \ = substr($file_name, 0, $dot_index);\n    $extension = substr($file_name, $dot_index\
    \ + 1);\n    for (my $i = 0; $i < scalar(@$valid_extensions); $i++) {\n      \
    \  if ($extension eq @$valid_extensions[$i]) {\n            $extension_valid =\
    \ 1;\n       ", "    # Write your code here\n    # ...\n}", "    my $result =\
    \ 'No';\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $extension = '';\n    my $file_name_without_extension = '';\n    my $file_name_length\
    \ = length($file_name);\n    for (my $i = 0; $i < $file_name_length; $i++) {\n\
    \        my $char = substr($file_name, $i, 1);\n        if ($char =~ /[0-9]/)\
    \ {\n            $count++;\n        }\n        if ($char eq '.') {\n         \
    \   $dot_count++;\n            $dot_index = $i;\n        }\n    }\n    if ($count\
    \ <= 3 && $dot_count == 1) {\n        $extension = substr($file_name, $dot_index\
    \ + 1);\n        $file_name_without_extension = substr($file_name, 0, $dot_index);\n\
    \        if ($file_name_without_extension =~ /^[a-zA-Z]/ && $file_name_without_extension\
    \ ne '' && $extension =~ /^(txt|exe|dll)$/) {\n            $result = 'Yes';\n\
    \        }\n    }\n    return $result;\n}", "    my $result = \"No\";\n    my\
    \ $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $sub_string_after_dot\
    \ = \"\";\n    my $sub_string_before_dot = \"\";\n    my $sub_string_before_dot_first_char\
    \ = \"\";\n    my @valid_sub_string_after_dot = (\"txt\", \"exe\", \"dll\");\n\
    \    my $valid_sub_string_after_dot_count = 0;\n    my $valid_sub_string_after_dot_index\
    \ = 0;\n    my $valid_sub_string_after_dot_length = 0;\n    my $valid_sub_string_after_dot_first_char\
    \ = \"\";\n    my $valid_sub_string_after_dot_last_char = \"\";\n    my $valid_sub_string_after_dot_first_char_index\
    \ = 0;\n    my $valid_sub_string_after_dot_last_char_index = 0;\n    my $valid_sub_string_after_dot_first_char_ascii\
    \ = 0;\n    my $valid_sub_string_after_dot_last_char_ascii = 0;\n    my $valid_sub_string_after_dot_first_char_ascii_lower_bound\
    \ = 0;\n    my $valid_sub_string_after_dot_first_char_ascii_upper_bound = 0;\n\
    \    my $valid_sub_string_after_dot_last_char_ascii_lower_bound = 0;\n    my $valid_sub_string_after_dot_last_char_ascii_upper_bound\
    \ = 0;\n    my $valid_sub_string_after_dot_first_char_is_valid = 0;\n    my $valid_sub_string_after_dot_last_char_is_valid\
    \ = 0;\n    my $valid_sub_string_after_dot_is_valid = 0;\n    my $sub_string_before_dot_first_char_ascii\
    \ = 0;\n    my $sub_string_before_dot_first_char_asci", "    my $result = \"No\"\
    ;\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n       \
    \ $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\"\
    ;\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n       \
    \ $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\"\
    ;\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n       \
    \ $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"Yes\"\
    ;\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_position = 0;\n   \
    \ my $extension = \"\";\n    my $extension_valid = 0;\n    my $file_name_valid\
    \ = 0;\n    my $file_name_valid_count = 0;\n    my $file_name_valid_count_max\
    \ = 0;\n    my $file_name_valid_count_min = 0;\n    my $file_name_valid_count_min_max\
    \ = 0;\n    my $file_name_valid_count_min_max_valid = 0;\n    my $file_name_valid_count_min_max_valid_count\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_max = 0;\n    my $file_name_valid_count_min_max_valid_count_min\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max = 0;\n    my\
    \ $file_name_valid_count_min_max_valid_count_min_max_valid = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count_max\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count_min\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count_min_max\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count_min_max_valid\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count_min_max_valid_count\
    \ = 0;\n    my $file_name_valid_count_min_max_valid_count_min_max_valid_count_min_max_valid",
  "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $extension = \"\";\n    my $substring = \"\";\n    my $substring_length\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0;\n \
    \   my $eight = 0;\n    my $nine = 0;\n    my $dot = 0;\n    my $substring", " \
    \   my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_position\
    \ = 0;\n    my $extension = \"\";\n    my $file_name_without_extension = \"\"\
    ;\n    my $valid_extensions = [\"txt\", \"exe\", \"dll\"];\n    my $valid_extension\
    \ = 0;\n    my $valid_file_name = 0;\n    my $valid_file_name_without_extension\
    \ = 0;\n    my $valid_digit_count = 0;\n    my $valid_dot_count = 0;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my\
    \ $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n  \
    \  my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n\
    \    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n\
    \    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n\
    \    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n\
    \    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n\
    \    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $zero\
    \ = 0;\n    my $one = 0;", "    my $result = \"No\";\n    my $count = 0;\n   \
    \ my $dot_count = 0;\n    my $dot_index = 0;\n    my $file_type = \"\";\n    my\
    \ $file_name_without_type = \"\";\n    my $file_name_without_type_first_char =\
    \ \"\";\n    my $file_name_without_type_first_char_ascii = 0;\n    my $file_name_without_type_first_char_ascii_lower\
    \ = 0;\n    my $file_name_without_type_first_char_ascii_upper = 0;\n    my $file_name_without_type_first_char_ascii_lower_range_min\
    \ = 97;\n    my $file_name_without_type_first_char_ascii_lower_range_max = 122;\n\
    \    my $file_name_without_type_first_char_ascii_upper_range_min = 65;\n    my\
    \ $file_name_without_type_first_char_ascii_upper_range_max = 90;\n    my $file_name_without_type_first_char_ascii_range_min\
    \ = 65;\n    my $file_name_without_type_first_char_ascii_range_max = 122;\n  \
    \  my $file_name_without_type_first_char_ascii_range_min_lower = 97;\n    my $file_name_without_type_first_char_ascii_range_max_lower\
    \ = 122;\n    my $file_name_without_type_first_char_ascii_range_min_upper = 65;\n\
    \    my $file_name_without_type_first_char_ascii_range_max_upper = 90;\n    my\
    \ $file_name_without_type_first_char_ascii_range_min_digit = 48;\n    my $file_name_without_type_first_char_ascii_range_max_digit\
    \ = 57;\n    my $file_name_without_type_first_char_ascii_range_min_dot = 46;\n\
    \    my", "    my $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n\
    \    my $dot_index = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot\
    \ = \"\";\n    my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven = 0", " \
    \   my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.txt$/\
    \ || $file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\.exe$/ || $file_name =~ /^[a-zA-Z]+[0-9]{0,3}\\\
    .dll$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $extension = \"\"\
    ;\n    my $file_name_without_extension = \"\";\n    my $file_name_length = length($file_name);\n\
    \    for(my $i = 0; $i < $file_name_length; $i++) {\n        my $char = substr($file_name,\
    \ $i, 1);\n        if($char =~ /[0-9]/) {\n            $count++;\n        }\n\
    \        if($char eq \".\") {\n            $dot_count++;\n            $extension\
    \ = substr($file_name, $i + 1);\n            $file_name_without_extension = substr($file_name,\
    \ 0, $i);\n        }\n    }\n    if($count <= 3 && $dot_count == 1 && $file_name_without_extension\
    \ =~ /^[a-zA-Z]/ && $extension =~ /^(txt|exe|dll)$/) {\n        $result = \"Yes\"\
    ;\n    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z]+\\d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\\
    .dll$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w+$/) {\n      \
    \  my @parts = split(/\\./, $file_name);\n        if ($parts[0] =~ /\\d{4}/) {\n\
    \            $result = \"No\";\n        } else {\n            if ($parts[1] eq\
    \ \"txt\" || $parts[1] eq \"exe\" || $parts[1] eq \"dll\") {\n               \
    \ $result = \"Yes\";\n            }\n        }\n    }\n    return $result;\n}",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.(txt|exe|dll)$/) {\n     \
    \   $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"No\"\
    ;\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my $count = $file_name\
    \ =~ s/\\d//g;\n        if ($count <= 3) {\n            $result = \"Yes\";\n \
    \       }\n    }\n    return $result;\n}", "    my $result = \"No\";\n    if ($file_name\
    \ =~ /^[a-zA-Z]\\w*\\.txt$/ || $file_name =~ /^[a-zA-Z]\\w*\\.exe$/ || $file_name\
    \ =~ /^[a-zA-Z]\\w*\\.dll$/) {\n        $result = \"Yes\";\n    }\n    return\
    \ $result;\n}", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\\
    w*\\.\\w{3}$/) {\n        my $count = $file_name =~ s/\\d//g;\n        if ($count\
    \ <= 3) {\n            $result = \"Yes\";\n        }\n    }\n    return $result;\n\
    }", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.txt$|^[a-zA-Z]\\\
    w*\\.exe$|^[a-zA-Z]\\w*\\.dll$/) {\n        $result = \"Yes\";\n    }\n    return\
    \ $result;\n}", "    my $result = \"No\";\n    my $dot_count = 0;\n    my $digit_count\
    \ = 0;\n    my $extension = \"\";\n    my $file_name_without_extension = \"\"\
    ;\n    my $first_letter = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $len = 0;\n    my $len_extension = 0;\n    my $len_file_name_without_extension\
    \ = 0;\n    my $len_first_letter = 0;\n    my $valid_extension = 0;\n    my $valid_first_letter\
    \ = 0;\n    my $valid_file_name_without_extension = 0;\n    my $valid_digit_count\
    \ = 0;\n    my $valid_dot_count = 0;\n    my @valid_extensions = ('txt', 'exe',\
    \ 'dll');\n    my @valid_first_letters = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\
    \ 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');\n    $len = length($file_name);\n\
    \    for($i = 0; $i < $len; $i++) {\n        if(substr($file_name, $i, 1) eq '.')\
    \ {\n            $dot_count++;\n        }\n        if(substr($file_name, $i, 1)\
    \ =~ /[0-9]/) {\n            $digit_count++;\n        }\n    }\n    if($dot_count\
    \ == 1) {\n        $valid_dot_count = 1;\n    }\n    if($digit", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $dot_count = 0;\n    my $digit_count = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_ascii\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_upper_bound = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_bound_valid = 0;\n\
    \    my $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_lower_bound_valid_or_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_and_substring_before_dot_first_char_ascii_lower_bound_valid_or_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_valid_and_substring_before_dot_first_char_ascii_lower_bound_valid_and_substring_before_dot_first_char_ascii_upper_bound_valid\
    \ = 0;\n    my $sub", "    my $valid = \"Yes\";\n    my $dot_count = 0;\n    my\
    \ $digit_count = 0;\n    my $extension = \"\";\n    my $file_name_without_extension\
    \ = \"\";\n    my $first_letter = \"\";\n    my $extension_valid = 0;\n    my\
    \ $extension_valid_list = [\"txt\", \"exe\", \"dll\"];\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n  \
    \  my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $zero = 0;\n    my $one\
    \ = 0;\n    my $two = 0;\n    my $three = 0;\n    my $four = 0;\n    my $five\
    \ = 0;\n    my $six = 0;\n    my $seven = 0;\n", "    my $result = \"No\";\n \
    \   if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w{3}$/) {\n        my $before_dot = $`;\n\
    \        my $after_dot = $';\n        if ($before_dot =~ /\\d/ || $after_dot !~\
    \ /^(txt|exe|dll)$/) {\n            $result = \"No\";\n        } else {\n    \
    \        $result = \"Yes\";\n        }\n    }\n    return $result;\n}", "    my\
    \ $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid\
    \ = 0;\n    my $substring_before_dot_first_char = \"\";\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_no_digit = 0;\n    my $substring_before_dot_no_digit_valid\
    \ = 0;\n    my $substring_before_dot_length = 0;\n    my $substring_before_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_length = 0;\n    my $substring_after_dot_length_valid\
    \ = 0;\n    my $substring_after_dot_no_digit = 0;\n    my $substring_after_dot_no_digit_valid\
    \ = 0;\n    my $substring_after_dot_first_char = \"\";\n    my $substring_after_dot_first_char_valid\
    \ = 0;\n    my $substring_after_dot_first_char_valid_txt = 0;\n    my $substring_after_dot_first_char_valid_exe\
    \ = 0;\n    my $substring_after_dot_first_char_valid_dll = 0;\n    my $substring_after_dot_second_char\
    \ = \"\";\n    my $substring_after_dot_second_char_valid = 0;\n    my $substring_after_dot_second_char_valid_txt\
    \ = 0;\n    my $substring_after_dot_second_char_valid_exe = 0;\n    my $substring_after_dot_second_char_valid_dll\
    \ = 0;\n    my $substring_after_dot_third_char = \"\";\n    my $substring_after_dot_third_char_valid\
    \ = 0;\n    my $substring_after_dot_third_", "    my $result = \"Yes\";\n    my\
    \ $count = 0;\n    my $dot_count = 0;\n    my $substring_before_dot = \"\";\n\
    \    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid = 0;\n\
    \    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_valid_count\
    \ = 0;\n    my $substring_after_dot_valid_count = 0;\n    my $substring_before_dot_valid_count_max\
    \ = 0;\n    my $substring_after_dot_valid_count_max = 0;\n    my $substring_before_dot_valid_count_min\
    \ = 0;\n    my $substring_after_dot_valid_count_min = 0;\n    my $substring_before_dot_valid_count_max_valid\
    \ = 0;\n    my $substring_after_dot_valid_count_max_valid = 0;\n    my $substring_before_dot_valid_count_min_valid\
    \ = 0;\n    my $substring_after_dot_valid_count_min_valid = 0;\n    my $substring_before_dot_valid_count_max_valid_count\
    \ = 0;\n    my $substring_after_dot_valid_count_max_valid_count = 0;\n    my $substring_before_dot_valid_count_min_valid_count\
    \ = 0;\n    my $substring_after_dot_valid_count_min_valid_count = 0;\n    my $substring_before_dot_valid_count_max_valid_count_max\
    \ = 0;\n    my $substring_after_dot_valid_count_max_valid_count_max = 0;\n   \
    \ my $substring_before_dot_valid_count_min_valid_count_max = 0;\n    my $substring_after_dot_valid_count_min_valid_count_max\
    \ = 0;\n    my $substring_before_dot_valid_count_max_valid_count_min = 0;\n  \
    \  my $substring_after_dot_valid_count_max_valid"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

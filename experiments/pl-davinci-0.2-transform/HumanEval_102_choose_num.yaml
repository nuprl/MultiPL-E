name: HumanEval_102_choose_num
language: pl
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num(12,\
  \ 15)\n# 14\n# >>> choose_num(13, 12)\n# -1\nsub choose_num {\n    my($x, $y) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&choose_num;\n\
  \        if(eq_deeply($candidate->(12, 15),14)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(13, 12),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(33,\
  \ 12354),12354)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(5234, 5233),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(6, 29),28)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(27,\
  \ 10),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(7, 7),-1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->(546, 546),546)) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    # TODO: your code here\n    my $max = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            if ($i > $max) {\n\
    \                $max = $i;\n            }\n        }\n    }\n    return $max;\n\
    }", "    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return\
    \ $x + 1;\n    }\n}", "    # Your code here\n    my $max = -1;\n    for(my $i\
    \ = $x; $i <= $y; $i++){\n        if($i % 2 == 0){\n            if($i > $max){\n\
    \                $max = $i;\n            }\n        }\n    }\n    return $max;\n\
    }", "    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "    my $result = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return\
    \ $result;\n}", "    my $max = -1;\n    for(my $i = $x; $i <= $y; $i++) {\n  \
    \      if($i % 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n   \
    \ }\n    return $max;\n}", "    my $max = -1;\n    for (my $i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n   \
    \ }\n    return $max;\n}", "    # your code here\n}", "    my $biggest = -1;\n\
    \    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n        \
    \    $biggest = $i;\n        }\n    }\n    return $biggest;\n}", "    my $biggest\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $biggest\
    \ = $_ if $_ > $biggest;\n        }\n    }\n    return $biggest;\n}", "    my\
    \ $biggest = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n           \
    \ $biggest = $_ if $_ > $biggest;\n        }\n    }\n    return $biggest;\n}",
  "    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "    # TODO:\
    \ Fill in the code here.\n    if ($x % 2 == 0) {\n        return $x;\n    }\n\
    \    else {\n        $x = $x + 1;\n        return $x;\n    }\n}", "    # TODO:\
    \ Fill in the code here.\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "    # Your code here\n    my $biggest = -1;\n    for ($x..$y)\
    \ {\n        if ($_ % 2 == 0) {\n            $biggest = $_;\n        }\n    }\n\
    \    return $biggest;\n}", "    my $max = -1;\n    for ($x..$y) {\n        $max\
    \ = $_ if ($_ % 2 == 0 and $_ > $max);\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "    # your code\
    \ here\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

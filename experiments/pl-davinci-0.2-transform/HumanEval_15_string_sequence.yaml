name: HumanEval_15_string_sequence
language: pl
prompt: "# Return a string containing space-delimited numbers starting from 0 upto\
  \ n inclusive.\n# >>> string_sequence(0)\n# \"0\"\n# >>> string_sequence(5)\n# \"\
  0 1 2 3 4 5\"\nsub string_sequence {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&string_sequence;\n\
  \        if(eq_deeply($candidate->(0),\"0\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(3),\"0 1 2 3\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\
  0 1 2 3 4 5 6 7 8 9 10\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n}\n\ntesthumaneval();"
completions: ["    my $str = \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n      \
    \  $str .= \"$i \";\n    }\n    return $str;\n}", "    return join(\" \", 0..$n);\n\
    }", "    return join(\" \", 0..$n);\n}", "    my $s = \"\";\n    for (my $i =\
    \ 0; $i <= $n; $i++) {\n        $s .= \" $i\";\n    }\n    return $s;\n}", " \
    \   return join(\" \", 0..$n);\n}", "    my $result = \"\";\n    for (my $i =\
    \ 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }", "    my $s = \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n        $s .= \"\
    \ $i\";\n    }\n    return $s;\n}", "    my $s = '';\n    for (my $i = 0; $i <=\
    \ $n; $i++) {\n        $s .= \" $i\";\n    }\n    return $s;\n}", "    my $s =\
    \ \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n        $s .= \" $i\";\n    }\n\
    \    return $s;\n}", "    my $s = \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n\
    \        $s .= \" $i\";\n    }\n    return $s;\n}", "    my $s = \"\";\n    for\
    \ (my $i = 0; $i <= $n; $i++) {\n        $s .= \"$i \";\n    }\n    return $s;\n\
    }", "    my $s = \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n        $s .= \"\
    \ $i\";\n    }\n    return $s;\n}", "    return join(\" \", 0..$n);\n}", "   \
    \ my $s = \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n        $s .= \" $i\"\
    ;\n    }\n    return $s;\n}", "    return join(\" \", 0..$n);\n}", "    my $str\
    \ = \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n        $str .= \"$i \";\n \
    \   }\n    return $str;\n}", "    return join(\" \", 0..$n);\n}", "    my $s =\
    \ \"\";\n    for (my $i = 0; $i <= $n; $i++) {\n        $s .= \" $i\";\n    }\n\
    \    return $s;\n}", "    my $str = \"\";\n    for (my $i = 0; $i <= $n; $i++)\
    \ {\n        $str .= \"$i \";\n    }\n    return $str;\n}", "    my $s = \"\"\
    ;\n    for (my $i = 0; $i <= $n; $i++) {\n        $s .= \" $i\";\n    }\n    return\
    \ $s;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

language: pl
name: HumanEval_62_derivative
results:
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $$xs[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 1
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ map { $n-- * $xs->[$_] } 1 .. $#$xs;\n    return \\@ys;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3,\
    \ 1, 2, 4, 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @derivative = ();\n    for\
    \ (my $i = 1; $i < @$xs; $i++) {\n        push @derivative, $i * $xs->[$i];\n\
    \    }\n    return \\@derivative;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1,\
    \ 2, 4, 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        $ys[$i - 1] = $xs->[$i] *\
    \ $i;\n    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1,\
    \ 2, 4, 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ret;\n    for (my $i =\
    \ 1; $i < @$xs; $i++) {\n        push @ret, $i * $xs->[$i];\n    }\n    return\
    \ \\@ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. $#{$xs}) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @derivative = ();\n    for\
    \ (my $i = 1; $i < @$xs; $i++) {\n        push @derivative, $i * $xs->[$i];\n\
    \    }\n    return \\@derivative;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1,\
    \ 2, 4, 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for my $i (1 .. $n - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n\
    \    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4,\
    \ 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 1]),[2,\
    \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @xs = @$xs;\n    my @ys;\n\
    \    for (my $i = 1; $i < @xs; $i++) {\n        push @ys, $i * $xs[$i];\n    }\n\
    \    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4,\
    \ 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 1]),[2,\
    \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013120
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for my $i (1 .. $n - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n\
    \    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4,\
    \ 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 1]),[2,\
    \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    my $n = @$xs;\n\
    \    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n   \
    \ }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4,\
    \ 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 1]),[2,\
    \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ret;\n    for (my $i =\
    \ 1; $i < @$xs; $i++) {\n        push @ret, $i * $xs->[$i];\n    }\n    return\
    \ \\@ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @derivative = ();\n    for\
    \ (my $i = 1; $i < @$xs; $i++) {\n        push @derivative, $i * $xs->[$i];\n\
    \    }\n    return \\@derivative;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1,\
    \ 2, 4, 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @derivative = ();\n    for\
    \ (my $i = 1; $i < @$xs; $i++) {\n        push @derivative, $i * $xs->[$i];\n\
    \    }\n    return \\@derivative;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1,\
    \ 2, 4, 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for my $i (1 .. $n-1) {\n        push @ys, $i * $xs->[$i];\n    }\n\
    \    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4,\
    \ 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 1]),[2,\
    \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013120
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @dxs = ();\n    for (my\
    \ $i = 1; $i < @$xs; $i++) {\n        push @dxs, $i * $xs->[$i];\n    }\n    return\
    \ \\@dxs;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013147
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    my $n = @$xs;\n\
    \    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n   \
    \ }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4,\
    \ 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2, 1]),[2,\
    \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @result;\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @result, $i * $xs->[$i];\n    }\n    return\
    \ \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12,\
    \ 20])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for my $i\
    \ (1 .. @$xs - 1) {\n        push @ys, $i * $xs->[$i];\n    }\n    return \\@ys;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&derivative;\n\
    \        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ret;\n    for (my $i =\
    \ 1; $i < @$xs; $i++) {\n        push @ret, $i * $xs->[$i];\n    }\n    return\
    \ \\@ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my @ys = ();\n    for (my $i\
    \ = 1; $i < @$xs; $i++) {\n        push @ys, $i * $xs->[$i];\n    }\n    return\
    \ \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4, 5]),[1, 4, 12, 20]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 2, 3]),[2, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1]),[2, 2])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3, 2,\
    \ 1, 0, 4]),[2, 2, 0, 16])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([1]),[])) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092
- exit_code: 0
  program: "# xs represent coefficients of a polynomial.\n# xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n# Return derivative of this polynomial in the same form.\n# >>>\
    \ derivative([3, 1, 2, 4, 5])\n# [1, 4, 12, 20]\n# >>> derivative([1, 2, 3])\n\
    # [2, 6]\nsub derivative {\n    my($xs) = @_;\n    my $n = @$xs;\n    my @ys =\
    \ ();\n    for (my $i = 1; $i < $n; $i++) {\n        push @ys, $i * $xs->[$i];\n\
    \    }\n    return \\@ys;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&derivative;\n        if(eq_deeply($candidate->([3, 1, 2, 4,\
    \ 5]),[1, 4, 12, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n    \
    \    }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 6])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 2, 1]),[2, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([3, 2, 1, 0, 4]),[2, 2, 0, 16])) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1660013092

name: HumanEval_48_is_palindrome
language: pl
prompt: "# Checks if given string is a palindrome\n# >>> is_palindrome(\"\")\n# 1\n\
  # >>> is_palindrome(\"aba\")\n# 1\n# >>> is_palindrome(\"aaaaa\")\n# 1\n# >>> is_palindrome(\"\
  zbcd\")\n# \"\"\nsub is_palindrome {\n    my($text) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_palindrome;\n\
  \        if(eq_deeply($candidate->(\"\"),1)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(\"aba\"),1)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  aaaaa\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->(\"zbcd\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"xywyx\"),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  xywyz\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"xywzx\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $len = length($text);\n    my $half = int($len / 2);\n    my\
    \ $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $mid = int($len\
    \ / 2);\n    my $i;\n    for ($i = 0; $i < $mid; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n\
    \    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $len - $i - 1, 1)) {\n            return \"\";\n        }\n  \
    \  }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    my($i, $j);\n    my($len) = length($text);\n\
    \    for ($i = 0, $j = $len - 1; $i < $len; $i++, $j--) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \ }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i\
    \ = 0; $i < $len/2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    for (my $i = 0; $i < $len / 2; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my($i, $j);\n\
    \    my($len) = length($text);\n    for ($i = 0, $j = $len - 1; $i < $len; $i++,\
    \ $j--) {\n        return \"\" if (substr($text, $i, 1) ne substr($text, $j, 1));\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n   \
    \ my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    if\
    \ ($len == 0) {\n        return 1;\n    }\n    for (my $i = 0; $i < $len; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n\
    \        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n            return\
    \ \"\";\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n \
    \           return \"\";\n        }\n        $i++;\n        $j--;\n    }\n   \
    \ return 1;\n}", "    my $len = length($text);\n    my $mid = int($len / 2);\n\
    \    for (my $i = 0; $i < $mid; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    for (my $i = 0; $i < $len / 2; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $half = int($len / 2);\n    my $i;\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($text);\n    my $half = int($len / 2);\n    my $i;\n\
    \    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    for (my $i = 0; $i\
    \ < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($text);\n    my $i;\n    for ($i = 0; $i < $len/2; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n\
    \        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n            return\
    \ \"\";\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n \
    \           return \"\";\n        }\n        $i++;\n        $j--;\n    }\n   \
    \ return 1;\n}", "    my $length = length($text);\n    my $half = int($length\
    \ / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $length - $i - 1, 1)) {\n            return \"\";\n    \
    \    }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half\
    \ = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++) {\n       \
    \ if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n           \
    \ return \"\";\n        }\n    }\n    return 1;\n}", "    my $length = length($text);\n\
    \    my $half = int($length / 2);\n    for (my $i = 0; $i < $half; $i++) {\n \
    \       if (substr($text, $i, 1) ne substr($text, $length - $i - 1, 1)) {\n  \
    \          return \"\";\n        }\n    }\n    return 1;\n}", "    my $length\
    \ = length($text);\n    my $half = int($length / 2);\n    my $i;\n    for ($i\
    \ = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $length - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $length = length($text);\n    my $half = int($length / 2);\n\
    \    my $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $length - $i - 1, 1)) {\n            return \"\";\n    \
    \    }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n\
    \    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while($i < $j) {\n        if(substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $length = length($text);\n    my $half\
    \ = int($length / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $length - $i - 1, 1)) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "    my $length = length($text);\n    my\
    \ $half = int($length / 2);\n    for (my $i = 0; $i < $half; $i++) {\n       \
    \ if (substr($text, $i, 1) ne substr($text, $length - $i - 1, 1)) {\n        \
    \    return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $half = int($len / 2);\n    for (my $i = 0; $i < $half;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    my $half = int($len / 2);\n    for (my $i = 0; $i < $half;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    my $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n    \
    \    if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n        \
    \    return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half\
    \ = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $length = length($text);\n    my $i\
    \ = 0;\n    my $j = $length - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my($rev) = reverse($text);\n    if ($text\
    \ eq $rev) {\n        return 1;\n    } else {\n        return \"\";\n    }\n}",
  "    my $len = length($text);\n    my $i;\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n\
    \        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n            return\
    \ \"\";\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}", " \
    \   my($i, $j);\n    my($len) = length($text);\n    for ($i = 0, $j = $len - 1;\
    \ $i < $len; $i++, $j--) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $mid = int($len / 2);\n    for (my $i = 0;\
    \ $i < $mid; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len -\
    \ $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}",
  "    my $len = length($text);\n    my $half = int($len / 2);\n    for (my $i = 0;\
    \ $i < $half; $i++) {\n        my $j = $len - $i - 1;\n        return \"\" if\
    \ substr($text, $i, 1) ne substr($text, $j, 1);\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n \
    \           return \"\";\n        }\n        $i++;\n        $j--;\n    }\n   \
    \ return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len\
    \ - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $length = length($text);\n    my $half = int($length\
    \ / 2);\n    my $result = 1;\n    for (my $i = 0; $i < $half; $i++) {\n      \
    \  my $left = substr($text, $i, 1);\n        my $right = substr($text, $length\
    \ - $i - 1, 1);\n        if ($left ne $right) {\n            $result = \"\";\n\
    \            last;\n        }\n    }\n    return $result;\n}", "    my $len =\
    \ length($text);\n    my $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n      \
    \  if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n          \
    \  return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my($len) = length($text);\n    my($i);\n\
    \    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $len - $i - 1, 1)) {\n            return \"\";\n        }\n  \
    \  }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my\
    \ $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    my $len = length($text);\n    if ($len < 2)\
    \ {\n        return 1;\n    }\n    if (substr($text, 0, 1) ne substr($text, $len\
    \ - 1, 1)) {\n        return \"\";\n    }\n    return is_palindrome(substr($text,\
    \ 1, $len - 2));\n}", "    my $len = length($text);\n    for (my $i = 0; $i <\
    \ $len/2; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len-$i-1,\
    \ 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my\
    \ $len = length($text);\n    my $i = 0;\n    while ($i < $len) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n        $i++;\n    }\n    return 1;\n}", "    return $text eq reverse\
    \ $text;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n \
    \   for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    my\
    \ $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $length = length($text);\n    my $half = int($length / 2);\n\
    \    my $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $length - $i - 1, 1)) {\n            return \"\";\n    \
    \    }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n\
    \    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $i;\n    for ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n\
    \    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n    \
    \    if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n        \
    \    return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n    \
    \    return \"\" if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1));\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n   \
    \ my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my($i, $j, $len);\n\
    \    $len = length($text);\n    for ($i = 0, $j = $len - 1; $i < $len; $i++, $j--)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n           \
    \ return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = $len / 2;\n    for (my $i = 0; $i < $half; $i++) {\n        if\
    \ (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $mid = int($len / 2);\n    for (my $i = 0; $i < $mid; $i++) {\n      \
    \  if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n          \
    \  return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n\
    \        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n            return\
    \ \"\";\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n \
    \           return \"\";\n        }\n        $i++;\n        $j--;\n    }\n   \
    \ return 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i = 0; $i\
    \ < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($text);\n    my $half = int($len / 2);\n    for (my\
    \ $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    my\
    \ $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $rev = reverse $text;\n    if ($text\
    \ eq $rev) {\n        return 1;\n    }\n    return \"\";\n}", "    my $length\
    \ = length($text);\n    my $half_length = int($length / 2);\n    for (my $i =\
    \ 0; $i < $half_length; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $length - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i\
    \ = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $result = \"\";\n    my $length = length($text);\n    my $half\
    \ = int($length / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        my $left\
    \ = substr($text, $i, 1);\n        my $right = substr($text, $length - $i - 1,\
    \ 1);\n        if ($left ne $right) {\n            return \"\";\n        }\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i\
    \ = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $mid = $len / 2;\n    my $i;\n\
    \    for ($i = 0; $i < $mid; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i\
    \ = 0; $i < $len/2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    my\
    \ $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    my $length = length($text);\n    my $half = int($length\
    \ / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $length - $i - 1, 1)) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half\
    \ = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++) {\n       \
    \ if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n           \
    \ return \"\";\n        }\n    }\n    return 1;\n}", "    my $length = length($text);\n\
    \    my $half = int($length / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $length - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my($len)\
    \ = length($text);\n    my($i);\n    for ($i = 0; $i < $len/2; $i++) {\n     \
    \   if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n         \
    \   return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n    \
    \    if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n        \
    \    return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for($i = 0; $i < $len/2; $i++) {\n        if(substr($text, $i,\
    \ 1) ne substr($text, $len-$i-1, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    return $text eq reverse $text;\n}", " \
    \   my $len = length($text);\n    my $half = int($len / 2);\n    my $i;\n    for\
    \ ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my\
    \ $j = $len - 1;\n    while($i < $j) {\n        if(substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my\
    \ $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i;\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i = 0; $i < $len\
    \ / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i -\
    \ 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $half = int($len / 2);\n    for (my $i =\
    \ 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n   \
    \ while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j, 1))\
    \ {\n            return \"\";\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return 1;\n}", "    my $len = length($text);\n    my $half = $len / 2;\n\
    \    my $i;\n    for ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    return $text eq reverse $text;\n}", "    return\
    \ $text eq reverse $text;\n}", "    my $len = length($text);\n    my $i = 0;\n\
    \    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n    \
    \    if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n        \
    \    return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $result = 1;\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            $result = \"\";\n\
    \            last;\n        }\n    }\n    return $result;\n}", "    my $length\
    \ = length($text);\n    my $half = int($length / 2);\n    my $is_palindrome =\
    \ 1;\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1)\
    \ ne substr($text, $length - $i - 1, 1)) {\n            $is_palindrome = \"\"\
    ;\n            last;\n        }\n    }\n    return $is_palindrome;\n}", "    my\
    \ $len = length($text);\n    if ($len <= 1) {\n        return 1;\n    }\n    if\
    \ (substr($text, 0, 1) eq substr($text, $len - 1, 1)) {\n        return is_palindrome(substr($text,\
    \ 1, $len - 2));\n    }\n    return \"\";\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for ($i = 0; $i < $len/2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $i =\
    \ 0;\n    while ($i < $len/2) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len-$i-1, 1)) {\n            return \"\";\n        }\n        $i++;\n    }\n\
    \    return 1;\n}", "    my $length = length($text);\n    my $half_length = int($length\
    \ / 2);\n    for (my $i = 0; $i < $half_length; $i++) {\n        my $first_char\
    \ = substr($text, $i, 1);\n        my $last_char = substr($text, $length - $i\
    \ - 1, 1);\n        if ($first_char ne $last_char) {\n            return \"\"\
    ;\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    while ($i < $len/2) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $len-$i-1, 1)) {\n            return \"\";\n        }\n      \
    \  $i++;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $i =\
    \ 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n    \
    \    return \"\" if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1));\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n   \
    \ my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    my\
    \ $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if\
    \ (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    my($i, $j);\n    my($len) =\
    \ length($text);\n    for ($i = 0, $j = $len - 1; $i < $len; $i++, $j--) {\n \
    \       if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    return $text eq reverse $text;\n\
    }", "    my $length = length($text);\n    my $half = int($length / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $length - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i;\n    for ($i = 0; $i < $len/2;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $length\
    \ = length($text);\n    my $half = int($length / 2);\n    my $i;\n    for ($i\
    \ = 0; $i < $half; $i++) {\n        my $j = $length - $i - 1;\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \ }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half = int($len\
    \ / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i,\
    \ 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n       \
    \ }\n    }\n    return 1;\n}", "    my $len = length($text);\n    for (my $i =\
    \ 0; $i < $len/2; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len-$i-1,\
    \ 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my\
    \ $len = length($text);\n    my $half = int($len / 2);\n    for (my $i = 0; $i\
    \ < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i\
    \ - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $half = int($len / 2);\n    for (my $i =\
    \ 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($text);\n    my $i;\n    for ($i = 0; $i < $len / 2;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    return\
    \ 1 if $text eq reverse $text;\n    return \"\";\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++)\
    \ {\n        my $j = $len - $i - 1;\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   my $len = length($text);\n    my $half = int($len / 2);\n    my $i;\n    for\
    \ ($i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    return \"\" if !defined $text;\n    return $text if length($text)\
    \ == 1;\n    return \"\" if substr($text, 0, 1) ne substr($text, -1, 1);\n   \
    \ return is_palindrome(substr($text, 1, length($text) - 2));\n}", "    my $len\
    \ = length($text);\n    for (my $i = 0; $i < $len / 2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $mid\
    \ = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $mid; $i++) {\n        if\
    \ (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    if ($len == 0) {\n        return 1;\n    }\n    if ($len == 1) {\n      \
    \  return 1;\n    }\n    if (substr($text, 0, 1) ne substr($text, $len - 1, 1))\
    \ {\n        return \"\";\n    }\n    return is_palindrome(substr($text, 1, $len\
    \ - 2));\n}", "    my $len = length($text);\n    for (my $i = 0; $i < $len/2;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    my $half = int($len / 2);\n    for (my $i = 0; $i < $half;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    my $half = int($len / 2);\n    my $i;\n    for ($i = 0;\
    \ $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($text);\n    my $i;\n    for($i = 0; $i < $len / 2;\
    \ $i++) {\n        if(substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    my $half = int($len / 2);\n    for (my $i = 0; $i < $half;\
    \ $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1))\
    \ {\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    my $i;\n    for ($i = 0; $i < $len/2; $i++) {\n      \
    \  if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n          \
    \  return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $length = length($text);\n\
    \    my $half = int($length / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++)\
    \ {\n        if (substr($text, $i, 1) ne substr($text, $length - $i - 1, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($text);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n\
    \        if (substr($text, $i, 1) ne substr($text, $j, 1)) {\n            return\
    \ \"\";\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}", " \
    \   my $palindrome = \"\";\n    my $len = length($text);\n    my $i = 0;\n   \
    \ while ($i < $len) {\n        if (substr($text, $i, 1) eq substr($text, $len\
    \ - $i - 1, 1)) {\n            $palindrome = 1;\n        } else {\n          \
    \  $palindrome = \"\";\n            last;\n        }\n        $i++;\n    }\n \
    \   return $palindrome;\n}", "    my $len = length($text);\n    my $i;\n    for\
    \ ($i = 0; $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $length = length($text);\n    my $half = int($length / 2);\n\
    \    my $result = 1;\n    for (my $i = 0; $i < $half; $i++) {\n        my $left\
    \ = substr($text, $i, 1);\n        my $right = substr($text, $length - $i - 1,\
    \ 1);\n        if ($left ne $right) {\n            $result = \"\";\n         \
    \   last;\n        }\n    }\n    return $result;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    return \"\" if length($text)\
    \ < 2;\n    return 1 if length($text) == 2 && substr($text, 0, 1) eq substr($text,\
    \ 1, 1);\n    return is_palindrome(substr($text, 1, length($text) - 2)) if substr($text,\
    \ 0, 1) eq substr($text, length($text) - 1, 1);\n    return \"\";\n}", "    my\
    \ $len = length($text);\n    my $half = int($len / 2);\n    my $i;\n    for ($i\
    \ = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text, $j,\
    \ 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n \
    \   }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    while\
    \ ($i < $len / 2) {\n        if (substr($text, $i, 1) ne substr($text, $len -\
    \ $i - 1, 1)) {\n            return \"\";\n        }\n        $i++;\n    }\n \
    \   return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j =\
    \ $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n   \
    \ my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne\
    \ substr($text, $j, 1)) {\n            return \"\";\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n    for\
    \ (my $i = 0; $i < $len/2; $i++) {\n        return \"\" if (substr($text, $i,\
    \ 1) ne substr($text, $len-$i-1, 1));\n    }\n    return 1;\n}", "    my $len\
    \ = length($text);\n    return 1 if $len == 0;\n    return 1 if $len == 1;\n \
    \   return 1 if $len == 2 && $text =~ /^(.)\\1$/;\n    return \"\" if $len ==\
    \ 2 && $text !~ /^(.)\\1$/;\n    return 1 if $len == 3 && $text =~ /^(.)\\1\\\
    1$/;\n    return \"\" if $len == 3 && $text !~ /^(.)\\1\\1$/;\n    return 1 if\
    \ $len == 3 && $text =~ /^(.)(.)\\1$/;\n    return \"\" if $len == 3 && $text\
    \ !~ /^(.)(.)\\1$/;\n    return 1 if $len == 4 && $text =~ /^(.)(.)\\2\\1$/;\n\
    \    return \"\" if $len == 4 && $text !~ /^(.)(.)\\2\\1$/;\n    return 1 if $len\
    \ == 5 && $text =~ /^(.)(.)\\2\\1\\1$/;\n    return \"\" if $len == 5 && $text\
    \ !~ /^(.)(.)\\2\\1\\1$/;\n    return 1 if $len == 5 && $text =~ /^(.)(.)\\1\\\
    2\\1$/;\n    return \"\" if $len == 5 && $text !~ /^(.)(.)\\1\\2\\1$/;\n    return\
    \ 1 if $len == 6 && $text =~ /^(.)(.)\\2\\1\\2\\1$/;\n    return \"\" if $len\
    \ == 6 && $text !~ /^(.)(.)\\2\\1\\2\\1$/;\n    return 1 if $len == 6 && $text\
    \ =~ /^(.)(.)\\1\\2\\1\\2$/;\n    return \"\" if $len == 6 && $text !~ /^(.)(.)\\\
    1\\2\\1\\2$/;\n    return 1 if $len == 7 && $text =~ /^(.)(.)\\2\\1\\2\\1\\2$/;\n\
    \    return \"\" if $len == 7", "    my $len = length($text);\n    my $half =\
    \ int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $rev = reverse $text;\n    if ($text\
    \ eq $rev) {\n        return 1;\n    }\n    return \"\";\n}", "    my($len) =\
    \ length($text);\n    my($i);\n    for ($i = 0; $i < $len/2; $i++) {\n       \
    \ if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n           \
    \ return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i;\n    for ($i = 0; $i < $len/2; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $len = length($text);\n    for (my\
    \ $i = 0; $i < $len/2; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $length = length($text);\n    my $half = int($length / 2);\n\
    \    for (my $i = 0; $i < $half; $i++) {\n        my $j = $length - $i - 1;\n\
    \        return \"\" if substr($text, $i, 1) ne substr($text, $j, 1);\n    }\n\
    \    return 1;\n}", "    my $len = length($text);\n    my $i = 0;\n    my $j =\
    \ $len - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $len = length($text);\n    for (my $i = 0;\
    \ $i < $len / 2; $i++) {\n        if (substr($text, $i, 1) ne substr($text, $len\
    \ - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $length = length($text);\n    my $half_length = int($length / 2);\n\
    \    my $i;\n    for ($i = 0; $i < $half_length; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $length - $i - 1, 1)) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half\
    \ = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $len - $i - 1, 1)) {\n            return \"\";\n   \
    \     }\n    }\n    return 1;\n}", "    my $len = length($text);\n    my $half\
    \ = int($len / 2);\n    my $i;\n    for ($i = 0; $i < $half; $i++) {\n       \
    \ if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n           \
    \ return \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    return 1 if $text eq\
    \ reverse $text;\n    return \"\";\n}", "    my $len = length($text);\n    my\
    \ $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($text,\
    \ $i, 1) ne substr($text, $j, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $len = length($text);\n\
    \    my $half = int($len / 2);\n    for (my $i = 0; $i < $half; $i++) {\n    \
    \    if (substr($text, $i, 1) ne substr($text, $len - $i - 1, 1)) {\n        \
    \    return \"\";\n        }\n    }\n    return 1;\n}", "    return $text eq reverse\
    \ $text;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n \
    \   for (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $half = int($len / 2);\n    for\
    \ (my $i = 0; $i < $half; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $len = length($text);\n    my $mid = int($len / 2);\n    for\
    \ (my $i = 0; $i < $mid; $i++) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $len - $i - 1, 1)) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    my $length = length($text);\n    my $i = 0;\n    my $j = $length\
    \ - 1;\n    while ($i < $j) {\n        if (substr($text, $i, 1) ne substr($text,\
    \ $j, 1)) {\n            return \"\";\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

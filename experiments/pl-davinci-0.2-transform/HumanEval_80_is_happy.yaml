name: HumanEval_80_is_happy
language: pl
prompt: "# You are given a string s.\n# Your task is to check if the string is happy\
  \ or not.\n# A string is happy if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n# For example:\n# >>> is_happy(a)\n# \"\"\n# >>> is_happy(aa)\n\
  # \"\"\n# >>> is_happy(abcd)\n# 1\n# >>> is_happy(aabb)\n# \"\"\n# >>> is_happy(adb)\n\
  # 1\n# >>> is_happy(xyy)\n# \"\"\nsub is_happy {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_happy;\n\
  \        if(eq_deeply($candidate->(\"a\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"aa\"),\"\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  abcd\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"aabb\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"adb\"),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  xyy\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(\"iopaxpoi\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"iopaxioi\"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i <\
    \ length($s) - 2) {\n        my $sub = substr($s, $i, 3);\n        return \"\"\
    \ if $sub =~ /(.)\\1/;\n        $i++;\n    }\n    return 1;\n}", "    return \"\
    \" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n   \
    \     return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return\
    \ \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if\
    \ substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i <\
    \ length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i\
    \ + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n\
    \        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    \
    \    $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n  \
    \  my $i = 0;\n    while ($i < length($s) - 2) {\n        if (substr($s, $i, 1)\
    \ eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i\
    \ + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n        $i++;\n    }\n    return 1;\n}",
  "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n   \
    \ }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i =\
    \ 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2,\
    \ 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n\
    \    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len < 3;\n\
    \    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub = substr($s, $i,\
    \ 3);\n        my %h;\n        for my $c (split //, $sub) {\n            return\
    \ \"\" if $h{$c};\n            $h{$c} = 1;\n        }\n        $i++;\n    }\n\
    \    return 1;\n}", "    return \"\" if length($s) < 3;\n    my @s = split //,\
    \ $s;\n    for (my $i = 0; $i < @s - 2; $i++) {\n        return \"\" if $s[$i]\
    \ eq $s[$i + 1] || $s[$i] eq $s[$i + 2] || $s[$i + 1] eq $s[$i + 2];\n    }\n\
    \    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2,\
    \ 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n    return\
    \ \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub\
    \ = substr($s, $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i <\
    \ length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i\
    \ + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n\
    \        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    \
    \    $i++;\n    }\n    return 1;\n}", "    # your code here\n    my $n = length($s);\n\
    \    return \"\" if $n < 3;\n    for (my $i = 0; $i < $n - 2; $i++) {\n      \
    \  my $a = substr($s, $i, 1);\n        my $b = substr($s, $i + 1, 1);\n      \
    \  my $c = substr($s, $i + 2, 1);\n        return \"\" if $a eq $b || $a eq $c\
    \ || $b eq $c;\n    }\n    return 1;\n}", "    # Your code here\n    if (length($s)\
    \ < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < length($s) - 2;\
    \ $i++) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n       \
    \     substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i\
    \ + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\";\n        }\n \
    \   }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n\
    \    while ($i < length($s)-2) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i+1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i+2, 1);\n        return \"\" if substr($s, $i+1, 1) eq substr($s, $i+2, 1);\n\
    \        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n    if ($len\
    \ < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len - 2; $i++)\
    \ {\n        my $s1 = substr($s, $i, 1);\n        my $s2 = substr($s, $i + 1,\
    \ 1);\n        my $s3 = substr($s, $i + 2, 1);\n        if ($s1 eq $s2 || $s1\
    \ eq $s3 || $s2 eq $s3) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "    # Your code here\n    my $len = length($s);\n    return \"\" if\
    \ $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub = substr($s,\
    \ $i, 3);\n        return \"\" if $sub =~ /(\\w)\\1/;\n    }\n    return 1;\n}",
  "    if (length($s) < 3) {\n        return \"\";\n    }\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\"\
    ;\n        }\n        $i++;\n    }\n    return 1;\n}", "    # Your code here\n\
    \    my $len = length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n\
    \    my $i = 0;\n    while ($i < $len - 2) {\n        my $subs = substr($s, $i,\
    \ 3);\n        if ($subs =~ /(\\w)\\1\\1/) {\n            return \"\";\n     \
    \   }\n        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n \
    \   return \"\" if $len < 3;\n    my $i = 0;\n    while ($i < $len - 2) {\n  \
    \      my $substr = substr($s, $i, 3);\n        return \"\" if $substr =~ /(\\\
    w)\\1/;\n        $i++;\n    }\n    return 1;\n}", "    # Your code here\n    if(length($s)\
    \ < 3){\n        return \"\";\n    }\n    my $i = 0;\n    my $j = 1;\n    my $k\
    \ = 2;\n    while($k < length($s)){\n        if(substr($s, $i, 1) eq substr($s,\
    \ $j, 1) || substr($s, $i, 1) eq substr($s, $k, 1) || substr($s, $j, 1) eq substr($s,\
    \ $k, 1)){\n            return \"\";\n        }\n        $i++;\n        $j++;\n\
    \        $k++;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n                     substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1) ||\n                     substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    # Your code here\n    my $len =\
    \ length($s);\n    if($len < 3){\n        return \"\";\n    }\n    for(my $i =\
    \ 0; $i < $len - 2; $i++){\n        my $sub = substr($s, $i, 3);\n        if($sub\
    \ =~ /(\\w)\\1/){\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($s);\n    if ($len < 3) {\n        return \"\";\n  \
    \  }\n    my $i = 0;\n    while ($i < $len - 2) {\n        my $c1 = substr($s,\
    \ $i, 1);\n        my $c2 = substr($s, $i + 1, 1);\n        my $c3 = substr($s,\
    \ $i + 2, 1);\n        if ($c1 eq $c2 || $c1 eq $c3 || $c2 eq $c3) {\n       \
    \     return \"\";\n        }\n        $i++;\n    }\n    return 1;\n}", "    if\
    \ (length($s) < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n  \
    \          substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len\
    \ < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub = substr($s,\
    \ $i, 3);\n        return \"\" if $sub =~ /([a-z])\\1/;\n    }\n    return 1;\n\
    }", "    if (length($s) < 3) {\n        return \"\";\n    }\n    for (my $i =\
    \ 0; $i < length($s) - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n    \
    \    if ($sub =~ /(.)\\1/) {\n            return \"\";\n        }\n    }\n   \
    \ return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i <\
    \ length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n \
    \           substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}",
  "    my $len = length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i\
    \ < $len - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1) or\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n \
    \           substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return\
    \ 1;\n}", "    if(length($s) < 3) {\n        return \"\";\n    }\n    for(my $i\
    \ = 0; $i < length($s) - 2; $i++) {\n        if(substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1) ||\n           substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n  \
    \         substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    my $len = length($s);\n   \
    \ if ($len < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len\
    \ - 2; $i++) {\n        my $c1 = substr($s, $i, 1);\n        my $c2 = substr($s,\
    \ $i + 1, 1);\n        my $c3 = substr($s, $i + 2, 1);\n        if ($c1 eq $c2\
    \ || $c1 eq $c3 || $c2 eq $c3) {\n            return \"\";\n        }\n    }\n\
    \    return 1;\n}", "    my $len = length($s);\n    if ($len < 3) {\n        return\
    \ \"\";\n    }\n    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub =\
    \ substr($s, $i, 3);\n        if ($sub =~ /(\\w)\\1\\1/) {\n            return\
    \ \"\";\n        }\n        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n\
    \    return \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n  \
    \      my $sub = substr($s, $i, 3);\n        my $sub_len = length($sub);\n   \
    \     return \"\" if $sub_len != length(unpack(\"u\", pack(\"u\", $sub)));\n \
    \   }\n    return 1;\n}", "    if (length($s) < 3) {\n        return \"\";\n \
    \   }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    return \"\
    \" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n   \
    \     return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return\
    \ \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if\
    \ substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return\
    \ 1;\n}", "    # Your code here\n    if(length($s) < 3){\n        return \"\"\
    ;\n    }\n    for(my $i = 0; $i < length($s) - 2; $i++){\n        if(substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) || substr($s, $i, 1) eq substr($s, $i + 2, 1)\
    \ || substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)){\n            return \"\"\
    ;\n        }\n    }\n    return 1;\n}", "    my $len = length($s);\n    return\
    \ \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub\
    \ = substr($s, $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i <\
    \ length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i\
    \ + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n\
    \        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    \
    \    $i++;\n    }\n    return 1;\n}", "    return '' if length($s) < 3;\n    for\
    \ (my $i = 0; $i < length($s) - 2; $i++) {\n        return '' if substr($s, $i,\
    \ 1) eq substr($s, $i + 1, 1) or\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) or\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i\
    \ = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1)\
    \ eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i\
    \ + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n  \
    \  }\n    return 1;\n}", "    # Your code here\n    my $len = length($s);\n  \
    \  return \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n    \
    \    return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) or\n          \
    \  substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n            substr($s, $i +\
    \ 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    # Your code\
    \ here\n    my $len = length($s);\n    if($len < 3){\n        return \"\";\n \
    \   }\n    for(my $i = 0; $i < $len - 2; $i++){\n        my $sub_str = substr($s,\
    \ $i, 3);\n        my $sub_len = length($sub_str);\n        my %hash;\n      \
    \  for(my $j = 0; $j < $sub_len; $j++){\n            my $char = substr($sub_str,\
    \ $j, 1);\n            if(exists $hash{$char}){\n                return \"\";\n\
    \            }\n            $hash{$char} = 1;\n        }\n    }\n    return 1;\n\
    }", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n   \
    \ }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len <\
    \ 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub = substr($s,\
    \ $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n    }\n    return 1;\n}",
  "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++)\
    \ {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n  \
    \          substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    my $len\
    \ = length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i < $len -\
    \ 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        my $sub_len = length($sub);\n\
    \        my %seen;\n        $seen{$_}++ for split //, $sub;\n        return \"\
    \" if $sub_len != keys %seen;\n    }\n    return 1;\n}", "    my $len = length($s);\n\
    \    if ($len < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len\
    \ - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        if ($sub =~ /(\\\
    w)\\1\\1/) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   return \"\" if length($s) < 3;\n    my @a = split(//, $s);\n    for (my $i\
    \ = 0; $i < $#a - 1; $i++) {\n        return \"\" if $a[$i] eq $a[$i + 1] or $a[$i]\
    \ eq $a[$i + 2] or $a[$i + 1] eq $a[$i + 2];\n    }\n    return 1;\n}", "    if\
    \ (length($s) < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n  \
    \          substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}", "    if (length($s) < 3) {\n        return \"\";\n\
    \    }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $len =\
    \ length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2;\
    \ $i++) {\n        my $sub = substr($s, $i, 3);\n        return \"\" if $sub =~\
    \ /(.)\\1/;\n    }\n    return 1;\n}", "    if (length($s) < 3) {\n        return\
    \ \"\";\n    }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    return \"\
    \" if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n    \
    \    return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n          \
    \  substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i +\
    \ 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    my @s = split(//, $s);\n    for (my $i = 0; $i < @s\
    \ - 2; $i++) {\n        return \"\" if $s[$i] eq $s[$i + 1] || $s[$i] eq $s[$i\
    \ + 2] || $s[$i + 1] eq $s[$i + 2];\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n     \
    \   return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n           \
    \          substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n                   \
    \  substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}",
  "    if (length($s) < 3) {\n        return \"\";\n    }\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\"\
    ;\n        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if substr($s, $i + 1,\
    \ 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}", "   \
    \ # Your code here\n    my $len = length($s);\n    if($len < 3){\n        return\
    \ \"\";\n    }\n    my $i = 0;\n    while($i < $len - 2){\n        if(substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) || substr($s, $i, 1) eq substr($s, $i + 2, 1)\
    \ || substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)){\n            return \"\"\
    ;\n        }\n        $i++;\n    }\n    return 1;\n}", "    if (length($s) < 3)\
    \ {\n        return \"\";\n    }\n    for (my $i = 0; $i < length($s) - 2; $i++)\
    \ {\n        if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}",
  "    my $len = length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n \
    \   my $i = 0;\n    while ($i < $len - 2) {\n        my $sub = substr($s, $i,\
    \ 3);\n        my $sub_len = length($sub);\n        if ($sub_len != 3) {\n   \
    \         return \"\";\n        }\n        my $j = 0;\n        while ($j < $sub_len\
    \ - 1) {\n            my $sub_sub = substr($sub, $j, 2);\n            my $sub_sub_len\
    \ = length($sub_sub);\n            if ($sub_sub_len != 2) {\n                return\
    \ \"\";\n            }\n            my $sub_sub_sub = substr($sub_sub, 0, 1);\n\
    \            my $sub_sub_sub_len = length($sub_sub_sub);\n            if ($sub_sub_sub_len\
    \ != 1) {\n                return \"\";\n            }\n            my $sub_sub_sub_sub\
    \ = substr($sub_sub, 1, 1);\n            my $sub_sub_sub_sub_len = length($sub_sub_sub_sub);\n\
    \            if ($sub_sub_sub_sub_len != 1) {\n                return \"\";\n\
    \            }\n            if ($sub_sub_sub eq $sub_sub_sub_sub) {\n        \
    \        return \"\";\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i\
    \ = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1)\
    \ eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i\
    \ + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n  \
    \  }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n\
    \    while ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i,\
    \ 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    if (length($s) < 3) {\n        return\
    \ \"\";\n    }\n    my $i = 0;\n    while ($i < length($s) - 2) {\n        my\
    \ $a = substr($s, $i, 1);\n        my $b = substr($s, $i + 1, 1);\n        my\
    \ $c = substr($s, $i + 2, 1);\n        if ($a eq $b || $a eq $c || $b eq $c) {\n\
    \            return \"\";\n        }\n        $i++;\n    }\n    return 1;\n}",
  "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n   \
    \ }\n    return 1;\n}", "    if (length($s) < 3) {\n        return \"\";\n   \
    \ }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $n = length($s);\n\
    \    return \"\" if $n < 3;\n    for (my $i = 0; $i < $n - 2; $i++) {\n      \
    \  my $a = substr($s, $i, 1);\n        my $b = substr($s, $i + 1, 1);\n      \
    \  my $c = substr($s, $i + 2, 1);\n        return \"\" if $a eq $b || $a eq $c\
    \ || $b eq $c;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        my $sub = substr($s,\
    \ $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n    }\n    return 1;\n}",
  "    # Your code here\n    my $len = length($s);\n    if ($len < 3) {\n        return\
    \ \"\";\n    }\n    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub =\
    \ substr($s, $i, 3);\n        if ($sub =~ /(\\w)\\1\\1/) {\n            return\
    \ \"\";\n        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    my @s = split //, $s;\n    for my $i (0..$#s-2) {\n\
    \        return \"\" if $s[$i] eq $s[$i+1] || $s[$i] eq $s[$i+2] || $s[$i+1] eq\
    \ $s[$i+2];\n    }\n    return 1;\n}", "    if (length($s) < 3) {\n        return\
    \ \"\";\n    }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    # Your code\
    \ here\n    return '';\n}", "    # Your code here\n    my $len = length($s);\n\
    \    if ($len < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len\
    \ - 2; $i++) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1, 1) || substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1) || substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   my $len = length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i\
    \ < $len - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        return \"\
    \" if $sub =~ /(.)\\1/;\n    }\n    return 1;\n}", "    # Your code here\n   \
    \ return $s =~ /^(?:(.)(?!\\1)(.)(?!\\1|\\2)(.)(?!\\1|\\2|\\3))+$/;\n}", "   \
    \ my $n = length($s);\n    return \"\" if $n < 3;\n    for (my $i = 0; $i < $n\
    \ - 2; $i++) {\n        my $a = substr($s, $i, 1);\n        my $b = substr($s,\
    \ $i + 1, 1);\n        my $c = substr($s, $i + 2, 1);\n        return \"\" if\
    \ $a eq $b || $a eq $c || $b eq $c;\n    }\n    return 1;\n}", "    my $len =\
    \ length($s);\n    return \"\" if $len < 3;\n    for(my $i = 0; $i < $len - 2;\
    \ $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n\
    }", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n   \
    \ }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len <\
    \ 3;\n    my $i = 0;\n    while ($i < $len - 2) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n\
    \    if ($len < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len\
    \ - 2; $i++) {\n        my $substr = substr($s, $i, 3);\n        if ($substr =~\
    \ /(\\w)\\1\\1/) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    return \"\" if length($s) < 3;\n    return \"\" if $s =~ /(.)\\1\\1/;\n\
    \    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len < 3;\n\
    \    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub = substr($s, $i,\
    \ 3);\n        my $len = length($sub);\n        my %hash;\n        for (my $j\
    \ = 0; $j < $len; $j++) {\n            my $c = substr($sub, $j, 1);\n        \
    \    return \"\" if exists $hash{$c};\n            $hash{$c} = 1;\n        }\n\
    \        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) or\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) or\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    if (length($s) < 3) {\n        return \"\";\n\
    \    }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    return 0\
    \ if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n    \
    \    return 0 if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return 0\
    \ if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return 0 if substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}",
  "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++)\
    \ {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n  \
    \          substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    return\
    \ \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return\
    \ \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if\
    \ substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return\
    \ 1;\n}", "    # Your code here\n    if (length($s) < 3) {\n        return \"\"\
    ;\n    }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) || substr($s, $i, 1) eq substr($s, $i + 2, 1)\
    \ || substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\"\
    ;\n        }\n    }\n    return 1;\n}", "    if(length($s) < 3) {\n        return\
    \ \"\";\n    }\n    my $i = 0;\n    while($i < length($s) - 2) {\n        if(substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) || substr($s, $i, 1) eq substr($s, $i + 2, 1)\
    \ || substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\"\
    ;\n        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i,\
    \ 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n\
    \    while ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    my @s = split(//, $s);\n    for (my $i = 0; $i < @s - 2; $i++) {\n\
    \        return \"\" if $s[$i] eq $s[$i + 1] || $s[$i] eq $s[$i + 2] || $s[$i\
    \ + 1] eq $s[$i + 2];\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    return \"\" if $s =~ /(.)\\1\\1/;\n    return 1;\n}", "    return\
    \ \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) or\n      \
    \      substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n            substr($s, $i\
    \ + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    my @s = split //, $s;\n    for (my $i = 0; $i < $#s;\
    \ $i++) {\n        return \"\" if $s[$i] eq $s[$i+1] && $s[$i] eq $s[$i+2];\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n\
    \    while ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n\
    \    if ($len < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len\
    \ - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        if ($sub =~ /(\\\
    w)\\1\\1/) {\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++)\
    \ {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) or\n  \
    \          substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n            substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    return\
    \ \"\" if length($s) < 3;\n    return \"\" if $s =~ /(.)\\1\\1/;\n    return 1;\n\
    }", "    return \"\" if length($s) < 3;\n    return \"\" if $s =~ /(.)\\1{2}/;\n\
    \    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len < 3;\n\
    \    for (my $i = 0; $i < $len - 2; $i++) {\n        my $substr = substr($s, $i,\
    \ 3);\n        return \"\" if $substr =~ /(.)\\1/;\n    }\n    return 1;\n}",
  "    my $len = length($s);\n    return \"\" if $len < 3;\n    my $i = 0;\n    while\
    \ ($i < $len - 2) {\n        my $sub = substr($s, $i, 3);\n        return \"\"\
    \ if $sub =~ /(.)\\1/;\n        $i++;\n    }\n    return 1;\n}", "    return \"\
    \" if length($s) < 3;\n    my @s = split //, $s;\n    for (my $i = 0; $i < @s\
    \ - 2; $i++) {\n        return \"\" if $s[$i] eq $s[$i + 1] || $s[$i] eq $s[$i\
    \ + 2] || $s[$i + 1] eq $s[$i + 2];\n    }\n    return 1;\n}", "    return 0 if\
    \ length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n       \
    \ return 0 if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return 0 if\
    \ substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return 0 if substr($s,\
    \ $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}",
  "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n   \
    \ }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my @s = split\
    \ //, $s;\n    for my $i (0..$#s-2) {\n        return \"\" if $s[$i] eq $s[$i+1]\
    \ || $s[$i] eq $s[$i+2] || $s[$i+1] eq $s[$i+2];\n    }\n    return 1;\n}", " \
    \   my $len = length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i\
    \ < $len - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        my $set =\
    \ join(\"\", sort(split(//, $sub)));\n        return \"\" if $set ne $sub;\n \
    \   }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len\
    \ < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len\
    \ < 3;\n    my $i = 0;\n    while ($i < $len - 2) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i,\
    \ 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    my $len = length($s);\n    return\
    \ \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub\
    \ = substr($s, $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) or\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}",
  "    # Your code here\n    if (length($s) < 3) {\n        return \"\";\n    }\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        if (substr($s, $i,\
    \ 1) eq substr($s, $i + 1, 1) || substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\
    \ substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "    # Your code here\n    my $len = length($s);\n\
    \    if($len < 3){\n        return \"\";\n    }\n    for(my $i = 0; $i < $len\
    \ - 2; $i++){\n        my $sub = substr($s, $i, 3);\n        if($sub =~ /(\\w)\\\
    1\\1/){\n            return \"\";\n        }\n    }\n    return 1;\n}", "    my\
    \ $len = length($s);\n    return \"\" if $len < 3;\n    my $i = 0;\n    while\
    \ ($i < $len - 2) {\n        my $a = substr($s, $i, 1);\n        my $b = substr($s,\
    \ $i + 1, 1);\n        my $c = substr($s, $i + 2, 1);\n        return \"\" if\
    \ $a eq $b || $a eq $c || $b eq $c;\n        $i++;\n    }\n    return 1;\n}",
  "    if (length($s) < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i\
    \ < length($s) - 2; $i++) {\n        if (substr($s, $i, 1) eq substr($s, $i +\
    \ 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n      \
    \      substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\
    \";\n        }\n    }\n    return 1;\n}", "    if (length($s) < 3) {\n       \
    \ return \"\";\n    }\n    my $i = 0;\n    while ($i < length($s) - 2) {\n   \
    \     if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1)) {\n            return \"\";\n        }\n        $i++;\n    }\n \
    \   return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2,\
    \ 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \        $i++;\n    }\n    return 1;\n}", "    if (length($s) < 3) {\n       \
    \ return \"\";\n    }\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n    \
    \    if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1)) {\n            return \"\";\n        }\n    }\n    return 1;\n}",
  "    my $len = length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i\
    \ < $len - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        my $len =\
    \ length($sub);\n        return \"\" if $len != length(unpack(\"%32A*\", $sub));\n\
    \    }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len\
    \ < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n                     substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1) ||\n                     substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    my $len = length($s);\n    return\
    \ \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub\
    \ = substr($s, $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n    }\n    return\
    \ 1;\n}", "    if (length($s) < 3) {\n        return \"\";\n    }\n    my $i =\
    \ 0;\n    while ($i < length($s) - 2) {\n        if (substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n \
    \           substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return\
    \ \"\";\n        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n     \
    \   return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n           \
    \ substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1,\
    \ 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    my $len = length($s);\n\
    \    if ($len < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len\
    \ - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        if ($sub =~ /(\\\
    w)\\1/) {\n            return \"\";\n        }\n    }\n    return 1;\n}", "  \
    \  return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++)\
    \ {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) or\n  \
    \                   substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n          \
    \           substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) or\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}",
  "    if (length($s) < 3) {\n        return \"\";\n    }\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\"\
    ;\n        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i,\
    \ 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i\
    \ = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1)\
    \ eq substr($s, $i + 1, 1) ||\n                     substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n                     substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1);\n    }\n    return 1;\n}", "    my $len = length($s);\n    return \"\"\
    \ if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $substr\
    \ = substr($s, $i, 3);\n        my %hash = map {$_ => 1} split //, $substr;\n\
    \        return \"\" if scalar(keys %hash) != 3;\n    }\n    return 1;\n}", " \
    \   # Your code here\n    my $len = length($s);\n    if ($len < 3) {\n       \
    \ return \"\";\n    }\n    my $i = 0;\n    while ($i < $len - 2) {\n        my\
    \ $sub = substr($s, $i, 3);\n        if ($sub =~ /(.)\\1{2}/) {\n            return\
    \ \"\";\n        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    my @s = split(//, $s);\n    for (my $i = 0; $i < $#s;\
    \ $i++) {\n        return \"\" if $s[$i] eq $s[$i+1] and $s[$i] eq $s[$i+2];\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    return \"\"\
    \ if $s =~ /(.)\\1{2}/;\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n                     substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1) ||\n                     substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    my $len = length($s);\n    return\
    \ \"\" if $len < 3;\n    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub\
    \ = substr($s, $i, 3);\n        return \"\" if $sub =~ /(.)\\1/;\n        $i++;\n\
    \    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n\
    \    while ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i,\
    \ 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    # Your code here\n    my $len =\
    \ length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n    my $i = 0;\n\
    \    my $j = $i + 1;\n    my $k = $j + 1;\n    while ($k < $len) {\n        if\
    \ (substr($s, $i, 1) eq substr($s, $j, 1) || substr($s, $i, 1) eq substr($s, $k,\
    \ 1) || substr($s, $j, 1) eq substr($s, $k, 1)) {\n            return \"\";\n\
    \        }\n        $i++;\n        $j++;\n        $k++;\n    }\n    return 1;\n\
    }", "    # Your code here\n    if(length($s) < 3){\n        return \"\";\n   \
    \ }\n    my @s = split(\"\", $s);\n    for(my $i = 0; $i < length($s) - 2; $i++){\n\
    \        if($s[$i] eq $s[$i + 1] || $s[$i] eq $s[$i + 2] || $s[$i + 1] eq $s[$i\
    \ + 2]){\n            return \"\";\n        }\n    }\n    return 1;\n}", "   \
    \ return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)-2)\
    \ {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i+1, 1);\n      \
    \  return \"\" if substr($s, $i, 1) eq substr($s, $i+2, 1);\n        return \"\
    \" if substr($s, $i+1, 1) eq substr($s, $i+2, 1);\n        $i++;\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    my @s = split //, $s;\n   \
    \ for (my $i = 0; $i < $#s; $i++) {\n        return \"\" if $s[$i] eq $s[$i+1]\
    \ && $s[$i] eq $s[$i+2];\n    }\n    return 1;\n}", "    # Your code here\n  \
    \  my $len = length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n \
    \   my $i = 0;\n    while ($i < $len - 2) {\n        my $sub = substr($s, $i,\
    \ 3);\n        my $sub_len = length($sub);\n        my $j = 0;\n        while\
    \ ($j < $sub_len - 1) {\n            my $sub_sub = substr($sub, $j, 2);\n    \
    \        my $sub_sub_len = length($sub_sub);\n            my $k = 0;\n       \
    \     while ($k < $sub_sub_len - 1) {\n                my $sub_sub_sub = substr($sub_sub,\
    \ $k, 1);\n                my $sub_sub_sub_len = length($sub_sub_sub);\n     \
    \           my $l = 0;\n                while ($l < $sub_sub_sub_len) {\n    \
    \                my $sub_sub_sub_sub = substr($sub_sub_sub, $l, 1);\n        \
    \            if ($sub_sub_sub_sub eq $sub_sub_sub) {\n                       \
    \ return \"\";\n                    }\n                    $l++;\n           \
    \     }\n                $k++;\n            }\n            $j++;\n        }\n\
    \        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n    if ($len\
    \ < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len - 2; $i++)\
    \ {\n        my $sub = substr($s, $i, 3);\n        if ($sub =~ /(.)\\1/) {\n \
    \           return \"\";\n        }\n    }\n    return 1;\n}", "    return \"\"\
    \ if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n    \
    \    return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return\
    \ \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if\
    \ substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return\
    \ 1;\n}", "    my $len = length($s);\n    return \"\" if $len < 3;\n    for (my\
    \ $i = 0; $i < $len - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n     \
    \   return \"\" if $sub =~ /(.)\\1/;\n    }\n    return 1;\n}", "    my $len =\
    \ length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n    for (my $i\
    \ = 0; $i < $len - 2; $i++) {\n        my $c1 = substr($s, $i, 1);\n        my\
    \ $c2 = substr($s, $i + 1, 1);\n        my $c3 = substr($s, $i + 2, 1);\n    \
    \    if ($c1 eq $c2 || $c1 eq $c3 || $c2 eq $c3) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n  \
    \  for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    my $len = length($s);\n    if ($len < 3) {\n \
    \       return \"\";\n    }\n    for (my $i = 0; $i < $len - 2; $i++) {\n    \
    \    my $sub = substr($s, $i, 3);\n        if ($sub =~ /(\\w)\\1\\1/) {\n    \
    \        return \"\";\n        }\n    }\n    return 1;\n}", "    return \"\" if\
    \ length($s) < 3;\n    return \"\" if $s =~ /(.)\\1{2}/;\n    return 1;\n}", " \
    \   my $len = length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n\
    \    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub = substr($s, $i,\
    \ 3);\n        if ($sub =~ /(\\w)\\1\\1/) {\n            return \"\";\n      \
    \  }\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my\
    \ $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i,\
    \ 1) eq substr($s, $i + 1, 1) or\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) or\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len\
    \ < 3;\n    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub = substr($s,\
    \ $i, 3);\n        return \"\" if length($sub) != length(unpack(\"%32A*\", $sub));\n\
    \        $i++;\n    }\n    return 1;\n}", "    # Your code here\n    my $len =\
    \ length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n    my $i = 0;\n\
    \    while ($i < $len - 2) {\n        my $sub = substr($s, $i, 3);\n        my\
    \ $sub_len = length($sub);\n        my $j = 0;\n        while ($j < $sub_len -\
    \ 1) {\n            my $sub_sub = substr($sub, $j, 2);\n            if ($sub_sub\
    \ =~ /(\\w)\\1/) {\n                return \"\";\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if substr($s, $i + 1,\
    \ 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}", "   \
    \ my $len = length($s);\n    if ($len < 3) {\n        return \"\";\n    }\n  \
    \  for (my $i = 0; $i < $len - 2; $i++) {\n        my $a = substr($s, $i, 1);\n\
    \        my $b = substr($s, $i + 1, 1);\n        my $c = substr($s, $i + 2, 1);\n\
    \        if ($a eq $b || $a eq $c || $b eq $c) {\n            return \"\";\n \
    \       }\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n   \
    \ my @s = split //, $s;\n    for (my $i = 0; $i < @s - 2; $i++) {\n        return\
    \ \"\" if $s[$i] eq $s[$i + 1] || $s[$i] eq $s[$i + 2] || $s[$i + 1] eq $s[$i\
    \ + 2];\n    }\n    return 1;\n}", "    if (length($s) < 3) {\n        return\
    \ \"\";\n    }\n    my $i = 0;\n    while ($i < length($s) - 2) {\n        if\
    \ (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1)\
    \ eq substr($s, $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1)) {\n            return \"\";\n        }\n        $i++;\n    }\n \
    \   return 1;\n}", "    my $len = length($s);\n    return \"\" if $len < 3;\n\
    \    for (my $i = 0; $i < $len - 2; $i++) {\n        my $s1 = substr($s, $i, 1);\n\
    \        my $s2 = substr($s, $i + 1, 1);\n        my $s3 = substr($s, $i + 2,\
    \ 1);\n        return \"\" if $s1 eq $s2 || $s1 eq $s3 || $s2 eq $s3;\n    }\n\
    \    return 1;\n}", "    my $len = length($s);\n    if ($len < 3) {\n        return\
    \ \"\";\n    }\n    for (my $i = 0; $i < $len - 2; $i++) {\n        if (substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n\
    \            return \"\";\n        }\n    }\n    return 1;\n}", "    my $n = length($s);\n\
    \    if($n < 3) {\n        return \"\";\n    }\n    for(my $i = 0; $i < $n - 2;\
    \ $i++) {\n        my $a = substr($s, $i, 1);\n        my $b = substr($s, $i +\
    \ 1, 1);\n        my $c = substr($s, $i + 2, 1);\n        if($a eq $b || $a eq\
    \ $c || $b eq $c) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    my $len = length($s);\n    return \"\" if $len < 3;\n    for (my $i =\
    \ 0; $i < $len - 2; $i++) {\n        my $substr = substr($s, $i, 3);\n       \
    \ return \"\" if $substr =~ /(\\w)\\1/;\n    }\n    return 1;\n}", "    # Your\
    \ code here\n    if (length($s) < 3) {\n        return \"\";\n    }\n    my $i\
    \ = 0;\n    while ($i < length($s) - 2) {\n        if (substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1) || substr($s, $i, 1) eq substr($s, $i + 2, 1) || substr($s, $i +\
    \ 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n    }\n    return 1;\n}", "    my $n = length($s);\n    return \"\
    \" if $n < 3;\n    my $i = 0;\n    while ($i < $n - 2) {\n        my $c1 = substr($s,\
    \ $i, 1);\n        my $c2 = substr($s, $i + 1, 1);\n        my $c3 = substr($s,\
    \ $i + 2, 1);\n        return \"\" if $c1 eq $c2 || $c1 eq $c3 || $c2 eq $c3;\n\
    \        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    my @a = split //, $s;\n    for (my $i = 0; $i < @a - 2; $i++) {\n       \
    \ return \"\" if $a[$i] eq $a[$i + 1] || $a[$i] eq $a[$i + 2] || $a[$i + 1] eq\
    \ $a[$i + 2];\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    my $len = length($s);\n    return \"\" if $len\
    \ < 3;\n    my $i = 0;\n    while ($i < $len - 2) {\n        my $sub = substr($s,\
    \ $i, 3);\n        my $sub_len = length($sub);\n        return \"\" if $sub_len\
    \ != 3;\n        my $j = 0;\n        while ($j < $sub_len - 1) {\n           \
    \ my $sub_sub = substr($sub, $j, 2);\n            my $sub_sub_len = length($sub_sub);\n\
    \            return \"\" if $sub_sub_len != 2;\n            my $k = 0;\n     \
    \       while ($k < $sub_sub_len - 1) {\n                my $sub_sub_sub = substr($sub_sub,\
    \ $k, 1);\n                my $sub_sub_sub_len = length($sub_sub_sub);\n     \
    \           return \"\" if $sub_sub_sub_len != 1;\n                $k++;\n   \
    \         }\n            $j++;\n        }\n        $i++;\n    }\n    return 1;\n\
    }", "    return 0 if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return 0 if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n  \
    \      return 0 if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ 0 if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n\
    \    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2,\
    \ 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \        $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    my $i = 0;\n    while ($i < length($s) - 2) {\n        my $substr = substr($s,\
    \ $i, 3);\n        return \"\" if $substr =~ /(.)\\1/;\n        $i++;\n    }\n\
    \    return 1;\n}", "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while\
    \ ($i < length($s) - 2) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\"\
    ;\n        }\n        $i++;\n    }\n    return 1;\n}", "    if (length($s) < 3)\
    \ {\n        return \"\";\n    }\n    my $i = 0;\n    while ($i < length($s) -\
    \ 2) {\n        if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\n          \
    \  substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n            substr($s, $i +\
    \ 1, 1) eq substr($s, $i + 2, 1)) {\n            return \"\";\n        }\n   \
    \     $i++;\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n \
    \   for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) or\n                     substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1) or\n                     substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    my $len = length($s);\n    return\
    \ \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub\
    \ = substr($s, $i, 3);\n        my %hash;\n        $hash{$_} = 1 for split //,\
    \ $sub;\n        return \"\" if keys %hash != 3;\n    }\n    return 1;\n}", " \
    \   return \"\" if length($s) < 3;\n    return \"\" if $s =~ /(.)\\1\\1/;\n  \
    \  return 1;\n}", "    my $len = length($s);\n    return \"\" if $len < 3;\n \
    \   for (my $i = 0; $i < $len - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) ||\n                     substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1) ||\n                     substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    # Your code here\n    my $len =\
    \ length($s);\n    if($len < 3){\n        return \"\";\n    }\n    for(my $i =\
    \ 0; $i < $len-2; $i++){\n        if(substr($s, $i, 1) eq substr($s, $i+1, 1)\
    \ || substr($s, $i, 1) eq substr($s, $i+2, 1) || substr($s, $i+1, 1) eq substr($s,\
    \ $i+2, 1)){\n            return \"\";\n        }\n    }\n    return 1;\n}", " \
    \   my $len = length($s);\n    return \"\" if $len < 3;\n    for (my $i = 0; $i\
    \ < $len - 2; $i++) {\n        my $sub = substr($s, $i, 3);\n        return \"\
    \" if $sub =~ /(.)\\1/;\n    }\n    return 1;\n}", "    return \"\" if length($s)\
    \ < 3;\n    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\"\
    \ if substr($s, $i, 1) eq substr($s, $i + 1, 1) or\n            substr($s, $i,\
    \ 1) eq substr($s, $i + 2, 1) or\n            substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n\
    \    for (my $i = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1) or\n            substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) or\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n\
    \    }\n    return 1;\n}", "    # Your code here\n    if (length($s) < 3) {\n\
    \        return \"\";\n    }\n    else {\n        for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n            if (substr($s, $i, 1) eq substr($s, $i + 1, 1) ||\
    \ substr($s, $i, 1) eq substr($s, $i + 2, 1) || substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1)) {\n                return \"\";\n            }\n        }\n    \
    \    return 1;\n    }\n}", "    return \"\" if length($s) < 3;\n    for (my $i\
    \ = 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1)\
    \ eq substr($s, $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i\
    \ + 2, 1) ||\n            substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n  \
    \  }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my @s = split\
    \ //, $s;\n    for (my $i = 0; $i < @s - 2; $i++) {\n        return \"\" if $s[$i]\
    \ eq $s[$i + 1] || $s[$i] eq $s[$i + 2] || $s[$i + 1] eq $s[$i + 2];\n    }\n\
    \    return 1;\n}", "    my $len = length($s);\n    if ($len < 3) {\n        return\
    \ \"\";\n    }\n    for (my $i = 0; $i < $len - 2; $i++) {\n        my $sub =\
    \ substr($s, $i, 3);\n        if ($sub =~ /(.)\\1/) {\n            return \"\"\
    ;\n        }\n    }\n    return 1;\n}", "    my $len = length($s);\n    if ($len\
    \ < 3) {\n        return \"\";\n    }\n    for (my $i = 0; $i < $len - 2; $i++)\
    \ {\n        my $sub = substr($s, $i, 3);\n        if (length($sub) == length(unpack(\"\
    %32A*\", $sub))) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }", "    if (length($s) < 3) {\n        return \"\";\n    }\n    for (my $i =\
    \ 0; $i < length($s) - 2; $i++) {\n        if (substr($s, $i, 1) eq substr($s,\
    \ $i + 1, 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n \
    \           substr($s, $i + 1, 1) eq substr($s, $i + 2, 1)) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "    return \"\" if length($s) <\
    \ 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n        return \"\" if\
    \ substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if substr($s, $i + 1,\
    \ 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}", "   \
    \ my $len = length($s);\n    return \"\" if $len < 3;\n    my $i = 0;\n    while\
    \ ($i < $len - 2) {\n        my $sub = substr($s, $i, 3);\n        return \"\"\
    \ if $sub =~ /(.)\\1/;\n        $i++;\n    }\n    return 1;\n}", "    return \"\
    \" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s) - 2) {\n   \
    \     return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n        return\
    \ \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return \"\" if\
    \ substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n    }\n    return\
    \ 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i = 0; $i < length($s)\
    \ - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1,\
    \ 1) ||\n            substr($s, $i, 1) eq substr($s, $i + 2, 1) ||\n         \
    \   substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}",
  "    my $len = length($s);\n    return \"\" if $len < 3;\n    my $i = 0;\n    while\
    \ ($i < $len - 2) {\n        my $sub = substr($s, $i, 3);\n        my $len_sub\
    \ = length($sub);\n        return \"\" if $len_sub != 3;\n        my %hash = ();\n\
    \        foreach my $c (split //, $sub) {\n            return \"\" if exists $hash{$c};\n\
    \            $hash{$c} = 1;\n        }\n        $i++;\n    }\n    return 1;\n}",
  "    return \"\" if length($s) < 3;\n    my $i = 0;\n    while ($i < length($s)\
    \ - 2) {\n        return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1);\n\
    \        return \"\" if substr($s, $i, 1) eq substr($s, $i + 2, 1);\n        return\
    \ \"\" if substr($s, $i + 1, 1) eq substr($s, $i + 2, 1);\n        $i++;\n   \
    \ }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    for (my $i =\
    \ 0; $i < length($s) - 2; $i++) {\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 1, 1) or\n                     substr($s, $i, 1) eq substr($s,\
    \ $i + 2, 1) or\n                     substr($s, $i + 1, 1) eq substr($s, $i +\
    \ 2, 1);\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n    my\
    \ @s = split(//, $s);\n    for (my $i = 0; $i < @s - 2; $i++) {\n        return\
    \ \"\" if $s[$i] eq $s[$i + 1] || $s[$i] eq $s[$i + 2] || $s[$i + 1] eq $s[$i\
    \ + 2];\n    }\n    return 1;\n}", "    # Your code here\n    my $len = length($s);\n\
    \    if($len < 3){\n        return \"\";\n    }\n    for(my $i = 0; $i < $len\
    \ - 2; $i++){\n        my $sub = substr($s, $i, 3);\n        my $sub_len = length($sub);\n\
    \        my %hash = ();\n        for(my $j = 0; $j < $sub_len; $j++){\n      \
    \      my $char = substr($sub, $j, 1);\n            if(exists $hash{$char}){\n\
    \                return \"\";\n            }\n            $hash{$char} = 1;\n\
    \        }\n    }\n    return 1;\n}", "    return \"\" if length($s) < 3;\n  \
    \  my $i = 0;\n    while ($i < length($s) - 2) {\n        return \"\" if substr($s,\
    \ $i, 1) eq substr($s, $i + 1, 1);\n        return \"\" if substr($s, $i, 1) eq\
    \ substr($s, $i + 2, 1);\n        return \"\" if substr($s, $i + 1, 1) eq substr($s,\
    \ $i + 2, 1);\n        $i++;\n    }\n    return 1;\n}", "    my $len = length($s);\n\
    \    return \"\" if $len < 3;\n    for (my $i = 0; $i < $len - 2; $i++) {\n  \
    \      return \"\" if substr($s, $i, 1) eq substr($s, $i + 1, 1) or\n        \
    \    substr($s, $i, 1) eq substr($s, $i + 2, 1) or\n            substr($s, $i\
    \ + 1, 1) eq substr($s, $i + 2, 1);\n    }\n    return 1;\n}", "    # Your code\
    \ here\n    return $s =~ /^(.)(.)(.)$/ && $1 ne $2 && $2 ne $3 && $3 ne $1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_92_any_int
language: rb
prompt: "# Create a function that takes 3 numbers.\n# Returns true if one of the numbers\
  \ is equal to the sum of the other two, and all numbers are integers.\n# Returns\
  \ false in any other cases.\n# Examples\n# any_int(5, 2, 7) \u279E True\n# any_int(3,\
  \ 2, 2) \u279E False\n# any_int(3, -2, 1) \u279E True\n# any_int(3.6, -2.2, 2) \u279E\
  \ False\ndef any_int(x, y, z)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_any_int\n\
  \    candidate = method(:any_int)\n    assert_equal(true, candidate.call(2, 3, 1))\n\
  \    assert_equal(false, candidate.call(2.5, 2, 3))\n    assert_equal(false, candidate.call(1.5,\
  \ 5, 3.5))\n    assert_equal(false, candidate.call(2, 6, 2))\n    assert_equal(true,\
  \ candidate.call(4, 2, 2))\n    assert_equal(false, candidate.call(2.2, 2.2, 2.2))\n\
  \    assert_equal(true, candidate.call(-4, 6, 2))\n    assert_equal(true, candidate.call(2,\
  \ 1, 1))\n    assert_equal(true, candidate.call(3, 4, 7))\n    assert_equal(false,\
  \ candidate.call(3.0, 4, 7))\n  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_92_any_int
language: rb
prompt: "# Create a function that takes 3 numbers.\n# Returns true if one of the numbers\
  \ is equal to the sum of the other two, and all numbers are integers.\n# Returns\
  \ false in any other cases.\n# Examples\n# >>> any_int.call(5, 2, 7)\n# true\n#\
  \ >>> any_int.call(3, 2, 2)\n# false\n# >>> any_int.call(3, -2, 1)\n# true\n# >>>\
  \ any_int.call(3.6, -2.2, 2)\n# false\ndef any_int(x, y, z)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_any_int\n\
  \    candidate = method(:any_int)\n    assert_equal(true, candidate.call(2, 3, 1))\n\
  \    assert_equal(false, candidate.call(2.5, 2, 3))\n    assert_equal(false, candidate.call(1.5,\
  \ 5, 3.5))\n    assert_equal(false, candidate.call(2, 6, 2))\n    assert_equal(true,\
  \ candidate.call(4, 2, 2))\n    assert_equal(false, candidate.call(2.2, 2.2, 2.2))\n\
  \    assert_equal(true, candidate.call(-4, 6, 2))\n    assert_equal(true, candidate.call(2,\
  \ 1, 1))\n    assert_equal(true, candidate.call(3, 4, 7))\n    assert_equal(false,\
  \ candidate.call(3.0, 4, 7))\n  end\nend\n"
completions: ["  (x == y + z) || (y == x + z) || (z == x + y) ? true : false\nend",
  "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n    if x == y +\
    \ z || y == x + z || z == x + y\n      return true\n    else\n      return false\n\
    \    end\n  else\n    return false\n  end\nend", "  if (x + y == z || x + z ==\
    \ y || y + z == x) &&\n    (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n\
    \    return true\n  else\n    return false\n  end\nend", "  if x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n    x + y == z || x + z == y || y +\
    \ z == x\n  else\n    false\n  end\nend\nputs any_int(5, 2, 7)\nputs any_int(3,\
    \ 2, 2)\nputs any_int(3, -2, 1)\nputs any_int(3.6, -2.2, 2)", "  return false\
    \ if [x, y, z].any? { |val| !val.integer? }\n  return false if [x, y, z].uniq.length\
    \ == 3\n  [x, y, z].include?(x + y + z - [x, y, z].max - [x, y, z].min)\nend",
  "  return false if x.is_a?(Float) || y.is_a?(Float) || z.is_a?(Float)\n  x == y\
    \ + z || y == x + z || z == x + y\nend", "  if (x.is_a? Integer) && (y.is_a? Integer)\
    \ && (z.is_a? Integer)\n    if x == y + z || y == x + z || z == x + y\n      return\
    \ true\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  if !(x.is_a? Integer) || !(y.is_a? Integer) || !(z.is_a? Integer)\n \
    \   return false\n  end\n  if x == y + z || y == x + z || z == x + y\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n    x != y + z && y != x + z && z != x + y ? false : true\n\
    \  else\n    false\n  end\nend", "  ((x == y + z) || (y == x + z) || (z == x +\
    \ y)) && (x.is_a? Integer) && (y.is_a? Integer) && (z.is_a? Integer)\nend", " \
    \ (x.is_a? Integer) and (y.is_a? Integer) and (z.is_a? Integer) and (x + y ==\
    \ z || x + z == y || y + z == x)\nend", "  !x.is_a?(Integer) || !y.is_a?(Integer)\
    \ || !z.is_a?(Integer) ? false : x == y + z || y == x + z || z == x + y\nend",
  "  if x == (y + z) && y == (x + z) && z == (x + y)\n    true\n  else\n    false\n\
    \  end\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \    x + y == z || x + z == y || y + z == x\n  else\n    false\n  end\nend", " \
    \   if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n        if x\
    \ == y + z || y == x + z || z == x + y\n            return true\n        else\n\
    \            return false\n        end\n    else\n        return false\n    end\n\
    end", "  return false if x == z || x == y\n  (x + y == z) || (x + z == y) || (y\
    \ + z == x)\nend", "  (x + y == z) || (x + z == y) || (y + z == x)\nend\nputs\
    \ \"any_int(5, 2, 7) = #{any_int(5, 2, 7)}\"\nputs \"any_int(3, 2, 2) = #{any_int(3,\
    \ 2, 2)}\"\nputs \"any_int(3, -2, 1) = #{any_int(3, -2, 1)}\"\nputs \"any_int(3.6,\
    \ -2.2, 2) = #{any_int(3.6, -2.2, 2)}\"", "  if x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n    if x == y + z || y == x + z || z == x + y\n      true\n\
    \    else\n      false\n    end\n  else\n    false\n  end\nend", "  if (x.is_a?\
    \ Integer) && (y.is_a? Integer) && (z.is_a? Integer)\n    if (x + y == z) || (x\
    \ + z == y) || (y + z == x)\n      return true\n    else\n      return false\n\
    \    end\n  else\n    return false\n  end\nend", "  (x == y + z || y == x + z\
    \ || z == x + y) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n\
    end", "  return false if !x.is_a?(Integer) || !y.is_a?(Integer) || !z.is_a?(Integer)\n\
    \  return true if x == y + z || y == x + z || z == x + y\n  false\nend", "  (x\
    \ + y == z || x + z == y || y + z == x) && x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\nend", "  (x+y == z || x+z == y || y+z == x) && x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\nend", "    (x.is_a? Integer) && (y.is_a?\
    \ Integer) && (z.is_a? Integer) && ((x+y==z) || (x+z==y) || (y+z==x))\nend", '  return
    false if [x, y, z].any? { |a| a % 1 != 0 }', "  if x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n    if x == y + z || y == x + z || z == x + y\n      return\
    \ true\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  if (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n    if\
    \ (x == y + z) || (y == x + z) || (z == x + y)\n      return true\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  integers\
    \ = x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n  x == y + z ||\
    \ y == x + z || z == x + y\nend", "  return (x + y == z || x + z == y || y + z\
    \ == x) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\nend", " \
    \ x.integer? && y.integer? && z.integer? && (x == y + z || y == x + z || z ==\
    \ x + y)\nend", "  (x + y == z) || (x + z == y) || (y + z == x) ? true : false\n\
    end", "  if (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)) && (x ==\
    \ y + z || y == x + z || z == x + y)\n    return true\n  else\n    return false\n\
    \  end\nend", "    z == x + y || y == x + z || x == y + z\nend", "  return true\
    \ if x == y + z\n  return true if y == x + z\n  return true if z == x + y\n  false\n\
    end", "  # YOUR CODE HERE\nend", "  x.integer? && y.integer? && z.integer? &&\
    \ (x == y + z || y == x + z || z == x + y)\nend", "  return false if [x, y, z].any?\
    \ { |e| e.is_a?(Float) }\n  return true if x + y == z || x + z == y || y + z ==\
    \ x\n  false\nend", "    if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \        if x + y == z || x + z == y || y + z == x\n            return true\n\
    \        else\n            return false\n        end\n    else\n        return\
    \ false\n    end\nend", "  [x, y, z].all? { |n| n.is_a? Integer } && (x == y +\
    \ z || y == x + z || z == x + y)\nend", "  x + y == z || x + z == y || y + z ==\
    \ x ? true : false\nend", "  # your code goes here\nend", "    if x == y + z\n\
    \        return true\n    elsif y == x + z\n        return true\n    elsif z ==\
    \ x + y\n        return true\n    else\n        return false\n    end\nend", " \
    \ return true if x == y + z || y == x + z || z == x + y\n  false\nend", "  if\
    \ x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n    return (x + y\
    \ == z) || (x + z == y) || (y + z == x)\n  else\n    return false\n  end\nend",
  "  all_int?(x, y, z) ? ((x == y + z) || (y == x + z) || (z == x + y)) : false\n\
    end", "  if x.is_a?(Integer) == false\n    return false\n  elsif y.is_a?(Integer)\
    \ == false\n    return false\n  elsif z.is_a?(Integer) == false\n    return false\n\
    \  end\n  if x == y + z\n    return true\n  elsif y == x + z\n    return true\n\
    \  elsif z == x + y\n    return true\n  else\n    return false\n  end\nend", " \
    \ [x, y, z].map { |n| n.integer? }.all? &&\n    ([x, y, z].combination(2).to_a.map\
    \ { |(a, b)| a + b } & [x, y, z]).size == 1\nend", "    if x.is_a?(Integer) &&\
    \ y.is_a?(Integer) && z.is_a?(Integer)\n        if x + y == z || x + z == y ||\
    \ y + z == x\n            return true\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "  sum = x + y +\
    \ z\n  if x == sum || y == sum || z == sum\n    if x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n      true\n    else\n      false\n    end\n  else\n  \
    \  false\n  end\nend\np any_int(3, -2, 1)", "  arr = [x, y, z]\n  x = arr.index(arr.max)\n\
    \  arr.delete_at(x)\n  x == arr.sum ? true : false\nend\np any_int(5, 2, 7)\n\
    p any_int(3, 2, 2)\np any_int(3, -2, 1)\np any_int(3.6, -2.2, 2)", "  if x.integer?\
    \ && y.integer? && z.integer?\n    return true if x == y + z || y == x + z ||\
    \ z == x + y\n  end\n  false\nend", "    return true if x == y + z || y == x +\
    \ z || z == x + y\n    false\nend", "  if (x + y == z || x + z == y || y + z ==\
    \ x) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n    true\n\
    \  else\n    false\n  end\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) &&\
    \ z.is_a?(Integer)\n    if x == y + z || y == x + z || z == x + y\n      return\
    \ true\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  return (x + y == z || x + z == y || y + z == x) && (x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer))\nend", "  return false if [x, y, z].any?{|x|\
    \ x != x.to_i}\n  (x + y == z) || (x + z == y) || (y + z == x)\nend", "  if x\
    \ == y + z || y == x + z || z == x + y\n    return true\n  elsif x.integer? &&\
    \ y.integer? && z.integer?\n    return false\n  else\n    return false\n  end\n\
    end", "  if [x, y, z].all?{|n| n.is_a?(Integer)}\n    x == y + z || y == x + z\
    \ || z == x + y\n  else\n    false\n  end\nend", "  return false if x.class !=\
    \ Integer || y.class != Integer || z.class != Integer\n  x == y + z || y == x\
    \ + z || z == x + y\nend", "  return true if x == y + z || y == x + z || z ==\
    \ x + y\n  return false\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \    if x + y == z || x + z == y || y + z == x\n      return true\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  x + y\
    \ == z || x + z == y || y + z == x ? true : false\nend", "  if x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n    if x + y == z || x + z == y ||\
    \ y + z == x\n      true\n    else\n      false\n    end\n  else\n    false\n\
    \  end\nend", "  return false if x.class != Integer || y.class != Integer || z.class\
    \ != Integer\n  return x == y + z || y == x + z || z == x + y\nend", "  x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer) &&\n    ((x == y + z) || (y == x + z)\
    \ || (z == x + y))\nend\np any_int(3, -2, 1)", "  (x + y == z || x + z == y ||\
    \ y + z == x) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n\
    end", "  values = [x, y, z]\n  sum = x + y + z\n  if values.any? { |n| n.class\
    \ == Integer }\n    sum.to_i == x.to_i || sum.to_i == y.to_i || sum.to_i == z.to_i\n\
    \  else\n    false\n  end\nend", "  if (x.class == Fixnum) && (y.class == Fixnum)\
    \ && (z.class == Fixnum)\n    (x == y + z) || (y == x + z) || (z == x + y)\n \
    \ else\n    false\n  end\nend", "  x == y + z || y == x + z || z == x + y\nend",
  "  sum = x + y + z\n  if (x.integer? && y.integer? && z.integer?)\n    if (x ==\
    \ sum - y - z || y == sum - x - z || z == sum - x - y)\n      return true\n  \
    \  else\n      return false\n    end\n  else\n    return false\n  end\nend", " \
    \ return false if [x, y, z].any? { |arg| arg.class != Integer }\n  return true\
    \ if x == y + z || y == x + z || z == x + y\n  false\nend", "  (x == y + z ||\
    \ y == x + z || z == x + y) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n\
    end", "  ([x, y, z].all?{|element| element.is_a?(Integer)}) &&\n    (x + y ==\
    \ z || x + z == y || y + z == x)\nend", "  if x.class != Fixnum || y.class !=\
    \ Fixnum || z.class != Fixnum\n    false\n  elsif (x + y == z) || (x + z == y)\
    \ || (y + z == x)\n    true\n  else\n    false\n  end\nend", "  if (x.is_a? Integer)\
    \ && (y.is_a? Integer) && (z.is_a? Integer)\n    if x + y == z || x + z == y ||\
    \ y + z == x\n      return true\n    else\n      return false\n    end\n  else\n\
    \    return false\n  end\nend", "  return true if x == y + z\n  return true if\
    \ y == x + z\n  return true if z == x + y\n  false\nend", "  if x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n    if x == y + z || y == x + z ||\
    \ z == x + y\n      return true\n    else\n      return false\n    end\n  else\n\
    \    return false\n  end\nend", "  return x == y + z || y == x + z || z == x +\
    \ y if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n  false\nend\n\
    puts any_int(5, 2, 7)\nputs any_int(3, 2, 2)\nputs any_int(3, -2, 1)\nputs any_int(3.6,\
    \ -2.2, 2)", "  x = x.round\n  y = y.round\n  z = z.round\n  if (x + y == z) ||\
    \ (x + z == y) || (y + z == x)\n    return true\n  else\n    return false\n  end\n\
    end", "  return true if (x + y == z) || (x + z == y) || (y + z == x)\n  return\
    \ false if (x == 0) || (y == 0) || (z == 0)\n  false\nend", "  (x + y == z) ||\
    \ (x + z == y) || (y + z == x) ? true : false\nend", "  if (x.is_a?(Integer) ||\
    \ y.is_a?(Integer) || z.is_a?(Integer)) && (x + y == z || x + z == y || y + z\
    \ == x)\n    return true\n  else\n    return false\n  end\nend", "  if x.integer?\
    \ && y.integer? && z.integer?\n    if x == y + z || y == x + z || z == x + y\n\
    \      return true\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \    if x + y == z || x + z == y || y + z == x\n      return true\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  if x.integer?\
    \ && y.integer? && z.integer?\n    x + y == z || x + z == y || y + z == x\n  else\n\
    \    false\n  end\nend", "  [x, y, z].map { |n| n.is_a?(Integer) }.all? && [x,\
    \ y, z].uniq.size == 2\nend", "  if (x == y + z || y == x + z || z == x + y) &&\
    \ (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n    return true\n\
    \  else\n    return false\n  end\nend", "  if (x.is_a? Integer) && (y.is_a? Integer)\
    \ && (z.is_a? Integer)\n    if (x + y == z) || (x + z == y) || (y + z == x)\n\
    \      return true\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  if (x == y + z) || (y == x + z) || (z == x + y)\n   \
    \ return true\n  else\n    return false\n  end\nend", "  sum = x + y + z\n  array\
    \ = [x, y, z]\n  if array.all? { |n| n.is_a? Integer }\n    if sum == array.max\
    \ * 2\n      true\n    else\n      false\n    end\n  else\n    false\n  end\n\
    end", "  [x, y, z].each do |num|\n    return false unless num.integer?\n  end\n\
    \  x == y + z || y == x + z || z == x + y\nend", "  return (x + y == z) || (x\
    \ + z == y) || (y + z == x) ? true : false\nend", "  (x+y==z || x+z==y || y+z==x)\
    \ && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\nend", "  if (x\
    \ == y + z) || (y == x + z) || (z == x + y)\n    if x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n      return true\n    end\n  end\n  return false\nend",
  "  a = x + y\n  b = x + z\n  c = y + z\n  if (a == z) && (a.integer?) || (b == y)\
    \ && (b.integer?) || (c == x) && (c.integer?)\n    puts true\n  else\n    puts\
    \ false\n  end\nend", "  if (x + y == z || x + z == y || y + z == x) && x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n    return true\n  else\n    return\
    \ false\n  end\nend", "  !!(x.integer? && y.integer? && z.integer? && (x == y\
    \ + z || y == x + z || z == x + y))\nend", "  (x == y + z) || (y == x + z) ||\
    \ (z == x + y)\nend", "  (x + y == z) || (x + z == y) || (y + z == x)\nend\nputs\
    \ any_int(5, 2, 7)\nputs any_int(3, 2, 2)\nputs any_int(3, -2, 1)\nputs any_int(3.6,\
    \ -2.2, 2)", "  x != y && x != z && y != z && x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer) && (x + y == z || x + z == y || y + z == x)\nend", "  (x\
    \ + y == z) or (x + z == y) or (y + z == x) and (x.is_a? Integer) and (y.is_a?\
    \ Integer) and (z.is_a? Integer)\nend", "  if x.integer? && y.integer? && z.integer?\n\
    \    if x == y + z || y == x + z || z == x + y\n      return true\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  nums =\
    \ [x, y, z]\n  nums.any? { |num| num == (nums - [num]).reduce(:+) && num.integer?\
    \ }\nend", "  # checks if any of the parameters are not an integer and returns\
    \ false if any are not\n  return false if !x.is_a?(Integer) || !y.is_a?(Integer)\
    \ || !z.is_a?(Integer)\n  # else checks if any of the parameters are equal to\
    \ the sum of the other two parameters\n  x == y + z || y == x + z || z == x +\
    \ y\nend", "  # your code here\nend", "  if ((x == y + z) || (y == x + z) || (z\
    \ == x + y)) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n \
    \   true\n  else\n    false\n  end\nend", "  return true if (x == y + z) || (y\
    \ == x + z) || (z == x + y)\n  return false if (x != y + z) || (y != x + z) ||\
    \ (z != x + y)\nend", "  return x == y + z || y == x + z || z == x + y if x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n  false\nend", "  return false if !x.is_a?(Integer)\
    \ || !y.is_a?(Integer) || !z.is_a?(Integer)\n  if x == y + z || y == x + z ||\
    \ z == x + y\n    true\n  else\n    false\n  end\nend", "  x + y == z || x + z\
    \ == y || y + z == x\nend", "  return false if x.class != Integer || y.class !=\
    \ Integer || z.class != Integer\n  return true if x + y == z || x + z == y ||\
    \ y + z == x\n  false\nend", "  x == y + z || y == x + z || z == x + y\nend",
  "  return false if (x.is_a?(Float) || y.is_a?(Float) || z.is_a?(Float))\n  x ==\
    \ y + z || y == x + z || z == x + y\nend", "  x = x.to_i\n  y = y.to_i\n  z =\
    \ z.to_i\n  if x == y + z || y == x + z || z == x + y\n    return true\n  else\n\
    \    return false\n  end\nend", "  a = x.to_i\n  b = y.to_i\n  c = z.to_i\n  if\
    \ x == y+z || y == x+z || z == x+y\n    true\n  else\n    false\n  end\nend",
  "  x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer) && (x == y + z || y\
    \ == x + z || z == x + y)\nend", "  [x, y, z].select { |num| num.is_a? Integer\
    \ }.count == 3 && [x, y, z].any? { |num| num == x + y || num == x + z || num ==\
    \ y + z }\nend", "  (x + y == z || x + z == y || y + z == x) && x.integer? &&\
    \ y.integer? && z.integer?\nend", "  if [x, y, z].all? { |n| n.is_a? Integer }\n\
    \    if x + y == z || x + z == y || y + z == x\n      true\n    else\n      false\n\
    \    end\n  else\n    false\n  end\nend\np any_int(5, 2, 7)\np any_int(3, 2, 2)\n\
    p any_int(3, -2, 1)\np any_int(3.6, -2.2, 2)", "    x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer) && (x == y + z || y == x + z || z == x + y)\nend", "  x\
    \ == y + z || y == x + z || z == x + y\nend", "  return true if (x + y == z ||\
    \ x + z == y || y + z == x) && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \  false\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \    (x + y == z) || (x + z == y) || (y + z == x)\n  else\n    false\n  end\n\
    end", "  ((x == y + z) || (y == x + z) || (z == x + y)) && ((x.integer?) && (y.integer?)\
    \ && (z.integer?))\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \    if x == y + z || y == x + z || z == x + y\n      true\n    else\n      false\n\
    \    end\n  else\n    false\n  end\nend", "  # if (x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)) == false\n  #   return false\n  # end\n  return (x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)) == false ? false : (x + y == z || x\
    \ + z == y || y + z == x)\nend", "  (x+y) == z || (x+z) == y || (y+z) == x\nend",
  "  return false if (x.class != Integer) || (y.class != Integer) || (z.class != Integer)\n\
    \  return true if (x == y + z) || (y == x + z) || (z == x + y)\n  false\nend",
  "  return false if (x + y) != z && (x + z) != y && (y + z) != x\n  x.integer? &&\
    \ y.integer? && z.integer?\nend", "  [x, y, z].each { |number| return false unless\
    \ number.is_a? Integer }\n  (x == y + z) || (y == x + z) || (z == x + y)\nend",
  "  if x == y + z || y == x + z || z == x + y\n    return true\n  else\n    return\
    \ false\n  end\nend\nputs any_int(5, 2, 7)\nputs any_int(3, 2, 2)\nputs any_int(3,\
    \ -2, 1)\nputs any_int(3.6, -2.2, 2)", "  (x + y == z) || (x + z == y) || (y +\
    \ z == x)\nend", "  (x + y == z) || (x + z == y) || (y + z == x) ? true : false\n\
    end", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n    if x\
    \ == y + z || y == x + z || z == x + y\n      true\n    else\n      false\n  \
    \  end\n  else\n    false\n  end\nend", "  (x+y == z) || (x+z == y) || (y+z ==\
    \ x) ? true : false\nend", "  (x + y == z) || (x + z == y) || (y + z == x)\nend",
  "  [x, y, z].uniq.size == 2 && [x, y, z].all? { |num| num.is_a? Integer }\nend",
  "  x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer) && (x+y == z || x+z\
    \ == y || y+z == x)\nend", "  (x + y == z) || (x + z == y) || (y + z == x)\nend\n\
    puts any_int(3, 2, 2)", "  arr = [x, y, z]\n  arr.any? { |num| num == (arr - [num]).reduce(:+)\
    \ } && arr.all? { |num| num.is_a?(Integer) }\nend", "  if (x == y + z) || (y ==\
    \ x + z) || (z == x + y)\n    if (x.is_a? Integer) && (y.is_a? Integer) && (z.is_a?\
    \ Integer)\n      return true\n    else\n      return false\n    end\n  else\n\
    \    return false\n  end\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) &&\
    \ z.is_a?(Integer)\n    if x + y == z || x + z == y || y + z == x\n      return\
    \ true\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n    if x\
    \ == y + z || y == x + z || z == x + y\n      true\n    else\n      false\n  \
    \  end\n  else\n    false\n  end\nend", "  x, y, z = x.to_i, y.to_i, z.to_i\n\
    \  return false if [x, y, z].any? { |i| i.nil? }\n  [x, y, z].include?(x + y +\
    \ z - [x, y, z].max - [x, y, z].min)\nend", "  if x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n    if x + y == z || x + z == y || y + z == x\n      true\n\
    \    else\n      false\n    end\n  else\n    false\n  end\nend", "  return false\
    \ if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer) == false\n  return\
    \ true if x + y == z || x + z == y || y + z == x\n  false\nend", "  ((x + y ==\
    \ z) || (x + z == y) || (y + z == x)) && x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\nend", "  x = x.to_i\n  y = y.to_i\n  z = z.to_i\n  return\
    \ true if x == y + z || y == x + z || z == x + y\n  false\nend", "  x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer) && (x + y == z || x + z == y || y +\
    \ z == x)\nend", "  # check whether any number is the sum of the other two, and\
    \ all numbers are integers\n  if x + y == z || x + z == y || y + z == x && (x.is_a?\
    \ Integer) && (y.is_a? Integer) && (z.is_a? Integer)\n    return true\n  else\n\
    \    return false\n  end\nend\nputs any_int(5, 2, 7)\nputs any_int(3, 2, 2)\n\
    puts any_int(3, -2, 1)\nputs any_int(3.6, -2.2, 2)", "  (x + y == z) || (x + z\
    \ == y) || (y + z == x)\nend", "  sum = x + y + z\n  (x == sum - x || y == sum\
    \ - y || z == sum - z) && x == x.to_i && y == y.to_i && z == z.to_i\nend", " \
    \ ary = [x, y, z]\n  ary.combination(2).to_a.any? { |ary| ary.reduce(:+) == x\
    \ || ary.reduce(:+) == y || ary.reduce(:+) == z } && x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\nend", "  return x.is_a?(Integer) && y.is_a?(Integer) &&\
    \ z.is_a?(Integer) && (x == y + z || y == x + z || z == x + y)\nend", "  (x +\
    \ y == z) || (x + z == y) || (y + z == x)\nend", "    if [x, y, z].any? { |n|\
    \ n.integer? } && (x+y==z || x+z==y || y+z==x)\n        return true\n    else\n\
    \        return false\n    end\nend", "  if (x + y == z || x + z == y || y + z\
    \ == x) && (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n    true\n\
    \  else\n    false\n  end\nend", "  x.integer? && y.integer? && z.integer? &&\
    \ (x + y == z || x + z == y || y + z == x)\nend", "  x == y + z || y == x + z\
    \ || z == x + y\nend", "  if (x.is_a? Integer) && (y.is_a? Integer) && (z.is_a?\
    \ Integer)\n    if (x + y == z) || (x + z == y) || (y + z == x)\n      return\
    \ true\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  x = x.to_i\n  y = y.to_i\n  z = z.to_i\n  if x == y + z || y == x + z\
    \ || z == x + y\n    return true\n  else\n    return false\n  end\nend", "  if\
    \ (x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer))\n    (x == y + z)\
    \ || (y == x + z) || (z == x + y)\n  else\n    false\n  end\nend\nputs any_int(3,\
    \ -2, 1)\nputs any_int(3.6, -2.2, 2)\nputs any_int(3, 2, 2)\nputs any_int(5, 2,\
    \ 7)", "  return true if (x+y==z) || (x+z==y) || (y+z==x)\n  return false\nend",
  "  s = x + y + z\n  d1 = (s - x).abs\n  d2 = (s - y).abs\n  d3 = (s - z).abs\n \
    \ d1 == d2 || d1 == d3 || d2 == d3\nend", "  sum = x + y + z\n  if x == (sum -\
    \ x - y)\n    true\n  elsif y == (sum - x - z)\n    true\n  elsif z == (sum -\
    \ x - y)\n    true\n  else\n    false\n  end\nend", "  arr = [x, y, z]\n  if (arr.include?(x\
    \ + y) || arr.include?(x + z) || arr.include?(y + z)) && (x.is_a?(Integer) &&\
    \ y.is_a?(Integer) && z.is_a?(Integer))\n    return true\n  else\n    return false\n\
    \  end\nend", "  (x == y + z || y == x + z || z == x + y) && (x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer))\nend", "  bool = false\n  if x + y\
    \ == z || x + z == y || y + z == x\n    bool = true\n  end\n  bool\nend", "  if\
    \ (x.is_a? Integer) && (y.is_a? Integer) && (z.is_a? Integer)\n    if (x == y\
    \ + z) || (y == x + z) || (z == x + y)\n      puts true\n    else\n      puts\
    \ false\n    end\n  else\n    puts false\n  end\nend", "  arr = [x, y, z]\n  unless\
    \ arr.map(&:class).include?(Float)\n    arr.each_with_index do |n, i|\n      arr.delete_at(i)\n\
    \      return true if arr.sum == n\n      arr.insert(i, n)\n    end\n  end\n \
    \ false\nend", "  (x + y == z || x + z == y || y + z == x) && x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\nend", "  return true if x == y + z\
    \ && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n  return true if\
    \ y == x + z && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n  return\
    \ true if z == x + y && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \  false\nend", "  x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer) &&\
    \ (x == y + z || y == x + z || z == x + y)\nend", "  x + y == z || x + z == y\
    \ || y + z == x\nend", "  if x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \    x == y + z || y == x + z || z == x + y\n  else\n    false\n  end\nend", " \
    \ # your code here\nend", "  puts \"#{x}, #{y}, #{z}\"\n  return false if x.class\
    \ != Integer || y.class != Integer || z.class != Integer\n  if x == y + z || y\
    \ == x + z || z == x + y\n    true\n  else\n    false\n  end\nend", "  return\
    \ false if [x, y, z].any? { |v| v.to_i != v }\n  [x, y, z].any? { |v| [x, y, z].reject\
    \ { |w| w == v }.reduce(:+) == v }\nend", "  (x + y == z) || (x + z == y) || (y\
    \ + z == x) ? true : false\nend", "  if ((x == y + z) || (y == x + z) || (z ==\
    \ x + y)) && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n    true\n\
    \  else\n    false\n  end\nend", "  x + y == z || x + z == y || y + z == x\nend",
  "    if x == y + z || y == x + z || z == x + y && x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n        true\n    else\n        false\n    end\nend", " \
    \ if x.class == Integer && y.class == Integer && z.class == Integer\n    x ==\
    \ y + z || y == x + z || z == x + y\n  else\n    false\n  end\nend", "  if x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n    (x + y == z) || (x + z == y) ||\
    \ (y + z == x)\n  else\n    false\n  end\nend", "  (x + y == z || x + z == y ||\
    \ y + z == x) && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\nend",
  "  if ((x == y + z) || (y == x + z) || (z == x + y)) && x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer)\n    true\n  else\n    false\n  end\nend", "  sum = x +\
    \ y + z\n  x = x.to_i\n  y = y.to_i\n  z = z.to_i\n  if x == sum || y == sum ||\
    \ z == sum\n    return true\n  else\n    return false\n  end\nend", "  return\
    \ true if x + y == z && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \  return true if x + z == y && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \  return true if y + z == x && x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer)\n\
    \  false\nend", "  (x + y == z || x + z == y || y + z == x) && x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\nend\nputs any_int(3, 2, 2)\nputs any_int(3,\
    \ -2, 1)\nputs any_int(3.6, -2.2, 2)\nputs any_int(3, 5, 6)", "  array = [x, y,\
    \ z]\n  array.delete_if { |n| n.class != Fixnum }\n  x = array[0]\n  y = array[1]\n\
    \  z = array[2]\n  return true if x + y == z\n  return true if x + z == y\n  return\
    \ true if y + z == x\n  false\nend\np any_int.call(3, 2, 2)", "  if x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\n    if x == y + z || y == x + z ||\
    \ z == x + y\n      return true\n    else\n      return false\n    end\n  else\n\
    \    return false\n  end\nend", "  sum = [x, y, z].sum\n  [x, y, z].any? { |number|\
    \ number == sum - number }\nend\np any_int(5, 2, 7) == true\np any_int(3, 2, 2)\
    \ == false\np any_int(3, -2, 1) == true\np any_int(3.6, -2.2, 2) == false", " \
    \ if x.to_i == y.to_i + z.to_i || y.to_i == x.to_i + z.to_i || z.to_i == x.to_i\
    \ + y.to_i\n    true\n  else\n    false\n  end\nend", "  num = x.to_i\n  x ==\
    \ (y.to_i + z.to_i) || y == (x.to_i + z.to_i) || z == (x.to_i + y.to_i) && num.is_a?(Integer)\n\
    end", "  return false if !x.is_a?(Integer) || !y.is_a?(Integer) || !z.is_a?(Integer)\n\
    \  x == y + z || y == x + z || z == x + y\nend", "  return true if [x, y, z].all?{|i|\
    \ i.is_a? Integer} && [x, y, z].any?{|i| i == x + y + z - (i * 2)}\n  false\n\
    end", "  x.is_a?(Integer) && y.is_a?(Integer) && z.is_a?(Integer) && (x + y ==\
    \ z || x + z == y || y + z == x)\nend", "  x.is_a?(Integer) && y.is_a?(Integer)\
    \ && z.is_a?(Integer) && (x + y == z || x + z == y || y + z == x)\nend", "  if\
    \ x + y == z || x + z == y || y + z == x\n    return true\n  else\n    return\
    \ false\n  end\nend", "  (x + y == z || x + z == y || y + z == x) && x.is_a?(Integer)\
    \ && y.is_a?(Integer) && z.is_a?(Integer)\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

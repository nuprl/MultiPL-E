name: HumanEval_162_string_to_md5
language: rb
prompt: "# Given a string 'text', return its md5 hash equivalent string.\n# If 'text'\
  \ is an empty string, return nil.\n# >>> string_to_md5.call(\"Hello world\")\n#\
  \ \"3e25960a79dbc69b674cd4ec67a72c62\"\ndef string_to_md5(text)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_string_to_md5\n\
  \    candidate = method(:string_to_md5)\n    assert_equal(\"3e25960a79dbc69b674cd4ec67a72c62\"\
  , candidate.call(\"Hello world\"))\n    assert_equal(nil, candidate.call(\"\"))\n\
  \    assert_equal(\"0ef78513b0cb8cef12743f5aeb35f888\", candidate.call(\"A B C\"\
  ))\n    assert_equal(\"5f4dcc3b5aa765d61d8327deb882cf99\", candidate.call(\"password\"\
  ))\n  end\nend\n"
completions: ["  # TODO: write your code here\n  if text == \"\"\n    return nil\n\
    \  else\n    return Digest::MD5.hexdigest(text)\n  end\nend", "  return nil if\
    \ text.empty?\n  Digest::MD5.hexdigest(text)\nend", "  return nil if text.empty?\n\
    \  return Digest::MD5.hexdigest(text)\nend", "  #TODO: return the md5 hash of\
    \ 'text'\n  text.blank? ? nil : Digest::MD5.hexdigest(text)\nend", "  if text.empty?\n\
    \    nil\n  else\n    text.hexdigest\n  end\nend", "  unless text.empty?\n   \
    \ return Digest::MD5.hexdigest(text)\n  end\nend", "  Digest::MD5.hexdigest(text)\n\
    end", "\tDigest::MD5.hexdigest(text)\nend", "  # your implementation here\nend",
  "  text.empty? ? nil : Digest::MD5.hexdigest(text)\nend", "  if text.length == 0\n\
    \    return nil\n  else\n    return Digest::MD5.hexdigest(text)\n  end\nend",
  "  Digest::MD5.hexdigest(text)\nend", "  return nil if text.empty?\n  Digest::MD5.hexdigest(text)\n\
    end", "  return nil if text.empty?\n  return Digest::MD5.hexdigest(text)\nend",
  "  if text.empty?\n    nil\n  else\n    Digest::MD5.hexdigest(text)\n  end\nend",
  "  raise NotImplementedError\nend", "  return nil if text.empty?\n  Digest::MD5.hexdigest(text)\n\
    end", "  if text.length.zero?\n    nil\n  else\n    Digest::MD5.hexdigest(text)\n\
    \  end\nend", "  return nil if text.empty?\n  Digest::MD5.hexdigest(text)\nend",
  "  if text.length > 0\n    return Digest::MD5.hexdigest(text)\n  else\n    return\
    \ nil\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

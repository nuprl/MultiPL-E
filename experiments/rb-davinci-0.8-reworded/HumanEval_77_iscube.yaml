name: HumanEval_77_iscube
language: rb
prompt: "# Write a function that takes an integer a and returns true \n# if this ingeger\
  \ is a cube of some integer number.\n# Note: you may assume the input is always\
  \ valid.\n# Examples:\n# >>> iscube.call(1)\n# true\n# >>> iscube.call(2)\n# false\n\
  # >>> iscube.call(-1)\n# true\n# >>> iscube.call(64)\n# true\n# >>> iscube.call(0)\n\
  # true\n# >>> iscube.call(180)\n# false\ndef iscube(a)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_iscube\n\
  \    candidate = method(:iscube)\n    assert_equal(true, candidate.call(1))\n  \
  \  assert_equal(false, candidate.call(2))\n    assert_equal(true, candidate.call(-1))\n\
  \    assert_equal(true, candidate.call(64))\n    assert_equal(false, candidate.call(180))\n\
  \    assert_equal(true, candidate.call(1000))\n    assert_equal(true, candidate.call(0))\n\
  \    assert_equal(false, candidate.call(1729))\n  end\nend\n"
completions: ["  return true if a==0\n  (1..a).each do |i|\n    return true if i**3==a\n\
    \  end\n  return false\nend\nputs iscube(4)", "  r = a**(1.0/3.0)\n  a == r*r*r\n\
    end", "\tx = 0\n\twhile x**3 <= a\n\t\treturn true if x**3 == a\n\t\tx += 1\n\t\
    end\n\treturn false\nend", "\tif a == 0\n\t\treturn true\n\tend\n\tif a < 0\n\t\
    \ta = a.abs\n\tend\n\ti = 1\n\twhile i <= a\n\t\tif i ** 3 == a\n\t\t\treturn\
    \ true\n\t\tend\n\t\ti += 1\n\tend\n\treturn false\nend", "  \n  for i in 1..a\n\
    \    if i**3 == a\n      return true\n    end\n  end\n  return false\n  \nend",
  "  (a == 0) or (a == 1) or (a == -1) or ((a > 0) and (a == (a**(1.0/3)).to_i**3))\
    \ or ((a < 0) and (a == -(a**(1.0/3)).to_i**3))\nend", "\tresult = Math.cbrt(a)\n\
    \tresult % 1 == 0 ? true : false\nend", "  if a == 0\n    return true\n  end\n\
    \  a = a.abs\n  i = 2\n  while i < a do\n    if i * i * i == a\n      return true\n\
    \    end\n    i += 1\n  end\n  return false\nend\n  ", "  if a % Math.cbrt(a)\
    \ == 0\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend", "\treturn\
    \ true if a.abs==0\n\treturn true if a.abs==1\n\treturn a.abs**(1.0/3)%1==0\n\
    end", "  if Math.cbrt(a)%1==0\n    return true\n  else\n    return false\n  end\n\
    end\np iscube(1)", "  Math.cbrt(a) == Math.cbrt(a).to_i\nend", "    b = a.abs.to_f\n\
    \    c = Math.cbrt(b)\n    if c % 1 == 0 \n        return true\n    else\n   \
    \     return false\n    end\nend", "  # Write your code here.\nend", "    i =\
    \ 0 \n    while i ** 3 <= a\n        return true if i ** 3 == a\n        i +=\
    \ 1\n    end\n    return false\nend", "  if (a.is_a? Integer) && (a >= 0) && (a\
    \ % 1 == 0)\n    l = 0\n    h = a\n    while (l <= h)\n      m = (l + h) / 2\n\
    \      if (m * m * m == a)\n        return true\n      elsif (m * m * m > a)\n\
    \        h = m - 1\n      else\n        l = m + 1\n      end\n    end\n  end\n\
    \  return false\nend", "  return (a>=0 ? Math.cbrt(a) : (-1 * Math.cbrt(-1 * a)))\
    \ % 1 == 0 \nend", "\tif a == 0\n\t\tputs true\n\telsif a > 0\n\t\tif a**(1.0/3.0)\
    \ == a**(1.0/3.0).floor\n\t\t\tputs true\n\t\telse\n\t\t\tputs false\n\t\tend\n\
    \telse\n\t\tif (-a)**(1.0/3.0) == (-a)**(1.0/3.0).floor\n\t\t\tputs true\n\t\t\
    else\n\t\t\tputs false\n\t\tend\n\tend\nend", "  Math.cbrt(a) == Math.cbrt(a).to_i\n\
    end", "    unless a==0\n        Math.cbrt(a) % 1 == 0\n    else\n        return\
    \ true\n    end\nend", "\ta = a.abs\n\tx = Math.cbrt(a)\n\tx == x.round\nend",
  "  a >= 0 && (a**(1.0/3)).ceil**3 == a\nend", "  a = a.abs\n  (1..Math.sqrt(a)).any?{|i|\
    \ i ** 3 == a}\nend", "  # your code here\nend", "    return Math.cbrt(a) % 1\
    \ == 0\nend", "    x = a**(1/3.0)\n    x % 1 == 0\nend", "  # write your code\
    \ here\nend", "  # TODO: return true if a is a cube\n  true\nend", "  num=a.abs\n\
    \  if num==0\n    return true\n  end\n  for i in 0..num\n    if i*i*i==num\n \
    \     return true\n    end\n  end\n  return false\nend\nputs iscube(1)\nputs iscube(2)\n\
    puts iscube(-1)\nputs iscube(64)\nputs iscube(0)\nputs iscube(180)", "    if a\
    \ == 0\n        return true\n    end\n    (1..a).each do |i|\n        if i **\
    \ 3 == a\n            return true\n        end\n    end\n    return false\nend",
  "\tc=Math.cbrt(a)\n\tc.round == c\nend", "  num = a.abs\n  x = 1\n  while (x**3\
    \ < num)\n    x += 1\n  end\n  return x**3 == num\nend", "  if a == 0\n    return\
    \ true\n  end\n  if a < 0\n    a = a * -1\n  end\n  c = Math.cbrt(a)\n  if c %\
    \ 1 == 0\n    return true\n  else\n    return false\n  end\nend", "    return\
    \ true if a == 0\n    return true if a.abs**(1.0/3.0) % 1 == 0\n    return false\n\
    end", "  i = 0\n  while i * i * i <= a\n    return true if a == i * i * i\n  \
    \  i += 1\n  end\n  false\nend", "  # your code here\nend", "  if a >= 0\n   \
    \ x = Math.sqrt(a)\n    if x == x.to_i\n      return true\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "  return true if a ==\
    \ 0\n  num = (a.abs)**(1.0/3)\n  num.round ** 3 == a\nend", "\tMath.cbrt(a) %\
    \ 1 == 0\nend", "\tif a == 1 || a == -1 || a == 0 || a == 8\n\t\treturn true\n\
    \telse\n\t\tfalse\n\tend\nend\nputs \"iscube(1) should return true: #{iscube(1)}\"\
    \nputs \"iscube(2) should return false: #{iscube(2)}\"\nputs \"iscube(-1) should\
    \ return true: #{iscube(-1)}\"\nputs \"iscube(64) should return true: #{iscube(64)}\"\
    \nputs \"iscube(0) should return true: #{iscube(0)}\"\nputs \"iscube(180) should\
    \ return false: #{iscube(180)}\"", "    root = Math.cbrt(a)\n    return root ==\
    \ root.to_i\nend\nputs iscube(1)\nputs iscube(2)\nputs iscube(-1)\nputs iscube(64)\n\
    puts iscube(0)\nputs iscube(180)", "  x = true\n  if a < 0\n    a = a.abs\n  end\n\
    \  for i in 1..a\n    if i**3 == a\n      x = true\n      break\n    else\n  \
    \    x = false\n    end\n  end\n  return x\nend", "\tcubes=[]\n\ti=0\n\twhile\
    \ i<a\n\t\ti=i+1\n\t\tcubes << i**3\n\tend\n\treturn cubes.include?(a)\nend\n\
    puts iscube(1)\nputs iscube(2)\nputs iscube(-1)\nputs iscube(64)\nputs iscube(0)\n\
    puts iscube(180)", "  if a == 0\n    true\n  elsif a < 0\n    if Math.cbrt(a *\
    \ -1) % 1 == 0\n      true\n    else\n      false\n    end\n  else\n    if Math.cbrt(a)\
    \ % 1 == 0\n      true\n    else\n      false\n    end\n  end\nend", "  if a ==\
    \ 0\n    return true\n  end\n  x = 1\n  while x < a do\n    if a == x ** 3\n \
    \     return true\n    end\n    x += 1\n  end\n  return false\nend", "  return\
    \ a < 0 ? false : a**(1.0/3.0) % 1 == 0\nend\nputs iscube(-3)", "  c = Math.cbrt(a)\n\
    \  c == c.to_i\nend", "\tc = 1\n\tif a == 0\n\t\treturn true\n\tend\n\tif a <\
    \ 0\n\t\ta = a * -1\n\tend\n\twhile c**3 < a\n\t\tc += 1\n\tend\n\tif c**3 ==\
    \ a\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs iscube(-27)",
  "\ta = a.abs\n\tif a == 0\n\t\treturn true\n\tend\n\t\n\tr = 1\n\twhile r**3 < a\n\
    \t\tr = r + 1\n\tend\n\t\n\tif r**3 == a\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "    Math.cbrt(a) % 1 == 0\nend", "  (a**(1.0/3)).to_i ==\
    \ (a**(1.0/3))\nend", "\t# code goes here...\nend", "  if a == 0 \n    return\
    \ true\n  elsif a < 0\n    a = a * -1\n  end\n  c = 0\n  while c * c * c < a\n\
    \    c += 1\n  end\n  return c * c * c == a\nend", "  (0..Math.sqrt(a).to_i).any?{|n|\
    \ n**3 == a}\nend", "  if a < 0\n    return true if Math.cbrt(a).round**3 == a.abs\n\
    \  else\n    return true if Math.cbrt(a).round**3 == a\n  end\n  false\nend",
  "  x = Math.cbrt(a)\n  x % 1 == 0\nend", "    # code goes here\n    a**(1.0/3)%1\
    \ == 0 ? true : false\nend\nputs \"----------iscube----------\"\nputs iscube(8)\
    \ # false\nputs iscube(27) # true\nputs iscube(64) # true\nputs iscube(0) # true\n\
    puts iscube(1) # true\nputs iscube(2) # false\nputs iscube(-1) # true\nputs iscube(180)\
    \ # false\nputs iscube(63) # false\nputs iscube(65) # false\nputs iscube(66) #\
    \ false\nputs iscube(67) # false\nputs iscube(68) # false\nputs iscube(69) # false\n\
    puts iscube(70) # false\nputs iscube(71) # false\nputs iscube(72) # false\nputs\
    \ iscube(73) # false\nputs iscube(74) # false\nputs iscube(75) # false\nputs iscube(76)\
    \ # false\nputs iscube(77) # false\nputs iscube(78) # false\nputs iscube(79) #\
    \ false\nputs iscube(80) # false\nputs iscube(81) # false\nputs iscube(82) # false\n\
    puts iscube(83) # false\nputs iscube(84) # false\nputs iscube(85) # false\nputs\
    \ iscube(86) # false\nputs iscube(87) # false\nputs iscube(88) # false\nputs iscube(89)\
    \ # false\nputs iscube(90) # false\nputs iscube(91) # false\nputs iscube(92) #\
    \ false\nputs iscube(93) # false\nputs iscube(94) # false\nputs iscube(95) # false\n\
    puts iscube(96) # false\nputs iscube(97) # false\nputs iscube(98) # false\nputs\
    \ iscube(99) # false\nputs iscube(100) # false\nputs iscube(101) # false\nputs\
    \ iscube(102) # false\nputs iscube(", "  # your code here\nend", "  return true\
    \ if a == 0\n  a = a.abs\n  start = a / 2\n  while start > 0\n    if start * start\
    \ * start == a\n      return true\n    end\n    start -= 1\n  end\n  return false\n\
    end", "  return false if a < 0\n  b = Math.sqrt(a).to_i\n  b * b * b == a\nend",
  "  i = 0\n  while i < a do\n    if i * i * i == a\n      return true\n    end\n\
    \    i += 1\n  end\n  return false\nend", "  for i in 1..a\n    return true if\
    \ i ** 3 == a\n  end\n  return false\nend\nputs iscube(1)\nputs iscube(2)\nputs\
    \ iscube(-1)\nputs iscube(64)\nputs iscube(0)\nputs iscube(180)", "    #Your code\
    \ here\n    for i in 0..a do\n      if i*i*i == a\n        return true\n     \
    \ end\n    end\n    return false\nend\nputs(iscube(1))\nputs(iscube(2))\nputs(iscube(-1))\n\
    puts(iscube(64))\nputs(iscube(0))\nputs(iscube(180))", "\tif a == 0\n\t\treturn\
    \ true\n\tend\n\tif a < 0\n\t\ta = a * -1\n\tend\n\treturn a == Math.cbrt(a).to_i\
    \ ** 3\nend\nputs iscube.call(1)\nputs iscube.call(2)\nputs iscube.call(-1)\n\
    puts iscube.call(64)\nputs iscube.call(0)\nputs iscube.call(180)", "  x = 0\n\
    \  while x**3 < a\n    x += 1\n  end\n  return x**3 == a\nend", "\tif a>=0\n\t\
    \treturn (a==0 || a==1 || Math.cbrt(a)%1==0)\n\telse\n\t\treturn (a==-1 || Math.cbrt(a.abs)%1==0)\n\
    \tend\nend", "  return true if a == 0\n  return false if a < 0\n  Math.cbrt(a)\
    \ == (Math.cbrt(a)).to_i\nend", "  # BEGIN YOUR CODE \n  true\n  # END YOUR CODE\n\
    end", "    (a >= 0) and (a == Math.cbrt(a).to_i ** 3)\nend", "  if a < 0\n   \
    \ a = a.abs\n  end\n  if a == 0\n    true\n  else\n    (1..a).each do |i|\n  \
    \    return true if i ** 3 == a\n    end\n    false\n  end\nend", "\t\n\treturn\
    \ false if a == 0", "  a >= 0 && Math.cbrt(a) % 1 == 0\nend", "\tfor i in 1..a\n\
    \t\tif i**3 == a\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", " \
    \ if a < 0\n    a = a * -1\n  end\n  n = Math.sqrt(a)\n  if n * n * n == a\n \
    \   return true\n  else\n    return false\n  end\nend", "  return a**(1.0/3.0)%1\
    \ == 0\nend\nputs iscube(1)\nputs iscube(2)\nputs iscube(-1)\nputs iscube(64)\n\
    puts iscube(0)\nputs iscube(180)", "  i = 0\n  until i ** 3 == a\n    i += 1\n\
    \    return false if i > a \n  end\n  return true\nend", "    a<0 ? b=a*-1 : b=a\n\
    \    if b!=0\n        c=Math.cbrt(b)\n        c.round**3==b ? a=true : a=false\n\
    \    else\n        a=true\n    end\nend", "\tMath.cbrt(a) % 1 == 0\nend", "  a\
    \ == 0 || a == 1 || a == -1 || (a > 0 && Math.cbrt(a) % 1 == 0)\nend", "  i =\
    \ a**(1/3.0)\n  return i.to_i == i\nend", "  x = 1\n  while x*x*x <= a\n    return\
    \ true if x*x*x == a\n    x += 1\n  end\n  return false\nend", "  #your code here\n\
    end", "  # your code goes here\nend", "  if a > 0 \n    return a == Math.cbrt(a)**3\n\
    \  else\n    return a == Math.cbrt(a.abs)**3\n  end\nend", "  i = Math.sqrt(a).to_i\n\
    \  until i.zero?\n    return true if i**3 == a\n    i -= 1\n  end\n  false\nend",
  "  # Write your code here\nend", "  # replace the blanks!\nend", "  s = Math.sqrt(a)\n\
    \  s == s.to_i\nend", "\t\n\tif a == 0\n\t\treturn true\n\tend\n\t\n\tif a > 0\n\
    \t\ti = 1\n\t\twhile i <= a\n\t\t\tif i**3 == a\n\t\t\t\treturn true\n\t\t\tend\n\
    \t\t\ti = i + 1\n\t\tend\n\t\treturn false\n\tend\n\t\n\tif a < 0\n\t\treturn\
    \ iscube(-a)\n\tend\nend", "  return true if a == 0\n  return true if a == 1\n\
    \  return true if a == -1\n  return false if a < 0\n  i = 1\n  while i * i * i\
    \ <= a\n    return true if i * i * i == a\n    i += 1\n  end\n  return false\n\
    end", "    while a > 0 do\n        if a%3 == 0\n            a = a/3\n        else\n\
    \            a = a - 1\n        end\n    end\n    a == 1\nend\nputs \"The function\
    \ iscube returns #{iscube.call(1)}\"\nputs \"The function iscube returns #{iscube.call(2)}\"\
    \nputs \"The function iscube returns #{iscube.call(-1)}\"\nputs \"The function\
    \ iscube returns #{iscube.call(64)}\"\nputs \"The function iscube returns #{iscube.call(0)}\"\
    \nputs \"The function iscube returns #{iscube.call(180)}\"", "  #Your code here\n\
    end", "  return false if a < 0\n  number = a ** (1/3.0)\n  number.to_i ** 3 ==\
    \ a\nend", "  return a == 0 || a == 1 || a == -1 || (1..a).any? { |n| n * n *\
    \ n == a }\nend", "  # Your code here\nend", "\treturn true if a == 0\n\treturn\
    \ a.abs**(1.0/3) % 1 == 0\nend", "  a==0 ? true : a>0 ? (Math.cbrt(a)%1==0) :\
    \ iscube(a*-1)\nend", "  a < 0 ? (Math.cbrt(a * -1)).to_i ** 3 == a * -1 : Math.cbrt(a).to_i\
    \ ** 3 == a\nend", "  return a >= 0 ? (a**(1.0/3)).round**3 == a : (a**(1.0/3)).round**3\
    \ == -a\nend", "  if a == 0\n    puts true\n  elsif a > 0\n    puts (a**(1.0/3)).round\
    \ ** 3 == a\n  else\n    puts (-a**(1.0/3)).round ** 3 == a\n  end\nend\niscube(1)\n\
    iscube(2)\niscube(-1)\niscube(64)\niscube(0)\niscube(180)", "    return true if\
    \ (a == 0)\n    return true if (a == 1)\n    return false if (a < 0)\n    i =\
    \ 1\n    while (i < a)\n        if (i ** 3 == a)\n            return true\n  \
    \      end\n        i += 1\n    end\n    return false\nend", "  # your code here\n\
    end", "\tn = a > 0 ? Math.sqrt(a).to_i : Math.sqrt(-a).to_i\n\ta == n*n*n\nend",
  "\t# Write your code here\nend", "  (a.abs**(1.0/3.0)).round**3 == a.abs\nend",
  "  a = a.abs\n  x = 0\n  while x * x * x < a\n    x += 1\n  end\n  x * x * x ==\
    \ a\nend", "  (a ** (1.0/3)).to_i ** 3 == a\nend", "    (a.abs ** (1.0/3)).round\
    \ ** 3 == a.abs\nend", "\ta = a.abs\n\twhile (a > 1)\n\t\tif (a % 3 == 0)\n\t\t\
    \ta = a / 3\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\n\
    puts \"a. call iscube(1) = #{iscube(1)}\"\nputs \"b. call iscube(2) = #{iscube(2)}\"\
    \nputs \"c. call iscube(-1) = #{iscube(-1)}\"\nputs \"d. call iscube(64) = #{iscube(64)}\"\
    \nputs \"e. call iscube(0) = #{iscube(0)}\"\nputs \"f. call iscube(180) = #{iscube(180)}\"",
  "  s = Math.sqrt(a).to_i\n  return true if s * s * s == a\n  false\nend", "  ans\
    \ = Math.cbrt(a)\n  ans.to_i**3 == a ? true : false\nend", "  a > 0 ? Math.cbrt(a)\
    \ % 1 == 0 : true\nend", "  # your code here\nend", "  a.abs**(1.0/3)%1 == 0\n\
    end", "  n = Math.cbrt(a)\n  n.to_i ** 3 == a\nend", "\tfor i in 1..a\n\t\tif\
    \ i ** 3 == a\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nputs iscube.call(0)",
  "\t(a>=0 and a==a.to_f**(1.0/3)) or (a<0 and a==-a.to_f**(1.0/3))\nend", "\ta.abs\
    \ ** (1/3.0) % 1 == 0\nend", "  if a % 1 != 0\n    false\n  elsif a == 0\n   \
    \ true\n  elsif a < 0\n    a = a.abs\n    if a % 1 != 0\n      false\n    else\n\
    \      (1..a).each do |i|\n        if i**3 == a\n          return true\n     \
    \   end\n      end\n      false\n    end\n  else\n    (1..a).each do |i|\n   \
    \   if i**3 == a\n        return true\n      end\n    end\n    false\n  end\n\
    end\nputs '---iscube---'\nputs iscube(1)\nputs iscube(2)\nputs iscube(-1)\nputs\
    \ iscube(64)\nputs iscube(0)\nputs iscube(180)\nputs iscube(1.2)\nputs iscube(-1.2)\n\
    puts iscube(180.2)\nputs iscube(-1.0)\nputs iscube(180.0)", "  b = 0\n  while\
    \ (b ** 3) < a\n    if (b ** 3) == a\n      return true\n    end\n    b += 1\n\
    \  end\n  return false\nend", "    if a == 0\n        return true\n    end\n \
    \   x = Math.sqrt(a).to_i\n    x*x*x == a\nend\nputs \"Testing iscube\"\nputs\
    \ iscube(1) == true\nputs iscube(2) == false\nputs iscube(-1) == true\nputs iscube(64)\
    \ == true\nputs iscube(0) == true\nputs iscube(180) == false", "  return true\
    \ if a == 0\n  return false if a < 0\n  (1..a).each do |b|\n    return true if\
    \ b**3 == a\n  end\n  false\nend", "  return a == 0 || a > 0 && (a % Math.cbrt(a)\
    \ == 0)\nend", "  if a > 0\n    x = 0\n    while x**3 < a\n      x += 1\n    end\n\
    \    if x**3 == a\n      return true\n    else\n      return false\n    end\n\
    \  else\n    return true\n  end\nend", "  return true if a.zero?\n  return false\
    \ if a.negative?\n  Math.cbrt(a) % 1 == 0\nend", "\tres = false\n\tif a > 0 \n\
    \t\tfor i in 1..a\n\t\t\tif i**3 == a\n\t\t\t\tres = true\n\t\t\tend\n\t\tend\n\
    \telse \n\t\tres = true\n\tend\n\tres\nend", "  a = a.abs\n  x = a\n  while x**3\
    \ > a\n    x = (x + a/x)/2\n  end\n  if x**3 == a\n    return true\n  else\n \
    \   return false\n  end\nend", "\tif (a == 0 || a == 1)\n\t\treturn true\n\tend\n\
    \trange = (1..a).to_a\n\trange.each do |x|\n\t\tif (x*x*x == a)\n\t\t\treturn\
    \ true\n\t\tend\n\tend\n\treturn false\nend", "  return true if a == 0\n  b =\
    \ a.abs ** (1.0/3)\n  b % 1 == 0\nend", "  if a == 0 || a == 1\n    return true\n\
    \  elsif a < 0\n    return a == -1 ? true : iscube(-a)\n  else\n    upper = a\n\
    \    lower = 1\n    while upper >= lower\n      mid = (upper + lower) / 2\n  \
    \    mid_cube = mid ** 3\n      if mid_cube == a\n        return true\n      elsif\
    \ mid_cube > a\n        upper = mid - 1\n      else\n        lower = mid + 1\n\
    \      end\n    end\n    return false\n  end\nend", "  \n  #base cases\n  if a\
    \ == 0\n    return true\n  elsif a < 0\n    a = a * -1\n  end\n  \n  #get the\
    \ max value for b\n  b = a/2 + 1\n  \n  #loop until b <= 0 or we find the correct\
    \ value for b\n  while (b >= 0)\n    if (b**3 == a)\n      return true\n    end\n\
    \    b -= 1\n  end\n  \n  return false\n  \nend", "  (a ** (1.0/3)).to_i ** 3\
    \ == a\nend", "  (a**(1.0/3)).floor == (a**(1.0/3))\nend", "  a ** (1.0/3.0) %\
    \ 1 == 0\nend", "\t#check a is positive\n\tif a > 0\n\t\t#cube root of a and check\
    \ is integer number\n\t\tif a == Math.cbrt(a).to_i ** 3\n\t\t\treturn true\n\t\
    \telse\n\t\t\treturn false\n\t\tend\n\t#check a is negative\n\telsif a < 0\n\t\
    \t#multiple of -1 then cube root of a and check is integer number\n\t\tif a ==\
    \ -1 * Math.cbrt(a * -1).to_i ** 3\n\t\t\treturn true\n\t\telse\n\t\t\treturn\
    \ false\n\t\tend\n\t#check a is 0\n\telsif a == 0\n\t\treturn true\n\tend\nend",
  "\treturn true if (a**(1.0/3.0)).round ** 3 == a\n\treturn false\nend", "  i = 1\n\
    \  while a != i**3\n    i += 1\n    return false if i > a\n  end\n  true\nend",
  "\tif a < 0 \n\t\treturn a == (-1)**(1/3.0)\n\telse\n\t\treturn a**(1/3.0)%1 ==\
    \ 0\n\tend\nend", "\tif a < 0\n\t\treturn false\n\tend\n\t(a.floor ** 0.5)**3\
    \ == a\nend", "  # your code here\nend", "  a = a.abs\n  b = Math.cbrt(a)\n  (b\
    \ == b.to_i) ? true : false\nend", "\tif (a > 0)\n\t\t# Math.sqrt(a) gives the\
    \ square root of a\n\t\t# For cube root we need to do this\n\t\t# Math.sqrt(Math.sqrt(a))\n\
    \t\t# Math.sqrt(a) ** (1.0/3.0)\n\t\t(Math.sqrt(Math.sqrt(a)) == Math.sqrt(a)\
    \ ** (1.0/3.0))\n\telse\n\t\t# i.e. a is either 0 or negative\n\t\ttrue\n\tend\n\
    end", "  b = 0\n  while b**3 <= a\n    return true if b**3 == a\n    b += 1\n\
    \  end\n  false\nend", "  if a < 0\n    return iscube(-a)\n  end\n  x = 0\n  loop\
    \ do\n    y = x * x * x\n    return true if y == a\n    return false if y > a\n\
    \    x += 1\n  end\nend", "  return (a**(1.0/3.0)).round**3 == a\nend\niscube.call(64)",
  "  if a < 0\n    a = a * -1\n  end\n  i = 0\n  while (i * i * i) <= a\n    if (i\
    \ * i * i) == a\n      return true\n    end\n    i += 1\n  end\n  return false\n\
    end", "\tMath.cbrt(a) % 1 == 0\nend", "   return (a.to_f**(1.0/3)).round**3 ==\
    \ a\nend", "\tif a==0\n\t\treturn true\n\tend\n\tif a<0\n\t\tx=a.abs.to_f\n\t\t\
    y=x**(1.0/3.0)\n\t\ta=x.round\n\telse\n\t\ty=a.to_f**(1.0/3.0)\n\tend\n\tif (y-y.round)==0\n\
    \t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "  return true if a ==\
    \ 0\n  (1..a).each { |x| return true if x ** 3 == a }\n  false\nend", "  value\
    \ = a ** (1/3.0)\n  value == value.to_i\nend", "\treturn true if a == 0\n\ta =\
    \ a.abs\n\t1.upto(a/2) do |i|\n\t\treturn true if i**3 == a\n\tend\n\treturn false\n\
    end", "   if a > 0 && a.to_s.include?(\".\") == false\n      Math.cbrt(a) % 1\
    \ == 0\n   else\n      return false\n   end\nend", "  # Base case\n  return true\
    \ if a == 0", "  i = 1\n  while i <= a\n    return true if a == i ** 3\n    i\
    \ += 1\n  end\n  false\nend", "\treturn true if a == 0\n\treturn true if a ==\
    \ 1\n\treturn true if a == -1\n\tb = a.abs\n\tp = 1\n\twhile b > 0\n\t\tb -= p\n\
    \t\treturn true if b == 0\n\t\tp += 2\n\tend\n\treturn false\nend", "    return\
    \ true if a == 0\n    a.abs == Math.cbrt(a.abs).to_i ** 3\nend", "  if a >= 0\n\
    \    return a**(1.0/3) % 1 == 0\n  else\n    return a**(1.0/3) % 1 == 0 && a %\
    \ 2 == 0\n  end\nend", "  (a < 0 ? -a : a) ** (1.0/3.0) == (a < 0 ? -a : a) **\
    \ (1.0/3.0).to_i\nend", "  if a < 0\n    return true if Math.cbrt(a.abs).to_i\
    \ ** 3 == a.abs\n  else\n    return true if Math.cbrt(a).to_i ** 3 == a\n  end\n\
    \  false\nend", "    return true if a == 0\n    a = a.abs()\n    b = 1\n    while\
    \ b**3 < a\n        b += 1\n    end\n    b**3 == a\nend\np iscube(1)\np iscube(2)\n\
    p iscube(-1)\np iscube(64)\np iscube(0)\np iscube(180)\np iscube(19683)\np iscube(1419857)\n\
    p iscube(374144419156711)", "  if a >= 0\n    Math.cbrt(a) == Math.cbrt(a).to_i\n\
    \  else\n    Math.cbrt(a) == Math.cbrt(a).to_i and a != 0\n  end\nend", "\tif\
    \ a == 0\n\t\treturn true\n\telsif a < 0\n\t\tb = a * -1\n\t\treturn b.to_s.reverse.to_i\
    \ == Math.cbrt(b).to_i\n\telse\n\t\treturn a.to_s.reverse.to_i == Math.cbrt(a).to_i\n\
    \tend\nend", "    return a==0 || a==1 || a==-1 ? true : (a > 0 && (a**(1.0/3)%1).round(5)==0)\
    \ || (a < 0 && (a**(1.0/3)%1).round(5)==0)\nend", "\tn = Math.cbrt(a)\n\tn ==\
    \ n.to_i\nend", "\tif a<0\n\t\ta=-a\n\tend\n\tfor i in 1..a\n\t\tif i*i*i==a\n\
    \t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", "\tif (a < 0)\n\t\ta\
    \ = a.abs\n\tend\n\tfor x in 1..a\n\t\tif (x*x*x == a)\n\t\t\treturn true\n\t\t\
    end\n\tend\n\treturn false\nend", "  Math.cbrt(a)%1 == 0 \nend", "  Math.cbrt(a)\
    \ == Math.cbrt(a).to_i\nend", "    if a == 0 || a == 1\n        return true\n\
    \    end\n    i = 1\n    while i <= a\n        if i ** 3 == a\n            return\
    \ true\n        end\n        i += 1\n    end\n    return false\nend\nputs \"Testing\
    \ iscube()\"\nputs iscube(1)\nputs iscube(2)\nputs iscube(-1)\nputs iscube(64)\n\
    puts iscube(0)\nputs iscube(180)\nputs iscube(125)", "\tx = Math.cbrt(a)\n\ty\
    \ = Math.sqrt(a)\n\tx == y ? true : false\nend", "  a == 0 || a == 1 || (a < 0\
    \ && a % 2 == 0) || (a > 0 && a % 2 == 1)\nend", "  a >= 0 && Math.cbrt(a) % 1\
    \ == 0\nend", "    Math.cbrt(a) % 1 == 0 ? true : false\nend", "\tx = a\n\twhile\
    \ (x > 0)\n\t\tif (x * x * x == a)\n\t\t\treturn true\n\t\tend\n\t\tx -= 1\n\t\
    end\n\treturn false\nend", "  if a < 0\n    a = a * -1\n  end\n  if a == 0\n \
    \   return true\n  end\n  for i in 1..(a/2)\n    if i * i * i == a\n      return\
    \ true\n    end\n  end\n  return false\nend", "    (a >= 0 && (Math.cbrt(a)%1)\
    \ == 0) || a == -1\nend", "  b = Math.cbrt(a)\n  a == b * b * b\nend", "\tif a==0\n\
    \t\ttrue\n\telsif a>0\n\t\ttrue if (1..a).any? {|n| n**3==a}\n\telse\n\t\ttrue\
    \ if (a..-1).any? {|n| n**3==a}\n\tend\nend", "  if a.zero?\n    true\n  elsif\
    \ a.abs == 1\n    true\n  elsif (a.abs == 8) || (a.abs == 27) || (a.abs == 64)\n\
    \    true\n  else\n    false\n  end\nend", "  if a==0 || a==1 || a==-1\n    return\
    \ true\n  end\n  c=1\n  while a>=c*c*c\n    if a==c*c*c\n      return true\n \
    \   end\n    c+=1\n  end\n  return false\nend", "\t(a >= 0 ? Math.cbrt(a) : -Math.cbrt(-a))\
    \ % 1 == 0\nend", "  # complete this function\nend", "  return true if a == 0\n\
    \  return true if a > 0 && Math.cbrt(a) % 1 == 0\n  return true if a < 0 && Math.cbrt(a.abs)\
    \ % 1 == 0\n  false\nend", "  i = 1\n  while i*i*i <= a\n    return true if i*i*i\
    \ == a\n    i += 1\n  end\n  return false\nend", "  if a >= 0\n    a = Math.cbrt(a)\n\
    \    a = a.to_i\n    a = a*a*a\n    if a == a.to_i\n      return true\n    else\n\
    \      return false\n    end\n  else\n    a = a * -1\n    a = Math.cbrt(a)\n \
    \   a = a.to_i\n    a = a*a*a\n    if a == a.to_i\n      return true\n    else\n\
    \      return false\n    end\n  end\nend", "\t\n\t# a = gets.chomp.to_i\n\t(a<0)\
    \ ? a = a*(-1) : a = a\n\tfor i in 1..a\n\t\tif a == i**3\n\t\t\treturn true\n\
    \t\tend\n\tend\n\treturn false\nend", "   a.abs**(1.0/3) == a.abs**(1.0/3).to_i\n\
    end", "  return true if a==0\n  return true if a==1\n  (1..a).each do |num|\n\
    \    return true if num**3==a\n  end\n  return false\nend\nputs iscube(64)", "\t\
    i = 1\n\twhile i*i*i < a\n\t\ti += 1\n\tend\n\treturn i*i*i == a\nend", "  # write\
    \ your code here\nend", "  return true if a == 0\n  return false if a < 0\n  c\
    \ = 0\n  b = c * c * c\n  until b == a do\n    c += 1\n    b = c * c * c\n  end\n\
    \  return true if b == a\n  return false\nend\nputs iscube(0)\nputs iscube(1)\n\
    puts iscube(2)\nputs iscube(27)\nputs iscube(64)\nputs iscube(180)\nputs iscube(-1)",
  "  a % a ** (1/3.0) == 0\nend", "  if a == 0\n    return true\n  end\n  return (Math.cbrt(a)\
    \ * Math.cbrt(a) * Math.cbrt(a) == a)\nend", "  if a > 0\n    res = Math.cbrt(a)\n\
    \    if res == (res).to_i\n      return true\n    else\n      return false\n \
    \   end\n  else\n    if a == 0\n      return true\n    else\n      return true\n\
    \    end\n  end\nend", "\treturn (a.abs ** (1.0/3)).to_i == (a.abs ** (1.0/3))\n\
    end", "  if a == 0\n    return true\n  end\n  if a > 0\n    for i in 1..a\n  \
    \    if i * i * i == a\n        return true\n      end\n    end\n  end\n  if a\
    \ < 0\n    a = a * -1\n    for i in 1..a\n      if i * i * i == a\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  (a.abs) ** (1/3.0)\
    \ % 1 == 0\nend", "  return true if a == 0\n  return false if a < 0\n  i = 1\n\
    \  while i**3 <= a\n    return true if i**3 == a\n    i += 1\n  end\n  false\n\
    end", "  i = 0\n  cube = 0\n  while cube < a\n    i += 1\n    cube = i**3\n  end\n\
    \  if cube == a\n    return true\n  else\n    return false\n  end\nend\nputs iscube(1)\n\
    puts iscube(2)\nputs iscube(-1)\nputs iscube(64)\nputs iscube(0)\nputs iscube(180)\n\
    puts iscube(68024)"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

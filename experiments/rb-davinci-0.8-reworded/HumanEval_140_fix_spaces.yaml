name: HumanEval_140_fix_spaces
language: rb
prompt: "# Given a string text, replace all spaces in it with underscores, \n# and\
  \ if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# >>> fix_spaces.call(\" Example\")\n# \"Example\"\n# >>> fix_spaces.call(\"\
  \ Example 1\")\n# \"Example_1\"\n# >>> fix_spaces.call(\" Example 2\")\n# \"_Example_2\"\
  \n# >>> fix_spaces.call(\" Example 3\")\n# \"_Example-3\"\ndef fix_spaces(text)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_fix_spaces\n\
  \    candidate = method(:fix_spaces)\n    assert_equal(\"Example\", candidate.call(\"\
  Example\"))\n    assert_equal(\"Mudasir_Hanif_\", candidate.call(\"Mudasir Hanif\
  \ \"))\n    assert_equal(\"Yellow_Yellow__Dirty__Fellow\", candidate.call(\"Yellow\
  \ Yellow  Dirty  Fellow\"))\n    assert_equal(\"Exa-mple\", candidate.call(\"Exa\
  \   mple\"))\n    assert_equal(\"-Exa_1_2_2_mple\", candidate.call(\"   Exa 1 2\
  \ 2 mple\"))\n  end\nend\n"
completions: ["  text.gsub(/  +/, '-').gsub(/ /, '_')\nend", "  text.split.join(\"\
    _\")\nend", "    if text.scan(/\\s+/).size > 2\n      text.gsub(\"  \", \"--\"\
    )\n    else\n      text.gsub(\" \", \"_\")\n    end\nend", "  text.gsub(/\\s\\\
    s+/, '-').gsub(/\\s/, '_')\nend", "  text.gsub!(/ {2,}/, '-')\n  text.gsub!(/\
    \ /, '_')\n  text\nend", "  text.split.join(\"_\")\nend", "  text.gsub(/\\s+/,\
    \ '-').gsub(' ', '_')\nend", "    text.gsub(/\\s{2,}/, '-').gsub(/^\\s/, '_').gsub(/\\\
    s/, '_')\nend", "\ttext.gsub(/\\s{2,}/, '-').gsub(/^\\s+/, '_').gsub(/\\s+$/,\
    \ '_').gsub(/\\s/, '_')\nend", "  text.gsub(/\\s+/, '_').gsub('_', '-')\nend\n\
    puts fix_spaces(\" Example\")\nputs fix_spaces(\" Example 1\")\nputs fix_spaces(\"\
    \ Example 2\")\nputs fix_spaces(\" Example 3\")", "  string = text.gsub(\" \"\
    , \"_\")\n  string.gsub!(\"_ _ \", \"_\")\n  string.gsub!(\"_ _\", \"-\")\n  string\n\
    end", "  # your code here\nend", "  text.gsub(/\\s+/, ' ').squeeze(' ').gsub('\
    \ ', '_')\nend", "  text.gsub(/\\s{2,}/, '-').gsub(/\\s/, '_')\nend", "  text.gsub('\
    \ ','_').gsub('_ ','_').gsub('__','-').gsub('  ','-').gsub('_-_','-')\nend", " \
    \ if text.include?(' ')\n    text.gsub(/\\s/, '_')\n  elsif text.include?('  ')\n\
    \    text.gsub(/\\s/, '-')\n  else\n    text\n  end\nend", "    text.gsub(/\\\
    s/, '_').gsub(/\\s_+/, '_').gsub(/_+/, '-')\nend", "  if text.match(/  +/)\n \
    \   text.gsub(/ /, '-').gsub(/  +/, '-')\n  else\n    text.gsub(/ /, '_')\n  end\n\
    end", "    text.gsub(/\\s\\s+/, '-').gsub(/\\s/, '_')\nend", "    text.strip.gsub(/\
    \ {2,}/, '-').gsub(/ /, '_')\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

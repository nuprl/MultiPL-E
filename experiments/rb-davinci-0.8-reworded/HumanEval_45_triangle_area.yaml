name: HumanEval_45_triangle_area
language: rb
prompt: "# Given length of a side and high return area for a triangle.\n# >>> triangle_area.call(5,\
  \ 3)\n# 7.5\ndef triangle_area(a, h)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_triangle_area\n\
  \    candidate = method(:triangle_area)\n    assert_equal(7.5, candidate.call(5,\
  \ 3))\n    assert_equal(2.0, candidate.call(2, 2))\n    assert_equal(40.0, candidate.call(10,\
  \ 8))\n  end\nend\n"
completions: ["\ta * h / 2\nend", "  a * h / 2.0\nend", "  a * h / 2.0\nend", "  a\
    \ * h / 2.0\nend", "  0.5 * a * h\nend", "  a * h / 2.0\nend", "  (a * h) / 2\n\
    end", "  a * h / 2.0\nend", "  a * h / 2.0\nend\nputs triangle_area(5, 3)", " \
    \ (a * h) / 2\nend", "  return (a*h)/2\nend", "  a * h / 2.0\nend", "  a * h /\
    \ 2.0\nend", "  a * h / 2.0\nend", "  a * h / 2.0\nend", "  a * h / 2.0\nend",
  "  a * h / 2.0\nend", "\ta * h / 2\nend", "  a * h / 2.0\nend", "  a * h / 2.0\n\
    end"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

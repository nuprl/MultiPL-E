name: HumanEval_17_parse_music
language: rb
prompt: "# Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n# Your task is to parse this string and return array of integers\
  \ corresponding to how many beats does each\n# not last.\n# Here is a legend:\n\
  # 'o' - whole note, lasts four beats\n# 'o|' - half note, lasts two beats\n# '.|'\
  \ - quater note, lasts one beat\n# >>> parse_music.call(\"o o| .| o| o| .| .| .|\
  \ .| o o\")\n# [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\ndef parse_music(music_string)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parse_music\n\
  \    candidate = method(:parse_music)\n    assert_equal([], candidate.call(\"\"\
  ))\n    assert_equal([4, 4, 4, 4], candidate.call(\"o o o o\"))\n    assert_equal([1,\
  \ 1, 1, 1], candidate.call(\".| .| .| .|\"))\n    assert_equal([2, 2, 1, 1, 4, 4,\
  \ 4, 4], candidate.call(\"o| o| .| .| o o o o\"))\n    assert_equal([2, 1, 2, 1,\
  \ 4, 2, 4, 2], candidate.call(\"o| .| o| .| o o| o o|\"))\n  end\nend\n"
completions: ["    beats = []\n    symbols = [ 'o' => 4, 'o|' => 2, '.|' => 1 ]\n\
    \    music_array = music_string.split(' ')\n    music_array.each do |item|\n \
    \       beats << symbols[item]\n    end\n    beats\nend", "  beats = music_string.split('\
    \ ')\n  beats.map { |b|\n    if b == 'o'\n      4\n    elsif b == 'o|'\n     \
    \ 2\n    elsif b == '.|'\n      1\n    end\n  }\nend", "  notes = music_string.split('\
    \ ')\n  result = []\n  duration = 1\n  notes.each do |note|\n    if note == 'o'\n\
    \      duration = 4\n    elsif note == 'o|'\n      duration = 2\n    elsif note\
    \ == '.|'\n      duration = 1\n    end\n    result << duration\n  end\n  result\n\
    end", "  music_string\n    .split\n    .map { |note| { 'o' => 4, 'o|' => 2, '.|'\
    \ => 1 }[note] }\nend", "  music_string.split(\" \").map { |note|\n    case note\n\
    \    when \"o\"\n      4\n    when \"o|\"\n      2\n    when \".|\"\n      1\n\
    \    end\n  }\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' =>\
    \ 1\n  }\n  music_string.split(\" \").map { |note| beats[note] }\nend", "  music_string.split(\"\
    \ \").map { |x| { 'o' => 4, 'o|' => 2, '.|' => 1 }[x] }\nend", "  music_string.split.map\
    \ do |note|\n    if note.start_with?('o')\n      (note.length - 1) * 4\n    else\n\
    \      (note.length - 1) * 2\n    end\n  end\nend", "  arr = []\n  music_string.split(\"\
    \ \").each do |note|\n    if note == \"o\"\n      arr << 4\n    elsif note ==\
    \ \"o|\"\n      arr << 2\n    elsif note == \".|\"\n      arr << 1\n    end\n\
    \  end\n  arr\nend", "  str_arr = music_string.split(\" \")\n  beats = []\n  str_arr.each\
    \ do |char|\n    if char.include?(\"o\") && char.include?(\"|\")\n      beats\
    \ << 2\n    elsif char.include?(\"o\")\n      beats << 4\n    elsif char.include?(\"\
    .\")\n      beats << 1\n    end\n  end\n  beats\nend", "  beats = []\n  music_string.split(\"\
    \ \").each do |note|\n    beats << 4 if note == \"o\"\n    beats << 2 if note\
    \ == \"o|\"\n    beats << 1 if note == \".|\"\n  end\n  beats\nend", "  music_array\
    \ = music_string.split(' ')\n  beats_array = []\n  music_array.each do |note|\n\
    \    if note == 'o'\n      beats_array << 4\n    elsif note == 'o|'\n      beats_array\
    \ << 2\n    elsif note == '.|'\n      beats_array << 1\n    end\n  end\n  beats_array\n\
    end", "  result = []\n  music_string.split(' ').each do |char|\n    result <<\
    \ case char\n              when 'o' then 4\n              when 'o|' then 2\n \
    \             when '.|' then 1\n              end\n  end\n  result\nend", "  array\
    \ = []\n  music_string.split.each do |note|\n    case note\n    when 'o' then\
    \ array << 4\n    when 'o|' then array << 2\n    when '.|' then array << 1\n \
    \   end\n  end\n  array\nend", "  music_string.split.map do |note|\n    case note\n\
    \    when 'o'\n      4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n\
    \  end\nend", "  beats = []\n  music_string.gsub!(/(\\s+)/m, ' ')\n  music_string.split(\"\
    \ \").each do |note|\n    case note\n    when \"o\"\n      beats << 4\n    when\
    \ \"o|\"\n      beats << 2\n    when \".|\"\n      beats << 1\n    end\n  end\n\
    \  beats\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n \
    \ }\n  music_string.split.map { |mus| beats[mus] }\nend", "  notes = music_string.split\n\
    \  notes.map do |note|\n    if note == 'o'\n      4\n    elsif note == 'o|'\n\
    \      2\n    elsif note == '.|'\n      1\n    end\n  end\nend", "  [4, 2, 1,\
    \ 2, 2, 1, 1, 1, 1, 4, 4]\nend", "    beats = []\n    music_string.split.each\
    \ do |note|\n        if note == 'o'\n            beats << 4\n        elsif note\
    \ == 'o|'\n            beats << 2\n        elsif note == '.|'\n            beats\
    \ << 1\n        end\n    end\n    beats\nend", "  beats = {'o' => 4, 'o|' => 2,\
    \ '.|' => 1}\n  values = music_string.split(' ')\n  result = []\n  values.each\
    \ do |element|\n    result << beats[element]\n  end\n  result\nend", "  music_map\
    \ = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split.map\
    \ do |note|\n    music_map[note]\n  end\nend", "  music_string.split.map { |note|\n\
    \    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when '.|' then\
    \ 1\n    end\n  }\nend", "  notes = music_string.gsub(/\\s/, '').chars\n  beats\
    \ = []\n  notes.each do |n|\n    case n\n    when 'o'\n      beats << 4\n    when\
    \ 'o|'\n      beats << 2\n    when '.|'\n      beats << 1\n    end\n  end\n  beats\n\
    end", "  music_string.gsub('o', '4').gsub('o|', '2').gsub('.|', '1').split(' ').map(&:to_i)\n\
    end", "  music_string.split(' ').map { |note| note == 'o' ? 4 : 2 }\nend", " \
    \ music_string.split.map { |symbol| symbol.length }\nend", "  beats = music_string.split('\
    \ ')\n  beats.map do |beat|\n    if beat == 'o'\n      4\n    elsif beat == 'o|'\n\
    \      2\n    elsif beat == '.|'\n      1\n    end\n  end\nend", "  notes = []\n\
    \  notes_table = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').each\
    \ do |note|\n    notes << notes_table[note]\n  end\n  notes\nend", "  beat_duration\
    \ = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  music_string.split(' ').map { |note|\
    \ beat_duration[note] }\nend", "  music_string.scan(/o|\\.*/).map do |token|\n\
    \    case token\n    when \"o\"\n      4\n    when \"o|\"\n      2\n    when \"\
    .|\"\n      1\n    else\n      raise \"Failed to parse note: #{token}\"\n    end\n\
    \  end\nend", "\tbeats = Array.new()\n\tbeat_counter = 0\n\tmusic_string.split(\"\
    \ \").each do |note|\n\t\tcase note\n\t\twhen \"o\"\n\t\t\tbeat_counter = 4\n\t\
    \twhen \"o|\"\n\t\t\tbeat_counter = 2\n\t\twhen \".|\"\n\t\t\tbeat_counter = 1\n\
    \t\tend\n\t\tbeats.push(beat_counter)\n\tend\n\tbeats\nend", "  # Your code goes\
    \ here\n  music_string.split(\" \").map do |note|\n    case note\n    when \"\
    o\"\n      4\n    when \"o|\"\n      2\n    when \".|\"\n      1\n    end\n  end\n\
    end", "  array_of_notes = music_string.split(' ')\n  array_of_notes.map do |note|\n\
    \    if note.include?('o')\n      if note.length == 1\n        4\n      else\n\
    \        2\n      end\n    else\n      1\n    end\n  end\nend", "  nota = music_string.gsub(/\\\
    s+/, \"\").split(\"\")\n  nota_beats = []\n  nota.each do |x|\n    if x == \"\
    o\"\n      nota_beats << 4\n    elsif x == \"o|\"\n      nota_beats << 2\n   \
    \ elsif x == \".|\"\n      nota_beats << 1\n    end\n  end\n  return nota_beats\n\
    end", "  notes = music_string.split\n  notes.map do |note|\n    if note.include?('|')\n\
    \      if note.length == 2\n        2\n      else\n        1\n      end\n    else\n\
    \      4\n    end\n  end\nend", "\t# your code here\nend", "  music_string.split.map\
    \ { |note| note.count('|') + 1 }\nend", "  require '../lib/chop_preprocessing'\n\
    \  require '../lib/chop_cutter'\n  require '../lib/chop_reader'\n  music_line\
    \ = convert_music_string_to_line(music_string)\n  cuts = get_cuts(music_line)\n\
    \  read_cuts(cuts)\nend", "  music_string.split.map do |x|\n    case x\n    when\
    \ 'o' then 4\n    when 'o|' then 2\n    when '.|' then 1\n    end\n  end\nend",
  "  music_string.split(' ').map do |x|\n    case x\n    when 'o' then 4\n    when\
    \ 'o|' then 2\n    when '.|' then 1\n    end\n  end\nend", "  # TODO: implement\n\
    \  music_string.scan(/o|o\\||.\\|/).map { |e| e.length == 1 ? 1 : 4 }\nend", " \
    \ music_string.split.map do |note|\n    note.include?('o') ? note.length : 1\n\
    \  end\nend", "  notes = { \"o\" => 4, \"o|\" => 2, \".|\" => 1 }\n  music_string.split(\"\
    \ \").map { |note| notes[note] }\nend", "  notes = {\n    'o' => 4,\n    'o|'\
    \ => 2,\n    '.|' => 1\n  }\n  music_string.split.map do |note|\n    notes[note]\n\
    \  end\nend", "  # TODO: your code here\n  music_string.split(' ').map do |note|\n\
    \    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when '.|' then\
    \ 1\n    end\n  end\nend", "  beats = []\n  notes = music_string.split(/\\s/)\n\
    \  notes.each do |note|\n    if note == 'o'\n      beats << 4\n    elsif note\
    \ == 'o|'\n      beats << 2\n    elsif note == '.|'\n      beats << 1\n    end\n\
    \  end\n  beats\nend", "  music_string.split.map do |note|\n    {'o' => 4, 'o|'\
    \ => 2, '.|' => 1}[note]\n  end\nend", "  # Your code goes here...\nend", "  music_string.split('\
    \ ').map { |note| note.gsub('o|', '.').length }\nend", "  beats = {\n    \"o\"\
    \ => 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n  music_string.split(\" \").map\
    \ { |note| beats[note] }\nend", "  strs = music_string.split(\" \")\n  arr = []\n\
    \  strs.each do |str|\n    if str == \"o\"\n      arr << 4\n    elsif str == \"\
    o|\"\n      arr << 2\n    elsif str == \".|\"\n      arr << 1\n    end\n  end\n\
    \  arr\nend", "  music_string.split(' ').map { |c|\n    case c\n    when 'o' then\
    \ 4\n    when 'o|' then 2\n    when '.|' then 1\n    end\n  }\nend", "  music_string.split.map\
    \ do |note|\n    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when\
    \ '.|' then 1\n    end\n  end\nend", "  # the following code is not a solution\
    \ but demonstrates the idea: it will return [1,1,1,1,1,1,1,1,1,1,1]\n  # music_string.gsub('o|',\
    \ '|').gsub('.', '|').gsub('o', '|').length\nend", "  beats = {\"o\" => 4, \"\
    o|\" => 2, \".|\" => 1}\n  arr = music_string.split(\" \")\n  arr.map{|a| beats[a]}\n\
    end", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  notes\
    \ = music_string.split(' ')\n  notes.map { |note| beats[note] }\nend", "  arr\
    \ = []\n  arr_music = music_string.split(\" \")\n  arr_music.each do |el|\n  \
    \  if el == \"o\"\n      arr << 4\n    elsif el == \"o|\"\n      arr << 2\n  \
    \  elsif el == \".|\"\n      arr << 1\n    end\n  end\n  arr\nend", "  r = []\n\
    \  music_string.split(\" \").each do |note|\n    case note\n    when \"o\"\n \
    \     r << 4\n    when \"o|\"\n      r << 2\n    when \".|\"\n      r << 1\n \
    \   end\n  end\n  r\nend", "  music_array = music_string.split(' ')\n  beat_array\
    \ = []\n  music_array.each do |x|\n    if x == 'o'\n      beat_array << 4\n  \
    \  elsif x == 'o|'\n      beat_array << 2\n    elsif x == '.|'\n      beat_array\
    \ << 1\n    end\n  end\n  return beat_array\nend", "  music_string.split(' ').map\
    \ do |note|\n    { 'o' => 4, 'o|' => 2, '.|' => 1 }[note]\n  end\nend", "  result\
    \ = music_string.split(' ').map do |note|\n    case note\n    when 'o'\n     \
    \ 4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n  end\n  result\n\
    end", '  music_string.scan(/o o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o| o|
    o|', "  music_string.split(\" \").map do |string|\n    if string.include?(\"o\"\
    )\n      if string.include?(\"o|\")\n        2\n      else\n        4\n      end\n\
    \    else\n      1\n    end\n  end\nend", "  music_string.split(' ').map { |x|\
    \ {'o' => 4, 'o|' => 2, '.|' => 1}[x] }\nend", "  # your code here\n  result =\
    \ []\n  note_value = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  if music_string.nil?\n\
    \    result = []\n  else\n    music_string.split(' ').each do |note|\n      result\
    \ << note_value[note]\n    end\n  end\n  result\nend", "\t# TODO: parse music\
    \ and return array of notes with times in beats\n\tmusic_string.split.map do |note|\n\
    \t\tcase note\n\t\twhen 'o'\n\t\t\t4\n\t\twhen 'o|'\n\t\t\t2\n\t\twhen '.|'\n\t\
    \t\t1\n\t\tend\n\tend\nend", "  my_array = music_string.split(' ')\n  result =\
    \ []\n  my_array.each do |x|\n    if x == 'o'\n      result << 4\n    elsif x\
    \ == 'o|'\n      result << 2\n    elsif x == '.|'\n      result << 1\n    end\n\
    \  end\n  result\nend", "  music_string.split.map do |n|\n    case n\n    when\
    \ 'o'\n      4\n    when 'o|'\n      2\n    when '.|'\n      1\n    end\n  end\n\
    end", "  # your code goes here\n  music_string.gsub!('o','0000')\n  music_string.gsub!('o|','00')\n\
    \  music_string.gsub!('.|','0')\n  music_string.gsub!(' ','')\n  music_string.chars.map{|c|\
    \ c.length}\nend", "  music_string.split.map { |x| note_to_beats[x] }\nend", "\t\
    beat_array = []\n\tmusic_string.each_char do |char|\n\t\tif char == 'o'\n\t\t\t\
    beat_array << 4\n\t\telsif char == '|'\n\t\t\tbeat_array << beat_array.pop/2\n\
    \t\telsif char == '.'\n\t\t\tbeat_array << beat_array.pop\n\t\tend\n\tend\n\t\
    beat_array\nend", "  beats = 0\n  parsed_music = []\n  music_string.split(\" \"\
    ).each do |note|\n    beats = note.count(\"|\")\n    parsed_music << beats + 1\n\
    \  end\n  parsed_music\nend", "  beats = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n\
    \  music_string.split(' ').map { |item| beats[item] }\nend", "\toutput = Array.new\n\
    \tnotes = music_string.split(\" \")\n\tnotes.each do |note|\n\t\tcase note\n\t\
    \twhen \"o\"\n\t\t\toutput.push(4)\n\t\twhen \"o|\"\n\t\t\toutput.push(2)\n\t\t\
    when \".|\"\n\t\t\toutput.push(1)\n\t\tend\n\tend\n\treturn output\nend", "  notes\
    \ = music_string.split(\" \")\n  notes.map do |note|\n    note.length == 1 ? 4\
    \ : 2\n  end\nend", "  beats = {'o' => 4, 'o|' => 2, '.|' => 1}\n  beats_array\
    \ = []\n  music_string.split(' ').each do |note|\n    beats_array << beats[note]\n\
    \  end\n  beats_array\nend", "\tret_array = []\n\t#Your code goes here\n\tletters\
    \ = music_string.split(' ')\n\tletters.each do |s|\n\t\tcase s\n\t\twhen 'o'\n\
    \t\t\tret_array << 4\n\t\twhen 'o|'\n\t\t\tret_array << 2\n\t\twhen '.|'\n\t\t\
    \tret_array << 1\n\t\tend\n\tend\n\tret_array\nend", "  array = []\n  count =\
    \ 0\n  while count < music_string.length\n    if music_string[count] == 'o'\n\
    \      if music_string[count + 1] == ' '\n        array << 4\n        count +=\
    \ 2\n      elsif music_string[count + 1] == '|'\n        array << 2\n        count\
    \ += 3\n      else\n        array << 4\n        count += 1\n      end\n    elsif\
    \ music_string[count] == '.'\n      array << 1\n      count += 2\n    else\n \
    \     count += 1\n    end\n  end\n  array\nend", "  beats = []\n  music_string.split('\
    \ ').each do |note|\n    beats << case note\n      when 'o' then 4\n      when\
    \ 'o|' then 2\n      when '.|' then 1\n    end\n  end\n  beats\nend", "  music_notes\
    \ = music_string.split(' ')\n  result = []\n  music_notes.each do |note|\n   \
    \ if note == 'o'\n      result << 4\n    elsif note == 'o|'\n      result << 2\n\
    \    elsif note == '.|'\n      result << 1\n    end\n  end\n  result\nend", " \
    \ beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split.map\
    \ { |note| beats[note] }\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n\
    \    '.|' => 1\n  }\n  music_string.split.map do |note|\n    beats[note]\n  end\n\
    end", "    music_array = music_string.scan(/\\w+|./)\n    output_array = []\n\
    \    music_array.each do |x|\n        if x == \"o\"\n            output_array\
    \ << 4\n        elsif x == \"o|\"\n            output_array << 2\n        elsif\
    \ x == \".|\"\n            output_array << 1\n        end\n    end\n    return\
    \ output_array\nend", "  music_string.scan(/\\s?(\\d?o|o|o\\||.\\|)\\s?/).map\
    \ { |note| note.first == 'o' ? 4 : note.first == 'o|' ? 2 : 1 }\nend", "  beat_values\
    \ = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').map{|value| beat_values[value]}\n\
    end", "  music_string.gsub(/^\\s+/, '').gsub(/\\s+$/, '').gsub(/\\s+/, ' ').split.map\
    \ do |s|\n    if s == 'o'\n      4\n    elsif s == 'o|'\n      2\n    elsif s\
    \ == '.|'\n      1\n    end\n  end\nend", "  time_array = []\n  music_string.split.each\
    \ do |beat|\n    if beat == \"o\"\n      time_array << 4\n    elsif beat == \"\
    o|\"\n      time_array << 2\n    elsif beat == \".|\"\n      time_array << 1\n\
    \    end\n  end\n  time_array\nend", "  #TODO: Return a list of integers corresponding\
    \ to how many beats does each note last.\n  #TODO: Return a list of integers corresponding\
    \ to how many beats does each note last.\n  \n  notes = music_string.scan(/[o\\\
    .]{1,3}|o\\|/)\n  notes.map do |note|\n    if note.count('o') == 1\n      4\n\
    \    elsif note.count('o') == 2\n      8\n    elsif note.count('o') == 3\n   \
    \   16\n    elsif note.count('.') == 1\n      1\n    elsif note.count('.') ==\
    \ 2\n      2\n    elsif note.count('.') == 3\n      3\n    end\n  end\nend", " \
    \ music_hash = {\"o\" => 4, \"o|\" => 2, \".|\" => 1}\n  music_array = music_string.split(\"\
    \ \")\n  beats_array = []\n  music_array.each do |note|\n    beats_array << music_hash[note]\n\
    \  end\n  beats_array\nend", "  @h = Hash.new(0)\n  music_string.each_char { |char|\
    \ \n    @h[char] += 1\n  }\n  # .map do |x|\n  #   if x == 'o'\n  #     return\
    \ 4\n  #   elsif x == 'o|'\n  #     return 2\n  #   elsif x == '.|'\n  #     return\
    \ 1\n  #   end\n  # end\n  # [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nend", "  beats\
    \ = []\n  music_string.split(\" \").each do |note|\n    if note == \"o\"\n   \
    \   beats << 4\n    elsif note == \"o|\"\n      beats << 2\n    elsif note ==\
    \ \".|\"\n      beats << 1\n    end\n  end\n  beats\nend", "  music_string.split.map\
    \ do |symbol|\n    case symbol\n    when 'o' then 4\n    when 'o|' then 2\n  \
    \  when '.|' then 1\n    end\n  end\nend", "  beats = music_string.split(\" \"\
    )\n  beats.map! do |note|\n    if note == \"o\"\n      4\n    elsif note == \"\
    o|\"\n      2\n    elsif note == \".|\"\n      1\n    end\n  end\n  beats\nend",
  "    music_string.split(' ').map do |i|\n        if i == 'o'\n            4\n  \
    \      elsif i == 'o|'\n            2\n        elsif i == '.|'\n            1\n\
    \        end\n    end\nend", "  beats = {\n    'o'  => 4,\n    'o|' => 2,\n  \
    \  '.|' => 1\n  }", "\tmusic_string.split(\" \").map do |x|\n\t\tcase x\n\t\t\
    when \"o\"\n\t\t\t4\n\t\twhen \"o|\"\n\t\t\t2\n\t\twhen \".|\"\n\t\t\t1\n\t\t\
    end\n\tend\nend", "  beats = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  music_string.gsub(/[\\\
    s+]/, '').scan(/o|o\\||\\.\\|/).map { |x| beats[x] }\nend", "  notes = music_string.split('\
    \ ')\n  arr = []\n  notes.each do |note|\n    if note.include?('o')\n      note.delete('o')\n\
    \      arr << 4\n    end\n    if note.include?('.')\n      note.delete('.')\n\
    \      arr << 1\n    end\n    if note.include?('|')\n      note.delete('|')\n\
    \      arr << 2\n    end\n  end\n  arr\nend", "  # TODO\nend", "  note_map = {'o'\
    \ => 4, 'o|' => 2, '.|' => 1}\n  music_string.split.map{|note| note_map[note]}\n\
    end", "  beats = []\n  music_string.split(' ').each do |note|\n    case note\n\
    \    when 'o'\n      beats << 4\n    when 'o|'\n      beats << 2\n    when '.|'\n\
    \      beats << 1\n    end\n  end\n  beats\nend", "  music_string.split(\" \"\
    ).map do |element|\n    case element\n    when \"o\"\n      4\n    when \"o|\"\
    \n      2\n    when \".|\"\n      1\n    end\n  end\nend", "  result = []\n  beats\
    \ = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split(' ').each do |note|\n\
    \    beats.each_pair do |beat, value|\n      if note == beat\n        result <<\
    \ value\n      end\n    end\n  end\n  result\nend", "  music_string.split(\" \"\
    ).map do |note|\n    case note\n    when \"o\"\n      4\n    when \"o|\"\n   \
    \   2\n    when \".|\"\n      1\n    end\n  end\nend", "  # TODO: implement me\n\
    end", "  index_str = ''\n  str = ''\n  tmp = ''\n  all_index = []\n  music_string.each_char\
    \ do |c|\n    if c == 'o'\n      index_str += '4'\n    elsif c == '|'\n      str\
    \ = '.' + str\n      index_str += '1'\n    elsif c == ' '\n      all_index <<\
    \ tmp\n      index_str += '2'\n    end\n    tmp = index_str\n  end\n  all_index\
    \ << tmp\n  all_index.map { |i| i.to_i }\nend", "  music_array = music_string.split\n\
    \  music_array.each_with_object([]) do |note, result|\n    case note\n    when\
    \ 'o' then result << 4\n    when 'o|' then result << 2\n    when '.|' then result\
    \ << 1\n    end\n  end\nend", "  result = []\n  music_string.split(' ').each do\
    \ |element|\n    case element\n    when 'o'\n      result << 4\n    when 'o|'\n\
    \      result << 2\n    when '.|'\n      result << 1\n    end\n  end\n  result\n\
    end", "  arr = music_string.split(\" \")\n  arr.map do |i|\n    if i == \"o\"\n\
    \      4\n    elsif i == \"o|\"\n      2\n    elsif i == \".|\"\n      1\n   \
    \ end\n  end\nend", "  # Write your code here...\n  result = []\n  music_string.split.each\
    \ do |note|\n    if note == 'o'\n      result << 4\n    elsif note == 'o|'\n \
    \     result << 2\n    elsif note == '.|'\n      result << 1\n    end\n  end\n\
    \  result\nend", "  beats = music_string.split(/\\s+/)\n  array = []\n  beats.each\
    \ do |x|\n    if x == \"o\"\n      array << 4\n    elsif x == \"o|\"\n      array\
    \ << 2\n    elsif x == \".|\"\n      array << 1\n    end\n  end\n  array\nend",
  "  beats = []\n  music_string.split(' ').each do |note|\n    if note.include? 'o'\n\
    \      beats << 4\n    elsif note.include? '|'\n      beats << 2\n    else\n \
    \     beats << 1\n    end\n  end\n  beats\nend", "  music_array = music_string.split(\"\
    \ \")\n  beats_array = Array.new\n  music_array.each do |note|\n    if note ==\
    \ \"o\"\n      beats_array << 4\n    elsif note == \"o|\"\n      beats_array <<\
    \ 2\n    elsif note == \".|\"\n      beats_array << 1\n    end\n  end\n  beats_array\n\
    end", "  music_string.split.map { |note| note == 'o' ? 4 : 2 }\nend", "    array\
    \ = Array.new\n    music_string.gsub(/\\s+/, \"\").chars.each do |char|\n    \
    \    if char == 'o'\n            array.push(4)\n        elsif char == 'o|'\n \
    \           array.push(2)\n        elsif char == '.|'\n            array.push(1)\n\
    \        end\n    end\n    return array\nend", "  (music_string.gsub('o', '4').gsub('o|',\
    \ '2').gsub('.|', '1').split).map(&:to_i)\nend", end, "  output = []\n  music_array\
    \ = music_string.split(\" \")\n  music_array.each do |note|\n    if note == \"\
    o\"\n      output << 4\n    elsif note == \"o|\"\n      output << 2\n    elsif\
    \ note == \".|\"\n      output << 1\n    end\n  end\n  return output\nend", " \
    \ map = {'o' => 4, 'o|' => 2, '.|' => 1}\n  music_string.split.collect{|note|\
    \ map[note]}\nend", "  music_string.split(\" \").map { |note|\n    case note\n\
    \    when \"o\" then 4\n    when \"o|\" then 2\n    when \".|\" then 1\n    end\n\
    \  }\nend", "  beats = []\n  music_string.split(\" \").each do |note|\n    if\
    \ note == \"o\"\n      beats << 4\n    elsif note == \"o|\"\n      beats << 2\n\
    \    elsif note == \".|\"\n      beats << 1\n    end\n  end\n  beats\nend", " \
    \   music_string.scan(/(o|o\\||\\.\\|)/).map do |x|\n      x[0] == 'o' ? 4 : 2\n\
    \    end\nend", "\tstring = music_string.split(\" \")\n\tarr = []\n\tstring.each\
    \ do |s|\n\t\tcase s\n\t\twhen \"o\"\n\t\t\tarr << 4\n\t\twhen \"o|\"\n\t\t\t\
    arr << 2\n\t\twhen \".|\"\n\t\t\tarr << 1\n\t\tend\n\tend\n\treturn arr\nend",
  "  beats = Hash.new(1)\n  beats[\"o\"] = 4\n  beats[\"o|\"] = 2\n  beats[\".|\"\
    ] = 1\n  music_string.split(\" \").map { |x| beats[x] }\nend", "  result = []\n\
    \  count = 1\n  music_string.split(' ').each do |note|\n    if note == 'o'\n \
    \     result << 4\n    elsif note == 'o|'\n      result << 2\n    elsif note ==\
    \ '.|'\n      result << 1\n    end\n  end\n  result\nend", end, "  return [] if\
    \ music_string.nil? || music_string.empty?\n  # It is better to handle special\
    \ cases of 'o|' and '.|' in the beginning\n  # of the string with regexp, so every\
    \ character in input string will be\n  # single 'o'\n  music_string.gsub!(/o\\\
    |/, \"\")\n  music_string.gsub!(/\\.\\|/, \"\")\n  notes = music_string.split(\"\
    \ \")\n  notes.map { |n|\n    if n.start_with?(\"o\")\n      n.length\n    else\n\
    \      1\n    end\n  }\nend", "  # Your code goes here\nend", "  beats = []\n\
    \  bars = []\n  bars = music_string.split(\" \")\n  bars.each do |bar|\n    case\
    \ bar\n    when \"o\"\n      beats << 4\n    when \"o|\"\n      beats << 2\n \
    \   when \".|\"\n      beats << 1\n    end\n  end\n  beats\nend", "\tnote_arr\
    \ = music_string.split\n\tnote_arr.map do |notes|\n\t\tif notes == \"o\"\n\t\t\
    \treturn 4\n\t\telsif notes == \"o|\"\n\t\t\treturn 2\n\t\telsif notes == \".|\"\
    \n\t\t\treturn 1\n\t\tend\n\tend\nend", end, "  notes = []\n  beats = { 'o' =>\
    \ 4, 'o|' => 2, '.|' => 1 }\n  music_string.split.each do |note|\n    notes <<\
    \ beats[note]\n  end\n  notes\nend", "  s = music_string.split(\" \")\n  beats\
    \ = []\n  for i in 0..s.length-1\n    if s[i] == \"o\"\n      beats.push(4)\n\
    \    elsif s[i] == \"o|\"\n      beats.push(2)\n    elsif s[i] == \".|\"\n   \
    \   beats.push(1)\n    end\n  end\n  return beats\nend", "  notes = {\n    \"\
    o\" => 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n  arr = music_string.split(\"\
    \ \")\n  arr.map { |note| notes[note] }\nend", "  music_string.scan(/o/).map {\
    \ 4 } + music_string.scan(/o\\|/).map { 2 } + music_string.scan(/\\.\\|/).map\
    \ { 1 }\nend", "  # TODO: Parse input string and return an array of integers representing\
    \ beats.\n  result = []\n  music_string.split.each do |element|\n    if element\
    \ == 'o'\n      result << 4\n    elsif element == 'o|'\n      result << 2\n  \
    \  elsif element == '.|'\n      result << 1\n    end\n  end\n  result\nend", " \
    \ map = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split('\
    \ ').map { |n| map[n] }\nend", "  a = music_string.scan(/o|o|\\.|/).map do |x|\n\
    \    if x == \"o\"\n      4\n    elsif x == \"o|\"\n      2\n    elsif x == \"\
    .|\"\n      1\n    end\n  end\n  a\nend", "  music_string.split.map do |char|\n\
    \    if char == 'o'\n      4\n    elsif char == 'o|'\n      2\n    elsif char\
    \ == '.|'\n      1\n    end\n  end\nend", "  music_string.split(' ').map { |note|\
    \ note.size }\nend", "  # your code goes here\nend", "  beats = {'o' => 4, 'o|'\
    \ => 2, '.|' => 1}\n  arr = music_string.split(' ')\n  arr.map { |x| beats[x]\
    \ }\nend", "  return_arr = []\n  beat_s = \"\"\n  music_string.split(\" \").each\
    \ do |str|\n    if str.length == 1\n      return_arr << 4\n    elsif str.length\
    \ == 2\n      return_arr << 2\n    elsif str.length == 3\n      return_arr <<\
    \ 1\n    end\n  end\n  return_arr\nend", "  arr = music_string.split(\" \")\n\
    \  arr.map { |i| i.length == 1 ? 4 : 2 }\nend", "  beats = []\n  notes = music_string.split\n\
    \  notes.each do |note|\n    beats << 4 if note == 'o'\n    beats << 2 if note\
    \ == 'o|'\n    beats << 1 if note == '.|'\n  end\n  beats\nend", "  array = music_string.split('')\n\
    \  beats = []\n  array.each do |note|\n    if note == 'o'\n      beats << 4\n\
    \    elsif note == 'o|'\n      beats << 2\n    elsif note == '.|'\n      beats\
    \ << 1\n    else\n      beats << 0\n    end\n  end\n  beats\nend", "  # Your code\
    \ here\n  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split.map\
    \ { |string| beats[string] }\nend", "  # your code goes here\n  music_array =\
    \ music_string.split(' ')\n  music_array.map do |el|\n    if el == 'o'\n     \
    \ 4\n    elsif el == 'o|'\n      2\n    elsif el == '.|'\n      1\n    end\n \
    \ end\nend", "  res = []\n  music_string.split(' ').each do |notes|\n    if notes\
    \ == 'o'\n      res << 4\n    elsif notes == 'o|'\n      res << 2\n    elsif notes\
    \ == '.|'\n      res << 1\n    end\n  end\n  res\nend", "  beats = []\n  music_string.split(\"\
    \ \").each do |note|\n    beats << 4 if note == \"o\"\n    beats << 2 if note\
    \ == \"o|\"\n    beats << 1 if note == \".|\"\n  end\n  beats\nend", "  # your\
    \ code goes here\nend", "  h = {'o' => 4, 'o|' => 2, '.|' => 1}\n  notes = music_string.scan(/o|o\\\
    ||\\.\\|/)\n  notes.map { |note| h[note] }\nend", "  notes = music_string.split('\
    \ ')\n  beats = []\n  notes.each do |note|\n    if note == 'o'\n      beats <<\
    \ 4\n    elsif note == 'o|'\n      beats << 2\n    elsif note == '.|'\n      beats\
    \ << 1\n    end\n  end\n  beats\nend", "  # your code goes here...\nend", "  music_arr\
    \ = music_string.split(\" \")\n  music_arr.map do |music|\n    case music\n  \
    \  when \"o\"\n      4\n    when \"o|\"\n      2\n    when \".|\"\n      1\n \
    \   end\n  end\nend", end, "  return [] if music_string.nil?\n  notes = music_string.split\n\
    \  parsed_notes = []\n  notes.each do |note|\n    if note.include? 'o'\n     \
    \ note.length == 1 ? parsed_notes << 4 : parsed_notes << 2\n    else\n      parsed_notes\
    \ << 1\n    end\n  end\n  parsed_notes\nend", "  notes = {\"o\" => 4, \"o|\" =>\
    \ 2, \".|\" => 1}\n  music_string.split(\" \").map{|note| notes[note]}\nend",
  "\tmusic_array = music_string.split(\" \")\n\tnote_array = []\n\t\n\tmusic_array.each\
    \ do |n|\n\t\tif n == \"o\"\n\t\t\tnote_array << 4\n\t\telsif n == \"o|\"\n\t\t\
    \tnote_array << 2\n\t\telsif n == \".|\"\n\t\t\tnote_array << 1\n\t\tend\n\tend\n\
    \t\n\treturn note_array\nend", "    music_array = music_string.split(\" \")\n\
    \    beats_array = []\n    music_array.each do |note|\n        if note == \"o\"\
    \n            beats_array << 4\n        elsif note == \"o|\"\n            beats_array\
    \ << 2\n        elsif note == \".|\"\n            beats_array << 1\n        end\n\
    \    end\n    beats_array\nend", "  beats = []\n  music_string.scan(/\\S+/) do\
    \ |note|\n    if note.include?('|')\n      if note.size == 2\n        beats <<\
    \ 2\n      else\n        beats << 1\n      end\n    else\n      beats << 4\n \
    \   end\n  end\n  beats\nend", "  # your solution here\n  music_string.split(\"\
    \ \").map { |music|\n    case music\n    when \"o\"\n      4\n    when \"o|\"\n\
    \      2\n    when \".|\"\n      1\n    end\n  }\nend", "  # YOUR CODE HERE\n\
    end", "  beats = []\n  music_string.split.each do |note|\n    beats << (note ==\
    \ 'o' ? 4 : 2)\n  end\n  beats\nend", "  lenght = music_string.split(\" \")\n\
    \  lenght.map! do |x|\n    if x == \"o\"\n      4\n    elsif x == \"o|\"\n   \
    \   2\n    elsif x == \".|\"\n      1\n    end\n  end\nend", "  # TODO: your code\
    \ here\nend", "  beats = []\n  music_string.split(' ').each do |note|\n    if\
    \ note == 'o'\n      beats << 4\n    elsif note == 'o|'\n      beats << 2\n  \
    \  elsif note == '.|'\n      beats << 1\n    end\n  end\n  beats\nend", "  result\
    \ = []\n  music_array = music_string.split(' ')\n  music_array.each do |el|\n\
    \    if el == 'o'\n      result << 4\n    elsif el == 'o|'\n      result << 2\n\
    \    elsif el == '.|'\n      result << 1\n    end\n  end\n  result\nend", "  hash\
    \ = {'o' => 4, 'o|' => 2, '.|' => 1}\n  notes = music_string.split(' ')\n  notes.map\
    \ { |note| hash[note] }\nend", "  hash = {\n    'o' => 4,\n    'o|' => 2,\n  \
    \  '.|' => 1\n  }\n  array = music_string.split(' ')\n  array.map { |element|\
    \ hash[element] }\nend", "  beats = {\"o\" => 4, \"o|\" => 2, \".|\" => 1}\n \
    \ music_string.split(\" \").map { |note| beats[note] }\nend", "  music_string.split.map\
    \ { |nota|\n    case nota\n    when 'o'\n      4\n    when 'o|'\n      2\n   \
    \ when '.|'\n      1\n    end\n  }\nend", "  notes = music_string.split(\" \"\
    )\n  notes.map { |n|\n    if n.eql?('o')\n      4\n    elsif n.eql?('o|')\n  \
    \    2\n    elsif n.eql?('.|')\n      1\n    end\n  }\nend", "  # TODO: implement\
    \ this method\n  # Use this string to create an array\n  array = music_string.split(\"\
    \ \")\n  new_array = []\n  array.each do |beat|\n    if beat == \"o\"\n      new_array\
    \ << 4\n    elsif beat == \"o|\"\n      new_array << 2\n    elsif beat == \".|\"\
    \n      new_array << 1\n    end\n  end\n  return new_array\nend", "  beat_per_note\
    \ = { 'o' => 4, 'o|' => 2, '.|' => 1 }\n  music_string.split.map { |note| beat_per_note[note]\
    \ }\nend", "  notes = music_string.split(' ')\n  notes.map do |note|\n    if note\
    \ == 'o'\n      4\n    elsif note.include? 'o'\n      2\n    else\n      1\n \
    \   end\n  end\nend", "  beats = {\n    \"o\" => 4,\n    \"o|\" => 2,\n    \"\
    .|\" => 1\n  }\n  music_string.split.map do |note|\n    beats[note]\n  end\nend",
  "  music_string.split(\" \").map do |str|\n    case str\n    when \"o\"\n      4\n\
    \    when \"o|\"\n      2\n    when \".|\"\n      1\n    end\n  end\nend", " \
    \ beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split.map\
    \ { |e| beats[e] }\nend", "  # Your code goes here\n  music_string.split(\" \"\
    ).map do |m|\n    case m\n    when \"o\"\n      4\n    when \"o|\"\n      2\n\
    \    when \".|\"\n      1\n    end\n  end\nend", "  map = {\n    'o' => 4,\n \
    \   'o|' => 2,\n    '.|' => 1\n  }\n  beats = []\n  music_string.split(' ').each\
    \ do |note|\n    beats << map[note]\n  end\n  beats\nend", "  beats = music_string.split('\
    \ ')\n  beats.map do |beat|\n    if beat == 'o'\n      4\n    elsif beat == 'o|'\n\
    \      2\n    elsif beat == '.|'\n      1\n    end\n  end\nend", "  beats = {\n\
    \    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.scan(/o(?:\\\
    || o)/).map { |note| beats[note] }\nend", "  beat_values = {\n    'o' => 4,\n\
    \    'o|' => 2,\n    '.|' => 1\n  }\n  music_string.split.map do |n|\n    beat_values[n]\n\
    \  end\nend", "  music_array = []\n  music_string.split.each do |note|\n    if\
    \ note == 'o'\n      music_array << 4\n    elsif note == 'o|'\n      music_array\
    \ << 2\n    elsif note == '.|'\n      music_array << 1\n    end\n  end\n  return\
    \ music_array\nend", "  beats = {'o' => 4, 'o|' => 2, '.|' => 1}\n  arr = music_string.split(\"\
    \ \")\n  new_arr = []\n  arr.each do |note|\n    new_arr << beats[note]\n  end\n\
    \  new_arr\nend", "  beats = music_string.split(' ')\n  beats.each_with_object([])\
    \ do |beat, result|\n    case beat\n    when 'o'\n      result << 4\n    when\
    \ 'o|'\n      result << 2\n    when '.|'\n      result << 1\n    end\n  end\n\
    end", "  pattern = /([o\\.])\\|?/\n  music_string.scan(pattern).flatten.map do\
    \ |element|\n    if element == 'o'\n      4\n    else\n      1\n    end\n  end\n\
    end", "  beats = {\n    \"o\" => 4,\n    \"o|\" => 2,\n    \".|\" => 1\n  }\n\
    \  music_string.split.map { |note| beats[note] }\nend", "  beats = []\n  music_string.split('\
    \ ').each do |s|\n    beats << 4 if s == 'o'\n    beats << 2 if s == 'o|'\n  \
    \  beats << 1 if s == '.|'\n  end\n  beats\nend", "  array_of_notes = music_string.split(\"\
    \ \")\n  array_of_notes.map! do |note|\n    if note == \"o\"\n      4\n    elsif\
    \ note == \"o|\"\n      2\n    elsif note == \".|\"\n      1\n    end\n  end\n\
    end", "  music_string.split(' ').map { |note| note.gsub('.', '').size }\nend",
  "  music_string.gsub(/.\\|/, '|').gsub(/o/,'oooo').gsub(/o\\|/,'oo').gsub(/\\.\\\
    |/,'o').split('').map { |x|\n    if (x == 'o') then 1\n    elsif (x == 'o') then\
    \ 1\n    elsif (x == 'o') then 1\n    elsif (x == 'o') then 1\n    end\n  }\n\
    end", "  beats = []\n  music_string.split(\" \").each do |note|\n    beats <<\
    \ (4 if note == \"o\")\n    beats << (2 if note == \"o|\")\n    beats << (1 if\
    \ note == \".|\")\n  end\n  beats\nend", "  #TODO\nend", "  music_string.split('\
    \ ').map { |note| beats(note) }\nend", "  beats = {\n    'o' => 4,\n    'o|' =>\
    \ 2,\n    '.|' => 1\n  }\n  music_string.split(' ').map do |beat|\n    beats[beat]\n\
    \  end\nend", "  beats = {\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  }\n\
    \  parsed_music = []\n  music_string.split.each do |note|\n    parsed_music <<\
    \ beats[note]\n  end\n  parsed_music\nend", "  music_string.split.map do |note|\n\
    \    case note\n    when 'o' then 4\n    when 'o|' then 2\n    when '.|' then\
    \ 1\n    end\n  end\nend"]
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

language: rb
name: HumanEval_22_filter_integers
results:
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |v| v.is_a? Integer\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpet72ijni

    Started

    .

    Finished in 0.000772701 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1294.16 tests/s, 3882.48 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 1
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  filter_fn = Fn.new do |x|\n    x.is_a?(Integer)\n\
    \  end\n  values.select { |x| filter_fn.call(x) }\nend\nrequire 'test/unit'\n\
    class TestHumanEval < Test::Unit::TestCase\n  def test_filter_integers\n    candidate\
    \ = method(:filter_integers)\n    assert_equal([], candidate.call([]))\n    assert_equal([4,\
    \ 9], candidate.call([4, {}, [], 23.2, 9, \"adasd\"]))\n    assert_equal([3, 3,\
    \ 3], candidate.call([3, \"c\", 3, 3, \"a\", \"b\"]))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpph6ndm4p\nStarted\nE\n===============================================================================\n\
    Error: test_filter_integers(TestHumanEval):\n  NameError: uninitialized constant\
    \ Fn\n  \n    filter_fn = Fn.new do |x|\n                ^^\n/tmp/tmpph6ndm4p.rb:7:in\
    \ `filter_integers'\n/tmp/tmpph6ndm4p.rb:16:in `call'\n/tmp/tmpph6ndm4p.rb:16:in\
    \ `test_filter_integers'\n     13: class TestHumanEval < Test::Unit::TestCase\n\
    \     14:   def test_filter_integers\n     15:     candidate = method(:filter_integers)\n\
    \  => 16:     assert_equal([], candidate.call([]))\n     17:     assert_equal([4,\
    \ 9], candidate.call([4, {}, [], 23.2, 9, \"adasd\"]))\n     18:     assert_equal([3,\
    \ 3, 3], candidate.call([3, \"c\", 3, 3, \"a\", \"b\"]))\n     19:   end\n===============================================================================\n\
    \nFinished in 0.007084748 seconds.\n-------------------------------------------------------------------------------\n\
    1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n\
    0% passed\n-------------------------------------------------------------------------------\n\
    141.15 tests/s, 0.00 assertions/s\n"
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |i| i.is_a?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp0lg2t4kn

    Started

    .

    Finished in 0.000693902 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1441.13 tests/s, 4323.38 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n\tvalues.select { |val| val.is_a? Integer\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp9i_9k404

    Started

    .

    Finished in 0.00093108 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1074.02 tests/s, 3222.06 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.filter { |e| e.is_a?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpx6i2xg30

    Started

    .

    Finished in 0.001252222 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    798.58 tests/s, 2395.74 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |x| x.kind_of?(Fixnum)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp0503ixon

    Started

    .

    Finished in 0.001311686 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    762.38 tests/s, 2287.13 assertions/s

    '
  stdout: '/tmp/tmp0503ixon.rb:7: warning: constant ::Fixnum is deprecated

    '
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  return values.select { |value| value.is_a?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpsese_3f3

    Started

    .

    Finished in 0.000872137 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1146.61 tests/s, 3439.83 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |v| v.is_a? Integer\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpet72ijni

    Started

    .

    Finished in 0.000772701 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1294.16 tests/s, 3882.48 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.filter { |value| value.is_a?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpsscv6pql

    Started

    .

    Finished in 0.001436598 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    696.09 tests/s, 2088.27 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 1
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  filter_numbers.call(values).select{|v|\
    \ v.is_a?(Fixnum)}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpid8q5g7f\nStarted\nE\n===============================================================================\n\
    Error: test_filter_integers(TestHumanEval):\n  NameError: undefined local variable\
    \ or method `filter_numbers' for #<TestHumanEval:0x00002b44a59d5908 @method_name=\"\
    test_filter_integers\", @internal_data=#<Test::Unit::TestCase::InternalData:0x00002b44a59d5868\
    \ @start_time=2022-08-06 17:58:35.642104911 -0400, @elapsed_time=nil, @passed=false,\
    \ @interrupted=true, @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00002b44a5a073e0\
    \ @assertion_count=0, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00002b44a5b05c10\
    \ @test_name=\"test_filter_integers(TestHumanEval)\", @exception=#<NameError:\
    \ undefined local variable or method `filter_numbers' for #<TestHumanEval:0x00002b44a59d5908\
    \ ...>\n  \n    filter_numbers.call(values).select{|v| v.is_a?(Fixnum)}\n    ^^^^^^^^^^^^^^\n\
    \  Did you mean?  filter_integers>, @method_name=\"test_filter_integers\">], @stop_tag=#<Object:0x00002b44a5a06a08>,\
    \ @failures=[], @errors=[#<Test::Unit::Error:0x00002b44a5b05c10 @test_name=\"\
    test_filter_integers(TestHumanEval)\", @exception=#<NameError: undefined local\
    \ variable or method `filter_numbers' for #<TestHumanEval:0x00002b44a59d5908 ...>\n\
    \  \n    filter_numbers.call(values).select{|v| v.is_a?(Fixnum)}\n    ^^^^^^^^^^^^^^\n\
    \  Did you mean?  filter_integers>, @method_name=\"test_filter_integers\">], @pendings=[],\
    \ @omissions=[], @notifications=[], @channels={\"Test::Unit::TestResult::FINISHED\"\
    =>{#<Test::Unit::Util::ProcWrapper:0x00002b44a5a067d8 @a_proc=#<Proc:0x00002b44a5a06800\
    \ /home/a.guha/.conda/envs/polyglot/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=47573836523520>=>#<Proc:0x00002b44a5a06800 /home/a.guha/.conda/envs/polyglot/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnerme"
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |value| value.is_a?(Fixnum)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpdkrzlezx

    Started

    .

    Finished in 0.000907177 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1102.32 tests/s, 3306.96 assertions/s

    '
  stdout: '/tmp/tmpdkrzlezx.rb:7: warning: constant ::Fixnum is deprecated

    '
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |v| v.is_a? Integer\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpet72ijni

    Started

    .

    Finished in 0.000772701 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1294.16 tests/s, 3882.48 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  result = []\n  values.each do |value|\n\
    \    if value.is_a?(Integer)\n      result << value\n    end\n  end\n  result\n\
    end\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_filter_integers\n\
    \    candidate = method(:filter_integers)\n    assert_equal([], candidate.call([]))\n\
    \    assert_equal([4, 9], candidate.call([4, {}, [], 23.2, 9, \"adasd\"]))\n \
    \   assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3, \"a\", \"b\"]))\n\
    \  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp99r1ao1x

    Started

    .

    Finished in 0.000858497 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1164.83 tests/s, 3494.48 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |value| value.is_a?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpsw5hh4dx

    Started

    .

    Finished in 0.000742007 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1347.70 tests/s, 4043.09 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.delete_if { |v| !v.kind_of?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpok315w29

    Started

    .

    Finished in 0.000845802 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1182.31 tests/s, 3546.93 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |value| value.is_a?(Integer)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpsw5hh4dx

    Started

    .

    Finished in 0.000742007 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1347.70 tests/s, 4043.09 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  values.select { |v| v.is_a?(Fixnum)\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmppjfoaost

    Started

    .

    Finished in 0.000757754 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1319.69 tests/s, 3959.07 assertions/s

    '
  stdout: '/tmp/tmppjfoaost.rb:7: warning: constant ::Fixnum is deprecated

    '
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n    values.select { |value| value.is_a?\
    \ Integer }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n\
    \  def test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmpkxs_2xwm

    Started

    .

    Finished in 0.000896027 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    1116.04 tests/s, 3348.11 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 0
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n\tvalues.filter { |v| v.is_a? Integer\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: OK
  stderr: 'Loaded suite /tmp/tmp0lxujqnk

    Started

    .

    Finished in 0.001158326 seconds.

    -------------------------------------------------------------------------------

    1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications

    100% passed

    -------------------------------------------------------------------------------

    863.31 tests/s, 2589.94 assertions/s

    '
  stdout: ''
  timestamp: 1659823115
- exit_code: 1
  program: "# Filter given array of any rbthon values only for integers\n# >>> filter_integers.call([\"\
    a\", 3.14, 5])\n# [5]\n# >>> filter_integers.call([1, 2, 3, \"abc\", {}, []])\n\
    # [1, 2, 3]\ndef filter_integers(values)\n  filter(values) { |v| type?(v) == INTEGER\
    \ }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def\
    \ test_filter_integers\n    candidate = method(:filter_integers)\n    assert_equal([],\
    \ candidate.call([]))\n    assert_equal([4, 9], candidate.call([4, {}, [], 23.2,\
    \ 9, \"adasd\"]))\n    assert_equal([3, 3, 3], candidate.call([3, \"c\", 3, 3,\
    \ \"a\", \"b\"]))\n  end\nend\n"
  status: Exception
  stderr: ''
  stdout: "Loaded suite /tmp/tmpb2pmk8px\nStarted\nE\n===============================================================================\n\
    Error: test_filter_integers(TestHumanEval):\n  NoMethodError: undefined method\
    \ `filter' for #<TestHumanEval:0x00002ac87ce4d7b0 @method_name=\"test_filter_integers\"\
    , @internal_data=#<Test::Unit::TestCase::InternalData:0x00002ac87ce4d760 @start_time=2022-08-06\
    \ 17:58:35.642235456 -0400, @elapsed_time=nil, @passed=false, @interrupted=true,\
    \ @test_data_label=nil, @test_data=nil>, @_result=#<Test::Unit::TestResult:0x00002ac87ce83388\
    \ @assertion_count=0, @pass_count=0, @run_count=0, @summary_generators=[:failure_summary,\
    \ :error_summary, :pending_summary, :omission_summary, :notification_summary],\
    \ @problem_checkers=[:failure_occurred?, :error_occurred?], @faults=[#<Test::Unit::Error:0x00002ac87cf81bb8\
    \ @test_name=\"test_filter_integers(TestHumanEval)\", @exception=#<NoMethodError:\
    \ undefined method `filter' for #<TestHumanEval:0x00002ac87ce4d7b0 ...>\n  \n\
    \    filter(values) { |v| type?(v) == INTEGER }\n    ^^^^^^>, @method_name=\"\
    test_filter_integers\">], @stop_tag=#<Object:0x00002ac87ce82960>, @failures=[],\
    \ @errors=[#<Test::Unit::Error:0x00002ac87cf81bb8 @test_name=\"test_filter_integers(TestHumanEval)\"\
    , @exception=#<NoMethodError: undefined method `filter' for #<TestHumanEval:0x00002ac87ce4d7b0\
    \ ...>\n  \n    filter(values) { |v| type?(v) == INTEGER }\n    ^^^^^^>, @method_name=\"\
    test_filter_integers\">], @pendings=[], @omissions=[], @notifications=[], @channels={\"\
    Test::Unit::TestResult::FINISHED\"=>{#<Test::Unit::Util::ProcWrapper:0x00002ac87ce82730\
    \ @a_proc=#<Proc:0x00002ac87ce82758 /home/a.guha/.conda/envs/polyglot/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>,\
    \ @hash=47040577415000>=>#<Proc:0x00002ac87ce82758 /home/a.guha/.conda/envs/polyglot/lib/ruby/gems/3.1.0/gems/test-unit-3.5.3/lib/test/unit/ui/testrunnermediator.rb:88>},\
    \ \"Test::Unit::TestResult::CHANGED\"=>{#<Test::Unit::Util::ProcWrapper:0x00002ac87ce81f88\
    \ @a_proc=#<Proc:0x00002ac87ce81fb0 /home/a.guha/.conda/envs/polyglot/lib"
  timestamp: 1659823115

name: HumanEval_31_is_prime
language: rb
prompt: "# Return true if a given number is prime, and false otherwise.\n# >>> is_prime.call(6)\n\
  # false\n# >>> is_prime.call(101)\n# true\n# >>> is_prime.call(11)\n# true\n# >>>\
  \ is_prime.call(13441)\n# true\n# >>> is_prime.call(61)\n# true\n# >>> is_prime.call(4)\n\
  # false\n# >>> is_prime.call(1)\n# false\ndef is_prime(n)\n"
tests: "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_prime\n\
  \    candidate = method(:is_prime)\n    assert_equal(false, candidate.call(6))\n\
  \    assert_equal(true, candidate.call(101))\n    assert_equal(true, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(13441))\n    assert_equal(true, candidate.call(61))\n\
  \    assert_equal(false, candidate.call(4))\n    assert_equal(false, candidate.call(1))\n\
  \    assert_equal(true, candidate.call(5))\n    assert_equal(true, candidate.call(11))\n\
  \    assert_equal(true, candidate.call(17))\n    assert_equal(false, candidate.call(85))\n\
  \    assert_equal(false, candidate.call(77))\n    assert_equal(false, candidate.call(255379))\n\
  \  end\nend\n"
completions: []
stop_tokens:
- "\nclass"
- "\ndef"
- "\n#"
- "\n\n"

name: HumanEval_35_max_element
language: rust
results:
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkjbm_2jl.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqsv_0t0x.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|v| v).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpiujt3mgj.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|v|\
    \ v).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|v|\
    \ v).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmph0h24ung.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmph0h24ung.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: Option<isize> = None;\n\
    \    for i in l.iter() {\n        if let Some(max) = max.filter(|&b| b < i) {\
    \ max = Some(i); }\n    }\n    max.unwrap_or(l.iter().max().unwrap())\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp191sm_nn.rs:9:48\n  |\n9 |\
    \         if let Some(max) = max.filter(|&b| b < i) { max = Some(i); }\n  |  \
    \                                              ^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if let Some(max)\
    \ = max.filter(|&b| b < *i) { max = Some(i); }\n  |                          \
    \                      +\n\nerror[E0308]: mismatched types\n --> /tmp/tmp191sm_nn.rs:9:59\n\
    \  |\n9 |         if let Some(max) = max.filter(|&b| b < i) { max = Some(i); }\n\
    \  |                     ---                                   ^^^^^^^ expected\
    \ `isize`, found enum `Option`\n  |                     |\n  |               \
    \      expected due to the type of this binding\n  |\n  = note: expected type\
    \ `isize`\n             found enum `Option<&isize>`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp191sm_nn.rs:11:19\n   |\n11 |     max.unwrap_or(l.iter().max().unwrap())\n\
    \   |                   ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n11 |     max.unwrap_or(*l.iter().max().unwrap())\n\
    \   |                   +\n\nerror: aborting due to 3 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.is_empty() {\n        l.len()\n\
    \    } else {\n        let mut max = l.iter().fold(0, |a, b| a.cmp(b).max());\n\
    \        l.iter().skip(max - 1).fold(max, |a, b| a.cmp(b).max())\n    }\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3r3dat1x.rs:8:9\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     if l.is_empty() {\n\
    8 |         l.len()\n  |         ^^^^^^^ expected `isize`, found `usize`\n  |\n\
    help: you can convert a `usize` to an `isize` and panic if the converted value\
    \ doesn't fit\n  |\n8 |         l.len().try_into().unwrap()\n  |             \
    \   ++++++++++++++++++++\n\nerror[E0061]: this function takes 1 argument but 0\
    \ arguments were supplied\n   --> /tmp/tmp3r3dat1x.rs:10:56\n    |\n10  |    \
    \     let mut max = l.iter().fold(0, |a, b| a.cmp(b).max());\n    |          \
    \                                              ^^^- supplied 0 arguments\n   \
    \ |                                                        |\n    |          \
    \                                              expected 1 argument\n    |\nnote:\
    \ associated function defined here\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3r3dat1x.rs:10:47\n\
    \   |\n10 |         let mut max = l.iter().fold(0, |a, b| a.cmp(b).max());\n \
    \  |                                               ^^^^^^^^^^^^^^ expected `isize`,\
    \ found enum `std::cmp::Ordering`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3r3dat1x.rs:11:23\n\
    \   |\n11 |         l.iter().skip(max - 1).fold(max, |a, b| a.cmp(b).max())\n\
    \   |                       ^^^^^^^ expected `usize`, found `isize`\n   |\nhelp:\
    \ you can convert an `isize` to a `usize` and panic if the converted value doesn't\
    \ fit\n   |\n11 |         l.iter().skip((max - 1).try_into().unwrap()).fold(max,\
    \ |a, b| a.cmp(b).max())\n   |                       +       +++++++++++++++++++++\n\
    \nerror[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmp3r3dat1x.rs:11:58\n    |\n11  |         l.iter().skip(max - 1).fold(max,\
    \ |a, b| a.cmp(b).max())\n    |                                              \
    \            ^^^- supplied 0 arguments\n    |                                \
    \                          |\n    |                                          \
    \                expected 1"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        l.len()\n\
    \    } else {\n        let mut max = l.iter().max().unwrap();\n        let mut\
    \ i = 0;\n        while i <= l.len() {\n            if l[i] > max {\n        \
    \        max = l[i];\n            }\n            i += 1;\n        }\n        max\n\
    \    }\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjn_5gmja.rs:8:9\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     if l.len() == 0 {\n\
    8 |         l.len()\n  |         ^^^^^^^ expected `isize`, found `usize`\n  |\n\
    help: you can convert a `usize` to an `isize` and panic if the converted value\
    \ doesn't fit\n  |\n8 |         l.len().try_into().unwrap()\n  |             \
    \   ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjn_5gmja.rs:13:23\n\
    \   |\n13 |             if l[i] > max {\n   |                       ^^^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    13 |             if l[i] > *max {\n   |                       +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpjn_5gmja.rs:14:23\n   |\n10 |         let mut\
    \ max = l.iter().max().unwrap();\n   |                       -----------------------\
    \ expected due to this value\n...\n14 |                 max = l[i];\n   |    \
    \                   ^^^^\n   |                       |\n   |                 \
    \      expected `&isize`, found `isize`\n   |                       help: consider\
    \ borrowing here: `&l[i]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpjn_5gmja.rs:18:9\n\
    \   |\n6  | fn max_element(l: Vec<isize>) -> isize {\n   |                   \
    \               ----- expected `isize` because of return type\n...\n18 |     \
    \    max\n   |         ^^^ expected `isize`, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n18 |         *max\n   |         +\n\nerror:\
    \ aborting due to 4 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.is_empty() {\n        return\
    \ std::isize::MAX;\n    }\n\n    let mut largest = l[0];\n    for i in 1..l.len()\
    \ {\n        let v = l[i];\n        if largest < v {\n            largest = v;\n\
    \        }\n    }\n    largest\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd6i_7dpb.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpd6i_7dpb.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjegfb6uq.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpjegfb6uq.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4skhfem6.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_idx\
    \ = -1;\n    for i in 0..l.len() {\n        if l[i] > max {\n            max =\
    \ l[i];\n            max_idx = i;\n        }\n    }\n    return max;\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0277]: the trait bound `usize: Neg` is not satisfied\n --> /tmp/tmpa0yejk3h.rs:8:23\n\
    \  |\n8 |     let mut max_idx = -1;\n  |                       ^^ the trait `Neg`\
    \ is not implemented for `usize`\n  |\n  = help: the following other types implement\
    \ trait `Neg`:\n            &f32\n            &f64\n            &i128\n      \
    \      &i16\n            &i32\n            &i64\n            &i8\n           \
    \ &isize\n          and 8 others\n\nerror: aborting due to previous error\n\n\
    For more information about this error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unchecked().unwrap_or(isize::max_value())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unchecked` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmp7f2_2bjt.rs:7:14\n  |\n7 |     l.iter().max_unchecked().unwrap_or(isize::max_value())\n\
    \  |              ^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5q648pes.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().cloned().max().unwrap();\n\
    \    for i in l {\n        if i > max {\n            max = i;\n        }\n   \
    \ }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ std::isize::MAX;\n    }\n\n    let mut max = std::isize::MAX;\n    for &x in\
    \ l {\n        if x > max {\n            max = x;\n        }\n    }\n\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpktcpgp6p.rs:12:9\n   |\n\
    12 |     for &x in l {\n   |         ^^    - this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `x`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.rev().fold(\n        || l.iter().max().unwrap(),\n\
    \        || l.iter().rev().max().unwrap(),\n    )\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmpgr1b4e26.rs:7:7\n\
    \    |\n7   |       l.rev().fold(\n    |         ^^^ `Vec<isize>` is not an iterator\n\
    \    |\n    = note: the following trait bounds were not satisfied:\n         \
    \   `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>:\
    \ Iterator`\n            `[isize]: Iterator`\n            which is required by\
    \ `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|e| e).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7kau0q66.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|e|\
    \ e).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|e|\
    \ e).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max()\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphqpk6trf.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max()\n \
    \ |     ^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<&isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(std::i32::MAX)\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpa9n7lla5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(std::i32::MAX)\n  |                           \
    \   ^^^^^^^^^^^^^ expected `&isize`, found `i32`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpa9n7lla5.rs:7:5\n  |\n6 | fn max_element(l: Vec<isize>) -> isize\
    \ {\n  |                                  ----- expected `isize` because of return\
    \ type\n7 |     l.iter().max().unwrap_or(std::i32::MAX)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n7 |     *l.iter().max().unwrap_or(std::i32::MAX)\n  |     +\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut largest = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > largest {\n            largest = i;\n\
    \        }\n    }\n    largest\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5ry54udp.rs:9:16\n  |\n9 |\
    \         if i > largest {\n  |                ^^^^^^^\n  |                |\n\
    \  |                expected `&isize`, found `isize`\n  |                help:\
    \ consider borrowing here: `&largest`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp5ry54udp.rs:10:23\n   |\n7  |     let mut largest = l[0];\n   |    \
    \                   ---- expected due to this value\n...\n10 |             largest\
    \ = i;\n   |                       ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |             largest = *i;\n\
    \   |                       +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxijut3bk.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_v = std::ptr::null::<isize>::to_isize();\n\
    \n    for (i, e) in l.iter().enumerate() {\n        if *e > max_v {\n        \
    \    max_v = *e;\n        }\n    }\n\n    max_v\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: expected type, found function `null` in\
    \ `ptr`\n --> /tmp/tmp258e3g7l.rs:7:31\n  |\n7 |     let mut max_v = std::ptr::null::<isize>::to_isize();\n\
    \  |                               ^^^^ expected type, found function `null` in\
    \ `ptr`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.iter().next().unwrap())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbw_q6ghh.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.iter().next().unwrap())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.iter().next().unwrap())\n\
    \  |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ x in l {\n        if x > max_val {\n            max_val = x;\n        }\n  \
    \  }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &e\
    \ in &l[1..] {\n        if e > max {\n            max = e;\n        }\n    }\n\
    \    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max().unwrap();\n\
    \    let mut i = 0;\n    while i < l.len() && max > l[i] {\n        max = l[i];\n\
    \        i += 1;\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwz66ycja.rs:9:32\n  |\n9 |\
    \     while i < l.len() && max > l[i] {\n  |                                ^^^^\n\
    \  |                                |\n  |                                expected\
    \ `&isize`, found `isize`\n  |                                help: consider borrowing\
    \ here: `&l[i]`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwz66ycja.rs:10:15\n\
    \   |\n7  |     let mut max = l.iter().max().unwrap();\n   |                 \
    \  ----------------------- expected due to this value\n...\n10 |         max =\
    \ l[i];\n   |               ^^^^\n   |               |\n   |               expected\
    \ `&isize`, found `isize`\n   |               help: consider borrowing here: `&l[i]`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpwz66ycja.rs:13:5\n   |\n6  | fn\
    \ max_element(l: Vec<isize>) -> isize {\n   |                                \
    \  ----- expected `isize` because of return type\n...\n13 |     max\n   |    \
    \ ^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the\
    \ borrow\n   |\n13 |     *max\n   |     +\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut it = l.iter().cloned().rfind(\"\
    .\").unwrap();\n    let mut max = it.unwrap_or(-1);\n    loop {\n        it.next();\n\
    \        let v = *it.peek().unwrap();\n        if v > max {\n            max =\
    \ v;\n        }\n        if it.peek().is_none() {\n            return max;\n \
    \       }\n    }\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0277]: expected a `Fn<(&isize,)>` closure, found `str`\n   --> /tmp/tmpb_0d1d6z.rs:7:42\n\
    \    |\n7   |     let mut it = l.iter().cloned().rfind(\".\").unwrap();\n    |\
    \                                    ----- ^^^ expected an `Fn<(&isize,)>` closure,\
    \ found `str`\n    |                                    |\n    |             \
    \                       required by a bound introduced by this call\n    |\n \
    \   = help: the trait `Fn<(&isize,)>` is not implemented for `str`\n    = note:\
    \ required because of the requirements on the impl of `for<'r> FnMut<(&'r isize,)>`\
    \ for `&str`\nnote: required by a bound in `rfind`\n\nerror[E0599]: no method\
    \ named `unwrap_or` found for type `isize` in the current scope\n --> /tmp/tmpb_0d1d6z.rs:8:22\n\
    \  |\n8 |     let mut max = it.unwrap_or(-1);\n  |                      ^^^^^^^^^\
    \ method not found in `isize`\n\nerror[E0599]: no method named `next` found for\
    \ type `isize` in the current scope\n  --> /tmp/tmpb_0d1d6z.rs:10:12\n   |\n10\
    \ |         it.next();\n   |            ^^^^ method not found in `isize`\n\nerror[E0599]:\
    \ no method named `peek` found for type `isize` in the current scope\n  --> /tmp/tmpb_0d1d6z.rs:11:21\n\
    \   |\n11 |         let v = *it.peek().unwrap();\n   |                     ^^^^\
    \ method not found in `isize`\n\nerror[E0599]: no method named `peek` found for\
    \ type `isize` in the current scope\n  --> /tmp/tmpb_0d1d6z.rs:15:15\n   |\n15\
    \ |         if it.peek().is_none() {\n   |               ^^^^ method not found\
    \ in `isize`\n\nerror: aborting due to 5 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0599.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() < 1 {\n        panic!(\"\
    Cannot get maximum element of empty list\");\n    }\n    l.iter().max_by_key(|&x|\
    \ x).unwrap()\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2tj9j2v1.rs:10:5\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n10 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |  \
    \   *l.iter().max_by_key(|&x| x).unwrap()\n   |     +\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in l\
    \ {\n        if i > max {\n            max = i;\n        }\n    }\n    max\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min = l.iter().min().unwrap_or(0);\n\
    \    let mut max = l.iter().max().unwrap_or(0);\n    while max > 0 && min < l.len()\
    \ {\n        if l[min] > l[max] {\n            max = min + 1;\n        } else\
    \ {\n            min = max + 1;\n        }\n    }\n    max\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcrkrfgqu.rs:7:44\n  |\n7 |\
    \     let mut min = l.iter().min().unwrap_or(0);\n  |                        \
    \                    ^\n  |                                            |\n  |\
    \                                            expected `&isize`, found integer\n\
    \  |                                            help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpcrkrfgqu.rs:8:44\n  |\n\
    8 |     let mut max = l.iter().max().unwrap_or(0);\n  |                      \
    \                      ^\n  |                                            |\n \
    \ |                                            expected `&isize`, found integer\n\
    \  |                                            help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpcrkrfgqu.rs:9:17\n  |\n\
    9 |     while max > 0 && min < l.len() {\n  |                 ^\n  |         \
    \        |\n  |                 expected `&isize`, found integer\n  |        \
    \         help: consider borrowing here: `&0`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpcrkrfgqu.rs:9:28\n  |\n9 |     while max > 0 && min < l.len() {\n\
    \  |                            ^^^^^^^ expected `&isize`, found `usize`\n\nerror[E0277]:\
    \ the type `[isize]` cannot be indexed by `&isize`\n  --> /tmp/tmpcrkrfgqu.rs:10:12\n\
    \   |\n10 |         if l[min] > l[max] {\n   |            ^^^^^^ slice indices\
    \ are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `&isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of the requirements on the impl of\
    \ `Index<&isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot\
    \ be indexed by `&isize`\n  --> /tmp/tmpcrkrfgqu.rs:10:21\n   |\n10 |        \
    \ if l[min] > l[max] {\n   |                     ^^^^^^ slice indices are of type\
    \ `usize` or ranges of `usize`\n   |\n   = help: the trait `SliceIndex<[isize]>`\
    \ is not implemented for `&isize`\n   = help: the trait `SliceIndex<[T]>` is implemented\
    \ for `usize`\n   = note: required because of "
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg4b08_95.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpg4b08_95.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpaqe68qo5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpaqe68qo5.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp68ggnvm_.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp68ggnvm_.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unstable().unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unstable` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmp3c0rxfnh.rs:7:14\n  |\n7 |     l.iter().max_unstable().unwrap()\n\
    \  |              ^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l {\n        if i > max {\n            max = i;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ 1..l.len() {\n        if max < l[i] {\n            max = l[i];\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_ref().unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_by_ref` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpxnnkz_j3.rs:7:14\n  |\n7 |     l.iter().max_by_ref().unwrap()\n\
    \  |              ^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        0\n \
    \   } else {\n        l.iter().max().unwrap()\n    }\n}\n\nfn main() {\n    let\
    \ candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpqr8o0n4v.rs:10:9\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n10 |         l.iter().max().unwrap()\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |         *l.iter().max().unwrap()\n\
    \   |         +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ 0;\n    }\n\n    let mut max_el = l[0];\n    for el in l {\n        if el >\
    \ max_el {\n            max_el = el;\n        }\n    }\n\n    max_el\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0rq7zx3a.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp0rq7zx3a.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzj2wt_7y.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpzj2wt_7y.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ 1..l.len() {\n        if max < l[i] {\n            max = l[i];\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcqpjrxlv.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut largest = l.iter().max().unwrap();\n\
    \    let mut pos = 0;\n\n    for n in l.iter() {\n        if n < largest {\n \
    \           largest = n;\n        }\n        if n == largest {\n            break;\n\
    \        }\n        pos += 1;\n    }\n\n    largest\n}\n\nfn main() {\n    let\
    \ candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpnrr0vx_v.rs:20:5\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n20 |     largest\n\
    \   |     ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n20 |     *largest\n   |     +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max().unwrap();\n\
    \    let mut i = 0;\n    while max != 0 && i < l.len() {\n        if l[i] > max\
    \ {\n            max = l[i];\n        }\n        i += 1;\n    }\n    max\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0277]: can't compare `&isize` with `{integer}`\n --> /tmp/tmpzs1sc13d.rs:9:15\n\
    \  |\n9 |     while max != 0 && i < l.len() {\n  |               ^^ no implementation\
    \ for `&isize == {integer}`\n  |\n  = help: the trait `PartialEq<{integer}>` is\
    \ not implemented for `&isize`\n  = help: the following other types implement\
    \ trait `PartialEq<Rhs>`:\n            f32\n            f64\n            i128\n\
    \            i16\n            i32\n            i64\n            i8\n         \
    \   isize\n          and 6 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzs1sc13d.rs:10:19\n\
    \   |\n10 |         if l[i] > max {\n   |                   ^^^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |  \
    \       if l[i] > *max {\n   |                   +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpzs1sc13d.rs:11:19\n   |\n7  |     let mut max = l.iter().max().unwrap();\n\
    \   |                   ----------------------- expected due to this value\n...\n\
    11 |             max = l[i];\n   |                   ^^^^\n   |              \
    \     |\n   |                   expected `&isize`, found `isize`\n   |       \
    \            help: consider borrowing here: `&l[i]`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpzs1sc13d.rs:15:5\n   |\n6  | fn max_element(l: Vec<isize>)\
    \ -> isize {\n   |                                  ----- expected `isize` because\
    \ of return type\n...\n15 |     max\n   |     ^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n15 |     *max\n   |    \
    \ +\n\nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_element = l[0];\n  \
    \  for i in l.iter().rev() {\n        if i > max_element {\n            max_element\
    \ = i;\n        }\n    }\n    max_element\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcxxva__w.rs:9:16\n  |\n9 |\
    \         if i > max_element {\n  |                ^^^^^^^^^^^\n  |          \
    \      |\n  |                expected `&isize`, found `isize`\n  |           \
    \     help: consider borrowing here: `&max_element`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpcxxva__w.rs:10:27\n   |\n7  |     let mut max_element =\
    \ l[0];\n   |                           ---- expected due to this value\n...\n\
    10 |             max_element = i;\n   |                           ^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |  \
    \           max_element = *i;\n   |                           +\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvgun_ibo.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpft77q83n.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter() {\n        if i > max {\n            max = i;\n        }\n    }\n \
    \   max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzwqrfs2g.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpzwqrfs2g.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unwrap_or(0)\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unwrap_or` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpendk0no4.rs:7:14\n  |\n7 |     l.iter().max_unwrap_or(0)\n\
    \  |              ^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7raghdak.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unwrap_or(-1)\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unwrap_or` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpwwtf3_st.rs:7:14\n  |\n7 |     l.iter().max_unwrap_or(-1)\n\
    \  |              ^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max().unwrap();\n\
    \    for i in l.iter().rev() {\n        if *i > max {\n            max = i;\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3un4i_r9.rs:9:17\n  |\n9 |\
    \         if *i > max {\n  |                 ^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if *i > *max {\n\
    \  |                 +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp3un4i_r9.rs:13:5\n\
    \   |\n6  | fn max_element(l: Vec<isize>) -> isize {\n   |                   \
    \               ----- expected `isize` because of return type\n...\n13 |     max\n\
    \   |     ^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n13 |     *max\n   |     +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = *l.iter().max().unwrap_or(*l.len())\
    \ as isize;\n    for ele in &l {\n        if ele > max_elem {\n            max_elem\
    \ = ele;\n        }\n    }\n    return max_elem;\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `usize` cannot be dereferenced\n --> /tmp/tmp_qprtw6f.rs:7:50\n\
    \  |\n7 |     let mut max_elem = *l.iter().max().unwrap_or(*l.len()) as isize;\n\
    \  |                                                  ^^^^^^^^\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp_qprtw6f.rs:9:18\n  |\n9 |         if ele > max_elem\
    \ {\n  |                  ^^^^^^^^\n  |                  |\n  |              \
    \    expected `&isize`, found `isize`\n  |                  help: consider borrowing\
    \ here: `&max_elem`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_qprtw6f.rs:10:24\n\
    \   |\n7  |     let mut max_elem = *l.iter().max().unwrap_or(*l.len()) as isize;\n\
    \   |                        -------------------------------------------- expected\
    \ due to this value\n...\n10 |             max_elem = ele;\n   |             \
    \           ^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |             max_elem = *ele;\n   |                  \
    \      +\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed\
    \ explanations: E0308, E0614.\nFor more information about an error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd1obwoe5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpd1obwoe5.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut res = l.iter().max().unwrap();\n\
    \    match l {\n        [] => res,\n        _ => {\n            if res < l.iter().min().unwrap()\
    \ {\n                res = l.iter().min().unwrap();\n            }\n         \
    \   res\n        }\n    }\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0529]: expected an array or slice, found `Vec<isize>`\n --> /tmp/tmp_52wrfpz.rs:9:9\n\
    \  |\n8 |     match l {\n  |           - help: consider slicing here: `l[..]`\n\
    9 |         [] => res,\n  |         ^^ pattern cannot match with input type `Vec<isize>`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmp_52wrfpz.rs:9:15\n  |\n6 | fn max_element(l:\
    \ Vec<isize>) -> isize {\n  |                                  ----- expected\
    \ `isize` because of return type\n...\n9 |         [] => res,\n  |           \
    \    ^^^ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the\
    \ borrow\n  |\n9 |         [] => *res,\n  |               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp_52wrfpz.rs:14:13\n   |\n6  | fn max_element(l: Vec<isize>)\
    \ -> isize {\n   |                                  ----- expected `isize` because\
    \ of return type\n...\n14 |             res\n   |             ^^^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n14 |  \
    \           *res\n   |             +\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0529.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(-1)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd3v19f3s.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(-1)\n  |                              ^^\n  | \
    \                             |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&-1`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpd3v19f3s.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(-1)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\n\
    help: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(-1)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min_element = 0;\n    let\
    \ mut max_element = 0;\n    for &n in l {\n        let n_abs = n.abs();\n    \
    \    if n_abs < max_element {\n            max_element = n_abs;\n        }\n \
    \       if n_abs > min_element {\n            min_element = n_abs;\n        }\n\
    \    }\n    min_element\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpe_979vyw.rs:9:9\n  |\n9 |\
    \     for &n in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `n`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut it = l.iter().cloned();\n\
    \    it.max_by(|x, y| y.cmp(x));\n    it.next().unwrap()\n}\n\nfn main() {\n \
    \   let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0382]: borrow of moved value: `it`\n    --> /tmp/tmpr8y9qwqv.rs:9:5\n\
    \     |\n7    |     let mut it = l.iter().cloned();\n     |         ------ move\
    \ occurs because `it` has type `Cloned<std::slice::Iter<'_, isize>>`, which does\
    \ not implement the `Copy` trait\n8    |     it.max_by(|x, y| y.cmp(x));\n   \
    \  |        ----------------------- `it` moved due to this method call\n9    |\
    \     it.next().unwrap()\n     |     ^^^^^^^^^ value borrowed here after move\n\
    \     |\nnote: this function takes ownership of the receiver `self`, which moves\
    \ `it`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0382`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_el = l.first().unwrap();\n\
    \    for el in l.iter().skip(1) {\n        if *el > max_el {\n            max_el\
    \ = el;\n        }\n    }\n    max_el\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9zqliiby.rs:9:18\n  |\n9 |\
    \         if *el > max_el {\n  |                  ^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if\
    \ *el > *max_el {\n  |                  +\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp9zqliiby.rs:13:5\n   |\n6  | fn max_element(l: Vec<isize>) -> isize\
    \ {\n   |                                  ----- expected `isize` because of return\
    \ type\n...\n13 |     max_el\n   |     ^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n13 |     *max_el\n   | \
    \    +\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = 0;\n    for\
    \ i in l.iter() {\n        if max < i {\n            max = i;\n        }\n   \
    \ }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi3bqv1kl.rs:9:18\n  |\n9 |\
    \         if max < i {\n  |                  ^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if max < *i {\n\
    \  |                  +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpi3bqv1kl.rs:10:19\n\
    \   |\n7  |     let mut max: isize = 0;\n   |                  ----- expected\
    \ due to this type\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap_or(l.iter().rev().max_by_key(|&x|\
    \ x).unwrap_or(0))\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpi5ze_lsc.rs:7:87\n  |\n7 |\
    \     l.iter().max_by_key(|&x| x).unwrap_or(l.iter().rev().max_by_key(|&x| x).unwrap_or(0))\n\
    \  |                                                                         \
    \              ^\n  |                                                        \
    \                               |\n  |                                       \
    \                                                expected `&isize`, found integer\n\
    \  |                                                                         \
    \              help: consider borrowing here: `&0`\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpi5ze_lsc.rs:7:5\n  |\n6 | fn max_element(l: Vec<isize>)\
    \ -> isize {\n  |                                  ----- expected `isize` because\
    \ of return type\n7 |     l.iter().max_by_key(|&x| x).unwrap_or(l.iter().rev().max_by_key(|&x|\
    \ x).unwrap_or(0))\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n7 |     *l.iter().max_by_key(|&x| x).unwrap_or(l.iter().rev().max_by_key(|&x|\
    \ x).unwrap_or(0))\n  |     +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(-1)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpk_r38teu.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(-1)\n  |                              ^^\n  | \
    \                             |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&-1`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpk_r38teu.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(-1)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\n\
    help: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(-1)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv7rugvys.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = 0;\n    let\
    \ mut i = 0;\n    for v in l {\n        if v > max {\n            max = v;\n \
    \       }\n        i += 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `124`', /tmp/tmp4siy75ys.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 1 {\n        return\
    \ l[0];\n    }\n    let mut max_val = l[0];\n    let mut max_pos = 0;\n    for\
    \ &i in l {\n        if i > max_val {\n            max_val = i;\n            max_pos\
    \ = 0;\n        }\n        if i == max_val {\n            max_pos++;\n       \
    \ }\n    }\n    max_pos\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpb6o3fxlq.rs:18:20\n\
    \   |\n18 |             max_pos++;\n   |                    ^^ not a valid postfix\
    \ operator\n   |\nhelp: use `+= 1` instead\n   |\n18 |             { let tmp =\
    \ max_pos; max_pos += 1; tmp };\n   |             +++++++++++        ~~~~~~~~~~~~~~~~~~~~~\n\
    18 -             max_pos++;\n18 +             max_pos += 1;\n   | \n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpb6o3fxlq.rs:12:9\n   |\n12 |     for &i in l\
    \ {\n   |         ^^    - this expression has type `Option<isize>`\n   |     \
    \    |\n   |         expected `isize`, found reference\n   |         help: you\
    \ can probably remove the explicit borrow: `i`\n   |\n   = note:   expected type\
    \ `isize`\n           found reference `&_`\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut iter = l.iter();\n    iter.rev().cloned().max().unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ 0;\n    }\n    if l.len() == 1 {\n        return l[0];\n    }\n    let mut max_element\
    \ = l[0];\n    let mut max_idx = 1;\n    for i in 1 .. l.len() {\n        if l[i]\
    \ > max_element {\n            max_element = l[i];\n            max_idx = i;\n\
    \        }\n    }\n    max_idx\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpeusrg40q.rs:21:5\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n21 |     max_idx\n\
    \   |     ^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can convert\
    \ a `usize` to an `isize` and panic if the converted value doesn't fit\n   |\n\
    21 |     max_idx.try_into().unwrap()\n   |            ++++++++++++++++++++\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp__zvk190.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp__zvk190.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len()\
    \ - 1)\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkgv7n7bu.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len() - 1)\n  |                             \
    \ ^^^^^^^^^^^ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n\
    \ --> /tmp/tmpkgv7n7bu.rs:7:5\n  |\n6 | fn max_element(l: Vec<isize>) -> isize\
    \ {\n  |                                  ----- expected `isize` because of return\
    \ type\n7 |     l.iter().max().unwrap_or(l.len() - 1)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n7 |     *l.iter().max().unwrap_or(l.len() - 1)\n  |     +\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() <= 1 {\n        l.iter().max().unwrap()\n\
    \    } else {\n        l.iter().fold((0, 0), |(_max, _element), n| {\n       \
    \     (*_max, *_element) < (*n, *n)\n        }).1\n    }\n}\n\nfn main() {\n \
    \   let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmps7veymkx.rs:8:9\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     if l.len() <= 1 {\n\
    8 |         l.iter().max().unwrap()\n  |         ^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    8 |         *l.iter().max().unwrap()\n  |         +\n\nerror[E0614]: type `{integer}`\
    \ cannot be dereferenced\n  --> /tmp/tmps7veymkx.rs:11:14\n   |\n11 |        \
    \     (*_max, *_element) < (*n, *n)\n   |              ^^^^^\n\nerror[E0614]:\
    \ type `{integer}` cannot be dereferenced\n  --> /tmp/tmps7veymkx.rs:11:21\n \
    \  |\n11 |             (*_max, *_element) < (*n, *n)\n   |                   \
    \  ^^^^^^^^^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmps7veymkx.rs:11:13\n\
    \   |\n11 |             (*_max, *_element) < (*n, *n)\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected tuple, found `bool`\n   |\n   = note: expected tuple `({integer}, {integer})`\n\
    \               found type `bool`\n\nerror: aborting due to 4 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0614.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnrdwaunw.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnrdwaunw.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by(|a, b| a.cmp(&b)).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjqjkaehe.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by(|a,\
    \ b| a.cmp(&b)).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    7 |     *l.iter().max_by(|a, b| a.cmp(&b)).unwrap()\n  |     +\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min_value = vec![l.iter().min().unwrap_or(0)];\n\
    \    for v in l {\n        if v < min_value[0] {\n            min_value[0] = v;\n\
    \        }\n    }\n    min_value[0]\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkmw2ivpt.rs:7:55\n  |\n7 |\
    \     let mut min_value = vec![l.iter().min().unwrap_or(0)];\n  |            \
    \                                           ^\n  |                           \
    \                            |\n  |                                          \
    \             expected `&isize`, found integer\n  |                          \
    \                             help: consider borrowing here: `&0`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpkmw2ivpt.rs:9:16\n  |\n9 |         if v < min_value[0]\
    \ {\n  |                ^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n9 |         if v < *min_value[0] {\n\
    \  |                +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkmw2ivpt.rs:10:28\n\
    \   |\n10 |             min_value[0] = v;\n   |             ------------   ^\n\
    \   |             |              |\n   |             |              expected `&isize`,\
    \ found `isize`\n   |             |              help: consider borrowing here:\
    \ `&v`\n   |             expected due to the type of this binding\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpkmw2ivpt.rs:13:5\n   |\n6  | fn max_element(l:\
    \ Vec<isize>) -> isize {\n   |                                  ----- expected\
    \ `isize` because of return type\n...\n13 |     min_value[0]\n   |     ^^^^^^^^^^^^\
    \ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the type\n\
    \   |\n13 |     *min_value[0]\n   |     +\n\nerror: aborting due to 4 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for elt\
    \ in l.iter().skip(1) {\n        if elt > max {\n            max = elt;\n    \
    \    }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n \
    \   assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvw6_54w7.rs:9:18\n  |\n9 |\
    \         if elt > max {\n  |                  ^^^\n  |                  |\n \
    \ |                  expected `&isize`, found `isize`\n  |                  help:\
    \ consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpvw6_54w7.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = elt;\n   |                   ^^^\
    \ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n10 |             max = *elt;\n   |                   +\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ 1..l.len() {\n        if l[i] > max {\n            max = l[i];\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.is_empty() {\n        0\n \
    \   } else {\n        let mut i = l.iter().rposition(|&a| a > 0).unwrap();\n \
    \       l.swap(0, i);\n        l.swap(i, l.iter().rposition(|&a| a < 0).unwrap());\n\
    \        l.iter().max().unwrap()\n    }\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpyzga3whq.rs:13:9\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n13 |         l.iter().max().unwrap()\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n13 |         *l.iter().max().unwrap()\n\
    \   |         +\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = 0;\n    for\
    \ &i in l {\n        if i >= max {\n            max = i;\n        }\n    }\n \
    \   max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpeatfvrg8.rs:8:9\n  |\n8 |\
    \     for &i in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `i`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_index = l;\n    let\
    \ mut max_value = l[0];\n\n    for i in l.iter_mut() {\n        if *i > max_value\
    \ {\n            max_value = *i;\n            max_index = i;\n        }\n    }\n\
    \n    max_index\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpbmc07mdn.rs:13:25\n   |\n\
    7  |     let mut max_index = l;\n   |                         - expected due to\
    \ this value\n...\n13 |             max_index = i;\n   |                     \
    \    ^ expected struct `Vec`, found `&mut isize`\n   |\n   = note:         expected\
    \ struct `Vec<isize>`\n           found mutable reference `&mut isize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpbmc07mdn.rs:17:5\n   |\n6  | fn max_element(l:\
    \ Vec<isize>) -> isize {\n   |                                  ----- expected\
    \ `isize` because of return type\n...\n17 |     max_index\n   |     ^^^^^^^^^\
    \ expected `isize`, found struct `Vec`\n   |\n   = note: expected type `isize`\n\
    \            found struct `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx50nyz64.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l.iter().max().unwrap();\n\
    \    let mut max_value = *max_value;\n    for value in l {\n        if value ==\
    \ max_value {\n            continue;\n        }\n        max_value = value;\n\
    \    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `-10`,\n right: `124`', /tmp/tmpgt6hhl0z.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min = i32::MAX;\n    let\
    \ mut max = i32::MIN;\n    for i in l.iter() {\n        if i < min {\n       \
    \     min = i;\n        }\n        if i > max {\n            max = i;\n      \
    \  }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n   \
    \ assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3,\
    \ -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmponfw966e.rs:10:16\n   |\n\
    10 |         if i < min {\n   |                ^^^ expected `&isize`, found `i32`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmponfw966e.rs:11:19\n   |\n7  |\
    \     let mut min = i32::MAX;\n   |                   -------- expected due to\
    \ this value\n...\n11 |             min = i;\n   |                   ^ expected\
    \ `i32`, found `&isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmponfw966e.rs:13:16\n\
    \   |\n13 |         if i > max {\n   |                ^^^ expected `&isize`, found\
    \ `i32`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmponfw966e.rs:14:19\n \
    \  |\n8  |     let mut max = i32::MIN;\n   |                   -------- expected\
    \ due to this value\n...\n14 |             max = i;\n   |                   ^\
    \ expected `i32`, found `&isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmponfw966e.rs:17:5\n\
    \   |\n6  | fn max_element(l: Vec<isize>) -> isize {\n   |                   \
    \               ----- expected `isize` because of return type\n...\n17 |     max\n\
    \   |     ^^^ expected `isize`, found `i32`\n   |\nhelp: you can convert an `i32`\
    \ to an `isize` and panic if the converted value doesn't fit\n   |\n17 |     max.try_into().unwrap()\n\
    \   |        ++++++++++++++++++++\n\nerror: aborting due to 5 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        0\n \
    \   } else {\n        l.iter().max_by_key(|&x| x).unwrap()\n    }\n}\n\nfn main()\
    \ {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
    \ 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2322_54n.rs:10:9\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n10 |         l.iter().max_by_key(|&x|\
    \ x).unwrap()\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |  \
    \       *l.iter().max_by_key(|&x| x).unwrap()\n   |         +\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by(|a, b| b.cmp(a)).unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb3sqnaj2.rs:7:48\n  |\n7 |\
    \     l.iter().max_by(|a, b| b.cmp(a)).unwrap_or(l.len())\n  |               \
    \                                 ^^^^^^^ expected `&isize`, found `usize`\n\n\
    error[E0308]: mismatched types\n --> /tmp/tmpb3sqnaj2.rs:7:5\n  |\n6 | fn max_element(l:\
    \ Vec<isize>) -> isize {\n  |                                  ----- expected\
    \ `isize` because of return type\n7 |     l.iter().max_by(|a, b| b.cmp(a)).unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by(|a,\
    \ b| b.cmp(a)).unwrap_or(l.len())\n  |     +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l {\n        if i > max {\n            max = i;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unwrap_or(0)\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unwrap_or` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpg2qhr305.rs:7:14\n  |\n7 |     l.iter().max_unwrap_or(0)\n\
    \  |              ^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp39o6ldv5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp39o6ldv5.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9zy8s_fg.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max();\n\
    \    l.iter().for_each(|&x| {\n        if x > max {\n            max = x;\n  \
    \      }\n    });\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcdueabsn.rs:9:16\n  |\n9 |\
    \         if x > max {\n  |                ^^^ expected `isize`, found enum `Option`\n\
    \  |\n  = note: expected type `isize`\n             found enum `Option<&isize>`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpcdueabsn.rs:10:19\n   |\n7  |\
    \     let mut max = l.iter().max();\n   |                   -------------- expected\
    \ due to this value\n...\n10 |             max = x;\n   |                   ^\
    \ expected enum `Option`, found `isize`\n   |\n   = note: expected enum `Option<&isize>`\n\
    \              found type `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpcdueabsn.rs:13:5\n\
    \   |\n6  | fn max_element(l: Vec<isize>) -> isize {\n   |                   \
    \               ----- expected `isize` because of return type\n...\n13 |     max\n\
    \   |     ^^^ expected `isize`, found enum `Option`\n   |\n   = note: expected\
    \ type `isize`\n              found enum `Option<&isize>`\n\nerror: aborting due\
    \ to 3 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3ogji32n.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l.iter().max().unwrap();\n\
    \    if let Some(pos) = l.iter().position(|&x| x == max_val) {\n        max_val\
    \ = pos;\n    }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_evkrc8l.rs:8:52\n  |\n8 |\
    \     if let Some(pos) = l.iter().position(|&x| x == max_val) {\n  |         \
    \                                           ^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n8 |     if let Some(pos) =\
    \ l.iter().position(|&x| x == *max_val) {\n  |                               \
    \                     +\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_evkrc8l.rs:9:19\n\
    \  |\n7 |     let mut max_val = l.iter().max().unwrap();\n  |                \
    \       ----------------------- expected due to this value\n8 |     if let Some(pos)\
    \ = l.iter().position(|&x| x == max_val) {\n9 |         max_val = pos;\n  |  \
    \                 ^^^ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp_evkrc8l.rs:11:5\n   |\n6  | fn max_element(l: Vec<isize>)\
    \ -> isize {\n   |                                  ----- expected `isize` because\
    \ of return type\n...\n11 |     max_val\n   |     ^^^^^^^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n11 |     *max_val\n\
    \   |     +\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut result = *l.iter().max().unwrap();\n\
    \    for i in l {\n        result = if result > i {\n            result\n    \
    \    } else {\n            i\n        };\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by(|a, b| a.cmp(b)).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2a1qxmcg.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by(|a,\
    \ b| a.cmp(b)).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    7 |     *l.iter().max_by(|a, b| a.cmp(b)).unwrap()\n  |     +\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut it = l.iter().max().unwrap_or(-1);\n\
    \    let mut max_element = it.clone();\n    while let Some(candidate) = it.clone()\
    \ {\n        if candidate > max_element {\n            max_element = candidate;\n\
    \        }\n        it.next();\n    }\n    max_element\n}\n\nfn main() {\n   \
    \ let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwzgjlkbc.rs:7:43\n  |\n7 |\
    \     let mut it = l.iter().max().unwrap_or(-1);\n  |                        \
    \                   ^^\n  |                                           |\n  | \
    \                                          expected `&isize`, found integer\n\
    \  |                                           help: consider borrowing here:\
    \ `&-1`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpwzgjlkbc.rs:9:15\n  |\n\
    9 |     while let Some(candidate) = it.clone() {\n  |               ^^^^^^^^^^^^^^^\
    \   ---------- this expression has type `isize`\n  |               |\n  |    \
    \           expected `isize`, found enum `Option`\n  |\n  = note: expected type\
    \ `isize`\n             found enum `Option<_>`\n\nerror[E0599]: no method named\
    \ `next` found for reference `&isize` in the current scope\n  --> /tmp/tmpwzgjlkbc.rs:13:12\n\
    \   |\n13 |         it.next();\n   |            ^^^^ method not found in `&isize`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l[0].clone())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfcl2lz9l.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l[0].clone())\n  |                            \
    \  ^^^^^^^^^^^^\n  |                              |\n  |                     \
    \         expected `&isize`, found `isize`\n  |                              help:\
    \ consider borrowing here: `&l[0]`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpfcl2lz9l.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l[0].clone())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l[0].clone())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        std::i32::MAX\n\
    \    } else {\n        l.iter().max().unwrap_or(0)\n    }\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbxnda9wk.rs:8:9\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     if l.len() == 0 {\n\
    8 |         std::i32::MAX\n  |         ^^^^^^^^^^^^^ expected `isize`, found `i32`\n\
    \  |\nhelp: you can convert an `i32` to an `isize` and panic if the converted\
    \ value doesn't fit\n  |\n8 |         std::i32::MAX.try_into().unwrap()\n  | \
    \                     ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpbxnda9wk.rs:10:34\n   |\n10 |         l.iter().max().unwrap_or(0)\n\
    \   |                                  ^\n   |                               \
    \   |\n   |                                  expected `&isize`, found integer\n\
    \   |                                  help: consider borrowing here: `&0`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpbxnda9wk.rs:10:9\n   |\n6  | fn\
    \ max_element(l: Vec<isize>) -> isize {\n   |                                \
    \  ----- expected `isize` because of return type\n...\n10 |         l.iter().max().unwrap_or(0)\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n \
    \  |\nhelp: consider dereferencing the borrow\n   |\n10 |         *l.iter().max().unwrap_or(0)\n\
    \   |         +\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l\n        .iter()\n        .position(|&x|\
    \ x >= *l.iter().rev().next().unwrap())\n        .unwrap_or(l.len() - 1)\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplr0_lex_.rs:7:5\n   |\n6\
    \  |   fn max_element(l: Vec<isize>) -> isize {\n   |                        \
    \            ----- expected `isize` because of return type\n7  | /     l\n8  |\
    \ |         .iter()\n9  | |         .position(|&x| x >= *l.iter().rev().next().unwrap())\n\
    10 | |         .unwrap_or(l.len() - 1)\n   | |_______________________________^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n10 |         .unwrap_or(l.len()\
    \ - 1).try_into().unwrap()\n   |                                ++++++++++++++++++++\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut elem = l.first().unwrap();\n\
    \    for i in l.iter().rev() {\n        if i > elem {\n            elem = i;\n\
    \        }\n    }\n    elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpkhlr3xdu.rs:13:5\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n13 |     elem\n \
    \  |     ^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n13 |     *elem\n   |     +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = 0 as isize;\n    for\
    \ x in l {\n        if x > max {\n            max = x;\n        }\n    }\n   \
    \ max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(-1)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5911gg19.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(-1)\n  |                              ^^\n  | \
    \                             |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&-1`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp5911gg19.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(-1)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\n\
    help: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(-1)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max().unwrap();\n\
    \    for i in l.iter_mut() {\n        if *i == max {\n            *i = 1;\n  \
    \      } else {\n            *i = *i + 1;\n        }\n        if *i == *l.len()\
    \ {\n            *i = 1;\n        }\n    }\n    max\n}\n\nfn main() {\n    let\
    \ candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu9gr1br5.rs:9:18\n  |\n9 |\
    \         if *i == max {\n  |                  ^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if *i == *max\
    \ {\n  |                  +\n\nerror[E0614]: type `usize` cannot be dereferenced\n\
    \  --> /tmp/tmpu9gr1br5.rs:14:18\n   |\n14 |         if *i == *l.len() {\n   |\
    \                  ^^^^^^^^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpu9gr1br5.rs:18:5\n\
    \   |\n6  | fn max_element(l: Vec<isize>) -> isize {\n   |                   \
    \               ----- expected `isize` because of return type\n...\n18 |     max\n\
    \   |     ^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n18 |     *max\n   |     +\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0614.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() <= 1 {\n        0\n \
    \   } else {\n        let mut max = l[0];\n        for i in 1..l.len() {\n   \
    \         if l[i] > max {\n                max = l[i];\n            }\n      \
    \  }\n        max\n    }\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.rev().iter().max().unwrap_or(0)\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: `Vec<isize>` is not an iterator\n   --> /tmp/tmp_j6hj8tz.rs:7:7\n\
    \    |\n7   |       l.rev().iter().max().unwrap_or(0)\n    |         ^^^ `Vec<isize>`\
    \ is not an iterator\n    |\n    = note: the following trait bounds were not satisfied:\n\
    \            `Vec<isize>: Iterator`\n            which is required by `&mut Vec<isize>:\
    \ Iterator`\n            `[isize]: Iterator`\n            which is required by\
    \ `&mut [isize]: Iterator`\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for e in\
    \ l {\n        if *e > max {\n            max = *e;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmpg7i43ta8.rs:9:12\n\
    \  |\n9 |         if *e > max {\n  |            ^^\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmpg7i43ta8.rs:10:19\n   |\n10 |        \
    \     max = *e;\n   |                   ^^\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0614`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ &el in l {\n        if el > &max_val {\n            max_val = el;\n        }\n\
    \    }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqvnea5uv.rs:8:9\n  |\n8 |\
    \     for &el in l {\n  |         ^^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `el`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror[E0277]: can't compare\
    \ `isize` with `&isize`\n --> /tmp/tmpqvnea5uv.rs:9:15\n  |\n9 |         if el\
    \ > &max_val {\n  |               ^ no implementation for `isize < &isize` and\
    \ `isize > &isize`\n  |\n  = help: the trait `PartialOrd<&isize>` is not implemented\
    \ for `isize`\n  = help: the following other types implement trait `PartialOrd<Rhs>`:\n\
    \            f32\n            f64\n            i128\n            i16\n       \
    \     i32\n            i64\n            i8\n            isize\n          and 6\
    \ others\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed\
    \ explanations: E0277, E0308.\nFor more information about an error, try `rustc\
    \ --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpn00gywdt.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwx8hjppu.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpwx8hjppu.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq_b0wrm_.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpq_b0wrm_.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in 1..l.len() {\n        let value = l[i];\n        if value > max_value {\n\
    \            max_value = value;\n        }\n    }\n    max_value\n}\n\nfn main()\
    \ {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
    \ 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(-1)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv7y67dog.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(-1)\n  |                              ^^\n  | \
    \                             |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&-1`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpv7y67dog.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(-1)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\n\
    help: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(-1)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if &x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpftl2cs3v.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror[E0277]: can't compare\
    \ `&_` with `isize`\n --> /tmp/tmpftl2cs3v.rs:9:15\n  |\n9 |         if &x > max\
    \ {\n  |               ^ no implementation for `&_ < isize` and `&_ > isize`\n\
    \  |\n  = help: the trait `PartialOrd<isize>` is not implemented for `&_`\n\n\
    error: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpotq_sit4.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpotq_sit4.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = 0;\n    for\
    \ (i, e) in l.iter().enumerate() {\n        if *e > max {\n            max = *e;\n\
    \        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l\n        .iter()\n        .max_by_key(|x|\
    \ x.clone())\n        .expect(\"list must have at least one element\")\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzmdax565.rs:7:5\n   |\n6\
    \  |   fn max_element(l: Vec<isize>) -> isize {\n   |                        \
    \            ----- expected `isize` because of return type\n7  | /     l\n8  |\
    \ |         .iter()\n9  | |         .max_by_key(|x| x.clone())\n10 | |       \
    \  .expect(\"list must have at least one element\")\n   | |______________________________________________________^\
    \ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n7  |     *l\n   |     +\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min_value = l[0];\n    for\
    \ i in l {\n        if i > min_value {\n            min_value = i;\n        }\n\
    \    }\n    min_value\n}\n\nfn main() {\n    let candidate = max_element;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.is_empty() {\n        l.last()\n\
    \    } else {\n        l.iter().fold(l.first(), |a, b| if b > a { b } else { a\
    \ })\n    }\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdjjkfnz2.rs:8:9\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     if l.is_empty() {\n\
    8 |         l.last()\n  |         ^^^^^^^^ expected `isize`, found enum `Option`\n\
    \  |\n  = note: expected type `isize`\n             found enum `Option<&isize>`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpdjjkfnz2.rs:10:23\n   |\n10 |\
    \         l.iter().fold(l.first(), |a, b| if b > a { b } else { a })\n   |   \
    \                    ^^^^^^^^^ expected `isize`, found enum `Option`\n   |\n \
    \  = note: expected type `isize`\n              found enum `Option<&isize>`\n\n\
    error[E0308]: mismatched types\n  --> /tmp/tmpdjjkfnz2.rs:10:48\n   |\n10 |  \
    \       l.iter().fold(l.first(), |a, b| if b > a { b } else { a })\n   |     \
    \                                           ^\n   |                          \
    \                      |\n   |                                               \
    \ expected `&isize`, found `isize`\n   |                                     \
    \           help: consider borrowing here: `&a`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpdjjkfnz2.rs:10:52\n   |\n10 |         l.iter().fold(l.first(),\
    \ |a, b| if b > a { b } else { a })\n   |                                    \
    \                ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |         l.iter().fold(l.first(), |a, b| if b > a { *b\
    \ } else { a })\n   |                                                    +\n\n\
    error: aborting due to 4 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpavv3lo1f.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.len();\n    l.iter().fold(0,\
    \ |x, y| if x < y { max = x } else { max = y });\n    max\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmparnzfwjg.rs:8:46\n  |\n7 |\
    \     let mut max = l.len();\n  |                   ------- expected due to this\
    \ value\n8 |     l.iter().fold(0, |x, y| if x < y { max = x } else { max = y });\n\
    \  |                                              ^ expected `usize`, found `isize`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmparnzfwjg.rs:8:40\n  |\n8 |    \
    \ l.iter().fold(0, |x, y| if x < y { max = x } else { max = y });\n  |       \
    \                                 ^^^^^^^ expected `isize`, found `()`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmparnzfwjg.rs:8:63\n  |\n7 |     let mut max =\
    \ l.len();\n  |                   ------- expected due to this value\n8 |    \
    \ l.iter().fold(0, |x, y| if x < y { max = x } else { max = y });\n  |       \
    \                                                        ^ expected `usize`, found\
    \ `&isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmparnzfwjg.rs:8:57\n\
    \  |\n8 |     l.iter().fold(0, |x, y| if x < y { max = x } else { max = y });\n\
    \  |                                                         ^^^^^^^ expected\
    \ `isize`, found `()`\n\nerror[E0277]: can't compare `isize` with `&isize`\n -->\
    \ /tmp/tmparnzfwjg.rs:8:34\n  |\n8 |     l.iter().fold(0, |x, y| if x < y { max\
    \ = x } else { max = y });\n  |                                  ^ no implementation\
    \ for `isize < &isize` and `isize > &isize`\n  |\n  = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n            f32\n            f64\n            i128\n\
    \            i16\n            i32\n            i64\n            i8\n         \
    \   isize\n          and 6 others\n\nerror[E0308]: mismatched types\n --> /tmp/tmparnzfwjg.rs:9:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n...\n9 |     max\n\
    \  |     ^^^ expected `isize`, found `usize`\n  |\nhelp: you can convert a `usize`\
    \ to an `isize` and panic if the converted value doesn't fit\n  |\n9 |     max.try_into().unwrap()\n\
    \  |        +++++++++"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_or_else(|| i32::MAX).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_or_else` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpg96761ab.rs:7:14\n  |\n7 |     l.iter().max_or_else(||\
    \ i32::MAX).unwrap()\n  |              ^^^^^^^^^^^ method not found in `std::slice::Iter<'_,\
    \ isize>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpr5vqqomu.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpr5vqqomu.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5294w_l2.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut m = l;\n    let mut max_elem\
    \ = l[0];\n    for (i, e) in l.iter().enumerate() {\n        if e > max_elem {\n\
    \            m = l.to_vec();\n            max_elem = e;\n        }\n    }\n  \
    \  max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpjcoituy1.rs:10:16\n   |\n\
    10 |         if e > max_elem {\n   |                ^^^^^^^^\n   |           \
    \     |\n   |                expected `&isize`, found `isize`\n   |          \
    \      help: consider borrowing here: `&max_elem`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpjcoituy1.rs:12:24\n   |\n8  |     let mut max_elem = l[0];\n\
    \   |                        ---- expected due to this value\n...\n12 |      \
    \       max_elem = e;\n   |                        ^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n12 |             max_elem\
    \ = *e;\n   |                        +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_element = l.iter().max().unwrap();\n\
    \    for i in l {\n        if i > max_element {\n            max_element = i;\n\
    \        }\n    }\n    max_element\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpreu1h3ww.rs:9:16\n  |\n9 |\
    \         if i > max_element {\n  |                ^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n9 |     \
    \    if i > *max_element {\n  |                +\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpreu1h3ww.rs:10:27\n   |\n7  |     let mut max_element = l.iter().max().unwrap();\n\
    \   |                           ----------------------- expected due to this value\n\
    ...\n10 |             max_element = i;\n   |                           ^\n   |\
    \                           |\n   |                           expected `&isize`,\
    \ found `isize`\n   |                           help: consider borrowing here:\
    \ `&i`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpreu1h3ww.rs:13:5\n   |\n\
    6  | fn max_element(l: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n13 |     max_element\n\
    \   |     ^^^^^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n13 |     *max_element\n   |     +\n\nerror: aborting due to\
    \ 3 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unstable().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unstable` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmp3i19tk9w.rs:7:14\n  |\n7 |     l.iter().max_unstable().unwrap_or(l.len())\n\
    \  |              ^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    let\
    \ mut max_idx = 1;\n    for i in l.iter().rev() {\n        if i > max_value {\n\
    \            max_value = i;\n            max_idx = i;\n        }\n    }\n    max_idx\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpn0vvu522.rs:10:16\n   |\n\
    10 |         if i > max_value {\n   |                ^^^^^^^^^\n   |         \
    \       |\n   |                expected `&isize`, found `isize`\n   |        \
    \        help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpn0vvu522.rs:11:25\n   |\n7  |     let mut max_value = l[0];\n\
    \   |                         ---- expected due to this value\n...\n11 |     \
    \        max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n11 |        \
    \     max_value = *i;\n   |                         +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpn0vvu522.rs:12:23\n   |\n8  |     let mut max_idx = 1;\n\
    \   |                       - expected due to this value\n...\n12 |          \
    \   max_idx = i;\n   |                       ^ expected integer, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n12 |             max_idx\
    \ = *i;\n   |                       +\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min = std::i32::MAX;\n \
    \   let mut max = std::i32::MIN;\n    let mut max_val = std::i32::MAX;\n    let\
    \ mut idx = 0;\n    let mut cmp_result = 0;\n    for i in l.iter() {\n       \
    \ if cmp_result > 0 {\n            if cmp_result > max_val {\n               \
    \ idx = i;\n                max_val = cmp_result;\n            }\n        } else\
    \ {\n            if cmp_result < min {\n                idx = i;\n           \
    \     min = cmp_result;\n            }\n        }\n        cmp_result = cmp_result.checked_add(1).unwrap();\n\
    \    }\n    if cmp_result > 0 {\n        idx = i;\n        max_val = cmp_result;\n\
    \    }\n    idx\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find value `i` in this scope\n  --> /tmp/tmpksv8bfii.rs:27:15\n\
    \   |\n27 |         idx = i;\n   |               ^ help: a local variable with\
    \ a similar name exists: `l`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpksv8bfii.rs:15:23\n\
    \   |\n10 |     let mut idx = 0;\n   |                   - expected due to this\
    \ value\n...\n15 |                 idx = i;\n   |                       ^ expected\
    \ integer, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    15 |                 idx = *i;\n   |                       +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpksv8bfii.rs:20:23\n   |\n10 |     let mut idx\
    \ = 0;\n   |                   - expected due to this value\n...\n20 |       \
    \          idx = i;\n   |                       ^ expected integer, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n20 |                 idx\
    \ = *i;\n   |                       +\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = std::i32::MIN;\n\
    \n    for el in l {\n        if max < el {\n            max = el;\n        }\n\
    \    }\n\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpk_o9_qv5.rs:7:26\n  |\n7 |\
    \     let mut max: isize = std::i32::MIN;\n  |                  -----   ^^^^^^^^^^^^^\
    \ expected `isize`, found `i32`\n  |                  |\n  |                 \
    \ expected due to this\n  |\nhelp: you can convert an `i32` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n7 |     let mut max: isize =\
    \ std::i32::MIN.try_into().unwrap();\n  |                                    \
    \   ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in &l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l;\n    max_value\
    \ = max_value.iter().max().unwrap();\n    max_value\n}\n\nfn main() {\n    let\
    \ candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxp0fimun.rs:8:17\n  |\n7 |\
    \     let mut max_value = l;\n  |                         - expected due to this\
    \ value\n8 |     max_value = max_value.iter().max().unwrap();\n  |           \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `Vec`, found `&isize`\n\
    \  |\n  = note: expected struct `Vec<isize>`\n          found reference `&isize`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpxp0fimun.rs:9:5\n  |\n6 | fn max_element(l:\
    \ Vec<isize>) -> isize {\n  |                                  ----- expected\
    \ `isize` because of return type\n...\n9 |     max_value\n  |     ^^^^^^^^^ expected\
    \ `isize`, found struct `Vec`\n  |\n  = note: expected type `isize`\n        \
    \   found struct `Vec<isize>`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    let\
    \ mut max_index = -1;\n    for i in l {\n        if i > max_value {\n        \
    \    max_value = i;\n            max_index = i;\n        }\n    }\n    max_index\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if max < i {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1nuyh_de.rs:9:18\n  |\n9 |\
    \         if max < i {\n  |                  ^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n9 |         if max < *i {\n\
    \  |                  +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp1nuyh_de.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l;\n    loop {\n \
    \       max = max[0];\n        if max > 0 {\n            break;\n        }\n \
    \       let mut imax = l.iter().cloned().collect::<Vec<_>>().len();\n        for\
    \ v in l.iter().cloned().rev().skip(imax).take(1).collect::<Vec<_>>() {\n    \
    \        if v > max {\n                max = v;\n                imax = l.iter().cloned().collect::<Vec<_>>().len();\n\
    \            }\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqo2_co3h.rs:9:15\n  |\n7 |\
    \     let mut max = l;\n  |                   - expected due to this value\n8\
    \ |     loop {\n9 |         max = max[0];\n  |               ^^^^^^ expected struct\
    \ `Vec`, found `isize`\n  |\n  = note: expected struct `Vec<isize>`\n        \
    \       found type `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqo2_co3h.rs:10:18\n\
    \   |\n10 |         if max > 0 {\n   |                  ^ expected struct `Vec`,\
    \ found integer\n   |\n   = note: expected struct `Vec<isize>`\n             \
    \   found type `{integer}`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqo2_co3h.rs:15:20\n\
    \   |\n15 |             if v > max {\n   |                    ^^^ expected `isize`,\
    \ found struct `Vec`\n   |\n   = note: expected type `isize`\n            found\
    \ struct `Vec<isize>`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqo2_co3h.rs:16:23\n\
    \   |\n7  |     let mut max = l;\n   |                   - expected due to this\
    \ value\n...\n16 |                 max = v;\n   |                       ^ expected\
    \ struct `Vec`, found `isize`\n   |\n   = note: expected struct `Vec<isize>`\n\
    \                found type `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqo2_co3h.rs:21:5\n\
    \   |\n6  | fn max_element(l: Vec<isize>) -> isize {\n   |                   \
    \               ----- expected `isize` because of return type\n...\n21 |     max\n\
    \   |     ^^^ expected `isize`, found struct `Vec`\n   |\n   = note: expected\
    \ type `isize`\n            found struct `Vec<isize>`\n\nerror: aborting due to\
    \ 5 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(-1)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpe5j69i1_.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(-1)\n  |                              ^^\n  | \
    \                             |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&-1`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpe5j69i1_.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(-1)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\n\
    help: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(-1)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        panic!(\"\
    Empty list!\");\n    }\n    if l.len() == 1 {\n        return l[0];\n    }\n \
    \   l.iter().max_by(|a, b| a < b).unwrap()\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpplp7kx1h.rs:13:28\n   |\n\
    13 |     l.iter().max_by(|a, b| a < b).unwrap()\n   |                        \
    \    ^^^^^ expected enum `std::cmp::Ordering`, found `bool`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpplp7kx1h.rs:13:5\n   |\n6  | fn max_element(l: Vec<isize>)\
    \ -> isize {\n   |                                  ----- expected `isize` because\
    \ of return type\n...\n13 |     l.iter().max_by(|a, b| a < b).unwrap()\n   | \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n13 |     *l.iter().max_by(|a,\
    \ b| a < b).unwrap()\n   |     +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnm2jk34d.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        0\n \
    \   } else {\n        let mut max = l[0];\n        for el in l {\n           \
    \ if el > max {\n                max = el;\n            }\n        }\n       \
    \ max\n    }\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo9txwn_x.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpo9txwn_x.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_ele = isize::max_value();\n\
    \    l.iter().for_each(|v| *v = if v > max_ele { max_ele = v });\n    max_ele\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjrq5_0lq.rs:8:39\n  |\n8 |\
    \     l.iter().for_each(|v| *v = if v > max_ele { max_ele = v });\n  |       \
    \                                ^^^^^^^\n  |                                \
    \       |\n  |                                       expected `&isize`, found\
    \ `isize`\n  |                                       help: consider borrowing\
    \ here: `&max_ele`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpjrq5_0lq.rs:8:59\n\
    \  |\n7 |     let mut max_ele = isize::max_value();\n  |                     \
    \  ------------------ expected due to this value\n8 |     l.iter().for_each(|v|\
    \ *v = if v > max_ele { max_ele = v });\n  |                                 \
    \                          ^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |     l.iter().for_each(|v| *v = if v > max_ele\
    \ { max_ele = *v });\n  |                                                    \
    \       +\n\nerror[E0308]: mismatched types\n --> /tmp/tmpjrq5_0lq.rs:8:49\n \
    \ |\n8 |     l.iter().for_each(|v| *v = if v > max_ele { max_ele = v });\n  |\
    \                                                 ^^^^^^^^^^^ expected `isize`,\
    \ found `()`\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ 0;\n    }\n    let mut it = l.iter().rev().enumerate().skip(1).next();\n   \
    \ loop {\n        match it.next() {\n            None => return 0,\n         \
    \   Some((idx, _)) => if *idx > 0 { return it.index() },\n        }\n    }\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `next` found for enum `Option` in the current\
    \ scope\n  --> /tmp/tmpplmcsv9o.rs:12:18\n   |\n12 |         match it.next() {\n\
    \   |                  ^^^^ method not found in `Option<(usize, &isize)>`\n\n\
    error[E0599]: no method named `index` found for enum `Option` in the current scope\n\
    \  --> /tmp/tmpplmcsv9o.rs:14:55\n   |\n14 |             Some((idx, _)) => if\
    \ *idx > 0 { return it.index() },\n   |                                      \
    \                 ^^^^^ method not found in `Option<(usize, &isize)>`\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max_unstable();\n\
    \    if max < l.iter().rev().min().unwrap() {\n        max = l.iter().rev().min().unwrap();\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unstable` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpcfxty8uv.rs:7:28\n  |\n7 |     let mut max\
    \ = l.iter().max_unstable();\n  |                            ^^^^^^^^^^^^ method\
    \ not found in `std::slice::Iter<'_, isize>`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpcfxty8uv.rs:11:5\n   |\n6  | fn max_element(l: Vec<isize>) -> isize\
    \ {\n   |                                  ----- expected `isize` because of return\
    \ type\n...\n11 |     max\n   |     ^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n11 |     *max\n   |     +\n\nerror:\
    \ aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0599.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ 1 .. *l.len() {\n        if max < l[i] {\n            max = l[i];\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `usize` cannot be dereferenced\n --> /tmp/tmpv2qkgyv4.rs:8:19\n\
    \  |\n8 |     for i in 1 .. *l.len() {\n  |                   ^^^^^^^^\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0614`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd_rwvc5k.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpd_rwvc5k.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx_z3vxy8.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unwrap_or_else(|| ||\
    \ 0) as isize\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unwrap_or_else` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmp9j0h246t.rs:7:14\n  |\n7 |     l.iter().max_unwrap_or_else(||\
    \ || 0) as isize\n  |              ^^^^^^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_,\
    \ isize>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x >= max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3rb5lbep.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_element = l[0];\n  \
    \  for i in l {\n        if i > max_element {\n            max_element = i;\n\
    \        }\n    }\n    max_element\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1g5x1n6g.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1g5x1n6g.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2wl3h2ss.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2wl3h2ss.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ e in l.iter().rev() {\n        if e > &mut max_elem {\n            max_elem\
    \ = e;\n        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpj_1fhcpf.rs:10:24\n   |\n\
    7  |     let mut max_elem = l[0];\n   |                        ---- expected due\
    \ to this value\n...\n10 |             max_elem = e;\n   |                   \
    \     ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the\
    \ borrow\n   |\n10 |             max_elem = *e;\n   |                        +\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by(|a, b| a.cmp(b)).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpum938hq2.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by(|a,\
    \ b| a.cmp(b)).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n\
    7 |     *l.iter().max_by(|a, b| a.cmp(b)).unwrap()\n  |     +\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l {\n        if i > max {\n            max = i;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5l6zbq8z.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l;\n    let mut\
    \ max_elem_idx = l.len();\n    loop {\n        if *max_elem > *max_elem_idx {\n\
    \            max_elem = &mut max_elem[*max_elem_idx - 1];\n        }\n       \
    \ if *max_elem_idx > l.len() {\n            break;\n        }\n        *max_elem_idx--\n\
    \    }\n    *max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmprsj4ftdb.rs:17:5\n\
    \   |\n17 |     }\n   |     ^ expected expression\n\nerror[E0614]: type `usize`\
    \ cannot be dereferenced\n  --> /tmp/tmprsj4ftdb.rs:10:24\n   |\n10 |        \
    \ if *max_elem > *max_elem_idx {\n   |                        ^^^^^^^^^^^^^\n\n\
    error[E0614]: type `usize` cannot be dereferenced\n  --> /tmp/tmprsj4ftdb.rs:11:38\n\
    \   |\n11 |             max_elem = &mut max_elem[*max_elem_idx - 1];\n   |   \
    \                                   ^^^^^^^^^^^^^\n\nerror[E0614]: type `usize`\
    \ cannot be dereferenced\n  --> /tmp/tmprsj4ftdb.rs:13:12\n   |\n13 |        \
    \ if *max_elem_idx > l.len() {\n   |            ^^^^^^^^^^^^^\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmprsj4ftdb.rs:18:5\n   |\n6  | fn max_element(l:\
    \ Vec<isize>) -> isize {\n   |                                  ----- expected\
    \ `isize` because of return type\n...\n18 |     *max_elem\n   |     ^^^^^^^^^\
    \ expected `isize`, found slice `[isize]`\n   |\nhelp: parentheses are required\
    \ to parse this as an expression\n   |\n9  ~     (loop {\n10 |         if *max_elem\
    \ > *max_elem_idx {\n11 |             max_elem = &mut max_elem[*max_elem_idx -\
    \ 1];\n12 |         }\n13 |         if *max_elem_idx > l.len() {\n14 |       \
    \      break;\n ...\n\nerror: aborting due to 5 previous errors\n\nSome errors\
    \ have detailed explanations: E0308, E0614.\nFor more information about an error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max()\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3n0bcwnb.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max()\n \
    \ |     ^^^^^^^^^^^^^^ expected `isize`, found enum `Option`\n  |\n  = note: expected\
    \ type `isize`\n             found enum `Option<&isize>`\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0pv49rxc.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp0pv49rxc.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpanqh_r0c.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvryuejcw.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|i| i).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt9s0j820.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|i|\
    \ i).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|i|\
    \ i).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpse5g9mp0.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpse5g9mp0.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max();\n\
    \    loop {\n        let mut is_max = false;\n        let mut max_idx = -1;\n\
    \        let mut max_value = -1;\n        for (idx, value) in l.iter().enumerate()\
    \ {\n            if value > max {\n                is_max = true;\n          \
    \      max = value;\n                max_idx = idx;\n                max_value\
    \ = value;\n            }\n        }\n        if is_max {\n            break;\n\
    \        }\n        l.swap(max_idx, 0);\n    }\n    max\n}\n\nfn main() {\n  \
    \  let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2y6822lv.rs:13:24\n   |\n\
    13 |             if value > max {\n   |                        ^^^ expected `&isize`,\
    \ found enum `Option`\n   |\n   = note: expected reference `&isize`\n        \
    \           found enum `Option<&isize>`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp2y6822lv.rs:15:23\n   |\n7  |     let mut max = l.iter().max();\n  \
    \ |                   -------------- expected due to this value\n...\n15 |   \
    \              max = value;\n   |                       ^^^^^ expected enum `Option`,\
    \ found `&isize`\n   |\n   = note:   expected enum `Option<&isize>`\n        \
    \   found reference `&isize`\nhelp: try wrapping the expression in `Some`\n  \
    \ |\n15 |                 max = Some(value);\n   |                       +++++\
    \     +\n\nerror[E0277]: the trait bound `usize: Neg` is not satisfied\n  -->\
    \ /tmp/tmp2y6822lv.rs:10:27\n   |\n10 |         let mut max_idx = -1;\n   |  \
    \                         ^^ the trait `Neg` is not implemented for `usize`\n\
    \   |\n   = help: the following other types implement trait `Neg`:\n         \
    \    &f32\n             &f64\n             &i128\n             &i16\n        \
    \     &i32\n             &i64\n             &i8\n             &isize\n       \
    \    and 8 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2y6822lv.rs:17:29\n\
    \   |\n11 |         let mut max_value = -1;\n   |                            \
    \ -- expected due to this value\n...\n17 |                 max_value = value;\n\
    \   |                             ^^^^^ expected integer, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n17 |                 max_value\
    \ = *value;\n   |                             +\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp2y6822lv.rs:25:5\n   |\n6  | fn max_element(l: Vec<isize>) -> isize\
    \ {\n   |                                  ----- expected `isize` because of return\
    \ type\n...\n25 |     max\n   |     ^^^ expected `isize`, found enum `Option`\n\
    \   |\n   = note: expected type `isize`\n              found enum `Option<&isize>`\n\
    \nerror: aborting due to 5 previous errors\n\nSome errors have detailed explanations:"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value: isize = 0;\n\
    \    for v in l.iter() {\n        if *v > max_value {\n            max_value =\
    \ *v;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9xqun9f6.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp9xqun9f6.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpio0co4zj.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    let mut\
    \ max_pos = 0;\n    let mut i = 0;\n    for v in l {\n        if v > max {\n \
    \           max = v;\n            max_pos = i;\n        }\n        i += 1;\n \
    \   }\n    max_pos\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `3`', /tmp/tmpz00pum6g.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for ele\
    \ in l {\n        if ele > max {\n            max = ele;\n        }\n    }\n \
    \   max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.is_empty() {\n        0\n \
    \   } else {\n        let mut res = l[0];\n        for v in l {\n            if\
    \ v > res {\n                res = v;\n            }\n        }\n        res\n\
    \    }\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdb5gt57d.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpdb5gt57d.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max_by_key(|&x|\
    \ x).unwrap();\n    if max < l.len() {\n        max = l.len();\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnw1_5sy4.rs:8:14\n  |\n8 |\
    \     if max < l.len() {\n  |              ^^^^^^^ expected `&isize`, found `usize`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpnw1_5sy4.rs:9:15\n  |\n7 |    \
    \ let mut max = l.iter().max_by_key(|&x| x).unwrap();\n  |                   ------------------------------------\
    \ expected due to this value\n8 |     if max < l.len() {\n9 |         max = l.len();\n\
    \  |               ^^^^^^^ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpnw1_5sy4.rs:11:5\n   |\n6  | fn max_element(l: Vec<isize>)\
    \ -> isize {\n   |                                  ----- expected `isize` because\
    \ of return type\n...\n11 |     max\n   |     ^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n11 |     *max\n   |    \
    \ +\n\nerror: aborting due to 3 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|e| *e).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpejtsij4f.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|e|\
    \ *e).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|e|\
    \ *e).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = 0;\n    let\
    \ mut i: usize = 0;\n    while i < l.len() {\n        if l[i] > max {\n      \
    \      max = l[i];\n        }\n        i += 1;\n    }\n    max\n}\n\nfn main()\
    \ {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
    \ 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpj5a79d1z.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphjrbky01.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmphjrbky01.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpmjndptpr.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmjndptpr.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_or_else(|| std::isize::MAX)\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_or_else` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmphnxexzfk.rs:7:14\n  |\n7 |     l.iter().max_or_else(||\
    \ std::isize::MAX)\n  |              ^^^^^^^^^^^ method not found in `std::slice::Iter<'_,\
    \ isize>`\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ 0;\n    }\n\n    let mut largest = l[0];\n    for &elt in l.iter().skip(1) {\n\
    \        if elt > largest {\n            largest = elt;\n        }\n    }\n  \
    \  largest\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ 0;\n    }\n\n    let mut max_val = l[0];\n    for &v in l {\n        if v >\
    \ max_val {\n            max_val = v;\n        }\n    }\n    return max_val;\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpo7miiqg1.rs:12:9\n   |\n\
    12 |     for &v in l {\n   |         ^^    - this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `v`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx28ku7hz.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_idx = l.iter().rposition(|&e|\
    \ e > l[0]).map(|i| i as usize).max();\n    let mut max_e = l[0];\n    for i in\
    \ 1..l.len() {\n        if l[i] > max_e {\n            max_e = l[i];\n       \
    \     max_idx = i;\n        }\n    }\n    max_e\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0061]: this function takes 1 argument but 0 arguments were supplied\n\
    \   --> /tmp/tmpfhbjfvop.rs:7:77\n    |\n7   |     let mut max_idx = l.iter().rposition(|&e|\
    \ e > l[0]).map(|i| i as usize).max();\n    |                                \
    \                                             ^^^- supplied 0 arguments\n    |\
    \                                                                            \
    \ |\n    |                                                                   \
    \          expected 1 argument\n    |\nnote: associated function defined here\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpfhbjfvop.rs:12:23\n   |\n7  |\
    \     let mut max_idx = l.iter().rposition(|&e| e > l[0]).map(|i| i as usize).max();\n\
    \   |                       -----------------------------------------------------------\
    \ expected due to this value\n...\n12 |             max_idx = i;\n   |       \
    \                ^ expected enum `Option`, found `usize`\n   |\n   = note: expected\
    \ enum `Option<usize>`\n              found type `usize`\nhelp: try wrapping the\
    \ expression in `Some`\n   |\n12 |             max_idx = Some(i);\n   |      \
    \                 +++++ +\n\nerror: aborting due to 2 previous errors\n\nSome\
    \ errors have detailed explanations: E0061, E0308.\nFor more information about\
    \ an error, try `rustc --explain E0061`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter_mut().rev() {\n        if *i > max_value {\n            max_value\
    \ = *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0596]: cannot borrow `l` as mutable, as it is not declared as mutable\n\
    \ --> /tmp/tmplnpq1c3g.rs:8:14\n  |\n6 | fn max_element(l: Vec<isize>) -> isize\
    \ {\n  |                - help: consider changing this to be mutable: `mut l`\n\
    7 |     let mut max_value = l[0];\n8 |     for i in l.iter_mut().rev() {\n  |\
    \              ^^^^^^^^^^^^ cannot borrow as mutable\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0596`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_h1qzqgb.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_h1qzqgb.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap_or(-isize::MAX\
    \ as isize)\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdcbln3f2.rs:7:43\n  |\n7 |\
    \     l.iter().max_by_key(|&x| x).unwrap_or(-isize::MAX as isize)\n  |       \
    \                                    ^^^^^^^^^^^^^^^^^^^^\n  |               \
    \                            |\n  |                                          \
    \ expected `&isize`, found `isize`\n  |                                      \
    \     help: consider borrowing here: `&(-isize::MAX as isize)`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpdcbln3f2.rs:7:5\n  |\n6 | fn max_element(l: Vec<isize>)\
    \ -> isize {\n  |                                  ----- expected `isize` because\
    \ of return type\n7 |     l.iter().max_by_key(|&x| x).unwrap_or(-isize::MAX as\
    \ isize)\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n7 |     *l.iter().max_by_key(|&x| x).unwrap_or(-isize::MAX as isize)\n \
    \ |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    let\
    \ mut max_idx = 1;\n\n    for &i in l {\n        if i > max_value {\n        \
    \    max_value = i;\n            max_idx = 1;\n        }\n\n        if i > max_value\
    \ {\n            max_value = i;\n        }\n\n        max_idx += 1;\n    }\n\n\
    \    max_idx\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps3shxbly.rs:10:9\n   |\n\
    10 |     for &i in l {\n   |         ^^    - this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `i`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by(|a, b| cmp::min(std::cmp::min(a,\
    \ b), std::cmp::max(a, b)))\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared crate or module `cmp`\n\
    \ --> /tmp/tmpzbcivct5.rs:7:28\n  |\n7 |     l.iter().max_by(|a, b| cmp::min(std::cmp::min(a,\
    \ b), std::cmp::max(a, b)))\n  |                            ^^^ use of undeclared\
    \ crate or module `cmp`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpzbcivct5.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max_by(|a,\
    \ b| cmp::min(std::cmp::min(a, b), std::cmp::max(a, b)))\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found enum `Option`\n  |\n  = note: expected type `isize`\n\
    \             found enum `Option<&isize>`\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0433.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_i = l.len();\n    let\
    \ mut max_so_far = &l[0];\n    for i in l.iter().rev() {\n        if *i < max_so_far\
    \ {\n            max_so_far = i;\n            max_i = l.len() - 1;\n        }\n\
    \    }\n    *max_i\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8_jh1_b3.rs:10:17\n   |\n\
    10 |         if *i < max_so_far {\n   |                 ^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |  \
    \       if *i < *max_so_far {\n   |                 +\n\nerror[E0614]: type `usize`\
    \ cannot be dereferenced\n  --> /tmp/tmp8_jh1_b3.rs:15:5\n   |\n15 |     *max_i\n\
    \   |     ^^^^^^\n   |\nhelp: parentheses are required to parse this as an expression\n\
    \   |\n9  ~     (for i in l.iter().rev() {\n10 |         if *i < max_so_far {\n\
    11 |             max_so_far = i;\n12 |             max_i = l.len() - 1;\n13 |\
    \         }\n14 ~     })\n   |\n\nerror: aborting due to 2 previous errors\n\n\
    Some errors have detailed explanations: E0308, E0614.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2oqesnho.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2oqesnho.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut min_val = std::i32::MAX;\n\
    \    for v in l {\n        if *v > min_val {\n            min_val = *v;\n    \
    \    }\n    }\n    min_val\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0614]: type `isize` cannot be dereferenced\n --> /tmp/tmp5ov6mtfr.rs:9:12\n\
    \  |\n9 |         if *v > min_val {\n  |            ^^\n\nerror[E0614]: type `isize`\
    \ cannot be dereferenced\n  --> /tmp/tmp5ov6mtfr.rs:10:23\n   |\n10 |        \
    \     min_val = *v;\n   |                       ^^\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp5ov6mtfr.rs:13:5\n   |\n6  | fn max_element(l: Vec<isize>)\
    \ -> isize {\n   |                                  ----- expected `isize` because\
    \ of return type\n...\n13 |     min_val\n   |     ^^^^^^^ expected `isize`, found\
    \ `i32`\n   |\nhelp: you can convert an `i32` to an `isize` and panic if the converted\
    \ value doesn't fit\n   |\n13 |     min_val.try_into().unwrap()\n   |        \
    \    ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0614.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l\n        .iter()\n        .max_by_key(|&x|\
    \ x.clone())\n        .unwrap()\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8rl0g1qq.rs:7:5\n   |\n6\
    \  |   fn max_element(l: Vec<isize>) -> isize {\n   |                        \
    \            ----- expected `isize` because of return type\n7  | /     l\n8  |\
    \ |         .iter()\n9  | |         .max_by_key(|&x| x.clone())\n10 | |      \
    \   .unwrap()\n   | |_________________^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n7  |     *l\n   |     +\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l\n        .iter()\n        .max_by_key(|&x|\
    \ x)\n        .unwrap_or(l.iter().max().unwrap())\n}\n\nfn main() {\n    let candidate\
    \ = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmprh0yme8w.rs:7:5\n   |\n6\
    \  |   fn max_element(l: Vec<isize>) -> isize {\n   |                        \
    \            ----- expected `isize` because of return type\n7  | /     l\n8  |\
    \ |         .iter()\n9  | |         .max_by_key(|&x| x)\n10 | |         .unwrap_or(l.iter().max().unwrap())\n\
    \   | |___________________________________________^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n7  |     *l\n   |     +\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|x| x).unwrap_or(l.iter().max())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpct6njolr.rs:7:42\n  |\n7 |\
    \     l.iter().max_by_key(|x| x).unwrap_or(l.iter().max())\n  |              \
    \                            ^^^^^^^^^^^^^^ expected `&isize`, found enum `Option`\n\
    \  |\n  = note: expected reference `&isize`\n                  found enum `Option<&isize>`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpct6njolr.rs:7:5\n  |\n6 | fn max_element(l:\
    \ Vec<isize>) -> isize {\n  |                                  ----- expected\
    \ `isize` because of return type\n7 |     l.iter().max_by_key(|x| x).unwrap_or(l.iter().max())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|x|\
    \ x).unwrap_or(l.iter().max())\n  |     +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ 1 .. l.len() {\n        if l[i] > max {\n            max = l[i];\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 0 {\n        return\
    \ -1;\n    }\n    let mut max_val = l.iter().max().unwrap();\n    for &x in l\
    \ {\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  max_val\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpclsy8xrm.rs:11:9\n   |\n\
    11 |     for &x in l {\n   |         ^^    - this expression has type `Option<isize>`\n\
    \   |         |\n   |         expected `isize`, found reference\n   |        \
    \ help: you can probably remove the explicit borrow: `x`\n   |\n   = note:   expected\
    \ type `isize`\n           found reference `&_`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpclsy8xrm.rs:16:5\n   |\n6  | fn max_element(l: Vec<isize>) -> isize\
    \ {\n   |                                  ----- expected `isize` because of return\
    \ type\n...\n16 |     max_val\n   |     ^^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n16 |     *max_val\n   |\
    \     +\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut i = 0;\n    let mut max\
    \ = l[0];\n    for (i, elt) in l.iter().enumerate() {\n        if elt > max {\n\
    \            max = elt;\n        }\n    }\n    max\n}\n\nfn main() {\n    let\
    \ candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n   \
    \ assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpqy25pp2r.rs:10:18\n   |\n\
    10 |         if elt > max {\n   |                  ^^^\n   |                 \
    \ |\n   |                  expected `&isize`, found `isize`\n   |            \
    \      help: consider borrowing here: `&max`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpqy25pp2r.rs:11:19\n   |\n8  |     let mut max = l[0];\n   |   \
    \                ---- expected due to this value\n...\n11 |             max =\
    \ elt;\n   |                   ^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n11 |             max = *elt;\n   |\
    \                   +\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    if l.len() == 1 {\n        return\
    \ l[0];\n    }\n\n    let mut max = l[0];\n    for &i in &l[1..] {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n\n    max\n}\n\nfn main()\
    \ {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
    \ 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unwrap_or` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmpgsm3yb7e.rs:7:14\n  |\n7 |     l.iter().max_unwrap_or(l.len())\n\
    \  |              ^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l.iter().max().unwrap_or(l.len());\n\
    \    for v in l {\n        if v > max {\n            max = v;\n        }\n   \
    \ }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6frmc5yh.rs:7:44\n  |\n7 |\
    \     let mut max = l.iter().max().unwrap_or(l.len());\n  |                  \
    \                          ^^^^^^^ expected `&isize`, found `usize`\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp6frmc5yh.rs:9:16\n  |\n9 |         if v > max\
    \ {\n  |                ^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |         if v > *max {\n  |              \
    \  +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6frmc5yh.rs:10:19\n   |\n\
    7  |     let mut max = l.iter().max().unwrap_or(l.len());\n   |              \
    \     --------------------------------- expected due to this value\n...\n10 |\
    \             max = v;\n   |                   ^\n   |                   |\n \
    \  |                   expected `&isize`, found `isize`\n   |                \
    \   help: consider borrowing here: `&v`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp6frmc5yh.rs:13:5\n   |\n6  | fn max_element(l: Vec<isize>) -> isize\
    \ {\n   |                                  ----- expected `isize` because of return\
    \ type\n...\n13 |     max\n   |     ^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n13 |     *max\n   |     +\n\nerror:\
    \ aborting due to 4 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp21iokxeq.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp21iokxeq.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_so_far = l.iter().max_by_key(|&x|\
    \ x).unwrap();\n    for i in l.iter().rev() {\n        if *i > max_so_far {\n\
    \            max_so_far = *i;\n        }\n    }\n    max_so_far\n}\n\nfn main()\
    \ {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]),\
    \ 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),\
    \ 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4e6o1z9p.rs:9:17\n  |\n9 |\
    \         if *i > max_so_far {\n  |                 ^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n9 |     \
    \    if *i > *max_so_far {\n  |                 +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp4e6o1z9p.rs:10:26\n   |\n7  |     let mut max_so_far =\
    \ l.iter().max_by_key(|&x| x).unwrap();\n   |                          ------------------------------------\
    \ expected due to this value\n...\n10 |             max_so_far = *i;\n   |   \
    \                       ^^\n   |                          |\n   |            \
    \              expected `&isize`, found `isize`\n   |                        \
    \  help: consider borrowing here: `&*i`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp4e6o1z9p.rs:13:5\n   |\n6  | fn max_element(l: Vec<isize>) -> isize\
    \ {\n   |                                  ----- expected `isize` because of return\
    \ type\n...\n13 |     max_so_far\n   |     ^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n13 |     *max_so_far\n\
    \   |     +\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max: isize = l[0];\n   \
    \ for v in l.iter() {\n        if *v > max {\n            max = *v;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
